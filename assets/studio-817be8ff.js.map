{"version":3,"mappings":"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","names":["ctx","insert","target","svg","anchor","append","path","EditJsonState","schema","server","category","options","__publicField","LocalStorageSource","UIEventSource","layerId","config","id","enabled","entry","i","breadcrumb","key","store","v","value","noInitialSync","unsync","sch","part","origConfig","schemas","isUndefined","lastBreadcrumb","msgs","msg","pth","messages","ContextRewritingStep","Conversion","state","step","getTagRenderings","json","context","converted","originalIds","_a","tr","newTagRenderings","PrepareLayer","newPath","idToSearch","oldIndex","EditLayerState","osmConnection","LayerConfig","cleanArray","data","lBefore","cleaned","Utils","layer","changed","qtr","Pipe","ValidateLayer","t","trs","_b","_d","_c","_e","_f","TagUtils","configuration","layers","AllSharedLayers","questions","sharedQuestions","question","prepare","ConversionContext","e","EditThemeState","PrepareTheme","ValidateTheme","l","ConfigMetaUtils","configMeta","t1_value","div1","div0","current","dirty","set_data","t1","message","$$props","create_if_block_2","if_block1","create_if_block_1","div","span","each_blocks","span1","b","span0","t3","t3_value","t5","t5_value","mightBeBoolean","type","startInEditModeIfUnset","isTranslation","rendervalue","helperArgs","inline","inlineValue","configJson","err","TagRenderingConfig","startValue","startInEditMode","tags","onDestroy","tgs","t_value","create_if_block_4","ImmutableStore","tagrenderingeditable_changes","fromhtml_changes","create_if_block_5","create_if_block_3","div2","h3","each_blocks_1","perId","tagRendering","questions.tagRenderings","label","configs","x","c","description","click_handler","t2_value","t0","t0_value","t2","if_block0","create_if_block_6","if_block2","create_if_block","expertMode","defaultOption","hasBooleanOption","types","lastIsString","opt","chosenOption","existingValue","hasOverride","possibleTypes","outer","optionalMatches","numberOfMatches","requiredAttribute","a","directValue","subSchemas","subpath","$$invalidate","oldOption","o","cleanPath","p","crumble","markdown_changes","button","button0","button1","create_if_block_7","create_if_block_9","create_if_block_10","title","singular","article","isTagRenderingBlock","subparts","currentValue","createItem","valueToSet","fusePath","subpartPath","toAdd","schemaForMultitype","del","swap","j","moveTo","source","$currentValue","values","show_if","schemabasedinput_changes","configsNoHidden","configsFiltered","$expertMode","if_block","firstPaths","messagesCount","parsedTag","exampleTags","pt","keys","thenText","thenTextEn","translation","editMode","$thenText","mappingConfigs","schemabasedfield0_changes","schemabasedfield1_changes","schemabasedfield2_changes","schemabasedfield_changes","hasSeenIntro","onMount","allowQuestions","mappingsBuiltin","perLabel","labels","labelMapping","configBuiltin","mappings","topLevelItems","item","questionableTagRenderingSchemaRaw","initMappings","items","ignored","freeformSchemaAll","$allowQuestions","freeformSchema","missing","click_handler_2","t4_value","t6_value","li","t4","t6","_defineProperty","obj","ownKeys","object","enumerableOnly","symbols","sym","_objectSpread2","_objectWithoutPropertiesLoose","excluded","sourceKeys","_objectWithoutProperties","sourceSymbolKeys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arr","_n","_i","_s","minLen","_arrayLikeToArray","n","len","arr2","compose","_len","fns","_key","y","f","curry","fn","curried","_this","_len2","args","_key2","_len3","nextArgs","_key3","isObject","isEmpty","isFunction","hasOwnProperty","property","validateChanges","initial","changes","errorHandler","field","validateSelector","selector","validateHandler","handler","_handler","validateInitial","throwError","errorMessages","validators","create","didUpdate","didStateUpdate","update","updateState","validate","getChanges","extractChanges","getState","setState","causedChanges","_handler$field","index","validateConfig","informAboutDeprecation","merge","CANCELATION_MESSAGE","makeCancelable","promise","hasCanceled_","wrappedPromise","resolve","reject","val","_state$create","config$1","_state$create2","globalConfig","_validators$config","monaco","init","_ref","isInitialized","wrapperPromise","storeMonacoInstance","injectScripts","getMonacoLoaderScript","configureLoader","script","createScript","src","_ref2","loaderScript","_ref3","require","error","__getMonacoInstance","_ref4","loader","container","editor","model","save","newConfig","monacoEditor","schemaUri","layerSchemaJSON","layoutSchemaJSON","modelUri","timeout","$$value","deleteState","backToStudio","objectType","deleteLayer","StudioHashSetter","mode","tab","name","Hash","a0","a1","tabbedgroup_changes","region_changes","region0_changes","region1_changes","div4","div3","alltagspanel_changes","tagrenderinginput_changes","layerSchema","layerSchemaRaw","hasErrors","m","allNames","meta","perRegion","region","wl","baseUrl","firstPathsFor","regionNames","pathNames","regionName","configForRequiredField","requiredFields","currentlyMissing","requiredField","highlightedItem","StudioServer","url","userId","allFiles","layerOverview","file","parts","owner","Constants","uid","overview","uidStr","icon_changes","icons","info","dispatch","createEventDispatcher","displayName","response","selfId","ud","fetchIconDescription","AllKnownLayouts","layerIds","islast","isFirst","pageNumber","totalPages","click_handler_1","walkthroughstep_changes","pages","currentPage","incr","back_handler","next_handler","selfLayers","otherLayers","suggestions","mapping","userInfo","schemaElement","ul","h2","form","input","h30","h31","Translations","attr","h1","intro","intro_tagrenderings","studioUrl","oauth_token","QueryParameters","OsmConnection","expert","createdBy","studio","layersWithErr","layerFilterTerm","themeFilterTerm","themes","editLayerState","showIntro","layoutSchema","layoutSchemaRaw","editThemeState","version","meta.version","editLayer","event","editTheme","layout","createNewLayer","initialLayerConfig","selectStateBasedOnHash","hash","click_handler_3","func","d","$$subscribe_selfLayers","ls","$$subscribe_officialLayers","officialLayers","$$subscribe_selfThemes","selfThemes","otherThemes","$$subscribe_officialThemes","officialThemes","StudioGui","SvelteUIElement","StudioGUI"],"sources":["../../node_modules/@rgossiaux/svelte-heroicons/solid/InformationCircle/InformationCircle.svelte","../../node_modules/@rgossiaux/svelte-heroicons/solid/QuestionMarkCircle/QuestionMarkCircle.svelte","../../node_modules/@babeard/svelte-heroicons/mini/QuestionMarkCircle/QuestionMarkCircle.svelte","../../node_modules/@rgossiaux/svelte-heroicons/outline/Pencil/Pencil.svelte","../../node_modules/@rgossiaux/svelte-heroicons/outline/Trash/Trash.svelte","../../src/UI/Studio/EditLayerState.ts","../../src/UI/Studio/configMeta.ts","../../src/UI/Studio/ShowConversionMessage.svelte","../../src/UI/Studio/SchemaBasedField.svelte","../../src/UI/Studio/QuestionPreview.svelte","../../src/UI/Studio/SchemaBasedMultiType.svelte","../../src/UI/Studio/SchemaBasedArray.svelte","../../src/UI/Studio/ArrayMultiAnswer.svelte","../../src/UI/Studio/SchemaBasedInput.svelte","../../src/UI/Studio/Region.svelte","../../src/UI/Studio/ErrorIndicatorForRegion.svelte","../../src/UI/Studio/MappingInput.svelte","../../src/UI/Studio/TagRenderingInput.svelte","../../src/UI/Studio/ShowConversionMessages.svelte","../../node_modules/@monaco-editor/loader/lib/es/_virtual/_rollupPluginBabelHelpers.js","../../node_modules/state-local/lib/es/state-local.js","../../node_modules/@monaco-editor/loader/lib/es/config/index.js","../../node_modules/@monaco-editor/loader/lib/es/utils/curry.js","../../node_modules/@monaco-editor/loader/lib/es/utils/isObject.js","../../node_modules/@monaco-editor/loader/lib/es/validators/index.js","../../node_modules/@monaco-editor/loader/lib/es/utils/compose.js","../../node_modules/@monaco-editor/loader/lib/es/utils/deepMerge.js","../../node_modules/@monaco-editor/loader/lib/es/utils/makeCancelable.js","../../node_modules/@monaco-editor/loader/lib/es/loader/index.js","../../src/UI/Studio/RawEditor.svelte","../../src/UI/Studio/DeleteButton.svelte","../../src/UI/Studio/StudioHashSetter.ts","../../src/UI/Studio/EditLayer.svelte","../../src/UI/Studio/StudioServer.ts","../../src/UI/Map/Marker.svelte","../../src/UI/Studio/EditItemButton.svelte","../../src/UI/Studio/ChooseLayerToEdit.svelte","../../src/UI/Walkthrough/WalkthroughStep.svelte","../../src/UI/Walkthrough/Walkthrough.svelte","../../src/UI/Studio/EditTheme.svelte","../../src/UI/StudioGUI.svelte","../../src/UI/StudioGui.ts"],"sourcesContent":["<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM8.94 6.94a.75.75 0 11-1.061-1.061 3 3 0 112.871 5.026v.345a.75.75 0 01-1.5 0v-.5c0-.72.57-1.172 1.081-1.287A1.5 1.5 0 108.94 6.94zM10 15a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\n</svg>","import { ConfigMeta } from \"./configMeta\"\nimport { Store, UIEventSource } from \"../../Logic/UIEventSource\"\nimport { LayerConfigJson } from \"../../Models/ThemeConfig/Json/LayerConfigJson\"\nimport {\n    Conversion,\n    ConversionMessage,\n    DesugaringContext,\n    Pipe\n} from \"../../Models/ThemeConfig/Conversion/Conversion\"\nimport { PrepareLayer } from \"../../Models/ThemeConfig/Conversion/PrepareLayer\"\nimport { ValidateLayer, ValidateTheme } from \"../../Models/ThemeConfig/Conversion/Validation\"\nimport { AllSharedLayers } from \"../../Customizations/AllSharedLayers\"\nimport { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\nimport { TagUtils } from \"../../Logic/Tags/TagUtils\"\nimport StudioServer from \"./StudioServer\"\nimport { Utils } from \"../../Utils\"\nimport { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\nimport { OsmTags } from \"../../Models/OsmFeature\"\nimport { Feature, Point } from \"geojson\"\nimport LayerConfig from \"../../Models/ThemeConfig/LayerConfig\"\nimport { LayoutConfigJson } from \"../../Models/ThemeConfig/Json/LayoutConfigJson\"\nimport { PrepareTheme } from \"../../Models/ThemeConfig/Conversion/PrepareTheme\"\nimport { ConversionContext } from \"../../Models/ThemeConfig/Conversion/ConversionContext\"\nimport { LocalStorageSource } from \"../../Logic/Web/LocalStorageSource\"\nimport { TagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/TagRenderingConfigJson\"\n\nexport interface HighlightedTagRendering {\n    path: ReadonlyArray<string | number>\n    schema: ConfigMeta\n}\n\nexport abstract class EditJsonState<T> {\n    public readonly schema: ConfigMeta[]\n    public readonly category: \"layers\" | \"themes\"\n    public readonly server: StudioServer\n    public readonly showIntro: UIEventSource<\"no\" | \"intro\" | \"tagrenderings\"> = <any>(\n        LocalStorageSource.Get(\"studio-show-intro\", \"intro\")\n    )\n\n    public readonly expertMode: UIEventSource<boolean>\n\n    public readonly configuration: UIEventSource<Partial<T>> = new UIEventSource<Partial<T>>({})\n    public readonly messages: Store<ConversionMessage[]>\n\n    /**\n     * The tab in the UI that is selected, used for deeplinks\n     */\n    public readonly selectedTab: UIEventSource<number> = new UIEventSource<number>(0)\n\n    /**\n     * The EditLayerUI shows a 'schemaBasedInput' for this path to pop advanced questions out\n     */\n    public readonly highlightedItem: UIEventSource<HighlightedTagRendering> = new UIEventSource(\n        undefined\n    )\n    private sendingUpdates = false\n    private readonly _stores = new Map<string, UIEventSource<any>>()\n\n    constructor(\n        schema: ConfigMeta[],\n        server: StudioServer,\n        category: \"layers\" | \"themes\",\n        options?: {\n            expertMode?: UIEventSource<boolean>\n        }\n    ) {\n        this.schema = schema\n        this.server = server\n        this.category = category\n        this.expertMode = options?.expertMode ?? new UIEventSource<boolean>(false)\n\n\n        const layerId = this.getId()\n        this.configuration\n            .mapD((config) => {\n                if (!this.sendingUpdates) {\n                    console.log(\"Not sending updates yet! Trigger 'startSendingUpdates' first\")\n                    return undefined\n                }\n                return JSON.stringify(config, null, \"  \")\n            })\n            .stabilized(100)\n            .addCallbackD(async (config) => {\n                const id = layerId.data\n                if (id === undefined) {\n                    console.warn(\"No id found in layer, not updating\")\n                    return\n                }\n                await this.server.update(id, config, this.category)\n            })\n        this.messages = this.createMessagesStore()\n\n    }\n\n    public startSavingUpdates(enabled = true) {\n        this.sendingUpdates = enabled\n        if (enabled) {\n            this.configuration.ping()\n        }\n    }\n\n    public getCurrentValueFor(path: ReadonlyArray<string | number>): any | undefined {\n        // Walk the path down to see if we find something\n        let entry = this.configuration.data\n        for (let i = 0; i < path.length; i++) {\n            if (entry === undefined || entry === null) {\n                // We reached a dead end - no old vlaue\n                return undefined\n            }\n            const breadcrumb = path[i]\n            entry = entry[breadcrumb]\n        }\n        return entry\n    }\n\n    public async delete() {\n        await this.server.delete(this.getId().data, this.category)\n    }\n\n    public getStoreFor<T>(path: ReadonlyArray<string | number>): UIEventSource<T | undefined> {\n        const key = path.join(\".\")\n\n        const store = new UIEventSource<any>(this.getCurrentValueFor(path))\n        store.addCallback((v) => {\n            this.setValueAt(path, v)\n        })\n        this._stores.set(key, store)\n        this.configuration.addCallbackD(() => {\n            store.setData(this.getCurrentValueFor(path))\n        })\n        return store\n    }\n\n    public register(\n        path: ReadonlyArray<string | number>,\n        value: Store<any>,\n        noInitialSync: boolean = true\n    ): () => void {\n        const unsync = value.addCallback((v) => {\n            this.setValueAt(path, v)\n        })\n        if (!noInitialSync) {\n            this.setValueAt(path, value.data)\n        }\n        return unsync\n    }\n\n    public getSchemaStartingWith(path: string[]) {\n        return this.schema.filter(\n            (sch) =>\n                !path.some((part, i) => !(sch.path.length > path.length && sch.path[i] === part))\n        )\n    }\n\n    public getTranslationAt(path: string[]): ConfigMeta {\n        const origConfig = this.getSchema(path)[0]\n        return {\n            path,\n            type: \"translation\",\n            hints: {\n                typehint: \"translation\"\n            },\n            required: origConfig.required ?? false,\n            description: origConfig.description ?? \"A translatable object\"\n        }\n    }\n\n    public getSchema(path: string[]): ConfigMeta[] {\n        const schemas = this.schema.filter(\n            (sch) =>\n                sch !== undefined &&\n                !path.some((part, i) => !(sch.path.length == path.length && sch.path[i] === part))\n        )\n        if (schemas.length == 0) {\n            console.warn(\"No schemas found for path\", path.join(\".\"))\n        }\n        return schemas\n    }\n\n    public setValueAt(path: ReadonlyArray<string | number>, v: any) {\n        let entry = this.configuration.data\n        const isUndefined =\n            v === undefined ||\n            v === null ||\n            v === \"\" ||\n            (typeof v === \"object\" && Object.keys(v).length === 0)\n\n        for (let i = 0; i < path.length - 1; i++) {\n            const breadcrumb = path[i]\n            if (entry[breadcrumb] === undefined) {\n                if (isUndefined) {\n                    // we have a dead end _and_ we do not need to set a value - we do an early return\n                    return\n                }\n                entry[breadcrumb] = typeof path[i + 1] === \"number\" ? [] : {}\n            }\n            entry = entry[breadcrumb]\n        }\n\n        const lastBreadcrumb = path.at(-1)\n        if (isUndefined) {\n            if (entry && entry[lastBreadcrumb]) {\n                delete entry[lastBreadcrumb]\n                this.configuration.ping()\n            }\n        } else if (entry[lastBreadcrumb] !== v) {\n            entry[lastBreadcrumb] = v\n            this.configuration.ping()\n        }\n    }\n\n    public messagesFor(path: ReadonlyArray<string | number>): Store<ConversionMessage[]> {\n        return this.messages.map((msgs) => {\n            if (!msgs) {\n                return []\n            }\n            return msgs.filter((msg) => {\n                if (msg.level === \"debug\" || msg.level === \"information\") {\n                    return false\n                }\n                const pth = msg.context.path\n                for (let i = 0; i < Math.min(pth.length, path.length); i++) {\n                    if (pth[i] !== path[i]) {\n                        return false\n                    }\n                }\n                return true\n            })\n        })\n    }\n\n    protected abstract buildValidation(state: DesugaringContext): Conversion<T, any>\n\n    protected abstract getId(): Store<string>\n\n    protected abstract validate(configuration: Partial<T>): Promise<ConversionMessage[]>;\n\n    /**\n     * Creates a store that validates the configuration and which contains all relevant (error)-messages\n     * @private\n     */\n    private createMessagesStore(): Store<ConversionMessage[]> {\n        return this.configuration.mapAsyncD(async (config) => {\n            if(!this.validate){\n                return []\n            }\n            return await this.validate(config)\n        }).map(messages => messages ?? [])\n    }\n}\n\nclass ContextRewritingStep<T> extends Conversion<LayerConfigJson, T> {\n    private readonly _step: Conversion<LayerConfigJson, T>\n    private readonly _state: DesugaringContext\n    private readonly _getTagRenderings: (t: T) => TagRenderingConfigJson[]\n\n    constructor(\n        state: DesugaringContext,\n        step: Conversion<LayerConfigJson, T>,\n        getTagRenderings: (t: T) => TagRenderingConfigJson[]\n    ) {\n        super(\n            \"When validating a layer, the tagRenderings are first expanded. Some builtin tagRendering-calls (e.g. `contact`) will introduce _multiple_ tagRenderings, causing the count to be off. This class rewrites the error messages to fix this\",\n            [],\n            \"ContextRewritingStep\"\n        )\n        this._state = state\n        this._step = step\n        this._getTagRenderings = getTagRenderings\n    }\n\n    convert(json: LayerConfigJson, context: ConversionContext): T {\n        const converted = this._step.convert(json, context)\n        const originalIds = json.tagRenderings?.map(\n            (tr) => (<QuestionableTagRenderingConfigJson>tr)[\"id\"]\n        )\n        if (!originalIds) {\n            return converted\n        }\n\n        let newTagRenderings: TagRenderingConfigJson[]\n        if (converted === undefined) {\n            const prepared = new PrepareLayer(this._state)\n            newTagRenderings = <TagRenderingConfigJson[]>(\n                prepared.convert(json, context).tagRenderings\n            )\n        } else {\n            newTagRenderings = this._getTagRenderings(converted)\n        }\n        context.rewriteMessages((path) => {\n            if (path[0] !== \"tagRenderings\") {\n                return undefined\n            }\n            const newPath = [...path]\n            const idToSearch = newTagRenderings[newPath[1]].id\n            const oldIndex = originalIds.indexOf(idToSearch)\n            if (oldIndex < 0) {\n                console.warn(\"Original ID was not found: \", idToSearch)\n                return undefined // We don't modify the message\n            }\n            newPath[1] = oldIndex\n            return newPath\n        })\n        return converted\n    }\n}\n\nexport default class EditLayerState extends EditJsonState<LayerConfigJson> {\n    // Needed for the special visualisations\n    public readonly osmConnection: OsmConnection\n    public readonly imageUploadManager = {\n        getCountsFor() {\n            return 0\n        }\n    }\n    public readonly layout: { getMatchingLayer: (key: any) => LayerConfig }\n    public readonly featureSwitches: {\n        featureSwitchIsDebugging: UIEventSource<boolean>\n    }\n\n    /**\n     * Used to preview and interact with the questions\n     */\n    public readonly testTags = new UIEventSource<OsmTags>({ id: \"node/-12345\" })\n    public readonly exampleFeature: Feature<Point> = {\n        type: \"Feature\",\n        properties: this.testTags.data,\n        geometry: {\n            type: \"Point\",\n            coordinates: [3.21, 51.2]\n        }\n    }\n\n    constructor(\n        schema: ConfigMeta[],\n        server: StudioServer,\n        osmConnection: OsmConnection,\n        options: { expertMode: UIEventSource<boolean> }\n    ) {\n        super(schema, server, \"layers\", options)\n        this.osmConnection = osmConnection\n        this.layout = {\n            getMatchingLayer: () => {\n                try {\n                    return new LayerConfig(<LayerConfigJson>this.configuration.data, \"dynamic\")\n                } catch (e) {\n                    return undefined\n                }\n            }\n        }\n        this.featureSwitches = {\n            featureSwitchIsDebugging: new UIEventSource<boolean>(true)\n        }\n\n        this.addMissingTagRenderingIds()\n\n        function cleanArray(data: object, key: string): boolean {\n            if (!data) {\n                return false\n            }\n            if (data[key]) {\n                // A bit of cleanup\n                const lBefore = data[key].length\n                const cleaned = Utils.NoNull(data[key])\n                if (cleaned.length != lBefore) {\n                    data[key] = cleaned\n                    return true\n                }\n            }\n            return false\n        }\n\n        this.configuration.addCallbackAndRunD((layer) => {\n            let changed = cleanArray(layer, \"tagRenderings\") || cleanArray(layer, \"pointRenderings\")\n            for (const tr of layer.tagRenderings ?? []) {\n                if (typeof tr === \"string\") {\n                    continue\n                }\n\n                const qtr = <QuestionableTagRenderingConfigJson>tr\n                if (qtr.freeform && Object.keys(qtr.freeform).length === 0) {\n                    delete qtr.freeform\n                    changed = true\n                }\n            }\n            if (changed) {\n                this.configuration.ping()\n            }\n        })\n    }\n\n    protected buildValidation(state: DesugaringContext) {\n        return new ContextRewritingStep(\n            state,\n            new Pipe(new PrepareLayer(state), new ValidateLayer(\"dynamic\", false, undefined, true)),\n            (t) => <TagRenderingConfigJson[]>t.raw.tagRenderings\n        )\n    }\n\n    protected getId(): Store<string> {\n        return this.configuration.mapD((config) => config.id)\n    }\n\n    private addMissingTagRenderingIds() {\n        this.configuration.addCallbackD((config) => {\n            const trs = Utils.NoNull(config.tagRenderings ?? [])\n            for (let i = 0; i < trs.length; i++) {\n                const tr = trs[i]\n                if (typeof tr === \"string\") {\n                    continue\n                }\n                if (!tr[\"id\"] && !tr[\"override\"]) {\n                    const qtr = <QuestionableTagRenderingConfigJson>tr\n                    let id = \"\" + i + \"_\" + Utils.randomString(5)\n                    if (qtr?.freeform?.key) {\n                        id = qtr?.freeform?.key\n                    } else if (qtr.mappings?.[0]?.if) {\n                        id =\n                            qtr.freeform?.key ??\n                            TagUtils.Tag(qtr.mappings[0].if).usedKeys()?.[0] ??\n                            \"\" + i\n                    }\n                    qtr[\"id\"] = id\n                }\n            }\n        })\n    }\n\n    protected async validate(configuration: Partial<LayerConfigJson>): Promise<ConversionMessage[]> {\n\n        const layers = AllSharedLayers.getSharedLayersConfigs()\n\n        const questions = layers.get(\"questions\")\n        const sharedQuestions = new Map<string, QuestionableTagRenderingConfigJson>()\n        for (const question of questions.tagRenderings) {\n            sharedQuestions.set(question[\"id\"], <QuestionableTagRenderingConfigJson>question)\n        }\n        const state: DesugaringContext = {\n            tagRenderings: sharedQuestions,\n            sharedLayers: layers\n        }\n        const prepare = this.buildValidation(state)\n        const context = ConversionContext.construct([], [\"prepare\"])\n        try {\n            prepare.convert(<LayerConfigJson>configuration, context)\n        } catch (e) {\n            console.error(e)\n            context.err(e)\n        }\n        return context.messages\n    }\n}\n\nexport class EditThemeState extends EditJsonState<LayoutConfigJson> {\n    constructor(\n        schema: ConfigMeta[],\n        server: StudioServer,\n        options: { expertMode: UIEventSource<boolean> }\n    ) {\n        super(schema, server, \"themes\", options)\n        this.setupFixers()\n    }\n\n    protected buildValidation(state: DesugaringContext): Conversion<LayoutConfigJson, any> {\n        return new Pipe(\n            new PrepareTheme(state),\n            new ValidateTheme(undefined, \"\", false, new Set(state.tagRenderings.keys()))\n        )\n    }\n\n    protected getId(): Store<string> {\n        return this.configuration.mapD((config) => config.id)\n    }\n\n    /** Applies a few bandaids to get everything smoothed out in case of errors; a big bunch of hacks basically\n     */\n    public setupFixers() {\n        this.configuration.addCallbackAndRunD(config => {\n            if (config.layers) {\n                // Remove 'null' and 'undefined' values from the layer array if any are found\n                for (let i = config.layers.length; i >= 0; i--) {\n                    if (!config.layers[i]) {\n                        config.layers.splice(i, 1)\n                    }\n                }\n            }\n        })\n    }\n\n    protected async validate(configuration: Partial<LayoutConfigJson>) {\n\n        const layers = AllSharedLayers.getSharedLayersConfigs()\n\n        for (const l of configuration.layers ?? []) {\n            if(typeof l !== \"string\"){\n                continue\n            }\n            if (!l.startsWith(\"https://\")) {\n                continue\n            }\n            const config = <LayerConfigJson> await Utils.downloadJsonCached(l, 1000*60*10)\n            layers.set(l, config)\n        }\n\n        const questions = layers.get(\"questions\")\n        const sharedQuestions = new Map<string, QuestionableTagRenderingConfigJson>()\n        for (const question of questions.tagRenderings) {\n            sharedQuestions.set(question[\"id\"], <QuestionableTagRenderingConfigJson>question)\n        }\n        const state: DesugaringContext = {\n            tagRenderings: sharedQuestions,\n            sharedLayers: layers\n        }\n        const prepare = this.buildValidation(state)\n        const context = ConversionContext.construct([], [\"prepare\"])\n        if(configuration.layers){\n            Utils.NoNullInplace(configuration.layers)\n        }\n        try {\n            prepare.convert(<LayoutConfigJson>configuration, context)\n        } catch (e) {\n            console.error(e)\n            context.err(e)\n        }\n        return context.messages\n    }\n\n}\n","import { JsonSchema, JsonSchemaType } from \"./jsonSchema\"\n\nexport interface ConfigMeta {\n    path: string[]\n    type: JsonSchemaType | JsonSchema[]\n    /**\n     * All fields are lowercase, as they should be case-insensitive\n     */\n    hints: {\n        group?: string\n        typehint?: string\n        typehelper?: string\n        /**\n         * If multiple subcategories can be chosen\n         */\n        types?: string\n        question?: string\n        iftrue?: string\n        iffalse?: string\n        ifunset?: string\n        inline?: string\n        default?: string\n        typesdefault?: string\n        suggestions?: []\n        title?: string\n        multianswer?: \"true\" | string\n    }\n    required: boolean\n    description: string\n}\n\nexport class ConfigMetaUtils {\n    static isTranslation(configMeta: ConfigMeta) {\n        /*      {\n    \"$ref\": \"#/definitions/Record<string,string>\"\n  },\n  {\n    \"type\": \"string\"\n  }*/\n        if (!configMeta.type) {\n            return false\n        }\n        if (Array.isArray(configMeta.type)) {\n            return configMeta.type.some((t) => t[\"$ref\"] === \"#/definitions/Record<string,string>\")\n        } else {\n            return configMeta.type[\"$ref\"] === \"#/definitions/Record<string,string>\"\n        }\n    }\n}\n","<script lang=\"ts\">\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n  import { ExclamationIcon, InformationCircleIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n\n  /**\n   * Single conversion message, styled depending on the type\n   */\n  export let message: ConversionMessage\n</script>\n\n{#if message.level === \"error\"}\n  <div class=\"alert flex items-center justify-between\">\n    <ExclamationIcon class=\"mx-1 h-6 w-6 shrink-0\" />\n    {message.message}\n    <div />\n  </div>\n{:else if message.level === \"warning\"}\n  <div class=\"warning flex items-center justify-between\">\n    <ExclamationIcon class=\"mx-1 h-6 w-6 shrink-0\" />\n    {message.message}\n    <div />\n  </div>\n{:else if message.level === \"information\"}\n  <div class=\"information flex items-center justify-between\">\n    <InformationCircleIcon class=\"mx-1 h-6 w-6 shrink-0\" />\n    {message.message}\n    <div />\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import EditLayerState from \"./EditLayerState\"\n  import { onDestroy } from \"svelte\"\n  import type { JsonSchemaType } from \"./jsonSchema\"\n  import { ConfigMetaUtils } from \"./configMeta\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n  export let schema: ConfigMeta\n  export let startInEditModeIfUnset: boolean = schema.hints && !schema.hints.ifunset\n\n  function mightBeBoolean(type: undefined | JsonSchemaType): boolean {\n    if (type === undefined) {\n      return false\n    }\n    if (type[\"type\"]) {\n      type = type[\"type\"]\n    }\n    if (type === \"boolean\") {\n      return true\n    }\n    if (!Array.isArray(type)) {\n      return false\n    }\n\n    return type.some((t) => mightBeBoolean(t))\n  }\n\n  const isTranslation =\n    schema.hints?.typehint === \"translation\" ||\n    schema.hints?.typehint === \"rendered\" ||\n    ConfigMetaUtils.isTranslation(schema)\n  let type = schema.hints.typehint ?? \"string\"\n\n  let rendervalue =\n    (schema.hints.inline ?? schema.path.join(\".\")) +\n    (isTranslation ? \" <b>{translated(value)}</b>\" : \" <b>{value}</b>\")\n\n  if (schema.type === \"boolean\") {\n    rendervalue = undefined\n  }\n  if (schema.hints.typehint === \"tag\" || schema.hints.typehint === \"simple_tag\") {\n    rendervalue = \"{tags()}\"\n  }\n\n  let helperArgs = schema.hints.typehelper?.split(\",\")\n  let inline = schema.hints.inline !== undefined\n  if (isTranslation) {\n    type = \"translation\"\n    if (schema.hints.inline) {\n      const inlineValue = schema.hints.inline\n      rendervalue = inlineValue\n      inline = false\n      helperArgs = [\n        inlineValue.substring(0, inlineValue.indexOf(\"{\")),\n        inlineValue.substring(inlineValue.indexOf(\"}\") + 1),\n      ]\n    }\n  }\n  if (type.endsWith(\"[]\")) {\n    type = type.substring(0, type.length - 2)\n  }\n\n  const configJson: QuestionableTagRenderingConfigJson & {questionHintIsMd: boolean} = {\n    id: path.join(\"_\"),\n    render: rendervalue,\n    question: schema.hints.question,\n    questionHint: schema.description,\n    questionHintIsMd: true,\n    freeform:\n      schema.type === \"boolean\"\n        ? undefined\n        : {\n            key: \"value\",\n            type,\n            inline,\n            helperArgs,\n          },\n  }\n\n  if (schema.hints.default) {\n    configJson.mappings = [\n      {\n        if: \"value=\", // We leave this blank\n        then:\n          path.at(-1) +\n          \" is not set. The default value <b>\" +\n          schema.hints.default +\n          \"</b> will be used. \" +\n          (schema.hints.ifunset ?? \"\"),\n        hideInAnswer: mightBeBoolean(schema.type),\n      },\n    ]\n  } else if (!schema.required) {\n    configJson.mappings = [\n      {\n        if: \"value=\",\n        then: path.at(-1) + \" is not set. \" + (schema.hints.ifunset ?? \"\"),\n      },\n    ]\n  }\n\n  if (mightBeBoolean(schema.type)) {\n    configJson.mappings = configJson.mappings ?? []\n    configJson.mappings.push(\n      {\n        if: \"value=true\",\n        then: schema.hints?.iftrue ?? \"Yes\",\n      },\n      {\n        if: \"value=false\",\n        then: schema.hints?.iffalse ?? \"No\",\n      }\n    )\n  }\n\n  if (schema.hints.suggestions) {\n    if (!configJson.mappings) {\n      configJson.mappings = []\n    }\n    configJson.mappings.push(...schema.hints.suggestions)\n  }\n  let config: TagRenderingConfig\n  let err: string = undefined\n  let messages = state.messagesFor(path)\n  try {\n    config = new TagRenderingConfig(configJson, \"config based on \" + schema.path.join(\".\"))\n  } catch (e) {\n    console.error(e, config)\n    err = path.join(\".\") + \" \" + e\n  }\n  let startValue = state.getCurrentValueFor(path)\n  let startInEditMode = startValue === undefined && startInEditModeIfUnset\n  const tags = new UIEventSource<Record<string, string>>({ value: startValue })\n  try {\n    onDestroy(\n      state.register(\n        path,\n        tags.map((tgs) => {\n          const v = tgs[\"value\"]\n          if (typeof v === \"object\") {\n            return { ...(<object>v) }\n          }\n          if (schema.type === \"boolean\") {\n            if (v === null || v === undefined) {\n              return v\n            }\n            return v === \"true\" || v === \"yes\" || v === \"1\"\n          }\n          if (mightBeBoolean(schema.type)) {\n            if (v === \"true\" || v === \"yes\" || v === \"1\") {\n              return true\n            }\n            if (v === \"false\" || v === \"no\" || v === \"0\" || <any>v === false) {\n              return false\n            }\n          }\n          if (schema.type === \"number\") {\n            if (v === \"\" || v === null || isNaN(Number(v))) {\n              return undefined\n            }\n            return Number(v)\n          }\n          if (isTranslation && typeof v === \"string\") {\n            if (v === \"\") {\n              return {}\n            }\n            return JSON.parse(v)\n          }\n          return v\n        }),\n        isTranslation\n      )\n    )\n  } catch (e) {\n    console.error(\"Could not register\", path, \"due to\", e)\n  }\n</script>\n\n{#if err !== undefined}\n  <span class=\"alert\">{err}</span>\n{:else}\n  <div class=\"flex w-full flex-col\">\n    <TagRenderingEditable\n      editMode={startInEditMode}\n      {config}\n      selectedElement={undefined}\n      {state}\n      {tags}\n    />\n    {#if $messages.length > 0}\n      {#each $messages as message}\n        <ShowConversionMessage {message} />\n      {/each}\n    {/if}\n    {#if window.location.hostname === \"127.0.0.1\"}\n      <span class=\"subtle\" on:click={() => console.log(schema)}>\n        SchemaBasedField <b>{path.join(\".\")}</b>\n        <span class=\"cursor-pointer\" on:click={() => console.log(schema)}>\n          {schema.hints.typehint}\n        </span>\n        Group: {schema.hints.group}\n      </span>\n    {/if}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import type { ConfigMeta } from \"./configMeta\"\n  import EditLayerState from \"./EditLayerState\"\n  import * as questions from \"../../assets/generated/layers/questions.json\"\n  import { ImmutableStore, Store } from \"../../Logic/UIEventSource\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson.js\"\n  import type { TagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/TagRenderingConfigJson\"\n  import FromHtml from \"../Base/FromHtml.svelte\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import Markdown from \"../Base/Markdown.svelte\"\n\n  export let state: EditLayerState\n  export let path: ReadonlyArray<string | number>\n  export let schema: ConfigMeta\n  let value = state.getStoreFor(path)\n\n  let perId: Record<string, TagRenderingConfigJson[]> = {}\n  for (let tagRendering of questions.tagRenderings) {\n    if (tagRendering.labels) {\n      for (let label of tagRendering.labels) {\n        perId[label] = (perId[label] ?? []).concat(tagRendering)\n      }\n    }\n    perId[tagRendering.id] = [tagRendering]\n  }\n\n  let configJson: Store<QuestionableTagRenderingConfigJson[]> = value.map((x) => {\n    if (typeof x === \"string\") {\n      return perId[x]\n    } else {\n      return [x]\n    }\n  })\n  let configs: Store<TagRenderingConfig[]> = configJson.map((configs) => {\n    if (!configs) {\n      return [{ error: \"No configuartions found\" }]\n    }\n    console.log(\"Regenerating configs\")\n    return configs.map((config) => {\n      try {\n        return new TagRenderingConfig(config)\n      } catch (e) {\n        return { error: e }\n      }\n    })\n  })\n  let id: Store<string> = value.mapD((c) => {\n    if (c?.id) {\n      return c.id\n    }\n    if (typeof c === \"string\") {\n      return c\n    }\n    return undefined\n  })\n\n  let tags = state.testTags\n\n  let messages = state.messagesFor(path)\n\n  let description = schema.description\n</script>\n\n<div class=\"flex\">\n  <div class=\"interactive border-interactive m-4 flex w-full flex-col\">\n    {#if $id}\n      TagRendering {$id}\n    {/if}\n    <NextButton clss=\"primary\" on:click={() => state.highlightedItem.setData({ path, schema })}>\n      {#if schema.hints.question}\n        {schema.hints.question}\n      {/if}\n    </NextButton>\n    {#if description}\n      <Markdown src={description}/>\n    {/if}\n    {#each $messages as message}\n      <ShowConversionMessage {message} />\n    {/each}\n\n    <slot class=\"my-4 self-end\" />\n  </div>\n\n  <div class=\"m-4 flex w-full flex-col\">\n    <h3>Preview of this question</h3>\n    {#each $configs as config}\n      {#if config.error !== undefined}\n        <div class=\"alert\">Could not create a preview of this tagRendering: {config.error}</div>\n      {:else if config.condition && !config.condition.matchesProperties($tags)}\n        This tagRendering is currently not shown. It will appear if the feature matches the\n        condition\n        <b>\n          <FromHtml src={config.condition.asHumanString(true, false, {})} />\n        </b>\n\n        Try to answer the relevant question above\n      {:else if config.metacondition && !config.metacondition.matchesProperties($tags)}\n        This tagRendering is currently not shown. It will appear if the feature matches the\n        metacondition\n        <b>\n          <FromHtml src={config.metacondition.asHumanString(true, false, {})} />\n        </b>\n        For a breakdown of usable meta conditions, go to a mapcomplete theme > settings and enable debug-data.\n        The meta-tags will appear at the bottom\n      {:else}\n        <TagRenderingEditable\n          selectedElement={state.exampleFeature}\n          {config}\n          editingEnabled={new ImmutableStore(true)}\n          {state}\n          {tags}\n        />\n      {/if}\n    {/each}\n  </div>\n</div>\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import { onDestroy } from \"svelte\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n  import type { JsonSchemaType } from \"./jsonSchema\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n  import type { Translatable } from \"../../Models/ThemeConfig/Json/Translatable\"\n\n  /**\n   * If 'types' is defined: allow the user to pick one of the types to input.\n   */\n\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n  export let schema: ConfigMeta\n  let expertMode = state.expertMode\n  const defaultOption = schema.hints.typesdefault ? Number(schema.hints.typesdefault) : undefined\n\n  const hasBooleanOption = (<JsonSchemaType[]>schema.type)?.findIndex(\n    (t) => t[\"type\"] === \"boolean\"\n  )\n  const types = schema.hints.types.split(\";\")\n  if (hasBooleanOption >= 0) {\n    types.splice(hasBooleanOption)\n  }\n\n  let lastIsString = false\n  {\n    const types: string | string[] = Array.isArray(schema.type)\n      ? schema.type[schema.type.length - 1].type\n      : []\n    lastIsString = types === \"string\" || (Array.isArray(types) && types.some((i) => i === \"string\"))\n  }\n\n  if (lastIsString) {\n    types.splice(types.length - 1, 1)\n  }\n  const configJson: QuestionableTagRenderingConfigJson  & {questionHintIsMd: boolean}= {\n    id: \"TYPE_OF:\" + path.join(\"_\"),\n    question: schema.hints.question ?? \"Which subcategory is needed for \" + schema.path.at(-1) + \"?\",\n    questionHint: schema.description,\n    questionHintIsMd: true,\n    mappings: types\n      .map((opt) => opt.trim())\n      .filter((opt) => opt.length > 0)\n      .map((opt, i) => ({\n        if: \"chosen_type_index=\" + i,\n        addExtraTags: [\"value=\"],\n        then: opt + (i === defaultOption ? \" (Default)\" : \"\"),\n      })),\n    render: !lastIsString\n      ? undefined\n      : schema.hints.inline ?? \"Use a hardcoded value: <b>{value}</b>\",\n    freeform: !lastIsString\n      ? undefined\n      : {\n          key: \"value\",\n          inline: true,\n          type: schema.hints.typehint,\n          addExtraTags: [\"chosen_type_index=\"],\n        },\n  }\n  let tags = new UIEventSource<Record<string, string>>({})\n\n  if (schema.hints.ifunset) {\n    configJson.mappings.push({\n      if: { and: [\"value=\", \"chosen_type_index=\"] },\n      then: schema.hints.ifunset,\n    })\n  }\n  if (schema.hints.suggestions) {\n    configJson.mappings.push(...schema.hints.suggestions)\n  }\n\n  if (hasBooleanOption >= 0) {\n    configJson.mappings.unshift(\n      {\n        if: \"value=true\",\n        then: schema.hints.iftrue ?? \"Yes\",\n        addExtraTags: [\"chosen_type_index=\"],\n      },\n      {\n        if: \"value=false\",\n        then: schema.hints.iffalse ?? \"No\",\n        addExtraTags: [\"chosen_type_index=\"],\n      }\n    )\n  }\n  const config = new TagRenderingConfig(configJson, \"config based on \" + schema.path.join(\".\"))\n  let chosenOption: number = defaultOption\n\n  const existingValue = state.getCurrentValueFor(path)\n  let hasOverride = existingValue?.override !== undefined\n  if (hasBooleanOption >= 0 && (existingValue === true || existingValue === false)) {\n    tags.setData({ value: \"\" + existingValue })\n  } else if (lastIsString && typeof existingValue === \"string\") {\n    tags.setData({ value: existingValue })\n    chosenOption = undefined\n  } else if (existingValue) {\n    // We found an existing value. Let's figure out what type it matches and select that one\n    // We run over all possibilities and check what is required\n    const possibleTypes: {\n      index: number\n      matchingPropertiesCount: number\n      optionalMatches: number\n    }[] = []\n    outer: for (let i = 0; i < (<[]>schema.type).length; i++) {\n      const type = schema.type[i]\n      let optionalMatches = 0\n      for (const key of Object.keys(type.properties ?? {})) {\n        if (!!existingValue[key]) {\n          optionalMatches++\n        }\n      }\n      if (type.required) {\n        let numberOfMatches = 0\n\n        for (const requiredAttribute of type.required) {\n          if (existingValue[requiredAttribute] === undefined) {\n            // The 'existingValue' does _not_ have this required attribute, so it cannot be of this type\n            continue outer\n          }\n          numberOfMatches++\n        }\n        possibleTypes.push({ index: i, matchingPropertiesCount: numberOfMatches, optionalMatches })\n      } else {\n        possibleTypes.push({ index: i, matchingPropertiesCount: 0, optionalMatches })\n      }\n    }\n    possibleTypes.sort((a, b) => b.optionalMatches - a.optionalMatches)\n    possibleTypes.sort((a, b) => b.matchingPropertiesCount - a.matchingPropertiesCount)\n    if (possibleTypes.length > 0) {\n      chosenOption = possibleTypes[0].index\n      tags.setData({ chosen_type_index: \"\" + chosenOption })\n    }\n  } else if (defaultOption !== undefined) {\n    tags.setData({ chosen_type_index: \"\" + defaultOption })\n  } else {\n    chosenOption = defaultOption\n  }\n\n  if (hasBooleanOption >= 0 || lastIsString) {\n    const directValue = tags.mapD((tags) => {\n      if (tags[\"chosen_type_index\"]) {\n        return \"\"\n      }\n      if (lastIsString) {\n        return tags[\"value\"]\n      }\n      return tags[\"value\"] === \"true\"\n    })\n    onDestroy(state.register(path, directValue))\n  }\n\n  let subSchemas: ConfigMeta[] = []\n\n  let subpath = path\n  const store = state.getStoreFor(path)\n  onDestroy(\n    tags.addCallbackAndRun((tags) => {\n      if (tags[\"value\"] !== undefined && tags[\"value\"] !== \"\") {\n        chosenOption = undefined\n        return\n      }\n      const oldOption = chosenOption\n      chosenOption = tags[\"chosen_type_index\"] ? Number(tags[\"chosen_type_index\"]) : defaultOption\n      const type = schema.type[chosenOption]\n      if (chosenOption !== oldOption) {\n        // Reset the values beneath\n        subSchemas = []\n        const o = state.getCurrentValueFor(path) ?? {}\n        for (const key of type?.required ?? []) {\n          o[key] ??= {}\n        }\n        store.setData(o)\n      }\n      if (!type) {\n        return\n      }\n      subpath = path\n      const cleanPath = <string[]>path.filter((p) => typeof p === \"string\")\n      if (type[\"$ref\"] === \"#/definitions/Record<string,string>\") {\n        // The subtype is a translation object\n        const schema = state.getTranslationAt(cleanPath)\n        subSchemas.push(schema)\n        subpath = path.slice(0, path.length - 2)\n        return\n      }\n      if (!type.properties) {\n        return\n      }\n      for (const crumble of Object.keys(type.properties)) {\n        subSchemas.push(...state.getSchema([...cleanPath, crumble]))\n      }\n    })\n  )\n  let messages = state.messagesFor(path)\n</script>\n\n<div class=\"m-1 flex flex-col gap-y-2 border-2 border-dashed border-gray-300 p-2\">\n  {#if schema.hints.title !== undefined}\n    <h3>{schema.hints.title}</h3>\n    <div>{schema.description}</div>\n  {/if}\n  {#if hasOverride}\n    This object refers to {existingValue.builtin} and overrides some properties. This cannot be edited\n    with MapComplete Studio\n  {:else}\n    <div>\n      <TagRenderingEditable {config} selectedElement={undefined} {state} {tags} />\n    </div>\n\n    {#if chosenOption !== undefined}\n      {#each subSchemas as subschema}\n        {#if $expertMode || subschema.hints?.group !== \"expert\"}\n          <SchemaBasedInput\n            {state}\n            schema={subschema}\n            path={[...subpath, subschema?.path?.at(-1) ?? \"???\"]}\n          />\n        {:else if window.location.hostname === \"127.0.0.1\"}\n          <span class=\"subtle\">Omitted expert question {subschema.path.join(\".\")}</span>\n        {/if}\n      {/each}\n    {:else if $messages.length > 0}\n      {#each $messages as message}\n        <ShowConversionMessage {message} />\n      {/each}\n    {/if}\n  {/if}\n  {#if window.location.hostname === \"127.0.0.1\"}\n    <span class=\"subtle\">\n      SchemaBasedMultiType <b>{path.join(\".\")}</b>\n      <span class=\"cursor-pointer\" on:click={() => console.log(schema)}>\n        {schema.hints.typehint}\n      </span>\n    </span>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n  import SchemaBasedField from \"./SchemaBasedField.svelte\"\n  import { TrashIcon } from \"@babeard/svelte-heroicons/mini\"\n  import QuestionPreview from \"./QuestionPreview.svelte\"\n  import SchemaBasedMultiType from \"./SchemaBasedMultiType.svelte\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n  import Markdown from \"../Base/Markdown.svelte\"\n\n  export let state: EditLayerState\n  export let schema: ConfigMeta\n\n  let title = schema.path.at(-1)\n  let singular = title\n  if (title?.endsWith(\"s\")) {\n    singular = title.slice(0, title.length - 1)\n  }\n  let article = \"a\"\n  if (singular?.match(/^[aeoui]/)) {\n    article = \"an\"\n  }\n  export let path: (string | number)[] = []\n\n  const isTagRenderingBlock = path.length === 1 && path[0] === \"tagRenderings\"\n\n  if (isTagRenderingBlock) {\n    schema = { ...schema }\n    schema.description = undefined\n  }\n\n  const subparts: ConfigMeta[] = state\n    .getSchemaStartingWith(schema.path)\n    .filter((part) => part.path.length - 1 === schema.path.length)\n  let messages = state.messagesFor(path)\n\n  const currentValue: UIEventSource<any[]> = state.getStoreFor(path)\n  if (currentValue.data === undefined) {\n    currentValue.setData([])\n  }\n\n  function createItem(valueToSet?: any) {\n    if (currentValue.data === undefined) {\n      currentValue.setData([])\n    }\n    currentValue.data.push(valueToSet)\n    currentValue.ping()\n\n    if (isTagRenderingBlock) {\n      state.highlightedItem.setData({ path: [...path, currentValue.data.length - 1], schema })\n    }\n  }\n\n  function fusePath(i: number, subpartPath: string[]): (string | number)[] {\n    const newPath = [...path, i]\n    const toAdd = [...subpartPath]\n    for (const part of path) {\n      if (toAdd[0] === part) {\n        toAdd.splice(0, 1)\n      } else {\n        break\n      }\n    }\n    newPath.push(...toAdd)\n    return newPath\n  }\n\n  function schemaForMultitype() {\n    const sch = { ...schema }\n    sch.hints.typehint = undefined\n    return sch\n  }\n\n  function del(i: number) {\n    currentValue.data.splice(i, 1)\n    currentValue.ping()\n  }\n\n  function swap(i: number, j: number) {\n    const x = currentValue.data[i]\n    currentValue.data[i] = currentValue.data[j]\n    currentValue.data[j] = x\n    currentValue.ping()\n  }\n\n  function moveTo(source: number, target: number) {\n    const x = currentValue.data[source]\n    currentValue.data.splice(source, 1)\n    currentValue.data.splice(target, 0, x)\n    currentValue.ping()\n  }\n</script>\n\n<div class=\"pl-2\">\n  <h3>{schema.path.at(-1)}</h3>\n\n  {#if subparts.length > 0}\n    <Markdown src={schema.description}/>\n  {/if}\n  {#if $currentValue === undefined}\n    No array defined\n  {:else if $currentValue.length === 0}\n    No values are defined\n    {#if $messages.length > 0}\n      {#each $messages as message}\n        <ShowConversionMessage {message} />\n      {/each}\n    {/if}\n  {:else if subparts.length === 0}\n    <!-- We need an array of values, so we use the typehint of the _parent_ element as field -->\n    {#each $currentValue as value, i}\n      <div class=\"flex w-full\">\n        <SchemaBasedField {state} {schema} path={fusePath(i, [])} />\n        <button\n          class=\"h-fit w-fit rounded-full border border-black p-1\"\n          on:click={() => {\n            del(i)\n          }}\n        >\n          <TrashIcon class=\"h-4 w-4\" />\n        </button>\n      </div>\n    {/each}\n  {:else}\n    {#each $currentValue as value, i}\n      {#if !isTagRenderingBlock}\n        <div class=\"flex items-center justify-between\">\n          <h3 class=\"m-0\">{singular} {i}</h3>\n          <button\n            class=\"h-fit w-fit rounded-full border border-black p-1\"\n            on:click={() => {\n              del(i)\n            }}\n          >\n            <TrashIcon class=\"h-4 w-4\" />\n          </button>\n        </div>\n      {/if}\n      <div class=\"border border-black\">\n        {#if isTagRenderingBlock}\n          <QuestionPreview {state} path={fusePath(i, [])} {schema}>\n            <button\n              on:click={() => {\n                del(i)\n              }}\n            >\n              <TrashIcon class=\"h-4 w-4\" />\n              Delete this question\n            </button>\n\n            {#if i > 0}\n              <button\n                on:click={() => {\n                  moveTo(i, 0)\n                }}\n              >\n                Move to front\n              </button>\n\n              <button\n                on:click={() => {\n                  swap(i, i - 1)\n                }}\n              >\n                Move up\n              </button>\n            {/if}\n            {#if i + 1 < $currentValue.length}\n              <button\n                on:click={() => {\n                  swap(i, i + 1)\n                }}\n              >\n                Move down\n              </button>\n              <button\n                on:click={() => {\n                  moveTo(i, $currentValue.length - 1)\n                }}\n              >\n                Move to back\n              </button>\n            {/if}\n          </QuestionPreview>\n        {:else if schema.hints.types}\n          <SchemaBasedMultiType {state} path={fusePath(i, [])} schema={schemaForMultitype()} />\n        {:else}\n          {#each subparts as subpart}\n            <SchemaBasedInput {state} path={fusePath(i, [subpart.path.at(-1)])} schema={subpart} />\n          {/each}\n        {/if}\n      </div>\n    {/each}\n  {/if}\n  <div class=\"flex\">\n    <button on:click={() => createItem()}>Add {article} {singular}</button>\n    {#if path.length === 1 && path[0] === \"tagRenderings\"}\n      <button\n        on:click={() => {\n          createItem(\"images\")\n        }}\n      >\n        Add a builtin tagRendering\n      </button>\n    {/if}\n    <slot name=\"extra-button\" />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { ConfigMeta } from \"./configMeta\"\n  import EditLayerState from \"./EditLayerState\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n\n  export let schema: ConfigMeta\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n\n  const configJson: QuestionableTagRenderingConfigJson = {\n    mappings: schema.hints.suggestions,\n    multiAnswer: true,\n    id: \"multi_anwser_\" + path.join(\"_\"),\n    question: schema.hints.question,\n  }\n  const tags = new UIEventSource({})\n\n  {\n    // Setting the initial value\n    const v = <string[]>state.getCurrentValueFor(path)\n    if (v && v.length > 0) {\n      tags.setData({ value: v.join(\";\") })\n    }\n  }\n\n  tags.addCallbackD((tags) => {\n    const values = tags[\"value\"]?.split(\";\")\n    if (!values) {\n      return\n    }\n    state.setValueAt(path, values)\n  })\n  const config = new TagRenderingConfig(configJson)\n</script>\n\n<div>\n  <TagRenderingEditable {config} selectedElement={undefined} {state} {tags} />\n</div>\n","<script lang=\"ts\">\n  import type { ConfigMeta } from \"./configMeta\"\n  import SchemaBasedField from \"./SchemaBasedField.svelte\"\n  import EditLayerState from \"./EditLayerState\"\n  import SchemaBasedArray from \"./SchemaBasedArray.svelte\"\n  import SchemaBasedMultiType from \"./SchemaBasedMultiType.svelte\"\n  import ArrayMultiAnswer from \"./ArrayMultiAnswer.svelte\"\n\n  export let schema: ConfigMeta\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n  let expertMode = state.expertMode\n</script>\n\n{#if (schema.hints?.group !== \"expert\" || $expertMode) && schema.hints.group !== \"hidden\"}\n  {#if schema.hints?.typehint?.endsWith(\"[]\")}\n    <!-- We cheat a bit here by matching this 'magical' type... -->\n    <SchemaBasedArray {path} {state} {schema} />\n  {:else if schema.type === \"array\" && schema.hints.multianswer === \"true\"}\n    <ArrayMultiAnswer {path} {state} {schema} />\n  {:else if schema.type === \"array\"}\n    <SchemaBasedArray {path} {state} {schema} />\n  {:else if schema.hints?.types}\n    <SchemaBasedMultiType {path} {state} {schema} />\n  {:else}\n    <SchemaBasedField {path} {state} {schema} />\n  {/if}\n{:else if window.location.hostname === \"127.0.0.1\"}\n  <div class=\"subtle\">\n    Not showing SBI {schema.path.join(\".\")} due to group {schema.hints.group}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  /***\n   * A 'region' is a collection of properties that can be edited which are somewhat related.\n   * They will typically be a subset of some properties\n   */\n  import type { ConfigMeta } from \"./configMeta\"\n  import EditLayerState from \"./EditLayerState\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n\n  export let state: EditLayerState\n  export let configs: ConfigMeta[]\n  export let title: string | undefined = undefined\n\n  export let path: readonly (string | number)[] = []\n\n  let expertMode = state.expertMode\n  let configsNoHidden = configs.filter((schema) => schema.hints?.group !== \"hidden\")\n  let configsFiltered = $expertMode\n    ? configsNoHidden\n    : configsNoHidden.filter((schema) => schema.hints?.group !== \"expert\")\n</script>\n\n{#if configs === undefined}\n  Bug: 'Region' received 'undefined' at {path.join(\".\")}\n{:else if configs.length === 0}\n  Bug: Region received empty list as configuration at {path.join(\".\")}\n{:else if title}\n  <div class=\"flex w-full flex-col\">\n    <h3>{title}</h3>\n    <div class=\"flex w-full flex-col gap-y-1 border border-black pl-2\">\n      <slot name=\"description\" />\n      {#each configsFiltered as config}\n        <SchemaBasedInput {state} path={config.path} schema={config} />\n      {/each}\n    </div>\n  </div>\n{:else}\n  <div class=\"flex w-full flex-col gap-y-1 pl-2\">\n    {#each configsFiltered as config}\n      <SchemaBasedInput {state} path={path.concat(config.path)} schema={config} />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import { ExclamationIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n\n  export let firstPaths: Set<string | number>\n  export let state: EditLayerState\n  let messagesCount = state.messages.map(\n    (msgs) =>\n      msgs.filter((msg) => {\n        const pth = msg.context.path\n        return firstPaths.has(pth[0]) || (pth.length > 1 && firstPaths.has(pth[1]))\n      }).length\n  )\n</script>\n\n{#if $messagesCount > 0}\n  <span class=\"alert flex w-min\">\n    <ExclamationIcon class=\"h-6 w-6\" />\n    {$messagesCount}\n  </span>\n{/if}\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { TagConfigJson } from \"../../Models/ThemeConfig/Json/TagConfigJson\"\n  import { TagUtils } from \"../../Logic/Tags/TagUtils\"\n  import FromHtml from \"../Base/FromHtml.svelte\"\n  import { PencilIcon } from \"@rgossiaux/svelte-heroicons/outline\"\n  import Region from \"./Region.svelte\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import configs from \"../../assets/schemas/questionabletagrenderingconfigmeta.json\"\n  import { Utils } from \"../../Utils\"\n  import { ExclamationTriangle } from \"@babeard/svelte-heroicons/solid/ExclamationTriangle\"\n\n  export let state: EditLayerState\n  export let path: (string | number)[]\n  let messages = state.messagesFor(path)\n  let tag: UIEventSource<TagConfigJson> = state.getStoreFor([...path, \"if\"])\n  let parsedTag = tag.map((t) => (t ? TagUtils.Tag(t) : undefined))\n  let exampleTags = parsedTag.map((pt) => {\n    if (!pt) {\n      return {}\n    }\n    const keys = pt.usedKeys()\n    const o = {}\n    for (const key of keys) {\n      o[key] = \"value\"\n    }\n    return o\n  })\n\n  let thenText: UIEventSource<Record<string, string>> = state.getStoreFor([...path, \"then\"])\n  let thenTextEn = thenText.mapD((translation) =>\n    typeof translation === \"string\" ? translation : translation[\"en\"]\n  )\n  let editMode = Object.keys($thenText ?? {})?.length === 0\n\n  let mappingConfigs: ConfigMeta[] = configs\n    .filter((c) => c.path[0] === \"mappings\")\n    .map((c) => <ConfigMeta>Utils.Clone(c))\n    .map((c) => {\n      c.path.splice(0, 1)\n      return c\n    })\n    .filter((c) => c.path.length == 1 && c.hints.group !== \"hidden\")\n</script>\n\n<button\n  on:click={() => {\n    editMode = !editMode\n  }}\n>\n  <PencilIcon class=\"h-6 w-6\" />\n</button>\n\n{#if editMode}\n  <div class=\"flex w-full items-start justify-between\">\n    <div class=\"flex w-full flex-col\">\n      <Region {state} configs={mappingConfigs} {path} />\n    </div>\n\n    <slot name=\"delete\" />\n  </div>\n{:else}\n  <div>\n    {#if Object.keys($thenText).length > 0}\n      <b>\n        {$thenTextEn}\n      </b>\n    {:else}\n      <i>No then is set</i>\n    {/if}\n    <FromHtml src={$parsedTag?.asHumanString(false, false, $exampleTags)} />\n    {#if $messages.length > 0}\n      <div class=\"alert m-2 flex\">\n        <ExclamationTriangle class=\"h-6 w-6\" />\n        {$messages.length} errors\n      </div>\n    {/if}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  /**\n   * Little helper class to deal with choosing a builtin tagRendering or defining one yourself.\n   * Breaks the ideology that everything should be schema based\n   */\n  import EditLayerState from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import type {\n    MappingConfigJson,\n    QuestionableTagRenderingConfigJson\n  } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import { Store, UIEventSource } from \"../../Logic/UIEventSource\"\n  import * as questions from \"../../assets/generated/layers/questions.json\"\n  import MappingInput from \"./MappingInput.svelte\"\n  import { TrashIcon } from \"@rgossiaux/svelte-heroicons/outline\"\n  import questionableTagRenderingSchemaRaw from \"../../assets/schemas/questionabletagrenderingconfigmeta.json\"\n  import SchemaBasedField from \"./SchemaBasedField.svelte\"\n  import Region from \"./Region.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import { QuestionMarkCircleIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import { LocalStorageSource } from \"../../Logic/Web/LocalStorageSource\"\n  import { onMount } from \"svelte\"\n\n  export let state: EditLayerState\n  export let path: ReadonlyArray<string | number>\n  let expertMode = state.expertMode\n  const store = state.getStoreFor(path)\n  let value = store.data\n  let hasSeenIntro = UIEventSource.asBoolean(\n    LocalStorageSource.Get(\"studio-seen-tagrendering-tutorial\", \"false\")\n  )\n  onMount(() => {\n    if (!hasSeenIntro.data) {\n      state.showIntro.setData(\"tagrenderings\")\n      hasSeenIntro.setData(true)\n    }\n  })\n  /**\n   * Allows the theme builder to create 'writable' themes.\n   * Should only be enabled for 'tagrenderings' in the theme, if the source is OSM\n   */\n  let allowQuestions: Store<boolean> = state.configuration.mapD(\n    (config) => path.at(0) === \"tagRenderings\" && config.source?.[\"geoJson\"] === undefined\n  )\n\n  let mappingsBuiltin: MappingConfigJson[] = []\n  let perLabel: Record<string, MappingConfigJson> = {}\n  for (const tr of questions.tagRenderings) {\n    let description = tr[\"description\"] ?? tr[\"question\"] ?? \"No description available\"\n    description = description[\"en\"] ?? description\n    if (tr[\"labels\"]) {\n      const labels: string[] = tr[\"labels\"]\n      for (const label of labels) {\n        let labelMapping: MappingConfigJson = perLabel[label]\n\n        if (!labelMapping) {\n          labelMapping = {\n            if: \"value=\" + label,\n            then: {\n              en: \"Builtin collection <b>\" + label + \"</b>:\"\n            }\n          }\n          perLabel[label] = labelMapping\n          mappingsBuiltin.push(labelMapping)\n        }\n        labelMapping.then.en = labelMapping.then.en + \"<div>\" + description + \"</div>\"\n      }\n    }\n\n    mappingsBuiltin.push({\n      if: \"value=\" + tr[\"id\"],\n      then: {\n        en: \"Builtin <b>\" + tr[\"id\"] + \"</b> <div class='subtle'>\" + description + \"</div>\"\n      }\n    })\n  }\n\n  const configBuiltin = new TagRenderingConfig(<QuestionableTagRenderingConfigJson>{\n    question: \"Which builtin element should be shown?\",\n    mappings: mappingsBuiltin\n  })\n\n  const tags = new UIEventSource({ value })\n\n  tags.addCallbackAndRunD((tgs) => {\n    store.setData(tgs[\"value\"])\n  })\n\n  let mappings: UIEventSource<MappingConfigJson[]> = state.getStoreFor([...path, \"mappings\"])\n\n  const topLevelItems: Record<string, ConfigMeta> = {}\n  for (const item of questionableTagRenderingSchemaRaw) {\n    if (item.path.length === 1) {\n      topLevelItems[item.path[0]] = <ConfigMeta>item\n    }\n  }\n\n  function initMappings() {\n    if (mappings.data === undefined) {\n      mappings.setData([])\n    }\n  }\n\n  const items = new Set([\n    \"question\",\n    \"questionHint\",\n    \"multiAnswer\",\n    \"freeform\",\n    \"render\",\n    \"condition\",\n    \"metacondition\",\n    \"mappings\",\n    \"icon\"\n  ])\n  const ignored = new Set([\"labels\", \"description\", \"classes\"])\n\n  const freeformSchemaAll = <ConfigMeta[]>(\n    questionableTagRenderingSchemaRaw.filter(\n      (schema) => schema.path.length == 2 && schema.path[0] === \"freeform\" && $allowQuestions\n    )\n  )\n  let freeformSchema = $expertMode\n    ? freeformSchemaAll\n    : freeformSchemaAll.filter((schema) => schema.hints?.group !== \"expert\")\n  const missing: string[] = questionableTagRenderingSchemaRaw\n    .filter(\n      (schema) =>\n        schema.path.length >= 1 && !items.has(schema.path[0]) && !ignored.has(schema.path[0])\n    )\n    .map((schema) => schema.path.join(\".\"))\n  console.log({ state })\n</script>\n\n{#if typeof $store === \"string\"}\n  <div class=\"low-interaction flex\">\n    <TagRenderingEditable config={configBuiltin} selectedElement={undefined} {state} {tags} />\n    <slot name=\"upper-right\" />\n  </div>\n{:else}\n  <div class=\"flex w-full flex-col gap-y-1 p-1 pr-12\">\n    <div class=\"flex justify-end\">\n      <slot name=\"upper-right\" />\n    </div>\n    {#if $allowQuestions}\n      <SchemaBasedField\n        startInEditModeIfUnset={true}\n        {state}\n        path={[...path, \"question\"]}\n        schema={topLevelItems[\"question\"]}\n      />\n      <SchemaBasedField\n        {state}\n        path={[...path, \"questionHint\"]}\n        schema={topLevelItems[\"questionHint\"]}\n      />\n    {/if}\n    {#each $mappings ?? [] as mapping, i (mapping)}\n      <div class=\"interactive flex w-full\">\n        <MappingInput {state} path={[...path, \"mappings\", i]}>\n          <button\n            slot=\"delete\"\n            class=\"no-image-background rounded-full\"\n            on:click={() => {\n              initMappings()\n              mappings.data.splice(i, 1)\n              mappings.ping()\n            }}\n          >\n            <TrashIcon class=\"h-4 w-4\" />\n          </button>\n        </MappingInput>\n      </div>\n    {/each}\n\n    <button\n      class=\"primary\"\n      on:click={() => {\n        initMappings()\n        mappings.data.push({ if: undefined, then: {} })\n        mappings.ping()\n      }}\n    >\n      Add a predefined option\n    </button>\n\n    {#if $allowQuestions}\n      <SchemaBasedField\n        {state}\n        path={[...path, \"multiAnswer\"]}\n        schema={topLevelItems[\"multiAnswer\"]}\n      />\n    {/if}\n\n    <h3>Text field and input element configuration</h3>\n    <div class=\"border-l border-dashed border-gray-800 pl-2\">\n      <SchemaBasedField {state} path={[...path, \"render\"]} schema={topLevelItems[\"render\"]} />\n      {#if freeformSchema?.length > 0}\n        <!-- In read-only cases, (e.g. popup title) there will be no freeform-schema to set and thus freeformSchema will be undefined -->\n        <Region {state} {path} configs={freeformSchema} />\n      {/if}\n      <SchemaBasedField {state} path={[...path, \"icon\"]} schema={topLevelItems[\"icon\"]} />\n    </div>\n\n    <SchemaBasedField {state} path={[...path, \"condition\"]} schema={topLevelItems[\"condition\"]} />\n    {#if $expertMode}\n      <SchemaBasedField\n        {state}\n        path={[...path, \"metacondition\"]}\n        schema={topLevelItems[\"metacondition\"]}\n      />\n    {/if}\n    {#each missing as field}\n      <SchemaBasedField {state} path={[...path, field]} schema={topLevelItems[field]} />\n    {/each}\n\n    <NextButton clss=\"small mt-8\" on:click={() => state.showIntro.setData(\"tagrenderings\")}>\n      <QuestionMarkCircleIcon class=\"h-6 w-6\" />\n      Show the introduction again\n    </NextButton>\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n\n  export let messages: ConversionMessage[]\n</script>\n\n{#if messages.length === 0}\n  <div class=\"thanks\">No errors, warnings or messages</div>\n{/if}\n\n{#each messages as message}\n  <li>\n    {message.level}\n    <span class=\"literal-code\">{message.context.path.join(\".\")}</span>\n    {message.message}\n    <span class=\"literal-code\">\n      {message.context.operation.join(\".\")}\n    </span>\n  </li>\n{/each}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _arrayWithHoles as arrayWithHoles, _defineProperty as defineProperty, _iterableToArrayLimit as iterableToArrayLimit, _nonIterableRest as nonIterableRest, _objectSpread2 as objectSpread2, _objectWithoutProperties as objectWithoutProperties, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _slicedToArray as slicedToArray, _unsupportedIterableToArray as unsupportedIterableToArray };\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n}\n\nfunction curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len3 = arguments.length, nextArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        nextArgs[_key3] = arguments[_key3];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nfunction isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nfunction isEmpty(obj) {\n  return !Object.keys(obj).length;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\nfunction validateChanges(initial, changes) {\n  if (!isObject(changes)) errorHandler('changeType');\n  if (Object.keys(changes).some(function (field) {\n    return !hasOwnProperty(initial, field);\n  })) errorHandler('changeField');\n  return changes;\n}\n\nfunction validateSelector(selector) {\n  if (!isFunction(selector)) errorHandler('selectorType');\n}\n\nfunction validateHandler(handler) {\n  if (!(isFunction(handler) || isObject(handler))) errorHandler('handlerType');\n  if (isObject(handler) && Object.values(handler).some(function (_handler) {\n    return !isFunction(_handler);\n  })) errorHandler('handlersType');\n}\n\nfunction validateInitial(initial) {\n  if (!initial) errorHandler('initialIsRequired');\n  if (!isObject(initial)) errorHandler('initialType');\n  if (isEmpty(initial)) errorHandler('initialContent');\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  initialIsRequired: 'initial state is required',\n  initialType: 'initial state should be an object',\n  initialContent: 'initial state shouldn\\'t be an empty object',\n  handlerType: 'handler should be an object or a function',\n  handlersType: 'all handlers should be a functions',\n  selectorType: 'selector should be a function',\n  changeType: 'provided value of changes should be an object',\n  changeField: 'it seams you want to change a field in the state which is not specified in the \"initial\" state',\n  \"default\": 'an unknown error accured in `state-local` package'\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  changes: validateChanges,\n  selector: validateSelector,\n  handler: validateHandler,\n  initial: validateInitial\n};\n\nfunction create(initial) {\n  var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  validators.initial(initial);\n  validators.handler(handler);\n  var state = {\n    current: initial\n  };\n  var didUpdate = curry(didStateUpdate)(state, handler);\n  var update = curry(updateState)(state);\n  var validate = curry(validators.changes)(initial);\n  var getChanges = curry(extractChanges)(state);\n\n  function getState() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (state) {\n      return state;\n    };\n    validators.selector(selector);\n    return selector(state.current);\n  }\n\n  function setState(causedChanges) {\n    compose(didUpdate, update, validate, getChanges)(causedChanges);\n  }\n\n  return [getState, setState];\n}\n\nfunction extractChanges(state, causedChanges) {\n  return isFunction(causedChanges) ? causedChanges(state.current) : causedChanges;\n}\n\nfunction updateState(state, changes) {\n  state.current = _objectSpread2(_objectSpread2({}, state.current), changes);\n  return changes;\n}\n\nfunction didStateUpdate(state, handler, changes) {\n  isFunction(handler) ? handler(state.current) : Object.keys(changes).forEach(function (field) {\n    var _handler$field;\n\n    return (_handler$field = handler[field]) === null || _handler$field === void 0 ? void 0 : _handler$field.call(handler, state.current[field]);\n  });\n  return changes;\n}\n\nvar index = {\n  create: create\n};\n\nexport default index;\n","var config = {\n  paths: {\n    vs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs'\n  }\n};\n\nexport default config;\n","function curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len2 = arguments.length, nextArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        nextArgs[_key2] = arguments[_key2];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nexport default curry;\n","function isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nexport default isObject;\n","import curry from '../utils/curry.js';\nimport isObject from '../utils/isObject.js';\n\n/**\n * validates the configuration object and informs about deprecation\n * @param {Object} config - the configuration object \n * @return {Object} config - the validated configuration object\n */\n\nfunction validateConfig(config) {\n  if (!config) errorHandler('configIsRequired');\n  if (!isObject(config)) errorHandler('configType');\n\n  if (config.urls) {\n    informAboutDeprecation();\n    return {\n      paths: {\n        vs: config.urls.monacoBase\n      }\n    };\n  }\n\n  return config;\n}\n/**\n * logs deprecation message\n */\n\n\nfunction informAboutDeprecation() {\n  console.warn(errorMessages.deprecation);\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  configIsRequired: 'the configuration object is required',\n  configType: 'the configuration object should be an object',\n  \"default\": 'an unknown error accured in `@monaco-editor/loader` package',\n  deprecation: \"Deprecation warning!\\n    You are using deprecated way of configuration.\\n\\n    Instead of using\\n      monaco.config({ urls: { monacoBase: '...' } })\\n    use\\n      monaco.config({ paths: { vs: '...' } })\\n\\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\\n  \"\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  config: validateConfig\n};\n\nexport default validators;\nexport { errorHandler, errorMessages };\n","var compose = function compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n};\n\nexport default compose;\n","import { objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nfunction merge(target, source) {\n  Object.keys(source).forEach(function (key) {\n    if (source[key] instanceof Object) {\n      if (target[key]) {\n        Object.assign(source[key], merge(target[key], source[key]));\n      }\n    }\n  });\n  return _objectSpread2(_objectSpread2({}, target), source);\n}\n\nexport default merge;\n","// The source (has been changed) is https://github.com/facebook/react/issues/5465#issuecomment-157888325\nvar CANCELATION_MESSAGE = {\n  type: 'cancelation',\n  msg: 'operation is manually canceled'\n};\n\nfunction makeCancelable(promise) {\n  var hasCanceled_ = false;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(function (val) {\n      return hasCanceled_ ? reject(CANCELATION_MESSAGE) : resolve(val);\n    });\n    promise[\"catch\"](reject);\n  });\n  return wrappedPromise.cancel = function () {\n    return hasCanceled_ = true;\n  }, wrappedPromise;\n}\n\nexport default makeCancelable;\nexport { CANCELATION_MESSAGE };\n","import { slicedToArray as _slicedToArray, objectWithoutProperties as _objectWithoutProperties } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(globalConfig) {\n  var _validators$config = validators.config(globalConfig),\n      monaco = _validators$config.monaco,\n      config = _objectWithoutProperties(_validators$config, [\"monaco\"]);\n\n  setState(function (state) {\n    return {\n      config: merge(state.config, config),\n      monaco: monaco\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var monaco = _ref.monaco,\n        isInitialized = _ref.isInitialized,\n        resolve = _ref.resolve;\n    return {\n      monaco: monaco,\n      isInitialized: isInitialized,\n      resolve: resolve\n    };\n  });\n\n  if (!state.isInitialized) {\n    setState({\n      isInitialized: true\n    });\n\n    if (state.monaco) {\n      state.resolve(state.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      state.resolve(window.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\n\nexport default loader;\n","<script lang=\"ts\">\n  import { onDestroy, onMount } from \"svelte\"\n  import EditLayerState, { EditThemeState } from \"./EditLayerState\"\n  import loader from \"@monaco-editor/loader\"\n  import type * as Monaco from \"monaco-editor/esm/vs/editor/editor.api\"\n  import layerSchemaJSON from \"../../../Docs/Schemas/LayerConfigJson.schema.json\"\n  import layoutSchemaJSON from \"../../../Docs/Schemas/LayoutConfigJson.schema.json\"\n\n  export let state: EditLayerState | EditThemeState\n\n  let container: HTMLDivElement\n  let monaco: typeof Monaco\n  let editor: Monaco.editor.IStandaloneCodeEditor\n  let model: Monaco.editor.ITextModel\n\n  function save() {\n    try {\n      const newConfig = JSON.parse(editor.getValue())\n      state.configuration.setData(newConfig)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  // Catch keyboard shortcuts\n  onMount(() => {\n    const handler = (e: KeyboardEvent) => {\n      if (e.key === \"s\" && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault()\n        save()\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  })\n\n  onMount(async () => {\n    const monacoEditor = await import(\"monaco-editor\")\n    loader.config({\n      monaco: monacoEditor.default,\n    })\n\n    monaco = await loader.init()\n\n    // Determine schema based on the state\n    let schemaUri: string\n    if (state instanceof EditLayerState) {\n      schemaUri = \"https://mapcomplete.org/schemas/layerconfig.json\"\n    } else {\n      schemaUri = \"https://mapcomplete.org/schemas/layoutconfig.json\"\n    }\n\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      schemas: [\n        {\n          uri: schemaUri,\n          fileMatch: [\"file.json\"],\n          schema:\n            schemaUri === \"https://mapcomplete.org/schemas/layerconfig.json\"\n              ? layerSchemaJSON\n              : layoutSchemaJSON,\n        },\n      ],\n    })\n\n    let modelUri = monaco.Uri.parse(\"inmemory://inmemory/file.json\")\n\n    // Create a new model\n    model = monaco.editor.createModel(\n      JSON.stringify(state.configuration.data, null, \"  \"),\n      \"json\",\n      modelUri\n    )\n\n    editor = monaco.editor.create(container, {\n      model,\n      automaticLayout: true,\n    })\n\n    // When the editor is changed, update the configuration, but only if the user hasn't typed for 500ms and the JSON is valid\n    let timeout: number\n    editor.onDidChangeModelContent(() => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        save()\n      }, 500)\n    })\n  })\n\n  onDestroy(() => {\n    if (editor) {\n      editor.dispose()\n    }\n    if (model) {\n      model.dispose()\n    }\n  })\n</script>\n\n<div bind:this={container} class=\"h-full w-full\" />\n","<script lang=\"ts\">\n  import { EditJsonState } from \"./EditLayerState\"\n  import BackButton from \"../Base/BackButton.svelte\"\n  import { TrashIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import NextButton from \"../Base/NextButton.svelte\"\n\n  let deleteState: \"init\" | \"confirm\" = \"init\"\n  export let backToStudio: () => void\n  export let state: EditJsonState\n\n  export let objectType: \"layer\" | \"theme\"\n\n  function deleteLayer() {\n    state.delete()\n    backToStudio()\n  }\n</script>\n\n<div class=\"mt-12\">\n  {#if deleteState === \"init\"}\n    <button on:click={() => {deleteState = \"confirm\"}} class=\"small\">\n      <TrashIcon class=\"h-6 w-6\" />\n      Delete this  {objectType}\n    </button>\n  {:else if deleteState === \"confirm\"}\n    <div class=\"flex\">\n      <BackButton on:click={() => {deleteState = \"init\"}}>\n        Don't delete\n      </BackButton>\n      <NextButton clss=\"primary\" on:click={() => deleteLayer()}>\n        <div class=\"alert flex p-2\">\n\n          <TrashIcon class=\"h-6 w-6\" />\n          Do delete this {objectType}\n        </div>\n      </NextButton>\n    </div>\n  {/if}\n</div>\n","import { Store, UIEventSource } from \"../../Logic/UIEventSource\"\nimport Hash from \"../../Logic/Web/Hash\"\n\nexport default class StudioHashSetter {\n    constructor(mode: \"layer\" | \"theme\", tab: Store<number>, name: Store<string>) {\n        tab.mapD(tab => {\n                Hash.hash.setData(mode + \"/\" + name.data + \"/\" + tab)\n            }\n            , [name])\n    }\n}\n","<script lang=\"ts\">\n  import type { HighlightedTagRendering } from \"./EditLayerState\"\n  import EditLayerState from \"./EditLayerState\"\n  import layerSchemaRaw from \"../../assets/schemas/layerconfigmeta.json\"\n  import Region from \"./Region.svelte\"\n  import TabbedGroup from \"../Base/TabbedGroup.svelte\"\n  import { Store, UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { Utils } from \"../../Utils\"\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n  import ErrorIndicatorForRegion from \"./ErrorIndicatorForRegion.svelte\"\n  import { ChevronRightIcon, TrashIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n  import FloatOver from \"../Base/FloatOver.svelte\"\n  import TagRenderingInput from \"./TagRenderingInput.svelte\"\n  import AllTagsPanel from \"../Popup/AllTagsPanel.svelte\"\n  import QuestionPreview from \"./QuestionPreview.svelte\"\n  import ShowConversionMessages from \"./ShowConversionMessages.svelte\"\n  import RawEditor from \"./RawEditor.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import BackButton from \"../Base/BackButton.svelte\"\n  import DeleteButton from \"./DeleteButton.svelte\"\n  import StudioHashSetter from \"./StudioHashSetter\"\n\n  const layerSchema: ConfigMeta[] = <any>layerSchemaRaw\n\n  export let state: EditLayerState\n\n  export let backToStudio: () => void\n\n  new StudioHashSetter(\"layer\", state.selectedTab, state.getStoreFor([\"id\"]))\n\n  let messages = state.messages\n  let hasErrors = messages.mapD(\n    (m: ConversionMessage[]) => m.filter((m) => m.level === \"error\").length\n  )\n  const configuration = state.configuration\n\n  const allNames = Utils.Dedup(layerSchema.map((meta) => meta.hints.group))\n\n  const perRegion: Record<string, ConfigMeta[]> = {}\n  for (const region of allNames) {\n    perRegion[region] = layerSchema.filter((meta) => meta.hints.group === region)\n  }\n\n  let title: Store<string> = state.getStoreFor([\"id\"])\n  const wl = window.location\n  const baseUrl = wl.protocol + \"//\" + wl.host + \"/theme.html?userlayout=\"\n\n  function firstPathsFor(...regionNames: string[]): Set<string> {\n    const pathNames = new Set<string>()\n    for (const regionName of regionNames) {\n      const region: ConfigMeta[] = perRegion[regionName]\n      for (const configMeta of region) {\n        pathNames.add(configMeta.path[0])\n      }\n    }\n    return pathNames\n  }\n\n  function configForRequiredField(id: string): ConfigMeta {\n    let config = layerSchema.find((config) => config.path.length === 1 && config.path[0] === id)\n    config = Utils.Clone(config)\n    config.required = true\n    config.hints.ifunset = undefined\n    return config\n  }\n\n  let requiredFields = [\"id\", \"name\", \"description\", \"source\"]\n  let currentlyMissing = configuration.map((config) => {\n    if (!config) {\n      return []\n    }\n    const missing = []\n    for (const requiredField of requiredFields) {\n      if (!config[requiredField]) {\n        missing.push(requiredField)\n      }\n    }\n    return missing\n  })\n\n  let highlightedItem: UIEventSource<HighlightedTagRendering> = state.highlightedItem\n\n\n</script>\n\n<div class=\"flex h-screen flex-col\">\n  <div class=\"my-2 flex w-full justify-between\">\n    <slot />\n    {#if $title === undefined}\n      <h3>Creating a new layer</h3>\n    {:else}\n      <h3>Editing layer {$title}</h3>\n    {/if}\n    {#if $currentlyMissing.length > 0}\n      <div class=\"w-16\" />\n      <!-- Empty div, simply hide this -->\n    {:else if $hasErrors > 0}\n      <div class=\"alert\">{$hasErrors} errors detected</div>\n    {:else}\n      <div class=\"flex\">\n        <a\n          class=\"button small\"\n          href={baseUrl + state.server.layerUrl(title.data) + \"&test=true\"}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <div class=\"flex flex-col\">\n            <b>Test in safe mode</b>\n            <div>No changes are recoded to OSM</div>\n          </div>\n          <ChevronRightIcon class=\"h-6 w-6 shrink-0\" />\n        </a>\n        <a\n          class=\"primary button\"\n          href={baseUrl + state.server.layerUrl(title.data)}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          Try it out\n          <ChevronRightIcon class=\"h-6 w-6 shrink-0\" />\n        </a>\n      </div>\n    {/if}\n  </div>\n\n  {#if $currentlyMissing.length > 0}\n    {#each requiredFields as required}\n      <SchemaBasedInput {state} schema={configForRequiredField(required)} path={[required]} />\n    {/each}\n  {:else}\n    <div class=\"m4 h-full overflow-y-auto\">\n      <TabbedGroup tab={state.selectedTab}>\n        <div slot=\"title0\" class=\"flex\">\n          General properties\n          <ErrorIndicatorForRegion firstPaths={firstPathsFor(\"Basic\")} {state} />\n        </div>\n        <div class=\"flex flex-col mb-8\" slot=\"content0\">\n          <Region {state} configs={perRegion[\"Basic\"]} />\n          <DeleteButton {state} {backToStudio} objectType=\"layer\" />\n        </div>\n\n        <div slot=\"title1\" class=\"flex\">\n          Information panel (questions and answers)\n          <ErrorIndicatorForRegion\n            firstPaths={firstPathsFor(\"title\", \"tagrenderings\", \"editing\")}\n            {state}\n          />\n        </div>\n        <div slot=\"content1\">\n          <QuestionPreview path={[\"title\"]} {state} schema={perRegion[\"title\"][0]} />\n          <Region configs={perRegion[\"tagrenderings\"]} {state} title=\"Popup contents\" />\n          <Region configs={perRegion[\"editing\"]} {state} title=\"Other editing elements\" />\n        </div>\n\n        <div slot=\"title2\">\n          Creating a new point\n          <ErrorIndicatorForRegion firstPaths={firstPathsFor(\"presets\")} {state} />\n        </div>\n\n        <div slot=\"content2\">\n          <Region {state} configs={perRegion[\"presets\"]} />\n        </div>\n\n        <div slot=\"title3\" class=\"flex\">\n          Rendering on the map\n          <ErrorIndicatorForRegion\n            firstPaths={firstPathsFor(\"linerendering\", \"pointrendering\")}\n            {state}\n          />\n        </div>\n        <div slot=\"content3\">\n          <Region configs={perRegion[\"linerendering\"]} {state} />\n          <Region configs={perRegion[\"pointrendering\"]} {state} />\n        </div>\n\n        <div slot=\"title4\" class=\"flex\">\n          Advanced functionality\n          <ErrorIndicatorForRegion firstPaths={firstPathsFor(\"advanced\")} {state} />\n        </div>\n        <div slot=\"content4\">\n          <Region configs={perRegion[\"advanced\"]} {state} />\n          <Region configs={perRegion[\"expert\"]} {state} />\n        </div>\n        <div slot=\"title5\">Configuration file</div>\n        <div slot=\"content5\" class=\"flex h-full flex-col\">\n          <div>\n            Below, you'll find the raw configuration file in `.json`-format. This is mostly for\n            debugging purposes, but you can also edit the file directly if you want.\n          </div>\n          <div class=\"literal-code overflow-y-auto h-full\" style=\"min-height: 75%\">\n            <RawEditor {state} />\n          </div>\n          <ShowConversionMessages messages={$messages} />\n\n          <div class=\"flex w-full flex-col\">\n            <div>\n              The testobject (which is used to render the questions in the 'information panel'\n              item has the following tags:\n            </div>\n\n            <AllTagsPanel tags={state.testTags} />\n          </div>\n        </div>\n      </TabbedGroup>\n    </div>\n    {#if $highlightedItem !== undefined}\n      <FloatOver on:close={() => highlightedItem.setData(undefined)}>\n        <div>\n          <TagRenderingInput path={$highlightedItem.path} {state} />\n          <!-- \n            schema={$highlightedItem.schema} -->\n        </div>\n      </FloatOver>\n    {/if}\n  {/if}\n</div>\n","import { Utils } from \"../../Utils\"\nimport Constants from \"../../Models/Constants\"\nimport { LayerConfigJson } from \"../../Models/ThemeConfig/Json/LayerConfigJson\"\nimport { Store, UIEventSource } from \"../../Logic/UIEventSource\"\nimport { LayoutConfigJson } from \"../../Models/ThemeConfig/Json/LayoutConfigJson\"\n\n/**\n * A small class wrapping around the Server API.\n * This is _not_ the script which actually hosts!\n */\nexport default class StudioServer {\n    private readonly url: string\n    private readonly _userId: Store<number>\n    private readonly overview: UIEventSource<{\n        success: { id: string; owner: number; category: \"layers\" | \"themes\" }[]\n    } | { error: any } | undefined>\n\n    constructor(url: string, userId: Store<number>) {\n        this.url = url\n        this._userId = userId\n        this.overview = UIEventSource.FromPromiseWithErr(this.fetchOverviewRaw())\n    }\n\n    public fetchOverview(): Store<{\n        success: { id: string; owner: number; category: \"layers\" | \"themes\" }[]\n    } | { error } | undefined> {\n        return this.overview\n    }\n\n    private async fetchOverviewRaw(): Promise<\n        {\n            id: string\n            owner: number\n            category: \"layers\" | \"themes\"\n        }[]\n    > {\n        const { allFiles } = <{ allFiles: string[] }>(\n            await Utils.downloadJson(this.url + \"/overview\")\n        )\n        const layerOverview: {\n            id: string\n            owner: number | undefined\n            category: \"layers\" | \"themes\"\n        }[] = []\n        for (let file of allFiles) {\n            const parts = file.split(\"/\")\n            let owner = Number(parts[0])\n            if (!isNaN(owner)) {\n                parts.splice(0, 1)\n                file = file.substring(file.indexOf(\"/\") + 1)\n            } else {\n                owner = undefined\n            }\n            const category = <\"layers\" | \"themes\">parts[0]\n            const id = file.substring(file.lastIndexOf(\"/\") + 1, file.length - \".json\".length)\n            if (Constants.priviliged_layers.indexOf(<any>id) > 0) {\n                continue\n            }\n            layerOverview.push({ id, owner, category })\n        }\n        return layerOverview\n    }\n\n    async fetch(layerId: string, category: \"layers\", uid?: number): Promise<LayerConfigJson>\n    async fetch(layerId: string, category: \"themes\", uid?: number): Promise<LayoutConfigJson>\n    async fetch(\n        layerId: string,\n        category: \"layers\" | \"themes\",\n        uid?: number\n    ): Promise<LayerConfigJson | LayoutConfigJson> {\n        try {\n            return <any>await Utils.downloadJson(this.urlFor(layerId, category, uid))\n        } catch (e) {\n            return undefined\n        }\n    }\n\n    async delete(id: string, category: \"layers\" | \"themes\") {\n        if (id === undefined || id === \"\") {\n            return\n        }\n        await fetch(this.urlFor(id, category), {\n            method: \"DELETE\"\n        })\n        const overview: { id: string; owner: number; category: \"layers\" | \"themes\" }[] = this.overview.data?.[\"success\"]\n        if (overview) {\n            const index = overview.findIndex(obj => obj.id === id && obj.category === category && obj.owner === this._userId.data)\n            if (index >= 0) {\n                overview.splice(index, 1)\n                this.overview.ping()\n            }\n        }\n    }\n\n    async update(id: string, config: string, category: \"layers\" | \"themes\") {\n        if (id === undefined || id === \"\") {\n            return\n        }\n        await fetch(this.urlFor(id, category), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            body: config\n        })\n    }\n\n    public layerUrl(id: string) {\n        return this.urlFor(id, \"layers\")\n    }\n\n    public urlFor(id: string, category: \"layers\" | \"themes\", uid?: number) {\n        uid ??= this._userId.data\n        const uidStr = uid !== undefined ? \"/\" + uid : \"\"\n        return `${this.url}${uidStr}/${category}/${id}/${id}.json`\n    }\n}\n","<script lang=\"ts\">\n  import Icon from \"./Icon.svelte\"\n\n  /**\n   * Renders a 'marker', which consists of multiple 'icons'\n   */\n  export let icons: { icon: string; color: string }[]\n</script>\n\n{#if icons !== undefined && icons.length > 0}\n  <div class=\"relative h-full w-full\">\n    {#each icons as icon}\n      <div class=\"absolute top-0 left-0 h-full w-full\">\n        <Icon icon={icon.icon} color={icon.color} />\n      </div>\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\n  import Marker from \"../Map/Marker.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import { AllKnownLayouts } from \"../../Customizations/AllKnownLayouts\"\n  import { AllSharedLayers } from \"../../Customizations/AllSharedLayers\"\n  import { createEventDispatcher } from \"svelte\"\n\n  export let info: { id: string; owner: number }\n  export let category: \"layers\" | \"themes\"\n  export let osmConnection: OsmConnection\n  const dispatch = createEventDispatcher<{ layerSelected: string }>()\n\n  let displayName = UIEventSource.FromPromise(\n    osmConnection.getInformationAboutUser(info.owner)\n  ).mapD((response) => response.display_name)\n  let selfId = osmConnection.userDetails.mapD((ud) => ud.uid)\n\n  function fetchIconDescription(layerId): any {\n    if (category === \"themes\") {\n      return AllKnownLayouts.allKnownLayouts.get(layerId).icon\n    }\n    return AllSharedLayers.getSharedLayersConfigs().get(layerId)?._layerIcon\n  }\n</script>\n\n<NextButton clss=\"small\" on:click={() => dispatch(\"layerSelected\", info)}>\n  <div class=\"mr-1 h-4 w-4\">\n    <Marker icons={fetchIconDescription(info.id)} />\n  </div>\n  <b class=\"px-1\">{info.id}</b>\n  {#if info.owner && info.owner !== $selfId}\n    {#if $displayName}\n      (made by {$displayName}\n      {#if window.location.host.startsWith(\"127.0.0.1\")}\n        - {info.owner}\n      {/if}\n      )\n    {:else}\n      ({info.owner})\n    {/if}\n  {/if}\n</NextButton>\n","<script lang=\"ts\">\n  import { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\n  import EditItemButton from \"./EditItemButton.svelte\"\n\n  export let layerIds: { id: string; owner: number }[]\n  export let category: \"layers\" | \"themes\" = \"layers\"\n  export let osmConnection: OsmConnection\n</script>\n\n{#if layerIds.length > 0}\n  <slot name=\"title\" />\n  <div class=\"flex flex-wrap\">\n    {#each Array.from(layerIds) as layer}\n      <EditItemButton info={layer} {category} {osmConnection} on:layerSelected />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import BackButton from \"../Base/BackButton.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import { createEventDispatcher } from \"svelte\"\n\n  const dispatch = createEventDispatcher<{ back; next }>()\n  export let islast = false\n  export let isFirst = false\n  export let pageNumber: number = undefined\n  export let totalPages: number = undefined\n</script>\n\n<div class=\"link-underline flex h-full w-full flex-col justify-between\">\n  <div class=\"overflow-y-auto h-full\">\n    <slot />\n  </div>\n\n  <div class=\"flex flex-col\">\n    {#if pageNumber !== undefined && totalPages !== undefined}\n      <div class=\"flex justify-end\">\n        <div class=\"subtle\">{pageNumber + 1}/{totalPages}</div>\n      </div>\n    {/if}\n    <div class=\"flex w-full\">\n      {#if !isFirst}\n        <BackButton clss=\"w-full\" on:click={() => dispatch(\"back\")}>Back</BackButton>\n      {:else}\n        <div class=\"w-full\" />\n      {/if}\n      <NextButton clss=\"primary w-full\" on:click={() => dispatch(\"next\")}>\n        {#if islast}\n          Finish\n        {:else}\n          Next\n        {/if}\n      </NextButton>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\"\n  import WalkthroughStep from \"./WalkthroughStep.svelte\"\n  import FromHtml from \"../Base/FromHtml.svelte\"\n  import Markdown from \"../Base/Markdown.svelte\"\n\n  /**\n   * Markdown\n   */\n  export let pages: string[]\n\n  let currentPage: number = 0\n\n  const dispatch = createEventDispatcher<{ done }>()\n\n  function step(incr: number) {\n    if (incr > 0 && currentPage + 1 === pages.length) {\n      dispatch(\"done\")\n      currentPage = 0\n      return\n    }\n    currentPage = Math.min(Math.max(0, currentPage + incr), pages.length)\n  }\n</script>\n\n<WalkthroughStep\n  on:back={() => step(-1)}\n  on:next={() => step(1)}\n  isFirst={currentPage === 0}\n  islast={currentPage + 1 === pages.length}\n  totalPages={pages.length}\n  pageNumber={currentPage}\n>\n  <Markdown src={pages[currentPage]} />\n</WalkthroughStep>\n","<script lang=\"ts\">\n  import { EditThemeState } from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { ChevronRightIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n  import TabbedGroup from \"../Base/TabbedGroup.svelte\"\n  import ShowConversionMessages from \"./ShowConversionMessages.svelte\"\n  import Region from \"./Region.svelte\"\n  import RawEditor from \"./RawEditor.svelte\"\n  import { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\n  import DeleteButton from \"./DeleteButton.svelte\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import StudioHashSetter from \"./StudioHashSetter\"\n\n  export let state: EditThemeState\n  export let osmConnection: OsmConnection\n  export let backToStudio: () => void\n\n  let schema: ConfigMeta[] = state.schema.filter((schema) => schema.path.length > 0)\n  new StudioHashSetter(\"theme\", state.selectedTab, state.getStoreFor([\"id\"]))\n\n  export let selfLayers: { owner: number; id: string }[]\n  export let otherLayers: { owner: number; id: string }[]\n  {\n\n    /**\n     * We modify the schema and inject options for self-declared layers\n     */\n\n    const layerSchema = schema.find(l => l.path.join(\".\") === \"layers\")\n    const suggestions: { if: string, then: string }[] = layerSchema.hints.suggestions\n    suggestions.unshift(...selfLayers.map(\n      l => ({\n        if: `value=https://studio.mapcomplete.org/${l.owner}/layers/${l.id}/${l.id}.json`,\n        then: `<b>${l.id}</b> (made by you)`\n      })\n    ))\n\n    for (let i = 0; i < otherLayers.length; i++) {\n      const l = otherLayers[i]\n      const mapping = {\n        if: `value=https://studio.mapcomplete.org/${l.owner}/layers/${l.id}/${l.id}.json`,\n        then: `<b>${l.id}</b> (made by ${l.owner})`\n      }\n      /**\n       * This is a filthy hack which is time-sensitive and will break\n       * It downloads the username and patches the suggestion, assuming that the list with all layers will be shown a while _after_ loading the view.\n       * Caching in 'getInformationAboutUser' helps with this as well\n       */\n      osmConnection.getInformationAboutUser(l.owner).then(userInfo => {\n        mapping.then = `<b>${l.id}</b> (made by ${userInfo.display_name})`\n      })\n      suggestions.push(mapping)\n    }\n\n  }\n\n\n  let messages = state.messages\n  let hasErrors = messages.map(\n    (m: ConversionMessage[]) => m.filter((m) => m.level === \"error\").length\n  )\n  let title = state.getStoreFor([\"id\"])\n  const wl = window.location\n  const baseUrl = wl.protocol + \"//\" + wl.host + \"/theme.html?userlayout=\"\n\n  const perRegion: Record<string, ConfigMeta[]> = {}\n  for (const schemaElement of schema) {\n    if (schemaElement.path.length > 1 && schemaElement.path[0] === \"layers\") {\n      continue\n    }\n    const key = schemaElement.hints.group ?? \"no-group\"\n    const list = perRegion[key] ?? (perRegion[key] = [])\n    list.push(schemaElement)\n  }\n  console.log({ perRegion, schema })\n</script>\n\n<div class=\"flex h-screen flex-col\">\n  <div class=\"my-2 flex w-full justify-between\">\n    <slot />\n    <h3>Editing theme {$title}</h3>\n    {#if $hasErrors > 0}\n      <div class=\"alert\">{$hasErrors} errors detected</div>\n    {:else}\n      <a\n        class=\"primary button\"\n        href={baseUrl + state.server.urlFor($title, \"themes\")}\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Try it out\n        <ChevronRightIcon class=\"h-6 w-6 shrink-0\" />\n      </a>\n    {/if}\n  </div>\n\n  <div class=\"m4 h-full overflow-y-auto\">\n    <!-- {Object.keys(perRegion).join(\";\")} -->\n    <TabbedGroup tab={state.selectedTab}>\n      <div slot=\"title0\">Basic properties</div>\n      <div slot=\"content0\" class=\"mb-8\">\n        <Region configs={perRegion[\"basic\"]} path={[]} {state} title=\"Basic properties\" />\n        <Region configs={perRegion[\"start_location\"]} path={[]} {state} title=\"Start location\" />\n        <DeleteButton {state} {backToStudio} objectType=\"theme\"/>\n\n      </div>\n\n      <div slot=\"title1\">Layers</div>\n      <div slot=\"content1\">\n        <Region configs={perRegion[\"layers\"]} path={[]} {state} />\n      </div>\n      <div slot=\"title2\">Feature switches</div>\n      <div slot=\"content2\">\n        <Region configs={perRegion[\"feature_switches\"]} path={[]} {state} />\n      </div>\n\n      <div slot=\"title3\">Advanced options</div>\n      <div slot=\"content3\">\n        <Region configs={perRegion[\"advanced\"]} path={[]} {state} />\n      </div>\n\n      <div slot=\"title4\">Configuration file</div>\n      <div slot=\"content4\" class=\"flex h-full flex-col\">\n        <div>\n          Below, you'll find the raw configuration file in `.json`-format. This is mostly for\n          debugging purposes, but you can also edit the file directly if you want.\n        </div>\n        <div class=\"literal-code overflow-y-auto h-full\" style=\"min-height: 75%\">\n          <RawEditor {state} />\n        </div>\n        <ShowConversionMessages messages={$messages} />\n    </TabbedGroup>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import NextButton from \"./Base/NextButton.svelte\"\n  import { Store, UIEventSource } from \"../Logic/UIEventSource\"\n  import EditLayerState, { EditJsonState, EditThemeState } from \"./Studio/EditLayerState\"\n  import EditLayer from \"./Studio/EditLayer.svelte\"\n  import Loading from \"../assets/svg/Loading.svelte\"\n  import StudioServer from \"./Studio/StudioServer\"\n  import LoginToggle from \"./Base/LoginToggle.svelte\"\n  import { OsmConnection } from \"../Logic/Osm/OsmConnection\"\n  import { QueryParameters } from \"../Logic/Web/QueryParameters\"\n\n  import layerSchemaRaw from \"../../src/assets/schemas/layerconfigmeta.json\"\n  import layoutSchemaRaw from \"../../src/assets/schemas/layoutconfigmeta.json\"\n\n  import If from \"./Base/If.svelte\"\n  import BackButton from \"./Base/BackButton.svelte\"\n  import ChooseLayerToEdit from \"./Studio/ChooseLayerToEdit.svelte\"\n  import FloatOver from \"./Base/FloatOver.svelte\"\n  import Walkthrough from \"./Walkthrough/Walkthrough.svelte\"\n  import * as intro from \"../assets/studio_introduction.json\"\n  import * as intro_tagrenderings from \"../assets/studio_tagrenderings_intro.json\"\n\n  import { QuestionMarkCircleIcon } from \"@babeard/svelte-heroicons/mini\"\n  import type { ConfigMeta } from \"./Studio/configMeta\"\n  import EditTheme from \"./Studio/EditTheme.svelte\"\n  import * as meta from \"../../package.json\"\n  import Checkbox from \"./Base/Checkbox.svelte\"\n  import { Utils } from \"../Utils\"\n  import Translations from \"./i18n/Translations\"\n  import Tr from \"./Base/Tr.svelte\"\n  import Add from \"../assets/svg/Add.svelte\"\n  import { SearchIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import Hash from \"../Logic/Web/Hash\"\n\n  export let studioUrl =\n    window.location.hostname === \"127.0.0.2\"\n      ? \"http://127.0.0.1:1235\"\n      : \"https://studio.mapcomplete.org\"\n\n  const oauth_token = QueryParameters.GetQueryParameter(\n    \"oauth_token\",\n    undefined,\n    \"Used to complete the login\"\n  )\n  let osmConnection = new OsmConnection({\n    oauth_token,\n    checkOnlineRegularly: true\n  })\n  const expertMode = UIEventSource.asBoolean(\n    osmConnection.GetPreference(\"studio-expert-mode\", \"false\", {\n      documentation: \"Indicates if more options are shown in mapcomplete studio\"\n    })\n  )\n  expertMode.addCallbackAndRunD((expert) => console.log(\"Expert mode is\", expert))\n  const createdBy = osmConnection.userDetails.data.name\n  const uid = osmConnection.userDetails.map((ud) => ud?.uid)\n  const studio = new StudioServer(studioUrl, uid)\n\n  let layersWithErr = studio.fetchOverview()\n  let layerFilterTerm: string = \"\"\n  let layers: Store<{ owner: number; id: string }[]> = layersWithErr.mapD((l) =>\n    l[\"success\"]?.filter((l) => l.category === \"layers\")\n  )\n  $: selfLayers = layers.mapD(\n    (ls) =>\n      ls.filter(\n        (l) => l.owner === uid.data && l.id.toLowerCase().includes(layerFilterTerm.toLowerCase())\n      ),\n    [uid]\n  )\n  $: otherLayers = layers.mapD(\n    (ls) =>\n      ls.filter(\n        (l) =>\n          l.owner !== undefined &&\n          l.owner !== uid.data &&\n          l.id.toLowerCase().includes(layerFilterTerm.toLowerCase())\n      ),\n    [uid]\n  )\n  $: officialLayers = layers.mapD(\n    (ls) =>\n      ls.filter(\n        (l) => l.owner === undefined && l.id.toLowerCase().includes(layerFilterTerm.toLowerCase())\n      ),\n    [uid]\n  )\n\n  let themeFilterTerm: string = \"\"\n\n  let themes: Store<{ owner: number; id: string }[]> = layersWithErr.mapD((l) =>\n    l[\"success\"]?.filter((l) => l.category === \"themes\")\n  )\n  $: selfThemes = themes.mapD(\n    (ls) =>\n      ls.filter(\n        (l) => l.owner === uid.data && l.id.toLowerCase().includes(themeFilterTerm.toLowerCase())\n      ),\n    [uid]\n  )\n  $: otherThemes = themes.mapD(\n    (ls) =>\n      ls.filter(\n        (l) =>\n          l.owner !== undefined &&\n          l.owner !== uid.data &&\n          l.id.toLowerCase().includes(themeFilterTerm.toLowerCase())\n      ),\n    [uid]\n  )\n  $: officialThemes = themes.mapD(\n    (ls) =>\n      ls.filter(\n        (l) => l.owner === undefined && l.id.toLowerCase().includes(themeFilterTerm.toLowerCase())\n      ),\n    [uid]\n  )\n\n  let state:\n    | undefined\n    | \"edit_layer\"\n    | \"edit_theme\"\n    | \"editing_layer\"\n    | \"editing_theme\"\n    | \"loading\" = undefined\n\n  const layerSchema: ConfigMeta[] = <any>layerSchemaRaw\n  let editLayerState = new EditLayerState(layerSchema, studio, osmConnection, { expertMode })\n  let showIntro = editLayerState.showIntro\n\n  const layoutSchema: ConfigMeta[] = <any>layoutSchemaRaw\n  let editThemeState = new EditThemeState(layoutSchema, studio, { expertMode })\n\n  const version = meta.version\n\n  async function editLayer(event: { detail }): Promise<EditLayerState> {\n    const layerId: { owner: number; id: string } = event[\"detail\"]\n    state = \"loading\"\n    editLayerState.startSavingUpdates(false)\n    editLayerState.configuration.setData(await studio.fetch(layerId.id, \"layers\", layerId.owner))\n    editLayerState.startSavingUpdates()\n    state = \"editing_layer\"\n    return editLayerState\n  }\n\n  async function editTheme(event: { detail }): Promise<EditThemeState> {\n    const id: { id: string; owner: number } = event[\"detail\"]\n    state = \"loading\"\n    editThemeState.startSavingUpdates(false)\n    const layout = await studio.fetch(id.id, \"themes\", id.owner)\n    editThemeState.configuration.setData(layout)\n    editThemeState.startSavingUpdates()\n    state = \"editing_theme\"\n    return editThemeState\n  }\n\n  async function createNewLayer() {\n    state = \"loading\"\n    const initialLayerConfig = {\n      credits: createdBy,\n      minzoom: 15,\n      pointRendering: [\n        {\n          location: [\"point\", \"centroid\"],\n          marker: [\n            {\n              icon: \"circle\",\n              color: \"white\"\n            }\n          ]\n        }\n      ],\n      tagRenderings: [\"images\"],\n      lineRendering: [\n        {\n          width: 1,\n          color: \"blue\"\n        }\n      ]\n    }\n    editLayerState.configuration.setData(initialLayerConfig)\n    editLayerState.startSavingUpdates()\n    state = \"editing_layer\"\n  }\n\n  async function selectStateBasedOnHash() {\n    const hash = Hash.hash.data\n    if (!hash) {\n      return\n    }\n    console.log(\"Selecting state based on \", hash)\n    const [mode, id, tab] = hash.split(\"/\")\n    // Not really an event, we just set the 'detail'\n    const event = {\n      detail: {\n        id,\n        owner: uid.data\n      }\n    }\n    const statePromise: Promise<EditJsonState<any>> = mode === \"layer\" ? editLayer(event) : editTheme(event)\n    const state = await statePromise\n    state.selectedTab.setData(Number(tab))\n  }\n\n  selectStateBasedOnHash()\n\n  function backToStudio() {\n    console.log(\"Back to studio\")\n    state = undefined\n    Hash.hash.setData(undefined)\n  }\n</script>\n\n<If condition={layersWithErr.map((d) => d?.[\"error\"] !== undefined)}>\n  <div>\n    <div class=\"alert\">\n      Something went wrong while contacting the MapComplete Studio Server: {$layersWithErr[\"error\"]}\n    </div>\n    The server might be offline. Please:\n    <ul>\n      <li>Try again in a few minutes</li>\n      <li>\n        Contact <a href=\"https://app.element.io/#/room/#MapComplete:matrix.org\">\n        the MapComplete community via the chat.\n      </a>\n        Someone might be able to help you\n      </li>\n      <li>\n        File <a href=\"https://github.com/pietervdvn/MapComplete/issues\">an issue</a>\n      </li>\n      <li>\n        Contact the devs via <a href=\"mailto:info@posteo.net\">email</a>\n      </li>\n    </ul>\n  </div>\n  <LoginToggle ignoreLoading={true} slot=\"else\" state={{ osmConnection }}>\n    <div slot=\"not-logged-in\">\n      <NextButton clss=\"primary\" on:click={() => osmConnection.AttemptLogin()}>\n        Please log in to use MapComplete Studio\n      </NextButton>\n    </div>\n    {#if state === undefined}\n      <div class=\"flex h-full flex-col justify-between p-4\">\n        <div class=\"flex w-full flex-col\">\n          <h1>MapComplete Studio</h1>\n\n          <NextButton on:click={() => (state = \"edit_layer\")}>\n            <div class=\"flex flex-col items-start\">\n              <div>Edit an existing layer</div>\n              <div class=\"font-normal\">\n                Edit layers you created, others created or from the official MapComplete\n              </div>\n            </div>\n          </NextButton>\n          <NextButton on:click={() => createNewLayer()}>Create a new layer</NextButton>\n          <NextButton on:click={() => (state = \"edit_theme\")}>Edit a theme</NextButton>\n          <NextButton\n            on:click={() => {\n              editThemeState.configuration.setData({})\n              editThemeState.startSavingUpdates()\n              state = \"editing_theme\"\n            }}\n          >\n            Create a new theme\n          </NextButton>\n          <button\n            class=\"small\"\n            on:click={() => {\n              showIntro.setData(\"intro\")\n            }}\n          >\n            <QuestionMarkCircleIcon class=\"h-6 w-6\" />\n            Show the introduction again\n          </button>\n          <a class=\"button flex\" href={Utils.HomepageLink()}>\n            <Add class=\"h-6 w-6\" />\n            <Tr t={Translations.t.general.backToIndex} />\n          </a>\n        </div>\n        <div>\n          <Checkbox selected={expertMode}>Enable more options (expert mode)</Checkbox>\n          <span class=\"subtle\">MapComplete version {version}</span>\n        </div>\n      </div>\n    {:else if state === \"edit_layer\"}\n      <div class=\"m-4 flex flex-col\">\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => backToStudio()}\n        >\n          MapComplete Studio\n        </BackButton>\n        <h2>Choose a layer to edit</h2>\n\n        <form class=\"flex justify-center\">\n          <label\n            class=\"neutral-label my-2 flex w-full items-center rounded-full border-2 border-black sm:w-1/2\"\n          >\n            <SearchIcon aria-hidden=\"true\" class=\"h-8 w-8\" />\n            <input\n              class=\"mr-4 w-full outline-none\"\n              id=\"layer-search\"\n              type=\"search\"\n              placeholder=\"Filter layers by name\"\n              bind:value={layerFilterTerm}\n            />\n          </label>\n        </form>\n\n        <ChooseLayerToEdit {osmConnection} layerIds={$selfLayers} on:layerSelected={editLayer}>\n          <h3 slot=\"title\">Your layers</h3>\n        </ChooseLayerToEdit>\n        <h3>Layers by other contributors</h3>\n        <div>\n          Selecting a layer will create a copy in your account that you edit. You will not change\n          the version of the other contributor\n        </div>\n        <ChooseLayerToEdit {osmConnection} layerIds={$otherLayers} on:layerSelected={editLayer} />\n\n        <h3>Official layers by MapComplete</h3>\n        <div>\n          Selecting a layer will create a copy in your account. You will not change the version that\n          is in MapComplete\n        </div>\n        <ChooseLayerToEdit\n          {osmConnection}\n          layerIds={$officialLayers}\n          on:layerSelected={editLayer}\n        />\n      </div>\n    {:else if state === \"edit_theme\"}\n      <div class=\"m-4 flex flex-col\">\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => backToStudio()}\n        >\n          MapComplete Studio\n        </BackButton>\n        <h2>Choose a theme to edit</h2>\n\n        <form class=\"flex justify-center\">\n          <label\n            class=\"neutral-label my-2 flex w-full items-center rounded-full border-2 border-black sm:w-1/2\"\n          >\n            <SearchIcon aria-hidden=\"true\" class=\"h-8 w-8\" />\n            <input\n              class=\"mr-4 w-full outline-none\"\n              id=\"theme-search\"\n              type=\"search\"\n              placeholder=\"Filter themes by name\"\n              bind:value={themeFilterTerm}\n            />\n          </label>\n        </form>\n\n        <ChooseLayerToEdit {osmConnection} layerIds={$selfThemes} on:layerSelected={editTheme}>\n          <h3 slot=\"title\">Your themes</h3>\n        </ChooseLayerToEdit>\n        <h3>Themes by other contributors</h3>\n        <ChooseLayerToEdit {osmConnection} layerIds={$otherThemes} on:layerSelected={editTheme} />\n        <h3>Official themes by MapComplete</h3>\n        <ChooseLayerToEdit\n          {osmConnection}\n          layerIds={$officialThemes}\n          on:layerSelected={editTheme}\n        />\n      </div>\n    {:else if state === \"loading\"}\n      <div class=\"h-8 w-8\">\n        <Loading />\n      </div>\n    {:else if state === \"editing_layer\"}\n      <EditLayer\n        state={editLayerState}\n        {backToStudio}\n      >\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => backToStudio()}\n        >\n          MapComplete Studio\n        </BackButton>\n      </EditLayer>\n    {:else if state === \"editing_theme\"}\n      <EditTheme state={editThemeState} selfLayers={$selfLayers} otherLayers={$otherLayers} {osmConnection}\n                 {backToStudio}>\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => backToStudio()}\n        >\n          MapComplete Studio\n        </BackButton>\n      </EditTheme>\n    {/if}\n\n    {#if { intro, tagrenderings: intro_tagrenderings }[$showIntro]?.sections}\n      <FloatOver\n        on:close={() => {\n          showIntro.setData(\"no\")\n        }}\n      >\n        <div class=\"flex h-full p-4 pr-12\">\n          <Walkthrough\n            pages={{ intro, tagrenderings: intro_tagrenderings }[$showIntro]?.sections}\n            on:done={() => {\n              showIntro.setData(\"no\")\n            }}\n          />\n        </div>\n      </FloatOver>\n    {/if}\n  </LoginToggle>\n</If>\n","import SvelteUIElement from \"./Base/SvelteUIElement\"\nimport StudioGUI from \"./StudioGUI.svelte\"\n\nexport default class StudioGui {\n    public setup() {\n        new SvelteUIElement(StudioGUI, {}).SetClass(\"h-full\").AttachTo(\"main\")\n    }\n}\n\nnew StudioGui().setup()\n"],"file":"assets/studio-817be8ff.js"}