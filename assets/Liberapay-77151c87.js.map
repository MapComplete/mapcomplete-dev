{"version":3,"file":"Liberapay-77151c87.js","sources":["../../src/InstallServiceWorker.ts","../../src/Logic/State/FeatureSwitchState.ts","../../src/assets/svg/Github.svelte","../../src/assets/svg/Liberapay.svelte"],"sourcesContent":["export {}\nwindow.addEventListener(\"load\", async () => {\n    if (!(\"serviceWorker\" in navigator)) {\n        console.log(\"Service workers are not supported\")\n        return\n    }\n    try {\n        await navigator.serviceWorker.register(\"/service-worker.js\")\n        console.log(\"Service worker registration successful\")\n    } catch (err) {\n        console.error(\"Service worker registration failed\", err)\n    }\n})\n","/**\n * The part of the global state which initializes the feature switches, based on default values and on the layoutToUse\n */\nimport LayoutConfig from \"../../Models/ThemeConfig/LayoutConfig\"\nimport { UIEventSource } from \"../UIEventSource\"\nimport { QueryParameters } from \"../Web/QueryParameters\"\nimport Constants from \"../../Models/Constants\"\nimport { Utils } from \"../../Utils\"\nimport { Query } from \"pg\"\n\nclass FeatureSwitchUtils {\n    /** Helper function to initialize feature switches\n     *\n     */\n    static initSwitch(key: string, deflt: boolean, documentation: string): UIEventSource<boolean> {\n        const defaultValue = deflt\n        const queryParam = QueryParameters.GetQueryParameter(\n            key,\n            \"\" + defaultValue,\n            documentation,\n            { stackOffset: -1 }\n        )\n\n        // It takes the current layout, extracts the default value for this query parameter. A query parameter event source is then retrieved and flattened\n        return queryParam.sync(\n            (str) => (str === undefined ? defaultValue : str !== \"false\"),\n            [],\n            (b) => (b == defaultValue ? undefined : \"\" + b)\n        )\n    }\n}\n\nexport class OsmConnectionFeatureSwitches {\n    public readonly featureSwitchFakeUser: UIEventSource<boolean>\n\n    constructor() {\n        this.featureSwitchFakeUser = QueryParameters.GetBooleanQueryParameter(\n            \"fake-user\",\n            false,\n            \"If true, 'dryrun' mode is activated and a fake user account is loaded\"\n        )\n    }\n}\n\nexport default class FeatureSwitchState extends OsmConnectionFeatureSwitches {\n    /**\n     * The layout that is being used in this run\n     */\n    public readonly layoutToUse: LayoutConfig\n\n    public readonly featureSwitchEnableLogin: UIEventSource<boolean>\n    public readonly featureSwitchSearch: UIEventSource<boolean>\n    public readonly featureSwitchBackgroundSelection: UIEventSource<boolean>\n    public readonly featureSwitchWelcomeMessage: UIEventSource<boolean>\n    public readonly featureSwitchCommunityIndex: UIEventSource<boolean>\n    public readonly featureSwitchExtraLinkEnabled: UIEventSource<boolean>\n    public readonly featureSwitchBackToThemeOverview: UIEventSource<boolean>\n    public readonly featureSwitchShareScreen: UIEventSource<boolean>\n    public readonly featureSwitchGeolocation: UIEventSource<boolean>\n    public readonly featureSwitchIsTesting: UIEventSource<boolean>\n    public readonly featureSwitchIsDebugging: UIEventSource<boolean>\n    public readonly featureSwitchShowAllQuestions: UIEventSource<boolean>\n    public readonly featureSwitchFilter: UIEventSource<boolean>\n    public readonly featureSwitchEnableExport: UIEventSource<boolean>\n    public readonly overpassUrl: UIEventSource<string[]>\n    public readonly overpassTimeout: UIEventSource<number>\n    public readonly overpassMaxZoom: UIEventSource<number>\n    public readonly osmApiTileSize: UIEventSource<number>\n    public readonly backgroundLayerId: UIEventSource<string>\n    public readonly featureSwitchMorePrivacy: UIEventSource<boolean>\n    public readonly featureSwitchLayerDefault: UIEventSource<boolean>\n\n    public constructor(layoutToUse?: LayoutConfig) {\n        super()\n        this.layoutToUse = layoutToUse\n\n        const legacyRewrite: Record<string, string | string[]> = {\n            \"fs-userbadge\": \"fs-enable-login\",\n            \"fs-layers\": [\"fs-filter\", \"fs-background\"],\n        }\n\n        for (const key in legacyRewrite) {\n            let intoList = legacyRewrite[key]\n            if (!QueryParameters.wasInitialized(key)) {\n                continue\n            }\n            if (typeof intoList === \"string\") {\n                intoList = [intoList]\n            }\n            for (const into of intoList) {\n                if (!QueryParameters.wasInitialized(into)) {\n                    const v = QueryParameters.GetQueryParameter(key, \"\", \"\").data\n                    console.log(\"Adding url param due to legacy:\", key, \"-->\", into, \"(\", v + \")\")\n                    QueryParameters.GetQueryParameter(into, \"\", \"\").setData(v)\n                }\n            }\n        }\n\n        this.featureSwitchEnableLogin = FeatureSwitchUtils.initSwitch(\n            \"fs-enable-login\",\n            layoutToUse?.enableUserBadge ?? true,\n            \"Disables/Enables logging in and thus disables editing all together. This effectively puts MapComplete into read-only mode.\"\n        )\n        {\n            if (QueryParameters.wasInitialized(\"fs-userbadge\")) {\n                // userbadge is the legacy name for 'enable-login'\n                this.featureSwitchEnableLogin.setData(\n                    QueryParameters.GetBooleanQueryParameter(\"fs-userbadge\", undefined, \"Legacy\")\n                        .data\n                )\n            }\n        }\n\n        this.featureSwitchSearch = FeatureSwitchUtils.initSwitch(\n            \"fs-search\",\n            layoutToUse?.enableSearch ?? true,\n            \"Disables/Enables the search bar\"\n        )\n        this.featureSwitchBackgroundSelection = FeatureSwitchUtils.initSwitch(\n            \"fs-background\",\n            layoutToUse?.enableBackgroundLayerSelection ?? true,\n            \"Disables/Enables the background layer control where a user can enable e.g. aerial imagery\"\n        )\n\n        this.featureSwitchFilter = FeatureSwitchUtils.initSwitch(\n            \"fs-filter\",\n            layoutToUse?.enableLayers ?? true,\n            \"Disables/Enables the filter view where a user can enable/disable MapComplete-layers or filter for certain properties\"\n        )\n\n        this.featureSwitchWelcomeMessage = FeatureSwitchUtils.initSwitch(\n            \"fs-welcome-message\",\n            true,\n            \"Disables/enables the help menu or welcome message\"\n        )\n        this.featureSwitchCommunityIndex = FeatureSwitchUtils.initSwitch(\n            \"fs-community-index\",\n            this.featureSwitchEnableLogin.data,\n            \"Disables/enables the button to get in touch with the community\"\n        )\n        this.featureSwitchExtraLinkEnabled = FeatureSwitchUtils.initSwitch(\n            \"fs-iframe-popout\",\n            true,\n            \"Disables/Enables the extraLink button. By default, if in iframe mode and the welcome message is hidden, a popout button to the full mapcomplete instance is shown instead (unless disabled with this switch or another extraLink button is enabled)\"\n        )\n        this.featureSwitchBackToThemeOverview = FeatureSwitchUtils.initSwitch(\n            \"fs-homepage-link\",\n            layoutToUse?.enableMoreQuests ?? true,\n            \"Disables/Enables the various links which go back to the index page with the theme overview\"\n        )\n        this.featureSwitchShareScreen = FeatureSwitchUtils.initSwitch(\n            \"fs-share-screen\",\n            layoutToUse?.enableShareScreen ?? true,\n            \"Disables/Enables the 'Share-screen'-tab in the welcome message\"\n        )\n        this.featureSwitchGeolocation = FeatureSwitchUtils.initSwitch(\n            \"fs-geolocation\",\n            layoutToUse?.enableGeolocation ?? true,\n            \"Disables/Enables the geolocation button\"\n        )\n\n        this.featureSwitchLayerDefault = QueryParameters.GetBooleanQueryParameter(\n            \"fs-layers-enabled\",\n            true,\n            \"If set to false, all layers will be disabled - except the explicitly enabled layers\"\n        )\n        this.featureSwitchShowAllQuestions = FeatureSwitchUtils.initSwitch(\n            \"fs-all-questions\",\n            layoutToUse?.enableShowAllQuestions ?? false,\n            \"Always show all questions\"\n        )\n\n        this.featureSwitchEnableExport = FeatureSwitchUtils.initSwitch(\n            \"fs-export\",\n            layoutToUse?.enableExportButton ?? true,\n            \"Enable the export as GeoJSON and CSV button\"\n        )\n\n        let testingDefaultValue = false\n        if (\n            !Utils.runningFromConsole &&\n            (location.hostname === \"localhost\" || location.hostname === \"127.0.0.1\")\n        ) {\n            testingDefaultValue = true\n        }\n\n        this.featureSwitchIsTesting = QueryParameters.GetBooleanQueryParameter(\n            \"test\",\n            testingDefaultValue,\n            \"If true, 'dryrun' mode is activated. The app will behave as normal, except that changes to OSM will be printed onto the console instead of actually uploaded to osm.org\"\n        )\n\n        this.featureSwitchIsDebugging = QueryParameters.GetBooleanQueryParameter(\n            \"debug\",\n            false,\n            \"If true, shows some extra debugging help such as all the available tags on every object\"\n        )\n\n        this.featureSwitchMorePrivacy = QueryParameters.GetBooleanQueryParameter(\n            \"moreprivacy\",\n            layoutToUse.enableMorePrivacy,\n            \"If true, the location distance indication will not be written to the changeset and other privacy enhancing measures might be taken.\"\n        )\n\n        this.overpassUrl = QueryParameters.GetQueryParameter(\n            \"overpassUrl\",\n            (layoutToUse?.overpassUrl ?? Constants.defaultOverpassUrls).join(\",\"),\n            \"Point mapcomplete to a different overpass-instance. Example: https://overpass-api.de/api/interpreter\"\n        ).sync(\n            (param) => param?.split(\",\"),\n            [],\n            (urls) => urls?.join(\",\")\n        )\n\n        this.overpassTimeout = UIEventSource.asInt(\n            QueryParameters.GetQueryParameter(\n                \"overpassTimeout\",\n                \"\" + layoutToUse?.overpassTimeout,\n                \"Set a different timeout (in seconds) for queries in overpass\"\n            )\n        )\n\n        this.overpassMaxZoom = UIEventSource.asFloat(\n            QueryParameters.GetQueryParameter(\n                \"overpassMaxZoom\",\n                \"\" + layoutToUse?.overpassMaxZoom,\n                \" point to switch between OSM-api and overpass\"\n            )\n        )\n\n        this.osmApiTileSize = UIEventSource.asInt(\n            QueryParameters.GetQueryParameter(\n                \"osmApiTileSize\",\n                \"\" + layoutToUse?.osmApiTileSize,\n                \"Tilesize when the OSM-API is used to fetch data within a BBOX\"\n            )\n        )\n\n        this.backgroundLayerId = QueryParameters.GetQueryParameter(\n            \"background\",\n            layoutToUse?.defaultBackgroundId,\n            \"The id of the background layer to start with\"\n        )\n    }\n}\n","<script>\nexport let color = \"#000000\"\n</script>\n <svg {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown on:focus    width=\"100\"    height=\"100\"    version=\"1.1\"    id=\"svg1\"    sodipodi:docname=\"github.svg\"    viewBox=\"0 0 100 100\"    inkscape:version=\"1.3.2 (1:1.3.2+202311252150+091e20ef0f)\"    xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"    xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\">   <sodipodi:namedview      id=\"namedview1\"      pagecolor=\"#ffffff\"      bordercolor=\"#999999\"      borderopacity=\"1\"      inkscape:showpageshadow=\"2\"      inkscape:pageopacity=\"0\"      inkscape:pagecheckerboard=\"0\"      inkscape:deskcolor=\"#d1d1d1\"      inkscape:zoom=\"8.0714286\"      inkscape:cx=\"49\"      inkscape:cy=\"48.00885\"      inkscape:window-width=\"1920\"      inkscape:window-height=\"995\"      inkscape:window-x=\"0\"      inkscape:window-y=\"0\"      inkscape:window-maximized=\"1\"      inkscape:current-layer=\"svg1\" />   <defs      id=\"defs1\" />   <path      fill-rule=\"evenodd\"      clip-rule=\"evenodd\"      d=\"M 48.854,0 C 21.839,0 0,22 0,49.217 c 0,21.756 13.993,40.172 33.405,46.69 2.427,0.49 3.316,-1.059 3.316,-2.362 0,-1.141 -0.08,-5.052 -0.08,-9.127 -13.59,2.934 -16.42,-5.867 -16.42,-5.867 -2.184,-5.704 -5.42,-7.17 -5.42,-7.17 -4.448,-3.015 0.324,-3.015 0.324,-3.015 4.934,0.326 7.523,5.052 7.523,5.052 4.367,7.496 11.404,5.378 14.235,4.074 0.404,-3.178 1.699,-5.378 3.074,-6.6 -10.839,-1.141 -22.243,-5.378 -22.243,-24.283 0,-5.378 1.94,-9.778 5.014,-13.2 -0.485,-1.222 -2.184,-6.275 0.486,-13.038 0,0 4.125,-1.304 13.426,5.052 a 46.97,46.97 0 0 1 12.214,-1.63 c 4.125,0 8.33,0.571 12.213,1.63 9.302,-6.356 13.427,-5.052 13.427,-5.052 2.67,6.763 0.97,11.816 0.485,13.038 3.155,3.422 5.015,7.822 5.015,13.2 0,18.905 -11.404,23.06 -22.324,24.283 1.78,1.548 3.316,4.481 3.316,9.126 0,6.6 -0.08,11.897 -0.08,13.526 0,1.304 0.89,2.853 3.316,2.364 C 83.634,89.388 97.627,70.973 97.627,49.217 97.707,22 75.788,0 48.854,0 Z\"      fill=\"#24292f\"      id=\"path1\" /> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown on:focus xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:rgb(96.470588%,78.823531%,8.235294%);fill-opacity:1;\" d=\"M 375.269531 339.230469 C 375.269531 359.25 359.046875 375.488281 339.011719 375.488281 L 36.511719 375.488281 C 16.496094 375.488281 0.253906 359.246094 0.253906 339.230469 L 0.253906 36.730469 C 0.253906 16.710938 16.496094 0.472656 36.511719 0.472656 L 339.011719 0.472656 C 359.046875 0.472656 375.269531 16.710938 375.269531 36.730469 L 375.269531 339.230469 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\" d=\"M 153.082031 263.199219 C 141.003906 263.199219 131.523438 261.621094 124.636719 258.476562 C 117.746094 255.328125 112.808594 251.039062 109.835938 245.585938 C 106.855469 240.144531 105.414062 233.914062 105.5 226.839844 C 105.578125 219.78125 106.554688 212.253906 108.433594 204.257812 L 140.835938 68.777344 L 180.382812 62.65625 L 144.917969 209.621094 C 144.238281 212.679688 143.859375 215.488281 143.773438 218.035156 C 143.683594 220.585938 144.152344 222.84375 145.171875 224.796875 C 146.191406 226.757812 147.933594 228.328125 150.402344 229.515625 C 152.867188 230.710938 156.3125 231.476562 160.738281 231.816406 L 153.082031 263.179688 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\" d=\"M 295.929688 178.757812 C 295.929688 191.171875 293.886719 202.527344 289.804688 212.820312 C 285.722656 223.113281 280.066406 232 272.839844 239.480469 C 265.609375 246.972656 256.933594 252.792969 246.8125 256.957031 C 236.695312 261.121094 225.675781 263.210938 213.777344 263.210938 C 207.992188 263.210938 202.210938 262.695312 196.425781 261.671875 L 184.945312 307.855469 L 147.183594 307.855469 L 189.535156 131.3125 C 196.339844 129.273438 204.121094 127.445312 212.878906 125.828125 C 221.640625 124.210938 231.125 123.40625 241.332031 123.40625 C 250.855469 123.40625 259.066406 124.851562 265.953125 127.742188 C 272.84375 130.632812 278.496094 134.589844 282.921875 139.605469 C 287.339844 144.625 290.613281 150.492188 292.738281 157.210938 C 294.863281 163.925781 295.929688 171.117188 295.929688 178.773438 M 203.3125 231.078125 C 206.203125 231.761719 209.773438 232.097656 214.027344 232.097656 C 220.65625 232.097656 226.695312 230.871094 232.140625 228.398438 C 237.582031 225.9375 242.21875 222.492188 246.046875 218.066406 C 249.867188 213.648438 252.847656 208.335938 254.972656 202.121094 C 257.097656 195.914062 258.160156 189.070312 258.160156 181.582031 C 258.160156 174.273438 256.542969 168.0625 253.316406 162.957031 C 250.082031 157.855469 244.472656 155.304688 236.480469 155.304688 C 231.03125 155.304688 225.929688 155.8125 221.167969 156.835938 L 203.3125 231.078125 \"/>   </g> </svg>"],"names":["err","FeatureSwitchUtils","key","deflt","documentation","defaultValue","QueryParameters","str","b","OsmConnectionFeatureSwitches","__publicField","FeatureSwitchState","layoutToUse","legacyRewrite","intoList","into","v","testingDefaultValue","Utils","Constants","param","urls","UIEventSource","ctx","insert","target","svg","anchor","append","sodipodi_namedview","defs","path","color","$$props","g","path0","path1","path2"],"mappings":"qdACA,OAAO,iBAAiB,OAAQ,SAAY,CACpC,GAAA,EAAE,kBAAmB,WAAY,CACjC,QAAQ,IAAI,mCAAmC,EAC/C,MACJ,CACI,GAAA,CACM,MAAA,UAAU,cAAc,SAAS,oBAAoB,EAC3D,QAAQ,IAAI,wCAAwC,QAC/CA,EAAK,CACF,QAAA,MAAM,qCAAsCA,CAAG,CAC3D,CACJ,CAAC,ECFD,MAAMC,CAAmB,CAIrB,OAAO,WAAWC,EAAaC,EAAgBC,EAA+C,CAC1F,MAAMC,EAAeF,EASrB,OARmBG,EAAgB,kBAC/BJ,EACA,GAAKG,EACLD,EACA,CAAE,YAAa,EAAG,CAAA,EAIJ,KACbG,GAASA,IAAQ,OAAYF,EAAeE,IAAQ,QACrD,CAAC,EACAC,GAAOA,GAAKH,EAAe,OAAY,GAAKG,CAAA,CAErD,CACJ,CAEO,MAAMC,CAA6B,CAGtC,aAAc,CAFEC,EAAA,8BAGZ,KAAK,sBAAwBJ,EAAgB,yBACzC,YACA,GACA,uEAAA,CAER,CACJ,CAEA,MAAqBK,UAA2BF,CAA6B,CA4BlE,YAAYG,EAA4B,CACrC,QAzBMF,EAAA,oBAEAA,EAAA,iCACAA,EAAA,4BACAA,EAAA,yCACAA,EAAA,oCACAA,EAAA,oCACAA,EAAA,sCACAA,EAAA,yCACAA,EAAA,iCACAA,EAAA,iCACAA,EAAA,+BACAA,EAAA,iCACAA,EAAA,sCACAA,EAAA,4BACAA,EAAA,kCACAA,EAAA,oBACAA,EAAA,wBACAA,EAAA,wBACAA,EAAA,uBACAA,EAAA,0BACAA,EAAA,iCACAA,EAAA,kCAIZ,KAAK,YAAcE,EAEnB,MAAMC,EAAmD,CACrD,eAAgB,kBAChB,YAAa,CAAC,YAAa,eAAe,CAAA,EAG9C,UAAWX,KAAOW,EAAe,CACzB,IAAAC,EAAWD,EAAcX,CAAG,EAChC,GAAKI,EAAgB,eAAeJ,CAAG,EAGnC,CAAA,OAAOY,GAAa,WACpBA,EAAW,CAACA,CAAQ,GAExB,UAAWC,KAAQD,EACf,GAAI,CAACR,EAAgB,eAAeS,CAAI,EAAG,CACvC,MAAMC,EAAIV,EAAgB,kBAAkBJ,EAAK,GAAI,EAAE,EAAE,KACzD,QAAQ,IAAI,kCAAmCA,EAAK,MAAOa,EAAM,IAAKC,EAAI,GAAG,EAC7EV,EAAgB,kBAAkBS,EAAM,GAAI,EAAE,EAAE,QAAQC,CAAC,CAC7D,EAER,CAEA,KAAK,yBAA2Bf,EAAmB,WAC/C,mBACAW,GAAA,YAAAA,EAAa,kBAAmB,GAChC,4HAAA,EAGIN,EAAgB,eAAe,cAAc,GAE7C,KAAK,yBAAyB,QAC1BA,EAAgB,yBAAyB,eAAgB,OAAW,QAAQ,EACvE,IAAA,EAKjB,KAAK,oBAAsBL,EAAmB,WAC1C,aACAW,GAAA,YAAAA,EAAa,eAAgB,GAC7B,iCAAA,EAEJ,KAAK,iCAAmCX,EAAmB,WACvD,iBACAW,GAAA,YAAAA,EAAa,iCAAkC,GAC/C,2FAAA,EAGJ,KAAK,oBAAsBX,EAAmB,WAC1C,aACAW,GAAA,YAAAA,EAAa,eAAgB,GAC7B,sHAAA,EAGJ,KAAK,4BAA8BX,EAAmB,WAClD,qBACA,GACA,mDAAA,EAEJ,KAAK,4BAA8BA,EAAmB,WAClD,qBACA,KAAK,yBAAyB,KAC9B,gEAAA,EAEJ,KAAK,8BAAgCA,EAAmB,WACpD,mBACA,GACA,qPAAA,EAEJ,KAAK,iCAAmCA,EAAmB,WACvD,oBACAW,GAAA,YAAAA,EAAa,mBAAoB,GACjC,4FAAA,EAEJ,KAAK,yBAA2BX,EAAmB,WAC/C,mBACAW,GAAA,YAAAA,EAAa,oBAAqB,GAClC,gEAAA,EAEJ,KAAK,yBAA2BX,EAAmB,WAC/C,kBACAW,GAAA,YAAAA,EAAa,oBAAqB,GAClC,yCAAA,EAGJ,KAAK,0BAA4BN,EAAgB,yBAC7C,oBACA,GACA,qFAAA,EAEJ,KAAK,8BAAgCL,EAAmB,WACpD,oBACAW,GAAA,YAAAA,EAAa,yBAA0B,GACvC,2BAAA,EAGJ,KAAK,0BAA4BX,EAAmB,WAChD,aACAW,GAAA,YAAAA,EAAa,qBAAsB,GACnC,6CAAA,EAGJ,IAAIK,EAAsB,GAEtB,CAACC,EAAM,qBACN,SAAS,WAAa,aAAe,SAAS,WAAa,eAEtCD,EAAA,IAG1B,KAAK,uBAAyBX,EAAgB,yBAC1C,OACAW,EACA,yKAAA,EAGJ,KAAK,yBAA2BX,EAAgB,yBAC5C,QACA,GACA,yFAAA,EAGJ,KAAK,yBAA2BA,EAAgB,yBAC5C,cACAM,EAAY,kBACZ,qIAAA,EAGJ,KAAK,YAAcN,EAAgB,kBAC/B,gBACCM,GAAA,YAAAA,EAAa,cAAeO,EAAU,qBAAqB,KAAK,GAAG,EACpE,sGAAA,EACF,KACGC,GAAUA,GAAA,YAAAA,EAAO,MAAM,KACxB,CAAC,EACAC,GAASA,GAAA,YAAAA,EAAM,KAAK,IAAG,EAG5B,KAAK,gBAAkBC,EAAc,MACjChB,EAAgB,kBACZ,kBACA,IAAKM,GAAA,YAAAA,EAAa,iBAClB,8DACJ,CAAA,EAGJ,KAAK,gBAAkBU,EAAc,QACjChB,EAAgB,kBACZ,kBACA,IAAKM,GAAA,YAAAA,EAAa,iBAClB,+CACJ,CAAA,EAGJ,KAAK,eAAiBU,EAAc,MAChChB,EAAgB,kBACZ,iBACA,IAAKM,GAAA,YAAAA,EAAa,gBAClB,+DACJ,CAAA,EAGJ,KAAK,kBAAoBN,EAAgB,kBACrC,aACAM,GAAA,YAAAA,EAAa,oBACb,8CAAA,CAER,CACJ,kCCjPUW,EAAW,CAAA,ujEAApBC,EAAqhEC,EAAAC,EAAAC,CAAA,EAA1iDC,EAA2gBF,EAAAG,CAAA,EAAGD,EAAwBF,EAAAI,CAAA,EAAGF,EAA0/BF,EAAAK,CAAA,sKAArgER,EAAW,CAAA,meAFV,CAAA,MAAAS,EAAQ,SAAQ,EAAAC,qYCEjBV,EAAW,CAAA,0+FAApBC,EAAu4FC,EAAAC,EAAAC,CAAA,EAApsFC,EAA8rFF,EAAAQ,CAAA,EAAxqFN,EAAydM,EAAAC,CAAA,EAAKP,EAAwuBM,EAAAE,CAAA,EAAKR,EAAs9CM,EAAAG,CAAA,sKAAj3Fd,EAAW,CAAA,sMAFV,CAAA,MAAAS,EAAQ,SAAQ,EAAAC"}