var Q=Object.defineProperty;var I=(i,t,e)=>t in i?Q(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e)=>(I(i,typeof t!="symbol"?t+"":t,e),e);import{S as x,i as M,s as P,F as B,l as v,o as _,b as p,q as E,d as G,f as D,r as S,G as L,H as C,I as F,u as A,t as O,g as q,h as z,v as Z,w as k,x as j,y as b}from"./index-0239a758.js";import{U as g}from"./LocalStorageSource-046df3bc.js";import{Q as f}from"./Tr-c2bbc46e.js";import{C as V}from"./Constants-05e0808b.js";import{U as W}from"./Utils-e10b1bf1.js";function H(i){let t,e,n,r,m;const l=i[2].default,h=B(l,i,i[1],null);let w=[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},i[0]],d={};for(let s=0;s<w.length;s+=1)d=v(d,w[s]);return{c(){t=_("svg"),h&&h.c(),e=_("path"),p(e,"fill-rule","evenodd"),p(e,"d","M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"),p(e,"clip-rule","evenodd"),E(t,d)},m(s,u){G(s,t,u),h&&h.m(t,null),D(t,e),n=!0,r||(m=[S(t,"click",i[3]),S(t,"mouseover",i[4]),S(t,"mouseenter",i[5]),S(t,"mouseleave",i[6]),S(t,"keydown",i[7])],r=!0)},p(s,[u]){h&&h.p&&(!n||u&2)&&L(h,l,s,s[1],n?F(l,s[1],u,null):C(s[1]),null),E(t,d=A(w,[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},u&1&&s[0]]))},i(s){n||(O(h,s),n=!0)},o(s){q(h,s),n=!1},d(s){s&&z(t),h&&h.d(s),r=!1,Z(m)}}}function J(i,t,e){const n=[];let r=k(t,n),{$$slots:m={},$$scope:l}=t;function h(c){b.call(this,i,c)}function w(c){b.call(this,i,c)}function d(c){b.call(this,i,c)}function s(c){b.call(this,i,c)}function u(c){b.call(this,i,c)}return i.$$set=c=>{t=v(v({},t),j(c)),e(0,r=k(t,n)),"$$scope"in c&&e(1,l=c.$$scope)},[r,l,m,h,w,d,s,u]}class T extends x{constructor(t){super(),M(this,t,J,H,P,{})}}class o{static initSwitch(t,e,n){const r=e;return f.GetQueryParameter(t,""+r,n,{stackOffset:-1}).sync(l=>l===void 0?r:l!=="false",[],l=>l==r?void 0:""+l)}}class N{constructor(){a(this,"featureSwitchFakeUser");this.featureSwitchFakeUser=f.GetBooleanQueryParameter("fake-user",!1,"If true, 'dryrun' mode is activated and a fake user account is loaded")}}class U extends N{constructor(e){super();a(this,"layoutToUse");a(this,"featureSwitchEnableLogin");a(this,"featureSwitchSearch");a(this,"featureSwitchBackgroundSelection");a(this,"featureSwitchWelcomeMessage");a(this,"featureSwitchCommunityIndex");a(this,"featureSwitchExtraLinkEnabled");a(this,"featureSwitchMoreQuests");a(this,"featureSwitchShareScreen");a(this,"featureSwitchGeolocation");a(this,"featureSwitchIsTesting");a(this,"featureSwitchIsDebugging");a(this,"featureSwitchShowAllQuestions");a(this,"featureSwitchFilter");a(this,"featureSwitchEnableExport");a(this,"overpassUrl");a(this,"overpassTimeout");a(this,"overpassMaxZoom");a(this,"osmApiTileSize");a(this,"backgroundLayerId");this.layoutToUse=e,this.featureSwitchEnableLogin=o.initSwitch("fs-enable-login",(e==null?void 0:e.enableUserBadge)??!0,"Disables/Enables logging in and thus disables editing all together. This effectively puts MapComplete into read-only mode."),f.wasInitialized("fs-userbadge")&&this.featureSwitchEnableLogin.setData(f.GetBooleanQueryParameter("fs-userbadge",void 0,"Legacy").data),this.featureSwitchSearch=o.initSwitch("fs-search",(e==null?void 0:e.enableSearch)??!0,"Disables/Enables the search bar"),this.featureSwitchBackgroundSelection=o.initSwitch("fs-background",(e==null?void 0:e.enableBackgroundLayerSelection)??!0,"Disables/Enables the background layer control"),this.featureSwitchFilter=o.initSwitch("fs-filter",(e==null?void 0:e.enableLayers)??!0,"Disables/Enables the filter view"),this.featureSwitchWelcomeMessage=o.initSwitch("fs-welcome-message",!0,"Disables/enables the help menu or welcome message"),this.featureSwitchCommunityIndex=o.initSwitch("fs-community-index",this.featureSwitchEnableLogin.data,"Disables/enables the button to get in touch with the community"),this.featureSwitchExtraLinkEnabled=o.initSwitch("fs-iframe-popout",!0,"Disables/Enables the extraLink button. By default, if in iframe mode and the welcome message is hidden, a popout button to the full mapcomplete instance is shown instead (unless disabled with this switch or another extraLink button is enabled)"),this.featureSwitchMoreQuests=o.initSwitch("fs-more-quests",(e==null?void 0:e.enableMoreQuests)??!0,"Disables/Enables the 'More Quests'-tab in the welcome message"),this.featureSwitchShareScreen=o.initSwitch("fs-share-screen",(e==null?void 0:e.enableShareScreen)??!0,"Disables/Enables the 'Share-screen'-tab in the welcome message"),this.featureSwitchGeolocation=o.initSwitch("fs-geolocation",(e==null?void 0:e.enableGeolocation)??!0,"Disables/Enables the geolocation button"),this.featureSwitchShowAllQuestions=o.initSwitch("fs-all-questions",(e==null?void 0:e.enableShowAllQuestions)??!1,"Always show all questions"),this.featureSwitchEnableExport=o.initSwitch("fs-export",(e==null?void 0:e.enableExportButton)??!0,"Enable the export as GeoJSON and CSV button");let n=!1;!W.runningFromConsole&&(location.hostname==="localhost"||location.hostname==="127.0.0.1")&&(n=!0),this.featureSwitchIsTesting=f.GetBooleanQueryParameter("test",n,"If true, 'dryrun' mode is activated. The app will behave as normal, except that changes to OSM will be printed onto the console instead of actually uploaded to osm.org"),this.featureSwitchIsDebugging=f.GetBooleanQueryParameter("debug",!1,"If true, shows some extra debugging help such as all the available tags on every object"),this.overpassUrl=f.GetQueryParameter("overpassUrl",((e==null?void 0:e.overpassUrl)??V.defaultOverpassUrls).join(","),"Point mapcomplete to a different overpass-instance. Example: https://overpass-api.de/api/interpreter").sync(r=>r==null?void 0:r.split(","),[],r=>r==null?void 0:r.join(",")),this.overpassTimeout=g.asInt(f.GetQueryParameter("overpassTimeout",""+(e==null?void 0:e.overpassTimeout),"Set a different timeout (in seconds) for queries in overpass")),this.overpassMaxZoom=g.asFloat(f.GetQueryParameter("overpassMaxZoom",""+(e==null?void 0:e.overpassMaxZoom)," point to switch between OSM-api and overpass")),this.osmApiTileSize=g.asInt(f.GetQueryParameter("osmApiTileSize",""+(e==null?void 0:e.osmApiTileSize),"Tilesize when the OSM-API is used to fetch data within a BBOX")),this.backgroundLayerId=f.GetQueryParameter("background",e==null?void 0:e.defaultBackgroundId,"The id of the background layer to start with")}}export{U as F,N as O,T as S};
