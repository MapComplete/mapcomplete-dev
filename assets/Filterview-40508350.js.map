{"version":3,"file":"Filterview-40508350.js","sources":["../../src/UI/BigComponents/FilterviewWithFields.svelte","../../src/UI/BigComponents/Filterview.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import FilteredLayer from \"../../Models/FilteredLayer\"\n  import type { FilterConfigOption } from \"../../Models/ThemeConfig/FilterConfig\"\n  import Locale from \"../i18n/Locale\"\n  import ValidatedInput from \"../InputElement/ValidatedInput.svelte\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import { onDestroy } from \"svelte\"\n  import { Utils } from \"../../Utils\"\n\n  export let filteredLayer: FilteredLayer\n  export let option: FilterConfigOption\n  export let id: string\n  let parts: ({ message: string } | { subs: string })[]\n  let language = Locale.language\n  $: {\n    const template = option.question.textFor($language)\n    parts = Utils.splitIntoSubstitutionParts(template)\n  }\n  let fieldValues: Record<string, UIEventSource<string>> = {}\n  let fieldTypes: Record<string, string> = {}\n  let appliedFilter = <UIEventSource<string>>filteredLayer.appliedFilters.get(id)\n  let initialState: Record<string, string> = JSON.parse(appliedFilter?.data ?? \"{}\")\n\n  function setFields() {\n    const properties: Record<string, string> = {}\n    for (const key in fieldValues) {\n      const v = fieldValues[key].data\n      if (v === undefined) {\n        properties[key] = undefined\n      } else {\n        properties[key] = v\n      }\n    }\n    appliedFilter?.setData(FilteredLayer.fieldsToString(properties))\n  }\n\n  for (const field of option.fields) {\n    // A bit of cheating: the 'parts' will have '}' suffixed for fields\n    const src = new UIEventSource<string>(initialState[field.name] ?? \"\")\n    fieldTypes[field.name] = field.type\n    fieldValues[field.name] = src\n    onDestroy(\n      src.stabilized(200).addCallback(() => {\n        setFields()\n      })\n    )\n  }\n</script>\n\n<div>\n  {#each parts as part, i}\n    {#if part.subs}\n      <!-- This is a field! -->\n      <span class=\"mx-1\">\n        <ValidatedInput value={fieldValues[part.subs]} type={fieldTypes[part.subs]} />\n      </span>\n    {:else}\n      {part.message}\n    {/if}\n  {/each}\n</div>\n","<script lang=\"ts\">\n  /**\n   * The FilterView shows the various options to enable/disable a single layer or to only show a subset of the data.\n   */\n  import type FilteredLayer from \"../../Models/FilteredLayer\"\n  import LayerConfig from \"../../Models/ThemeConfig/LayerConfig\"\n  import ToSvelte from \"../Base/ToSvelte.svelte\"\n  import Checkbox from \"../Base/Checkbox.svelte\"\n  import FilterConfig from \"../../Models/ThemeConfig/FilterConfig\"\n  import If from \"../Base/If.svelte\"\n  import Dropdown from \"../Base/Dropdown.svelte\"\n  import { onDestroy } from \"svelte\"\n  import { ImmutableStore, Store, UIEventSource } from \"../../Logic/UIEventSource\"\n  import FilterviewWithFields from \"./FilterviewWithFields.svelte\"\n  import Tr from \"../Base/Tr.svelte\"\n  import Translations from \"../i18n/Translations\"\n\n  export let filteredLayer: FilteredLayer\n  export let highlightedLayer: Store<string | undefined> = new ImmutableStore(undefined)\n  export let zoomlevel: Store<number> = new ImmutableStore(22)\n  let layer: LayerConfig = filteredLayer.layerDef\n  let isDisplayed: UIEventSource<boolean> = filteredLayer.isDisplayed\n\n  /**\n   * Gets a UIEventSource as boolean for the given option, to be used with a checkbox\n   */\n  function getBooleanStateFor(option: FilterConfig): UIEventSource<boolean> {\n    const state = filteredLayer.appliedFilters.get(option.id)\n    return state.sync(\n      (f) => f === 0,\n      [],\n      (b) => (b ? 0 : undefined)\n    )\n  }\n\n  /**\n   * Gets a UIEventSource as number for the given option, to be used with a dropdown or radiobutton\n   */\n  function getStateFor(option: FilterConfig): UIEventSource<number | string> {\n    return filteredLayer.appliedFilters.get(option.id)\n  }\n\n  let mainElem: HTMLElement\n  $: onDestroy(\n    highlightedLayer.addCallbackAndRun((highlightedLayer) => {\n      if (highlightedLayer === filteredLayer.layerDef.id) {\n        mainElem?.classList?.add(\"glowing-shadow\")\n      } else {\n        mainElem?.classList?.remove(\"glowing-shadow\")\n      }\n    })\n  )\n</script>\n\n{#if filteredLayer.layerDef.name}\n  <div bind:this={mainElem} class=\"mb-1.5\">\n    <Checkbox selected={isDisplayed}>\n      <If condition={filteredLayer.isDisplayed}>\n        <ToSvelte\n          construct={() => layer.defaultIcon()?.SetClass(\"block h-6 w-6 no-image-background\")}\n        />\n        <ToSvelte\n          slot=\"else\"\n          construct={() =>\n            layer.defaultIcon()?.SetClass(\"block h-6 w-6 no-image-background opacity-50\")}\n        />\n      </If>\n\n      {filteredLayer.layerDef.name}\n\n      {#if $zoomlevel < layer.minzoom}\n        <span class=\"alert\">\n          <Tr t={Translations.t.general.layerSelection.zoomInToSeeThisLayer} />\n        </span>\n      {/if}\n    </Checkbox>\n\n    {#if $isDisplayed && filteredLayer.layerDef.filters?.length > 0}\n      <div id=\"subfilters\" class=\"ml-4 flex flex-col gap-y-1\">\n        {#each filteredLayer.layerDef.filters as filter}\n          <div>\n            <!-- There are three (and a half) modes of filters: a single checkbox, a radio button/dropdown or with searchable fields -->\n            {#if filter.options.length === 1 && filter.options[0].fields.length === 0}\n              <Checkbox selected={getBooleanStateFor(filter)}>\n                {filter.options[0].question}\n              </Checkbox>\n            {/if}\n\n            {#if filter.options.length === 1 && filter.options[0].fields.length > 0}\n              <FilterviewWithFields id={filter.id} {filteredLayer} option={filter.options[0]} />\n            {/if}\n\n            {#if filter.options.length > 1}\n              <Dropdown value={getStateFor(filter)}>\n                {#each filter.options as option, i}\n                  <option value={i}>\n                    {option.question}\n                  </option>\n                {/each}\n              </Dropdown>\n            {/if}\n          </div>\n        {/each}\n      </div>\n    {/if}\n  </div>\n{/if}\n"],"names":["t_value","ctx","dirty","set_data","t","insert","target","span","anchor","div","i","each_blocks","filteredLayer","$$props","option","id","parts","language","Locale","fieldValues","fieldTypes","appliedFilter","initialState","setFields","properties","key","v","FilteredLayer","field","src","UIEventSource","onDestroy","template","$language","$$invalidate","Utils","_a","create_if_block_1","Translations","create_if_block_5","if_1_changes","t1","t1_value","checkbox_changes","filterviewwithfields_changes","dropdown_changes","t0_value","t0","each_value_1","if_block0","create_if_block_4","if_block1","create_if_block_3","if_block2","create_if_block_2","create_if_block","highlightedLayer","ImmutableStore","zoomlevel","layer","isDisplayed","getBooleanStateFor","f","b","getStateFor","mainElem","func","func_1","$$value","_b"],"mappings":"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"}