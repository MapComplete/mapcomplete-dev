{"version":3,"file":"index-d8df05ab.js","sources":["../../node_modules/pbf/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n"],"names":["pbf","Pbf","ieee754","require$$0","buf","SHIFT_LEFT_32","SHIFT_RIGHT_32","TEXT_DECODER_MIN_LENGTH","utf8TextDecoder","readField","result","end","val","tag","startPos","readUInt32","readInt32","isSigned","b","readVarintRemainder","num","pos","readUtf8TextDecoder","readUtf8","buffer","arr","readPackedEnd","type","min","length","writeInt32","writeBigVarint","str","writeUtf8","len","makeRoomForExtraLength","i","fn","obj","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","l","s","p","h","toNum","low","high","writeBigVarintLow","writeBigVarintHigh","lsb","extraLen","b0","c","bytesPerSequence","b1","b2","b3","lead"],"mappings":"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","x_google_ignoreList":[0]}