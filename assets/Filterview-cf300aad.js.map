{"version":3,"file":"Filterview-cf300aad.js","sources":["../../src/Models/ThemeConfig/ExtraLinkConfig.ts","../../src/Models/ThemeConfig/LayoutConfig.ts","../../src/UI/Base/Checkbox.svelte","../../src/UI/Base/Dropdown.svelte","../../src/UI/BigComponents/FilterviewWithFields.svelte","../../src/UI/BigComponents/Filterview.svelte"],"sourcesContent":["import ExtraLinkConfigJson from \"./Json/ExtraLinkConfigJson\"\nimport { Translation } from \"../../UI/i18n/Translation\"\nimport Translations from \"../../UI/i18n/Translations\"\n\nexport default class ExtraLinkConfig {\n    public readonly icon?: string\n    public readonly text?: Translation\n    public readonly href: string\n    public readonly newTab?: false | boolean\n    public readonly requirements?: Set<\n        \"iframe\" | \"no-iframe\" | \"welcome-message\" | \"no-welcome-message\"\n    >\n\n    constructor(configJson: ExtraLinkConfigJson, context) {\n        this.icon = configJson.icon\n        this.text = Translations.T(configJson.text, \"themes:\" + context + \".text\")\n        this.href = configJson.href\n        this.newTab = configJson.newTab\n        this.requirements = new Set(configJson.requirements)\n\n        for (let requirement of configJson.requirements) {\n            if (this.requirements.has(<any>(\"no-\" + requirement))) {\n                throw (\n                    \"Conflicting requirements found for \" +\n                    context +\n                    \".extraLink: both '\" +\n                    requirement +\n                    \"' and 'no-\" +\n                    requirement +\n                    \"' found\"\n                )\n            }\n        }\n\n        if (this.icon === undefined && this.text === undefined) {\n            throw (\n                \"At \" +\n                context +\n                \".extraLink: define at least an icon or a text to show. Both are undefined, this is not allowed\"\n            )\n        }\n    }\n}\n","import { Translation } from \"../../UI/i18n/Translation\"\nimport { LayoutConfigJson } from \"./Json/LayoutConfigJson\"\nimport LayerConfig from \"./LayerConfig\"\nimport { LayerConfigJson } from \"./Json/LayerConfigJson\"\nimport Constants from \"../Constants\"\nimport { ExtractImages } from \"./Conversion/FixImages\"\nimport ExtraLinkConfig from \"./ExtraLinkConfig\"\nimport { Utils } from \"../../Utils\"\nimport LanguageUtils from \"../../Utils/LanguageUtils\"\n\nimport { RasterLayerProperties } from \"../RasterLayerProperties\"\n\n/**\n * Minimal information about a theme\n **/\nexport class LayoutInformation {\n    id: string\n    icon: string\n    title: any\n    shortDescription: any\n    definition?: any\n    mustHaveLanguage?: boolean\n    hideFromOverview?: boolean\n    keywords?: any[]\n}\n\nexport default class LayoutConfig implements LayoutInformation {\n    public static readonly defaultSocialImage = \"assets/SocialImage.png\"\n    public readonly id: string\n    public readonly credits?: string\n    public readonly language: string[]\n    public readonly title: Translation\n    public readonly shortDescription: Translation\n    public readonly description: Translation\n    public readonly descriptionTail?: Translation\n    public readonly icon: string\n    public readonly socialImage?: string\n    public readonly startZoom: number\n    public readonly startLat: number\n    public readonly startLon: number\n    public widenFactor: number\n    public defaultBackgroundId?: string\n    public layers: LayerConfig[]\n    public tileLayerSources: (RasterLayerProperties & { defaultState?: true | boolean })[]\n    public readonly hideFromOverview: boolean\n    public lockLocation: boolean | [[number, number], [number, number]]\n    public readonly enableUserBadge: boolean\n    public readonly enableShareScreen: boolean\n    public readonly enableMoreQuests: boolean\n    public readonly enableAddNewPoints: boolean\n    public readonly enableLayers: boolean\n    public readonly enableSearch: boolean\n    public readonly enableGeolocation: boolean\n    public readonly enableBackgroundLayerSelection: boolean\n    public readonly enableShowAllQuestions: boolean\n    public readonly enableExportButton: boolean\n    public readonly enablePdfDownload: boolean\n\n    public readonly customCss?: string\n\n    public readonly overpassUrl: string[]\n    public overpassTimeout: number\n    public readonly overpassMaxZoom: number\n    public readonly osmApiTileSize: number\n    public readonly official: boolean\n\n    public readonly usedImages: string[]\n    public readonly extraLink?: ExtraLinkConfig\n\n    public readonly definedAtUrl?: string\n    public readonly definitionRaw?: string\n\n    private readonly layersDict: Map<string, LayerConfig>\n\n    constructor(\n        json: LayoutConfigJson,\n        official = true,\n        options?: {\n            definedAtUrl?: string\n            definitionRaw?: string\n        }\n    ) {\n        this.official = official\n        this.id = json.id\n        this.definedAtUrl = options?.definedAtUrl\n        this.definitionRaw = options?.definitionRaw\n        if (official) {\n            if (json.id.toLowerCase() !== json.id) {\n                throw \"The id of a theme should be lowercase: \" + json.id\n            }\n            if (json.id.match(/[a-z0-9-_]/) == null) {\n                throw \"The id of a theme should match [a-z0-9-_]*: \" + json.id\n            }\n        }\n        const context = this.id\n        this.credits = json.credits\n        this.language = json.mustHaveLanguage ?? Object.keys(json.title)\n        this.usedImages = Array.from(\n            new ExtractImages(official, undefined)\n                .convertStrict(\n                    json,\n                    \"while extracting the images of \" + json.id + \" \" + context ?? \"\"\n                )\n                .map((i) => i.path)\n        ).sort()\n        {\n            if (typeof json.title === \"string\") {\n                throw `The title of a theme should always be a translation, as it sets the corresponding languages (${context}.title). The themenID is ${\n                    this.id\n                }; the offending object is ${JSON.stringify(\n                    json.title\n                )} which is a ${typeof json.title})`\n            }\n            if (this.language.length == 0) {\n                throw `No languages defined. Define at least one language. (${context}.languages)`\n            }\n            if (json.title === undefined) {\n                throw \"Title not defined in \" + this.id\n            }\n            if (json.description === undefined) {\n                throw \"Description not defined in \" + this.id\n            }\n            if (json.widenFactor <= 0) {\n                throw \"Widenfactor too small, shoud be > 0\"\n            }\n            if (json.widenFactor > 20) {\n                throw (\n                    \"Widenfactor is very big, use a value between 1 and 5 (current value is \" +\n                    json.widenFactor +\n                    \") at \" +\n                    context\n                )\n            }\n            if (json[\"hideInOverview\"]) {\n                throw (\n                    \"The json for \" +\n                    this.id +\n                    \" contains a 'hideInOverview'. Did you mean hideFromOverview instead?\"\n                )\n            }\n            if (json.layers === undefined) {\n                throw \"Got undefined layers for \" + json.id + \" at \" + context\n            }\n        }\n        this.title = new Translation(json.title, \"themes:\" + context + \".title\")\n        this.description = new Translation(json.description, \"themes:\" + context + \".description\")\n        this.shortDescription =\n            json.shortDescription === undefined\n                ? this.description.FirstSentence()\n                : new Translation(json.shortDescription, \"themes:\" + context + \".shortdescription\")\n        this.descriptionTail =\n            json.descriptionTail === undefined\n                ? undefined\n                : new Translation(json.descriptionTail, \"themes:\" + context + \".descriptionTail\")\n        this.icon = json.icon\n        this.socialImage = json.socialImage ?? LayoutConfig.defaultSocialImage\n        if (this.socialImage === \"\") {\n            if (official) {\n                throw \"Theme \" + json.id + \" has empty string as social image\"\n            }\n        }\n        this.startZoom = json.startZoom\n        this.startLat = json.startLat\n        this.startLon = json.startLon\n        this.widenFactor = json.widenFactor ?? 1.5\n\n        this.defaultBackgroundId = json.defaultBackgroundId\n        this.tileLayerSources = json.tileLayerSources ?? []\n        // At this point, layers should be expanded and validated either by the generateScript or the LegacyJsonConvert\n        this.layers = json.layers.map(\n            (lyrJson) =>\n                new LayerConfig(\n                    <LayerConfigJson>lyrJson,\n                    json.id + \".layers.\" + lyrJson[\"id\"],\n                    official\n                )\n        )\n\n        this.extraLink = new ExtraLinkConfig(\n            json.extraLink ?? {\n                icon: \"./assets/svg/pop-out.svg\",\n                href: \"https://{basepath}/{theme}.html?lat={lat}&lon={lon}&z={zoom}&language={language}\",\n                newTab: true,\n                requirements: [\"iframe\", \"no-welcome-message\"],\n            },\n            context + \".extraLink\"\n        )\n\n        this.hideFromOverview = json.hideFromOverview ?? false\n        this.lockLocation = <[[number, number], [number, number]]>json.lockLocation ?? undefined\n        this.enableUserBadge = json.enableUserBadge ?? true\n        this.enableShareScreen = json.enableShareScreen ?? true\n        this.enableMoreQuests = json.enableMoreQuests ?? true\n        this.enableLayers = json.enableLayers ?? true\n        this.enableSearch = json.enableSearch ?? true\n        this.enableGeolocation = json.enableGeolocation ?? true\n        this.enableAddNewPoints = json.enableAddNewPoints ?? true\n        this.enableBackgroundLayerSelection = json.enableBackgroundLayerSelection ?? true\n        this.enableShowAllQuestions = json.enableShowAllQuestions ?? false\n        this.enableExportButton = json.enableDownload ?? true\n        this.enablePdfDownload = json.enablePdfDownload ?? true\n        this.customCss = json.customCss\n        this.overpassUrl = Constants.defaultOverpassUrls\n        if (json.overpassUrl !== undefined) {\n            if (typeof json.overpassUrl === \"string\") {\n                this.overpassUrl = [json.overpassUrl]\n            } else {\n                this.overpassUrl = json.overpassUrl\n            }\n        }\n        this.overpassTimeout = json.overpassTimeout ?? 30\n        this.overpassMaxZoom = json.overpassMaxZoom ?? 16\n        this.osmApiTileSize = json.osmApiTileSize ?? this.overpassMaxZoom + 1\n\n        this.layersDict = new Map<string, LayerConfig>()\n        for (const layer of this.layers) {\n            this.layersDict.set(layer.id, layer)\n        }\n    }\n\n    public CustomCodeSnippets(): string[] {\n        if (this.official) {\n            return []\n        }\n        const msg =\n            \"<br/><b>This layout uses <span class='alert'>custom javascript</span>, loaded for the wide internet. The code is printed below, please report suspicious code on the issue tracker of MapComplete:</b><br/>\"\n        const custom = []\n        for (const layer of this.layers) {\n            custom.push(...layer.CustomCodeSnippets().map((code) => code + \"<br />\"))\n        }\n        if (custom.length === 0) {\n            return custom\n        }\n        custom.splice(0, 0, msg)\n        return custom\n    }\n\n    public getLayer(id: string) {\n        return this.layersDict.get(id)\n    }\n\n    public isLeftRightSensitive() {\n        return this.layers.some((l) => l.isLeftRightSensitive())\n    }\n\n    public missingTranslations(): {\n        untranslated: Map<string, string[]>\n        total: number\n    } {\n        const layout = this\n        let total = 0\n        const untranslated = new Map<string, string[]>()\n\n        Utils.WalkObject(\n            layout,\n            (o) => {\n                const translation = <Translation>(<any>o)\n                if (translation.translations[\"*\"] !== undefined) {\n                    return\n                }\n                if (translation.context === undefined || translation.context.indexOf(\":\") < 0) {\n                    // no source given - lets ignore\n                    return\n                }\n\n                total++\n                LanguageUtils.usedLanguagesSorted.forEach((ln) => {\n                    const trans = translation.translations\n                    if (trans[\"*\"] !== undefined) {\n                        return\n                    }\n                    if (translation.context.indexOf(\":\") < 0) {\n                        return\n                    }\n                    if (trans[ln] === undefined) {\n                        if (!untranslated.has(ln)) {\n                            untranslated.set(ln, [])\n                        }\n                        untranslated\n                            .get(ln)\n                            .push(\n                                translation.context.replace(\n                                    /^note_import_[a-zA-Z0-9_]*/,\n                                    \"note_import\"\n                                )\n                            )\n                    }\n                })\n            },\n            (o) => {\n                if (o === undefined || o === null) {\n                    return false\n                }\n                return o instanceof Translation\n            }\n        )\n\n        return { untranslated, total }\n    }\n    public getMatchingLayer(tags: Record<string, string>): LayerConfig | undefined {\n        if (tags === undefined) {\n            return undefined\n        }\n        for (const layer of this.layers) {\n            if (!layer.source) {\n                continue\n            }\n            if (layer.source.osmTags.matchesProperties(tags)) {\n                return layer\n            }\n        }\n        return undefined\n    }\n}\n","<script lang=\"ts\">\n  import { UIEventSource } from \"../../Logic/UIEventSource.js\"\n\n  /**\n   * For some stupid reason, it is very hard to bind inputs\n   */\n  export let selected: UIEventSource<boolean>\n  let _c: boolean = selected.data ?? true\n  $: selected.setData(_c)\n</script>\n\n<input type=\"checkbox\" bind:checked={_c} />\n","<script lang=\"ts\">\n  import { UIEventSource } from \"../../Logic/UIEventSource.js\"\n\n  /**\n   * For some stupid reason, it is very hard to bind inputs\n   */\n  export let value: UIEventSource<number>\n  let i: number = value.data\n  $: value.setData(i)\n</script>\n\n<select bind:value={i}>\n  <slot />\n</select>\n","<script lang=\"ts\">\n  import FilteredLayer from \"../../Models/FilteredLayer\"\n  import type { FilterConfigOption } from \"../../Models/ThemeConfig/FilterConfig\"\n  import Locale from \"../i18n/Locale\"\n  import ValidatedInput from \"../InputElement/ValidatedInput.svelte\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import { onDestroy } from \"svelte\"\n  import { Utils } from \"../../Utils\"\n\n  export let filteredLayer: FilteredLayer\n  export let option: FilterConfigOption\n  export let id: string\n  let parts: ({ message: string } | { subs: string })[]\n  let language = Locale.language\n  $: {\n    const template = option.question.textFor($language)\n    parts = Utils.splitIntoSubstitutionParts(template)\n  }\n  let fieldValues: Record<string, UIEventSource<string>> = {}\n  let fieldTypes: Record<string, string> = {}\n  let appliedFilter = <UIEventSource<string>>filteredLayer.appliedFilters.get(id)\n  let initialState: Record<string, string> = JSON.parse(appliedFilter?.data ?? \"{}\")\n\n  function setFields() {\n    const properties: Record<string, string> = {}\n    for (const key in fieldValues) {\n      const v = fieldValues[key].data\n      if (v === undefined) {\n        properties[key] = undefined\n      } else {\n        properties[key] = v\n      }\n    }\n    appliedFilter?.setData(FilteredLayer.fieldsToString(properties))\n  }\n\n  for (const field of option.fields) {\n    // A bit of cheating: the 'parts' will have '}' suffixed for fields\n    const src = new UIEventSource<string>(initialState[field.name] ?? \"\")\n    fieldTypes[field.name] = field.type\n    fieldValues[field.name] = src\n    onDestroy(\n      src.stabilized(200).addCallback(() => {\n        setFields()\n      })\n    )\n  }\n</script>\n\n<div>\n  {#each parts as part, i}\n    {#if part.subs}\n      <!-- This is a field! -->\n      <span class=\"mx-1\">\n        <ValidatedInput value={fieldValues[part.subs]} type={fieldTypes[part.subs]} />\n      </span>\n    {:else}\n      {part.message}\n    {/if}\n  {/each}\n</div>\n","<script lang=\"ts\">\n  /**\n   * The FilterView shows the various options to enable/disable a single layer or to only show a subset of the data.\n   */\n  import type FilteredLayer from \"../../Models/FilteredLayer\"\n  import LayerConfig from \"../../Models/ThemeConfig/LayerConfig\"\n  import ToSvelte from \"../Base/ToSvelte.svelte\"\n  import Checkbox from \"../Base/Checkbox.svelte\"\n  import FilterConfig from \"../../Models/ThemeConfig/FilterConfig\"\n  import type { Writable } from \"svelte/store\"\n  import If from \"../Base/If.svelte\"\n  import Dropdown from \"../Base/Dropdown.svelte\"\n  import { onDestroy } from \"svelte\"\n  import { ImmutableStore, Store } from \"../../Logic/UIEventSource\"\n  import FilterviewWithFields from \"./FilterviewWithFields.svelte\"\n  import Tr from \"../Base/Tr.svelte\"\n  import Translations from \"../i18n/Translations\"\n\n  export let filteredLayer: FilteredLayer\n  export let highlightedLayer: Store<string | undefined> = new ImmutableStore(undefined)\n  export let zoomlevel: Store<number> = new ImmutableStore(22)\n  let layer: LayerConfig = filteredLayer.layerDef\n  let isDisplayed: Store<boolean> = filteredLayer.isDisplayed\n\n  /**\n   * Gets a UIEventSource as boolean for the given option, to be used with a checkbox\n   */\n  function getBooleanStateFor(option: FilterConfig): Writable<boolean> {\n    const state = filteredLayer.appliedFilters.get(option.id)\n    return state.sync(\n      (f) => f === 0,\n      [],\n      (b) => (b ? 0 : undefined)\n    )\n  }\n\n  /**\n   * Gets a UIEventSource as number for the given option, to be used with a dropdown or radiobutton\n   */\n  function getStateFor(option: FilterConfig): Writable<number> {\n    return filteredLayer.appliedFilters.get(option.id)\n  }\n\n  let mainElem: HTMLElement\n  $: onDestroy(\n    highlightedLayer.addCallbackAndRun((highlightedLayer) => {\n      if (highlightedLayer === filteredLayer.layerDef.id) {\n        mainElem?.classList?.add(\"glowing-shadow\")\n      } else {\n        mainElem?.classList?.remove(\"glowing-shadow\")\n      }\n    })\n  )\n</script>\n\n{#if filteredLayer.layerDef.name}\n  <div bind:this={mainElem} class=\"mb-1.5\">\n    <label class=\"no-image-background flex gap-1\">\n      <Checkbox selected={isDisplayed} />\n      <If condition={filteredLayer.isDisplayed}>\n        <ToSvelte\n          construct={() => layer.defaultIcon()?.SetClass(\"block h-6 w-6 no-image-background\")}\n        />\n        <ToSvelte\n          slot=\"else\"\n          construct={() =>\n            layer.defaultIcon()?.SetClass(\"block h-6 w-6 no-image-background opacity-50\")}\n        />\n      </If>\n\n      {filteredLayer.layerDef.name}\n\n      {#if $zoomlevel < layer.minzoom}\n        <span class=\"alert\">\n          <Tr t={Translations.t.general.layerSelection.zoomInToSeeThisLayer} />\n        </span>\n      {/if}\n    </label>\n\n    {#if $isDisplayed && filteredLayer.layerDef.filters?.length > 0}\n      <div id=\"subfilters\" class=\"ml-4 flex flex-col gap-y-1\">\n        {#each filteredLayer.layerDef.filters as filter}\n          <div>\n            <!-- There are three (and a half) modes of filters: a single checkbox, a radio button/dropdown or with searchable fields -->\n            {#if filter.options.length === 1 && filter.options[0].fields.length === 0}\n              <label>\n                <Checkbox selected={getBooleanStateFor(filter)} />\n                {filter.options[0].question}\n              </label>\n            {/if}\n\n            {#if filter.options.length === 1 && filter.options[0].fields.length > 0}\n              <FilterviewWithFields id={filter.id} {filteredLayer} option={filter.options[0]} />\n            {/if}\n\n            {#if filter.options.length > 1}\n              <Dropdown value={getStateFor(filter)}>\n                {#each filter.options as option, i}\n                  <option value={i}>\n                    {option.question}\n                  </option>\n                {/each}\n              </Dropdown>\n            {/if}\n          </div>\n        {/each}\n      </div>\n    {/if}\n  </div>\n{/if}\n"],"names":["ExtraLinkConfig","configJson","context","__publicField","Translations","requirement","_LayoutConfig","json","official","options","ExtractImages","i","Translation","lyrJson","LayerConfig","Constants","layer","msg","custom","code","id","l","layout","total","untranslated","Utils","o","translation","LanguageUtils","ln","trans","tags","LayoutConfig","insert","target","input","anchor","ctx","selected","$$props","_c","add_render_callback","select","value","select_value","t_value","dirty","set_data","t","span","div","each_blocks","filteredLayer","option","parts","language","Locale","fieldValues","fieldTypes","appliedFilter","initialState","setFields","properties","key","v","FilteredLayer","field","src","UIEventSource","onDestroy","template","$language","$$invalidate","create_if_block_5","_a","create_if_block_1","append","label","if_1_changes","t2","t2_value","t1_value","checkbox_changes","current","t1","filterviewwithfields_changes","dropdown_changes","t0_value","t0","each_value_1","if_block0","create_if_block_4","if_block1","create_if_block_3","if_block2","create_if_block_2","create_if_block","highlightedLayer","ImmutableStore","zoomlevel","isDisplayed","getBooleanStateFor","f","b","getStateFor","mainElem","func","func_1","$$value","_b"],"mappings":"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"}