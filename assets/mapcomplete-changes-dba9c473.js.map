{"version":3,"file":"mapcomplete-changes-dba9c473.js","sources":["../../src/assets/generated/metatagging/mapcomplete-changes.ts","../../index_mapcomplete-changes.ts"],"sourcesContent":["import {Feature} from 'geojson'\nimport { ExtraFuncType } from \"../../../Logic/ExtraFunctions\";\nimport { Utils } from \"../../../Utils\"\nexport class ThemeMetaTagging {\n   public static readonly themeName = \"mapcomplete-changes\"\n\n   public metaTaggging_for_mapcomplete_changes(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_current_view(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n      Utils.AddLazyProperty(feat.properties, '_embedded_cs', () => overlapWith(feat)('mapcomplete-changes').map(f => f.feat.properties) ) \n      Utils.AddLazyProperty(feat.properties, '_embedded_cs:themes', () => feat.get('_embedded_cs').map(cs => cs.theme) ) \n      Utils.AddLazyProperty(feat.properties, '_embedded_cs:users', () => feat.get('_embedded_cs').map(cs => cs['_last_edit:contributor']) ) \n   }\n   public metaTaggging_for_selected_element(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_gps_location(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_gps_location_history(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_home_location(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_gps_track(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_range(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_last_click(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n}","import layout from \"./src/assets/generated/themes/mapcomplete-changes.json\"\nimport { ThemeMetaTagging } from \"./src/assets/generated/metatagging/mapcomplete-changes\"\nimport ThemeViewState from \"./src/Models/ThemeViewState\"\nimport SvelteUIElement from \"./src/UI/Base/SvelteUIElement\"\nimport ThemeViewGUI from \"./src/UI/ThemeViewGUI.svelte\"\nimport LayoutConfig from \"./src/Models/ThemeConfig/LayoutConfig\";\nimport MetaTagging from \"./src/Logic/MetaTagging\";\nimport { FixedUiElement } from \"./src/UI/Base/FixedUiElement\";\n\nfunction webgl_support() {\n    try {\n        var canvas = document.createElement(\"canvas\")\n        return (\n            !!window.WebGLRenderingContext &&\n            (canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\"))\n        )\n    } catch (e) {\n        return false\n    }\n}\n\nif (!webgl_support()) {\n     new FixedUiElement(\"WebGL is not supported or not enabled. This is essential for MapComplete to function, please enable this.\").SetClass(\"block alert\").AttachTo(\"maindiv\")\n}else{\n    MetaTagging.setThemeMetatagging(new ThemeMetaTagging())\n    const state = new ThemeViewState(new LayoutConfig(<any> layout))\n    const main = new SvelteUIElement(ThemeViewGUI, { state })\n    main.AttachTo(\"maindiv\")\n}    \n"],"names":["ThemeMetaTagging","feat","helperFunctions","distanceTo","overlapWith","enclosingFeatures","intersectionsWith","closest","closestn","get","Utils","f","cs","__publicField","webgl_support","canvas","FixedUiElement","MetaTagging","state","ThemeViewState","LayoutConfig","layout","SvelteUIElement","ThemeViewGUI"],"mappings":"08BAGO,MAAMA,CAAiB,CAGpB,qCAAqCC,EAAeC,EAAwE,CAEnI,CACO,8BAA8BD,EAAeC,EAAwE,CACnH,KAAA,CAAC,WAAAC,EAAY,YAAAC,EAAa,kBAAAC,EAAmB,kBAAAC,EAAmB,QAAAC,EAAS,SAAAC,EAAU,IAAAC,CAAO,EAAAP,EAChGQ,EAAM,gBAAgBT,EAAK,WAAY,eAAgB,IAAMG,EAAYH,CAAI,EAAE,qBAAqB,EAAE,IAAIU,GAAKA,EAAE,KAAK,UAAU,CAAE,EAClID,EAAM,gBAAgBT,EAAK,WAAY,sBAAuB,IAAMA,EAAK,IAAI,cAAc,EAAE,IAAUW,GAAAA,EAAG,KAAK,CAAE,EACjHF,EAAM,gBAAgBT,EAAK,WAAY,qBAAsB,IAAMA,EAAK,IAAI,cAAc,EAAE,IAAIW,GAAMA,EAAG,wBAAwB,CAAC,CAAE,CACvI,CACO,kCAAkCX,EAAeC,EAAwE,CAEhI,CACO,8BAA8BD,EAAeC,EAAwE,CAE5H,CACO,sCAAsCD,EAAeC,EAAwE,CAEpI,CACO,+BAA+BD,EAAeC,EAAwE,CAE7H,CACO,2BAA2BD,EAAeC,EAAwE,CAEzH,CACO,uBAAuBD,EAAeC,EAAwE,CAErH,CACO,4BAA4BD,EAAeC,EAAwE,CAE1H,CACH,CAhCGW,EADUb,EACa,YAAY,uBCKtC,SAASc,GAAgB,CACjB,GAAA,CACI,IAAAC,EAAS,SAAS,cAAc,QAAQ,EAExC,MAAA,CAAC,CAAC,OAAO,wBACRA,EAAO,WAAW,OAAO,GAAKA,EAAO,WAAW,oBAAoB,SAGlE,MAAA,EACX,CACJ,CAEA,GAAI,CAACD,IACA,IAAIE,EAAe,2GAA2G,EAAE,SAAS,aAAa,EAAE,SAAS,SAAS,MAC1K,CACWC,EAAA,oBAAoB,IAAIjB,CAAkB,EACtD,MAAMkB,EAAQ,IAAIC,EAAe,IAAIC,EAAmBC,CAAM,CAAC,EAClD,IAAIC,EAAgBC,EAAc,CAAE,MAAAL,CAAO,CAAA,EACnD,SAAS,SAAS,CAC3B"}