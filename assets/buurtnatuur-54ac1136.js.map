{"version":3,"file":"buurtnatuur-54ac1136.js","sources":["../../src/assets/generated/metatagging/buurtnatuur.ts","../../index_buurtnatuur.ts"],"sourcesContent":["import {Feature} from 'geojson'\nimport { ExtraFuncType } from \"../../../Logic/ExtraFunctions\";\nimport { Utils } from \"../../../Utils\"\nexport class ThemeMetaTagging {\n   public static readonly themeName = \"buurtnatuur\"\n\n   public metaTaggging_for_nature_reserve_buurtnatuur(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_parks(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n      Utils.AddLazyProperty(feat.properties, '_overlapWithUpperLayers', () => Math.max(...overlapWith(feat)('nature_reserve_buurtnatuur').map(o => o.overlap))/feat.area ) \n      Utils.AddLazyProperty(feat.properties, '_tooMuchOverlap', () => Number(feat.properties._overlapWithUpperLayers) > 0.1 ? 'yes' :'no' ) \n   }\n   public metaTaggging_for_forest(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n      Utils.AddLazyProperty(feat.properties, '_overlapWithUpperLayers', () => Math.max(...overlapWith(feat)('parks','nature_reserve_buurtnatuur').map(o => o.overlap))/feat.area ) \n      Utils.AddLazyProperty(feat.properties, '_tooMuchOverlap', () => Number(feat.properties._overlapWithUpperLayers) > 0.1 ? 'yes' : 'no' ) \n   }\n   public metaTaggging_for_viewpoint(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n   }\n   public metaTaggging_for_note_import_nature_reserve_buurtnatuur(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n      Utils.AddLazyProperty(feat.properties, '_first_comment', () => get(feat)('comments')[0].text.toLowerCase() ) \n      Utils.AddLazyProperty(feat.properties, '_trigger_index', () => (() => {const lines = feat.properties['_first_comment'].split('\\n'); const matchesMapCompleteURL = lines.map(l => l.match(\".*https://mapcomplete.\\(org|osm.be\\)/\\([a-zA-Z_-]+\\)\\(.html\\)?.*#import\")); const matchedIndexes = matchesMapCompleteURL.map((doesMatch, i) => [doesMatch !== null, i]).filter(v => v[0]).map(v => v[1]); return matchedIndexes[0] })() ) \n      Utils.AddLazyProperty(feat.properties, '_comments_count', () => get(feat)('comments').length ) \n      Utils.AddLazyProperty(feat.properties, '_intro', () => (() => {const lines = get(feat)('comments')[0].text.split('\\n'); lines.splice(get(feat)('_trigger_index')-1, lines.length); return lines.filter(l => l !== '').join('<br/>');})() ) \n      Utils.AddLazyProperty(feat.properties, '_tags', () => (() => {let lines = get(feat)('comments')[0].text.split('\\n').map(l => l.trim()); lines.splice(0, get(feat)('_trigger_index') + 1); lines = lines.filter(l => l != ''); return lines.join(';');})() ) \n   }\n   public metaTaggging_for_note_import_parks(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n      Utils.AddLazyProperty(feat.properties, '_first_comment', () => get(feat)('comments')[0].text.toLowerCase() ) \n      Utils.AddLazyProperty(feat.properties, '_trigger_index', () => (() => {const lines = feat.properties['_first_comment'].split('\\n'); const matchesMapCompleteURL = lines.map(l => l.match(\".*https://mapcomplete.\\(org|osm.be\\)/\\([a-zA-Z_-]+\\)\\(.html\\)?.*#import\")); const matchedIndexes = matchesMapCompleteURL.map((doesMatch, i) => [doesMatch !== null, i]).filter(v => v[0]).map(v => v[1]); return matchedIndexes[0] })() ) \n      Utils.AddLazyProperty(feat.properties, '_comments_count', () => get(feat)('comments').length ) \n      Utils.AddLazyProperty(feat.properties, '_intro', () => (() => {const lines = get(feat)('comments')[0].text.split('\\n'); lines.splice(get(feat)('_trigger_index')-1, lines.length); return lines.filter(l => l !== '').join('<br/>');})() ) \n      Utils.AddLazyProperty(feat.properties, '_tags', () => (() => {let lines = get(feat)('comments')[0].text.split('\\n').map(l => l.trim()); lines.splice(0, get(feat)('_trigger_index') + 1); lines = lines.filter(l => l != ''); return lines.join(';');})() ) \n   }\n   public metaTaggging_for_note_import_forest(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n      Utils.AddLazyProperty(feat.properties, '_first_comment', () => get(feat)('comments')[0].text.toLowerCase() ) \n      Utils.AddLazyProperty(feat.properties, '_trigger_index', () => (() => {const lines = feat.properties['_first_comment'].split('\\n'); const matchesMapCompleteURL = lines.map(l => l.match(\".*https://mapcomplete.\\(org|osm.be\\)/\\([a-zA-Z_-]+\\)\\(.html\\)?.*#import\")); const matchedIndexes = matchesMapCompleteURL.map((doesMatch, i) => [doesMatch !== null, i]).filter(v => v[0]).map(v => v[1]); return matchedIndexes[0] })() ) \n      Utils.AddLazyProperty(feat.properties, '_comments_count', () => get(feat)('comments').length ) \n      Utils.AddLazyProperty(feat.properties, '_intro', () => (() => {const lines = get(feat)('comments')[0].text.split('\\n'); lines.splice(get(feat)('_trigger_index')-1, lines.length); return lines.filter(l => l !== '').join('<br/>');})() ) \n      Utils.AddLazyProperty(feat.properties, '_tags', () => (() => {let lines = get(feat)('comments')[0].text.split('\\n').map(l => l.trim()); lines.splice(0, get(feat)('_trigger_index') + 1); lines = lines.filter(l => l != ''); return lines.join(';');})() ) \n   }\n   public metaTaggging_for_note_import_viewpoint(feat: Feature, helperFunctions: Record<ExtraFuncType, (feature: Feature) => Function>) {\n      const {distanceTo, overlapWith, enclosingFeatures, intersectionsWith, closest, closestn, get} = helperFunctions\n      Utils.AddLazyProperty(feat.properties, '_first_comment', () => get(feat)('comments')[0].text.toLowerCase() ) \n      Utils.AddLazyProperty(feat.properties, '_trigger_index', () => (() => {const lines = feat.properties['_first_comment'].split('\\n'); const matchesMapCompleteURL = lines.map(l => l.match(\".*https://mapcomplete.\\(org|osm.be\\)/\\([a-zA-Z_-]+\\)\\(.html\\)?.*#import\")); const matchedIndexes = matchesMapCompleteURL.map((doesMatch, i) => [doesMatch !== null, i]).filter(v => v[0]).map(v => v[1]); return matchedIndexes[0] })() ) \n      Utils.AddLazyProperty(feat.properties, '_comments_count', () => get(feat)('comments').length ) \n      Utils.AddLazyProperty(feat.properties, '_intro', () => (() => {const lines = get(feat)('comments')[0].text.split('\\n'); lines.splice(get(feat)('_trigger_index')-1, lines.length); return lines.filter(l => l !== '').join('<br/>');})() ) \n      Utils.AddLazyProperty(feat.properties, '_tags', () => (() => {let lines = get(feat)('comments')[0].text.split('\\n').map(l => l.trim()); lines.splice(0, get(feat)('_trigger_index') + 1); lines = lines.filter(l => l != ''); return lines.join(';');})() ) \n   }\n}","import layout from \"./src/assets/generated/themes/buurtnatuur.json\"\nimport { ThemeMetaTagging } from \"./src/assets/generated/metatagging/buurtnatuur\"\nimport selected_element from \"./src/assets/generated/layers/selected_element.json\"\nimport gps_location from \"./src/assets/generated/layers/gps_location.json\"\nimport gps_location_history from \"./src/assets/generated/layers/gps_location_history.json\"\nimport home_location from \"./src/assets/generated/layers/home_location.json\"\nimport gps_track from \"./src/assets/generated/layers/gps_track.json\"\nimport range from \"./src/assets/generated/layers/range.json\"\nimport last_click from \"./src/assets/generated/layers/last_click.json\"\nimport favourite from \"./src/assets/generated/layers/favourite.json\"\nimport summary from \"./src/assets/generated/layers/summary.json\"\nimport ThemeViewState from \"./src/Models/ThemeViewState\"\nimport SvelteUIElement from \"./src/UI/Base/SvelteUIElement\"\nimport ThemeViewGUI from \"./src/UI/ThemeViewGUI.svelte\"\nimport LayoutConfig from \"./src/Models/ThemeConfig/LayoutConfig\";\nimport MetaTagging from \"./src/Logic/MetaTagging\";\nimport { FixedUiElement } from \"./src/UI/Base/FixedUiElement\";\nimport { Utils } from \"./src/Utils\"\nimport Constants from \"./src/Models/Constants\"\n\nfunction webgl_support() {\n    try {\n        var canvas = document.createElement(\"canvas\")\n        return (\n            !!window.WebGLRenderingContext &&\n            (canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\"))\n        )\n    } catch (e) {\n        return false\n    }\n}\nasync function getAvailableLayers(): Promise<Set<string>> {\n    try {\n        const host = new URL(Constants.VectorTileServer).host\n        const status = await Utils.downloadJson(\"https://\" + host + \"/summary/status.json\")\n        return new Set<string>(status.layers)\n    } catch (e) {\n        console.error(\"Could not get MVT available layers due to\", e)\n        return new Set<string>()\n    }\n}\n\nasync function main() {\n    if (!webgl_support()) {\n         new FixedUiElement(\"WebGL is not supported or not enabled. This is essential for MapComplete to function, please enable this.\").SetClass(\"block alert\").AttachTo(\"maindiv\")\n    }else{\n        const availableLayers = await getAvailableLayers()\n        MetaTagging.setThemeMetatagging(new ThemeMetaTagging())\n        layout.layers.push(<any> selected_element)\n    layout.layers.push(<any> gps_location)\n    layout.layers.push(<any> gps_location_history)\n    layout.layers.push(<any> home_location)\n    layout.layers.push(<any> gps_track)\n    layout.layers.push(<any> range)\n    layout.layers.push(<any> last_click)\n    layout.layers.push(<any> favourite)\n    layout.layers.push(<any> summary)\n        const state = new ThemeViewState(new LayoutConfig(<any> layout), availableLayers)\n        const main = new SvelteUIElement(ThemeViewGUI, { state })\n        main.AttachTo(\"maindiv\")\n    }\n}\nmain()\n"],"names":["ThemeMetaTagging","feat","helperFunctions","distanceTo","overlapWith","enclosingFeatures","intersectionsWith","closest","closestn","get","Utils","o","l","doesMatch","i","v","lines","__publicField","webgl_support","canvas","getAvailableLayers","host","Constants","status","e","main","FixedUiElement","availableLayers","MetaTagging","layout","selected_element","gps_location","gps_location_history","home_location","gps_track","range","last_click","favourite","summary","state","ThemeViewState","LayoutConfig","SvelteUIElement","ThemeViewGUI"],"mappings":"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"}