{"version":3,"file":"leaderboard-558e1e69.js","sources":["../../src/UI/Leaderboard.svelte","../../src/leaderboard.ts"],"sourcesContent":["<script lang=\"ts\">\n  import { Utils } from \"../Utils\"\n  import { Store, UIEventSource } from \"../Logic/UIEventSource\"\n  import Loading from \"./Base/Loading.svelte\"\n  import { OsmConnection } from \"../Logic/Osm/OsmConnection\"\n\n  const osmConnection = new OsmConnection({\n    attemptLogin: true,\n  })\n  let loggedInContributor: Store<string> = osmConnection.userDetails.map((ud) => ud.name)\n  export let source =\n    \"https://raw.githubusercontent.com/pietervdvn/MapComplete-data/main/picture-leaderboard.json\"\n  let data: Store<\n    | undefined\n    | {\n        leaderboard: {\n          rank: number\n          name: string\n          account: string\n          nrOfImages: number\n        }[]\n        median: number\n        totalAuthors: number\n        byLicense: {\n          license: string\n          total: number\n          authors: string[]\n        }\n        date: string\n      }\n  > = UIEventSource.FromPromise(Utils.downloadJsonCached(source))\n</script>\n\n<h1>Contributed images with MapComplete: leaderboard</h1>\n\n{#if $data}\n  <table>\n    <tr>\n      <th>Rank</th>\n      <th>Contributor</th>\n      <th>Number of images contributed</th>\n    </tr>\n    {#each $data.leaderboard as contributor}\n      <tr>\n        <td>\n          {contributor.rank}\n        </td>\n        <td>\n          {#if $loggedInContributor === contributor.name}\n            <a class=\"thanks\" href={contributor.account}>{contributor.name}</a>\n          {:else}\n            <a href={contributor.account}>{contributor.name}</a>\n          {/if}\n        </td>\n        <td>\n          <b>{contributor.nrOfImages}</b>\n          total images\n        </td>\n      </tr>\n    {/each}\n  </table>\n  Statistics generated on {$data.date}\n{:else}\n  <Loading />\n{/if}\n\n<div>\n  Logged in as {$loggedInContributor}\n</div>\n","import SvelteUIElement from \"./UI/Base/SvelteUIElement\"\nimport Leaderboard from \"./UI/Leaderboard.svelte\"\n\nnew SvelteUIElement(Leaderboard, {}).AttachTo(\"main\")\n"],"names":["t7_value","ctx","each_value","i","insert","target","table","anchor","append","tr","dirty","set_data","t7","t_value","attr","a","a_href_value","t0_value","t3_value","create_if_block_1","td0","td1","td2","b","t0","t3","h1","div","loggedInContributor","OsmConnection","ud","source","$$props","data","UIEventSource","Utils","SvelteUIElement","Leaderboard"],"mappings":"krBA6D2BA,EAAAC,KAAM,KAAI,KAnB1BC,EAAAD,KAAM,iCAAX,OAAIE,GAAA;;4FAkBD;AAAA,2BACiB,iBAzBxBC,EAwBOC,EAAAC,EAAAC,CAAA,EAvBLC,EAIIF,EAAAG,CAAA,4FACGP,EAAAD,KAAM,8BAAX,OAAIE,GAAA,EAAA,iHAAJ,OAmBqBO,EAAA,GAAAV,KAAAA,EAAAC,KAAM,KAAI,KAAAU,EAAAC,EAAAZ,CAAA,qEAVMa,EAAAZ,KAAY,KAAI,kCAAtCa,EAAAC,EAAA,OAAAC,EAAAf,KAAY,OAAO,UAA5BG,EAAmDC,EAAAU,EAAAR,CAAA,iBAApBG,EAAA,GAAAG,KAAAA,EAAAZ,KAAY,KAAI,KAAAU,EAAA,EAAAE,CAAA,EAAtCH,EAAA,GAAAM,KAAAA,EAAAf,KAAY,4DAFyBY,EAAAZ,KAAY,KAAI,wDAAtCa,EAAAC,EAAA,OAAAC,EAAAf,KAAY,OAAO,UAA3CG,EAAkEC,EAAAU,EAAAR,CAAA,iBAApBG,EAAA,GAAAG,KAAAA,EAAAZ,KAAY,KAAI,KAAAU,EAAA,EAAAE,CAAA,EAAtCH,EAAA,GAAAM,KAAAA,EAAAf,KAAY,8DAJrCgB,EAAAhB,KAAY,KAAI,eAUbiB,EAAAjB,KAAY,WAAU,gCAPrBA,EAAoB,CAAA,IAAKA,EAAW,CAAA,EAAC,KAAIkB,sHAOhB;AAAA,uBAEhC,gBAdFf,EAeIC,EAAAI,EAAAF,CAAA,EAdFC,EAEIC,EAAAW,CAAA,gBACJZ,EAMIC,EAAAY,CAAA,qBACJb,EAGIC,EAAAa,CAAA,EAFFd,EAA8Bc,EAAAC,CAAA,+BAV7Bb,EAAA,GAAAO,KAAAA,EAAAhB,KAAY,KAAI,KAAAU,EAAAa,EAAAP,CAAA,kEAUbP,EAAA,GAAAQ,KAAAA,EAAAjB,KAAY,WAAU,KAAAU,EAAAc,EAAAP,CAAA,sGApB/BjB,EAAK,CAAA,EAAA,kJA+BN,eACW,MAACA,EAAoB,CAAA,CAAA,UAlCpCG,EAAwDC,EAAAqB,EAAAnB,CAAA,gCAiCxDH,EAEKC,EAAAsB,EAAApB,CAAA,yLADWN,EAAoB,CAAA,CAAA,mHA1D9B2B,EAHsB,IAAAC,EACxB,CAAA,aAAc,EAAA,CAAA,EAEuC,YAAY,IAAKC,GAAOA,EAAG,IAAI,qBAC3E,GAAA,CAAA,OAAAC,EACT,6FAAA,EAAAC,EACEC,EAkBAC,EAAc,YAAYC,EAAM,mBAAmBJ,CAAM,CAAA,wJC3B/D,IAAIK,EAAgBC,EAAa,CAAA,CAAE,EAAE,SAAS,MAAM"}