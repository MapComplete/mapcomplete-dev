{"version":3,"file":"qrcode-9aaad964.js","sources":["../../node_modules/qrcode-generator/qrcode.js"],"sourcesContent":["//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n"],"names":["qrcode","typeNumber","errorCorrectionLevel","PAD0","PAD1","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","moduleCount","modules","row","col","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","getBestMaskPattern","minLostPoint","pattern","i","lostPoint","QRUtil","pos","j","bits","mod","data","inc","bitIndex","byteIndex","maskFunc","dark","mask","createBytes","buffer","rsBlocks","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","rsPoly","rawPoly","qrPolynomial","modPoly","modIndex","totalCodeCount","index","dataList","QRRSBlock","qrBitBuffer","totalDataCount","mode","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","cellSize","margin","qrHtml","alt","title","opts","size","mc","mr","qrSvg","rect","escapeXml","min","max","createDataURL","x","y","img","s","escaped","_createHalfASCII","r1","r2","p","blocks","blocksLastLineNoMargin","ascii","white","black","line","context","length","bytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","count","b0","b1","b2","b3","k","v","unknownChar","b","QRMode","QRMaskPattern","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHDigit","digit","d","errorCorrectLength","a","QRMath","type","sameCount","darkCount","ratio","EXP_TABLE","LOG_TABLE","num","shift","_num","e","RS_BLOCK_TABLE","qrRSBlock","totalCount","dataCount","getRsBlockTable","rsBlock","list","_buffer","_length","bufIndex","bit","_mode","_data","strToNum","chatToNum","getCode","_bytes","stringToBytes","code","byteArrayOutputStream","off","len","base64EncodeOutputStream","_buflen","_base64","writeEncoded","encode","n","padlen","str","_str","_pos","decode","gifImage","width","height","_width","_height","pixel","out","lzwMinCodeSize","raster","getLZWRaster","bitOutputStream","_out","_bitLength","_bitBuffer","clearCode","endCode","bitLength","table","lzwTable","byteOut","bitOut","dataIndex","_map","_size","key","getPixel","gif","base64","toUTF8Array","utf8","charcode","factory","module"],"mappings":"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"}