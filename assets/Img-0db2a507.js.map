{"version":3,"file":"Img-0db2a507.js","sources":["../../src/UI/Base/Img.ts"],"sourcesContent":["import { Utils } from \"../../Utils\"\nimport BaseUIElement from \"../BaseUIElement\"\n\nexport default class Img extends BaseUIElement {\n    private readonly _src: string\n    private readonly _rawSvg: boolean\n    private readonly _options: { readonly fallbackImage?: string }\n\n    constructor(\n        src: string,\n        rawSvg = false,\n        options?: {\n            fallbackImage?: string\n        }\n    ) {\n        super()\n        if (src === undefined || src === \"undefined\") {\n            throw \"Undefined src for image\"\n        }\n        this._src = src\n        this._rawSvg = rawSvg\n        this._options = options\n    }\n\n    static AsData(source: string) {\n        if (Utils.runningFromConsole) {\n            return source\n        }\n        try {\n            return `data:image/svg+xml;base64,${btoa(source)}`\n        } catch (e) {\n            console.error(\"Cannot create an image for\", source.slice(0, 100))\n            console.trace(\"Cannot create an image for the given source string due to \", e)\n            return \"\"\n        }\n    }\n\n    static AsImageElement(source: string, css_class: string = \"\", style = \"\"): string {\n        return `<img class=\"${css_class}\" style=\"${style}\" alt=\"\" src=\"${Img.AsData(source)}\">`\n    }\n\n    AsMarkdown(): string {\n        if (this._rawSvg === true) {\n            console.warn(\"Converting raw svgs to markdown is not supported\")\n            return undefined\n        }\n        let src = this._src\n        if (this._src.startsWith(\"./\")) {\n            src = \"https://mapcomplete.org/\" + src\n        }\n        return \"![](\" + src + \")\"\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const self = this\n        if (this._rawSvg) {\n            const e = document.createElement(\"div\")\n            e.innerHTML = this._src\n            return e\n        }\n\n        const el = document.createElement(\"img\")\n        el.src = this._src\n        el.onload = () => {\n            el.style.opacity = \"1\"\n        }\n        el.onerror = () => {\n            if (self._options?.fallbackImage) {\n                if (el.src === self._options.fallbackImage) {\n                    // Sigh... nothing to be done anymore\n                    return\n                }\n                el.src = self._options.fallbackImage\n            }\n        }\n        return el\n    }\n}\n"],"names":["Img","BaseUIElement","src","rawSvg","options","__publicField","source","Utils","css_class","style","self","e","el","_a"],"mappings":"wPAGA,MAAqBA,UAAYC,CAAc,CAK3C,YACIC,EACAC,EAAS,GACTC,EAGF,CACQ,QAXOC,EAAA,aACAA,EAAA,gBACAA,EAAA,iBAUT,GAAAH,IAAQ,QAAaA,IAAQ,YACvB,KAAA,0BAEV,KAAK,KAAOA,EACZ,KAAK,QAAUC,EACf,KAAK,SAAWC,CACpB,CAEA,OAAO,OAAOE,EAAgB,CAC1B,GAAIC,EAAM,mBACC,OAAAD,EAEP,GAAA,CACO,MAAA,6BAA6B,KAAKA,CAAM,CAAC,SAC3C,EAAG,CACR,eAAQ,MAAM,6BAA8BA,EAAO,MAAM,EAAG,GAAG,CAAC,EACxD,QAAA,MAAM,6DAA8D,CAAC,EACtE,EACX,CACJ,CAEA,OAAO,eAAeA,EAAgBE,EAAoB,GAAIC,EAAQ,GAAY,CACvE,MAAA,eAAeD,CAAS,YAAYC,CAAK,iBAAiBT,EAAI,OAAOM,CAAM,CAAC,IACvF,CAEA,YAAqB,CACb,GAAA,KAAK,UAAY,GAAM,CACvB,QAAQ,KAAK,kDAAkD,EACxD,MACX,CACA,IAAIJ,EAAM,KAAK,KACf,OAAI,KAAK,KAAK,WAAW,IAAI,IACzBA,EAAM,2BAA6BA,GAEhC,OAASA,EAAM,GAC1B,CAEU,uBAAqC,CAC3C,MAAMQ,EAAO,KACb,GAAI,KAAK,QAAS,CACR,MAAAC,EAAI,SAAS,cAAc,KAAK,EACtC,OAAAA,EAAE,UAAY,KAAK,KACZA,CACX,CAEM,MAAAC,EAAK,SAAS,cAAc,KAAK,EACvC,OAAAA,EAAG,IAAM,KAAK,KACdA,EAAG,OAAS,IAAM,CACdA,EAAG,MAAM,QAAU,GAAA,EAEvBA,EAAG,QAAU,IAAM,OACX,IAAAC,EAAAH,EAAK,WAAL,MAAAG,EAAe,cAAe,CAC9B,GAAID,EAAG,MAAQF,EAAK,SAAS,cAEzB,OAEDE,EAAA,IAAMF,EAAK,SAAS,aAC3B,CAAA,EAEGE,CACX,CACJ"}