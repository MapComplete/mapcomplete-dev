{"version":3,"file":"status-05a58985.js","sources":["../../node_modules/@babeard/svelte-heroicons/mini/CheckCircle/CheckCircle.svelte","../../src/UI/Status/StatusIcon.svelte","../../src/UI/Status/ServiceIndicator.svelte","../../src/UI/Status/StatusGUI.svelte","../../src/UI/StatusGui.ts"],"sourcesContent":["<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\"/>\n</svg>","<script lang=\"ts\">\n  import Loading from \"../Base/Loading.svelte\"\n  import CheckCircle from \"@babeard/svelte-heroicons/mini/CheckCircle\"\n  import XCircle from \"@rgossiaux/svelte-heroicons/solid/XCircle\"\n  import { twJoin } from \"tailwind-merge\"\n  import { XIcon } from \"@rgossiaux/svelte-heroicons/outline\"\n  import Exclamation from \"@rgossiaux/svelte-heroicons/solid/Exclamation\"\n  import Check from \"@babeard/svelte-heroicons/mini/Check\"\n  import { XCircleIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n\n  export let status: \"online\" | \"degraded\" | \"offline\"\n  export let cls: string = \"w-6 h-6 mx-1\"\n</script>\n\n{#if status === \"online\"}\n  <CheckCircle class={twJoin(cls,\"rounded-full\")} style=\"color: #22cc22\" />\n{:else if status === \"degraded\"}\n  <Exclamation class={twJoin(cls,\"rounded-full\")} style=\"color: #eecc22\"  />\n{:else if status === \"offline\"}\n  <XCircleIcon class={twJoin(cls,\"rounded-full\")} style=\"color: #bb2222\"  />\n{:else if status === undefined}\n  <Loading />\n{:else}\n  ? {status}\n{/if}\n\n","<script lang=\"ts\">\nimport StatusIcon from \"./StatusIcon.svelte\"\nimport type { MCService } from \"./MCService.js\"\nimport AccordionSingle from \"../Flowbite/AccordionSingle.svelte\"\n\nexport let service: MCService\nlet status = service.status\nlet msg = service.message\n</script>\n\n\n<AccordionSingle>\n\n<h3 slot=\"header\" class=\"flex items-center m-0\"> <StatusIcon status={$status}/> {service.name}</h3>\n<div class=\"mx-4\">\n  {#if $msg}\n  {$msg}\n    {:else}\n    No extra information available\n    {/if}\n</div>\n</AccordionSingle>\n","<script lang=\"ts\">\n\n  import { Store, UIEventSource } from \"../../Logic/UIEventSource\"\n  import StatusIcon from \"./StatusIcon.svelte\"\n  import type { MCService } from \"./MCService\"\n  import ServiceIndicator from \"./ServiceIndicator.svelte\"\n  import { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\n  import Constants from \"../../Models/Constants\"\n  import { Utils } from \"../../Utils\"\n  import Loading from \"../Base/Loading.svelte\"\n\n\n  let services: MCService[] = []\n\n  let states = [undefined, \"online\", \"degraded\", \"offline\"]\n\n  function simpleMessage(s: Store<{ success: any } | { error: any }>): Store<string> {\n    return s.mapD(s => {\n      if (s[\"success\"]) {\n        return JSON.stringify(s[\"success\"])\n      }\n      return s[\"error\"]\n    })\n  }\n\n  {\n    const connection = new OsmConnection()\n    const osmApi = connection.apiIsOnline\n    services.push({\n      name: connection.Backend(),\n      status: osmApi.mapD(serviceState => {\n        switch (serviceState) {\n          case \"offline\":\n            return \"offline\"\n          case \"online\":\n            return \"online\"\n          case \"readonly\":\n            return \"degraded\"\n          case \"unknown\":\n            return undefined\n          case \"unreachable\":\n            return \"offline\"\n        }\n      }),\n      message: osmApi\n    })\n  }\n\n  {\n    const s = \"https://studio.mapcomplete.org\"\n    const status = UIEventSource.FromPromiseWithErr(\n      Utils.downloadJson(s + \"/overview\")\n    )\n    services.push({\n      name: s,\n      status: status.mapD(s => {\n        if (s[\"error\"]) {\n          return \"offline\"\n        }\n        const files: string[] = s[\"success\"][\"allFiles\"]\n        if (files.length < 10) {\n          return \"offline\"\n        }\n        if (files.length < 100) {\n          return \"degraded\"\n        }\n        return \"online\"\n      }),\n      message: status.mapD(s => {\n        if(s[\"error\"]){\n          return s[\"error\"]\n        }\n        const files: string[] = s[\"success\"][\"allFiles\"]\n        return \"Contains \"+(files.length ?? \"no\")+\" files\"\n      })\n    })\n  }\n  {\n    services.push(\n      {\n        name: Constants.GeoIpServer,\n        status: UIEventSource.FromPromiseWithErr(\n          Utils.downloadJson(Constants.GeoIpServer + \"/status\")\n        ).mapD(result => {\n          if (result[\"success\"].online) {\n            return \"online\"\n          }\n          if (result[\"error\"]) {\n            return \"offline\"\n          } else {\n            return \"degraded\"\n          }\n        }),\n        message: simpleMessage(UIEventSource.FromPromiseWithErr(\n          Utils.downloadJson(Constants.GeoIpServer + \"/ip\")\n        ))\n      }\n    )\n  }\n\n  {\n    const s = Constants.ErrorReportServer\n    const status = UIEventSource.FromPromiseWithErr(\n      Utils.downloadJson(s.replace(/\\/report$/, \"/status\"))\n    )\n    services.push({\n      name: s,\n      status: status.mapD(s => {\n        if (s[\"error\"]) {\n          return \"offline\"\n        }\n        const data = s[\"success\"]\n        if (data[\"errors_today\"] === 0) {\n          return \"online\"\n        }\n        return \"degraded\"\n      }),\n      message: simpleMessage(status)\n    })\n  }\n\n  {\n    const s = Constants.linkedDataProxy.replace(/\\/[^/]*$/, \"\")\n    const status = UIEventSource.FromPromiseWithErr(\n      Utils.downloadJson(s + \"/status\")\n    )\n    services.push({\n      name: s,\n      status: status.mapD(s => {\n        if (s[\"error\"]) {\n          return \"offline\"\n        }\n        const data = s[\"success\"]\n        if (data.cached_entries < 10 || data.uptime < 60 * 60) {\n          return \"degraded\"\n        }\n        return \"online\"\n      }),\n      message: simpleMessage(status)\n    })\n  }\n\n  {\n    const s = Constants.SummaryServer\n    const status = UIEventSource.FromPromiseWithErr(\n      Utils.downloadJson(s + \"/summary/status.json\")\n    )\n    services.push({\n      name: s,\n      status: status.mapD(s => {\n        if (s[\"error\"]) {\n          return \"offline\"\n        }\n        console.log(s)\n\n        const attributes = s[\"success\"][\"meta\"]\n        const lastUpdate = new Date(attributes[\"current_timestamp\"])\n        console.log(\"Last update:\", lastUpdate, attributes[\"current_timestamp\"], attributes)\n        const timediffSec = (new Date().getTime() - lastUpdate.getTime()) / 1000\n        const timediffDays = timediffSec / (60 * 60 * 26)\n\n        if (timediffDays > 7) {\n          return \"degraded\"\n        }\n\n        return \"online\"\n      }),\n      message: status.mapD(s => {\n        if (s[\"error\"]) {\n          return s[\"error\"]\n        }\n\n        const attributes = s[\"success\"][\"meta\"]\n        const lastUpdate = new Date(attributes[\"current_timestamp\"])\n        const timediffSec = (new Date().getTime() - lastUpdate.getTime()) / 1000\n        const timediffDays = timediffSec / (60 * 60 * 26)\n\n        const json = JSON.stringify(s[\"success\"], null, \"  \")\n        return \"Database is \" + Math.floor(timediffDays) + \" days out of sync\\n\\n\" + json\n      })\n    })\n  }\n\n  {\n    const s = Constants.countryCoderEndpoint\n    const status = UIEventSource.FromPromiseWithErr(\n      Utils.downloadJson(s + \"/0.0.0.json\")\n    )\n    services.push({\n      name: s,\n      status: status.mapD(s => {\n        if (s[\"error\"]) {\n          return \"offline\"\n        }\n        const arr = s[\"success\"]\n        if (Array.isArray(arr)) {\n          return \"online\"\n        }\n        return \"degraded\"\n      }),\n      message: status.map(s => JSON.stringify(s))\n    })\n\n  }\n\n\n  {\n    for (const defaultOverpassUrl of Constants.defaultOverpassUrls) {\n      const statusUrl = defaultOverpassUrl.replace(/\\/interpreter$/, \"/status\")\n      const status = UIEventSource.FromPromiseWithErr(\n        Utils.download(statusUrl)\n      )\n\n      services.push({\n        name: \"Overpass-server: \" + defaultOverpassUrl,\n        status: status.mapD(result => {\n          if (result[\"error\"]) {\n            return \"offline\"\n          }\n\n          // \"Connected as: 3587935836\n          // Current time: 2024-07-14T00:35:58Z\n          // Announced endpoint: gall.openstreetmap.de\n          // Rate limit: 6\n          // 6 slots available now.\n          // Currently running queries (pid, space limit, time limit, start time):\\n\"\n          const msgs = result[\"success\"].split(\"\\n\")\n\n          return \"online\"\n        }),\n        message: simpleMessage(status)\n      })\n    }\n  }\n\n  {\n    services.push({\n      name: \"Mangrove reviews\",\n      status: UIEventSource.FromPromiseWithErr(\n        Utils.download(\"https://api.mangrove.reviews\")\n      ).mapD(r => {\n        if (r[\"success\"]) {\n          return \"online\"\n        }\n        return \"offline\"\n      })\n    })\n  }\n\n\n  let all = new UIEventSource<\"online\" | \"degraded\" | \"offline\">(\"online\")\n  let someLoading = new UIEventSource(true)\n\n  function setAll() {\n    const data = Utils.NoNull(services.map(s => s.status.data))\n    someLoading.setData(data.length !== services.length)\n    if (data.some(d => d === \"offline\")) {\n      all.setData(\"offline\")\n    } else if (data.some(d => d === \"degraded\")) {\n      all.setData(\"degraded\")\n    } else if (data.some(d => d === \"online\")) {\n      all.setData(\"online\")\n    } else {\n      all.setData(undefined)\n    }\n  }\n\n  for (const service of services) {\n    service.status.addCallbackD(() => {\n      setAll()\n    })\n  }\n\n</script>\n\n<h1>MapComplete status indicators</h1>\n\n{#if $someLoading}\n  <Loading />\n{/if}\n<StatusIcon status={$all} cls=\"w-16 h-16\" />\n\n{#each services as service}\n  <ServiceIndicator {service} />\n{/each}\n","import StatusGUI from \"./Status/StatusGUI.svelte\"\n\nexport default class StatusGui {\n    public setup() {\n        new StatusGUI({\n            target: document.getElementById(\"main\"),\n        })\n    }\n}\n\nnew StatusGui().setup()\n"],"names":["ctx","insert","target","svg","anchor","append","path","twJoin","status","$$props","cls","create_if_block","div","t1_value","h3","current","dirty","set_data","t1","service","msg","i","h1","each_blocks","simpleMessage","s","services","connection","OsmConnection","osmApi","serviceState","UIEventSource","Utils","files","Constants","result","data","attributes","lastUpdate","timediffDays","json","arr","defaultOverpassUrl","statusUrl","r","all","someLoading","setAll","d","StatusGui","StatusGUI"],"mappings":"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","x_google_ignoreList":[0]}