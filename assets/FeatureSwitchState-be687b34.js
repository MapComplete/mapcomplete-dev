var f=Object.defineProperty;var l=(n,s,e)=>s in n?f(n,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[s]=e;var t=(n,s,e)=>(l(n,typeof s!="symbol"?s+"":s,e),e);import{U as o}from"./UIEventSource-14eb915f.js";import{Q as r}from"./tw-merge-49ed286c.js";import{C as w}from"./Constants-76809d08.js";import{U as S}from"./Utils-e0968e8e.js";window.addEventListener("load",async()=>{if(!("serviceWorker"in navigator)){console.log("Service workers are not supported");return}try{await navigator.serviceWorker.register("/service-worker.js"),console.log("Service worker registration successful")}catch(n){console.error("Service worker registration failed",n)}});class i{static initSwitch(s,e,h){const a=e;return r.GetQueryParameter(s,""+a,h,{stackOffset:-1}).sync(c=>c===void 0?a:c!=="false",[],c=>c==a?void 0:""+c)}}class d{constructor(){t(this,"featureSwitchFakeUser");this.featureSwitchFakeUser=r.GetBooleanQueryParameter("fake-user",!1,"If true, 'dryrun' mode is activated and a fake user account is loaded")}}class k extends d{constructor(e){super();t(this,"layoutToUse");t(this,"featureSwitchEnableLogin");t(this,"featureSwitchSearch");t(this,"featureSwitchBackgroundSelection");t(this,"featureSwitchWelcomeMessage");t(this,"featureSwitchCommunityIndex");t(this,"featureSwitchExtraLinkEnabled");t(this,"featureSwitchMoreQuests");t(this,"featureSwitchShareScreen");t(this,"featureSwitchGeolocation");t(this,"featureSwitchIsTesting");t(this,"featureSwitchIsDebugging");t(this,"featureSwitchShowAllQuestions");t(this,"featureSwitchFilter");t(this,"featureSwitchEnableExport");t(this,"overpassUrl");t(this,"overpassTimeout");t(this,"overpassMaxZoom");t(this,"osmApiTileSize");t(this,"backgroundLayerId");t(this,"featureSwitchMorePrivacy");this.layoutToUse=e,this.featureSwitchEnableLogin=i.initSwitch("fs-enable-login",(e==null?void 0:e.enableUserBadge)??!0,"Disables/Enables logging in and thus disables editing all together. This effectively puts MapComplete into read-only mode."),r.wasInitialized("fs-userbadge")&&this.featureSwitchEnableLogin.setData(r.GetBooleanQueryParameter("fs-userbadge",void 0,"Legacy").data),this.featureSwitchSearch=i.initSwitch("fs-search",(e==null?void 0:e.enableSearch)??!0,"Disables/Enables the search bar"),this.featureSwitchBackgroundSelection=i.initSwitch("fs-background",(e==null?void 0:e.enableBackgroundLayerSelection)??!0,"Disables/Enables the background layer control"),this.featureSwitchFilter=i.initSwitch("fs-filter",(e==null?void 0:e.enableLayers)??!0,"Disables/Enables the filter view"),this.featureSwitchWelcomeMessage=i.initSwitch("fs-welcome-message",!0,"Disables/enables the help menu or welcome message"),this.featureSwitchCommunityIndex=i.initSwitch("fs-community-index",this.featureSwitchEnableLogin.data,"Disables/enables the button to get in touch with the community"),this.featureSwitchExtraLinkEnabled=i.initSwitch("fs-iframe-popout",!0,"Disables/Enables the extraLink button. By default, if in iframe mode and the welcome message is hidden, a popout button to the full mapcomplete instance is shown instead (unless disabled with this switch or another extraLink button is enabled)"),this.featureSwitchMoreQuests=i.initSwitch("fs-more-quests",(e==null?void 0:e.enableMoreQuests)??!0,"Disables/Enables the 'More Quests'-tab in the welcome message"),this.featureSwitchShareScreen=i.initSwitch("fs-share-screen",(e==null?void 0:e.enableShareScreen)??!0,"Disables/Enables the 'Share-screen'-tab in the welcome message"),this.featureSwitchGeolocation=i.initSwitch("fs-geolocation",(e==null?void 0:e.enableGeolocation)??!0,"Disables/Enables the geolocation button"),this.featureSwitchShowAllQuestions=i.initSwitch("fs-all-questions",(e==null?void 0:e.enableShowAllQuestions)??!1,"Always show all questions"),this.featureSwitchEnableExport=i.initSwitch("fs-export",(e==null?void 0:e.enableExportButton)??!0,"Enable the export as GeoJSON and CSV button");let h=!1;!S.runningFromConsole&&(location.hostname==="localhost"||location.hostname==="127.0.0.1")&&(h=!0),this.featureSwitchIsTesting=r.GetBooleanQueryParameter("test",h,"If true, 'dryrun' mode is activated. The app will behave as normal, except that changes to OSM will be printed onto the console instead of actually uploaded to osm.org"),this.featureSwitchIsDebugging=r.GetBooleanQueryParameter("debug",!1,"If true, shows some extra debugging help such as all the available tags on every object"),this.featureSwitchMorePrivacy=r.GetBooleanQueryParameter("moreprivacy",e.enableMorePrivacy,"If true, the location distance indication will not be written to the changeset and other privacy enhancing measures might be taken."),this.overpassUrl=r.GetQueryParameter("overpassUrl",((e==null?void 0:e.overpassUrl)??w.defaultOverpassUrls).join(","),"Point mapcomplete to a different overpass-instance. Example: https://overpass-api.de/api/interpreter").sync(a=>a==null?void 0:a.split(","),[],a=>a==null?void 0:a.join(",")),this.overpassTimeout=o.asInt(r.GetQueryParameter("overpassTimeout",""+(e==null?void 0:e.overpassTimeout),"Set a different timeout (in seconds) for queries in overpass")),this.overpassMaxZoom=o.asFloat(r.GetQueryParameter("overpassMaxZoom",""+(e==null?void 0:e.overpassMaxZoom)," point to switch between OSM-api and overpass")),this.osmApiTileSize=o.asInt(r.GetQueryParameter("osmApiTileSize",""+(e==null?void 0:e.osmApiTileSize),"Tilesize when the OSM-API is used to fetch data within a BBOX")),this.backgroundLayerId=r.GetQueryParameter("background",e==null?void 0:e.defaultBackgroundId,"The id of the background layer to start with")}}export{k as F,d as O};
//# sourceMappingURL=FeatureSwitchState-be687b34.js.map
