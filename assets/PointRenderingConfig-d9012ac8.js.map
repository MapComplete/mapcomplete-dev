{"version":3,"file":"PointRenderingConfig-d9012ac8.js","sources":["../../src/UI/Base/Title.ts","../../src/Logic/Tags/TagsFilter.ts","../../src/Logic/Tags/Tag.ts","../../src/Logic/Tags/Or.ts","../../src/Logic/Tags/RegexTag.ts","../../src/Logic/Tags/And.ts","../../src/Logic/Tags/ComparingTag.ts","../../src/Logic/Tags/SubstitutingTag.ts","../../src/Logic/Tags/TagUtils.ts","../../__vite-browser-external","../../src/UI/Base/List.ts","../../src/UI/Base/Paragraph.ts","../../src/UI/InputElement/Validator.ts","../../src/UI/InputElement/Validators/StringValidator.ts","../../src/UI/InputElement/Validators/TextValidator.ts","../../src/UI/InputElement/Validators/DateValidator.ts","../../src/UI/InputElement/Validators/IntValidator.ts","../../src/UI/InputElement/Validators/NatValidator.ts","../../src/UI/InputElement/Validators/LengthValidator.ts","../../src/UI/InputElement/Validators/DirectionValidator.ts","../../node_modules/wikibase-sdk/lib/utils/utils.js","../../node_modules/wikibase-sdk/lib/helpers/simplify_text_attributes.js","../../node_modules/wikibase-sdk/lib/helpers/wikibase_time_to_date_object.js","../../node_modules/wikibase-sdk/lib/helpers/helpers.js","../../node_modules/wikibase-sdk/lib/helpers/parse_claim.js","../../node_modules/wikibase-sdk/lib/helpers/rank.js","../../node_modules/wikibase-sdk/lib/helpers/simplify_claims.js","../../node_modules/wikibase-sdk/lib/helpers/simplify_forms.js","../../node_modules/wikibase-sdk/lib/helpers/simplify_senses.js","../../node_modules/wikibase-sdk/lib/helpers/sitelinks_languages.js","../../node_modules/wikibase-sdk/lib/helpers/sitelinks.js","../../node_modules/wikibase-sdk/lib/helpers/simplify_sitelinks.js","../../node_modules/wikibase-sdk/lib/helpers/simplify_sparql_results.js","../../node_modules/wikibase-sdk/lib/helpers/simplify.js","../../node_modules/wikibase-sdk/lib/helpers/simplify_entity.js","../../node_modules/wikibase-sdk/lib/helpers/parse_responses.js","../../node_modules/wikibase-sdk/lib/utils/build_url.js","../../node_modules/wikibase-sdk/lib/queries/search_entities.js","../../node_modules/wikibase-sdk/lib/queries/cirrus_search.js","../../node_modules/wikibase-sdk/lib/helpers/validate.js","../../node_modules/wikibase-sdk/lib/queries/get_entities.js","../../node_modules/wikibase-sdk/lib/queries/get_many_entities.js","../../node_modules/wikibase-sdk/lib/queries/get_revisions.js","../../node_modules/wikibase-sdk/lib/queries/get_entity_revision.js","../../node_modules/wikibase-sdk/lib/queries/get_entities_from_sitelinks.js","../../node_modules/wikibase-sdk/lib/queries/sparql_query.js","../../node_modules/wikibase-sdk/lib/queries/get_reverse_claims.js","../../node_modules/wikibase-sdk/lib/wikibase-sdk.js","../../node_modules/wikidata-sdk/wikidata-sdk.js","../../src/Logic/Web/Wikidata.ts","../../src/UI/Input/InputElement.ts","../../src/UI/Input/TextField.ts","../../src/UI/Base/Loading.ts","../../src/Logic/ImageProviders/ImageProvider.ts","../../src/Logic/ImageProviders/LicenseInfo.ts","../../src/Logic/Web/Wikimedia.ts","../../src/Logic/ImageProviders/WikimediaImageProvider.ts","../../src/UI/Wikipedia/WikidataPreviewBox.ts","../../src/UI/Base/Table.ts","../../src/UI/Wikipedia/WikidataSearchBox.ts","../../src/UI/InputElement/Validators/WikidataValidator.ts","../../src/UI/InputElement/Validators/PNatValidator.ts","../../src/UI/InputElement/Validators/FloatValidator.ts","../../src/UI/InputElement/Validators/PFloatValidator.ts","../../node_modules/email-validator/index.js","../../src/UI/InputElement/Validators/EmailValidator.ts","../../src/UI/InputElement/Validators/UrlValidator.ts","../../node_modules/libphonenumber-js/metadata.min.json.js","../../node_modules/libphonenumber-js/min/exports/withMetadataArgument.js","../../node_modules/libphonenumber-js/es6/ParseError.js","../../node_modules/libphonenumber-js/es6/constants.js","../../node_modules/libphonenumber-js/es6/tools/semver-compare.js","../../node_modules/libphonenumber-js/es6/metadata.js","../../node_modules/libphonenumber-js/es6/helpers/extension/createExtensionPattern.js","../../node_modules/libphonenumber-js/es6/helpers/isViablePhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extension/extractExtension.js","../../node_modules/libphonenumber-js/es6/helpers/parseDigits.js","../../node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/mergeArrays.js","../../node_modules/libphonenumber-js/es6/helpers/checkNumberLength.js","../../node_modules/libphonenumber-js/es6/isPossibleNumber_.js","../../node_modules/libphonenumber-js/es6/helpers/RFC3966.js","../../node_modules/libphonenumber-js/es6/helpers/matchesEntirely.js","../../node_modules/libphonenumber-js/es6/helpers/getNumberType.js","../../node_modules/libphonenumber-js/es6/validate_.js","../../node_modules/libphonenumber-js/es6/helpers/getPossibleCountriesForNumber.js","../../node_modules/libphonenumber-js/es6/helpers/applyInternationalSeparatorStyle.js","../../node_modules/libphonenumber-js/es6/helpers/formatNationalNumberUsingFormat.js","../../node_modules/libphonenumber-js/es6/helpers/getIddPrefix.js","../../node_modules/libphonenumber-js/es6/format_.js","../../node_modules/libphonenumber-js/es6/PhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/stripIddPrefix.js","../../node_modules/libphonenumber-js/es6/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extractNationalNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","../../node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCode.js","../../node_modules/libphonenumber-js/es6/helpers/getCountryByNationalNumber.js","../../node_modules/libphonenumber-js/es6/helpers/getCountryByCallingCode.js","../../node_modules/libphonenumber-js/es6/parse_.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumber_.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumber.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumberFromString_.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumberFromString.js","../../node_modules/libphonenumber-js/min/exports/parsePhoneNumberFromString.js","../../src/UI/InputElement/Validators/PhoneValidator.ts","../../src/UI/InputElement/Validators/OpeningHoursValidator.ts","../../src/UI/InputElement/Validators/ColorValidator.ts","../../src/UI/InputElement/Validators/TagKeyValidator.ts","../../src/UI/InputElement/Validators/SimpleTagValidator.ts","../../src/UI/InputElement/Validators/ImageUrlValidator.ts","../../src/UI/InputElement/Validators/TranslationValidator.ts","../../src/UI/InputElement/Validators/FediverseValidator.ts","../../src/UI/InputElement/Validators/IconValidator.ts","../../src/UI/InputElement/Validators/TagValidator.ts","../../src/UI/InputElement/Validators/IdValidator.ts","../../src/UI/InputElement/Validators.ts","../../src/Models/ThemeConfig/TagRenderingConfig.ts","../../src/Models/ThemeConfig/WithContextLoader.ts","../../src/assets/svg/Pin.svelte","../../src/assets/svg/Square.svelte","../../src/assets/svg/Circle.svelte","../../src/assets/svg/Checkmark.svelte","../../src/assets/svg/Clock.svelte","../../src/assets/svg/Close.svelte","../../src/assets/svg/Crosshair.svelte","../../src/assets/svg/Help.svelte","../../src/assets/svg/Home.svelte","../../src/assets/svg/Invalid.svelte","../../src/assets/svg/Location.svelte","../../src/assets/svg/Location_empty.svelte","../../src/assets/svg/Location_locked.svelte","../../src/assets/svg/Note.svelte","../../src/assets/svg/Resolved.svelte","../../src/assets/svg/Ring.svelte","../../src/assets/svg/Scissors.svelte","../../src/assets/svg/Teardrop.svelte","../../src/assets/svg/Teardrop_with_hole_green.svelte","../../src/assets/svg/Triangle.svelte","../../src/UI/Map/Icon.svelte","../../src/UI/Map/DynamicIcon.svelte","../../src/UI/Map/DynamicMarker.svelte","../../src/Models/ThemeConfig/PointRenderingConfig.ts"],"sourcesContent":["import BaseUIElement from \"../BaseUIElement\"\nimport { FixedUiElement } from \"./FixedUiElement\"\nimport { Utils } from \"../../Utils\"\n\nexport default class Title extends BaseUIElement {\n    private static readonly defaultClassesPerLevel = [\n        \"\",\n        \"text-3xl font-bold\",\n        \"text-2xl font-bold\",\n        \"text-xl font-bold\",\n        \"text-lg font-bold\",\n    ]\n    public readonly title: BaseUIElement\n    public readonly level: number\n    public readonly id: string\n\n    constructor(embedded: string | BaseUIElement, level: number = 3) {\n        super()\n        if (embedded === undefined) {\n            throw \"A title should have some content. Undefined is not allowed\"\n        }\n        if (typeof embedded === \"string\") {\n            this.title = new FixedUiElement(embedded)\n        } else {\n            this.title = embedded\n        }\n        this.level = level\n\n        let text: string = undefined\n        if (typeof embedded === \"string\") {\n            text = embedded\n        } else if (embedded instanceof FixedUiElement) {\n            text = embedded.content\n        } else {\n            if (!Utils.runningFromConsole) {\n                text = embedded.ConstructElement()?.textContent\n            }\n        }\n\n        this.id =\n            text\n                ?.replace(/ /g, \"-\")\n                ?.replace(/[?#.;:/]/, \"\")\n                ?.toLowerCase() ?? \"\"\n        this.SetClass(Title.defaultClassesPerLevel[level] ?? \"\")\n    }\n\n    AsMarkdown(): string {\n        const embedded = \" \" + this.title.AsMarkdown() + \" \"\n\n        if (this.level == 1) {\n            return \"\\n\\n\" + embedded + \"\\n\" + \"=\".repeat(embedded.length) + \"\\n\\n\"\n        }\n\n        if (this.level == 2) {\n            return \"\\n\\n\" + embedded + \"\\n\" + \"-\".repeat(embedded.length) + \"\\n\\n\"\n        }\n\n        return \"\\n\\n\" + \"#\".repeat(this.level) + embedded + \"\\n\\n\"\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const el = this.title.ConstructElement()\n        if (el === undefined) {\n            return undefined\n        }\n        const h = document.createElement(\"h\" + this.level)\n        h.appendChild(el)\n        el.id = this.id\n        return h\n    }\n}\n","export abstract class TagsFilter {\n    abstract asOverpass(): string[]\n\n    abstract isUsableAsAnswer(): boolean\n\n    /**\n     * Indicates some form of equivalency:\n     * if `this.shadows(t)`, then `this.matches(properties)` implies that `t.matches(properties)` for all possible properties\n     */\n    abstract shadows(other: TagsFilter): boolean\n\n    abstract matchesProperties(properties: Record<string, string>): boolean\n\n    abstract asHumanString(\n        linkToWiki: boolean,\n        shorten: boolean,\n        properties: Record<string, string>\n    ): string\n\n    abstract usedKeys(): string[]\n\n    /**\n     * Returns all normal key/value pairs\n     * Regex tags, substitutions, comparisons, ... are exempt\n     */\n    abstract usedTags(): { key: string; value: string }[]\n\n    /**\n     * Converts the tagsFilter into a list of key-values that should be uploaded to OSM.\n     * Throws an error if not applicable.\n     *\n     * Note: properties are the already existing tags-object. It is only used in the substituting tag\n     */\n    abstract asChange(properties: Record<string, string>): { k: string; v: string }[]\n\n    /**\n     * Returns an optimized version (or self) of this tagsFilter\n     */\n    abstract optimize(): TagsFilter | boolean\n\n    /**\n     * Returns 'true' if the tagsfilter might select all features (i.e. the filter will return everything from OSM, except a few entries).\n     *\n     * A typical negative tagsfilter is 'key!=value'\n     *\n     * import {RegexTag} from \"./RegexTag\";\n     * import {Tag} from \"./Tag\";\n     * import {And} from \"./And\";\n     * import {Or} from \"./Or\";\n     *\n     * new Tag(\"key\",\"value\").isNegative() // => false\n     * new And([new RegexTag(\"key\",\"value\", true)]).isNegative() // => true\n     * new Or([new RegexTag(\"key\",\"value\", true), new Tag(\"x\",\"y\")]).isNegative() // => true\n     * new And([new RegexTag(\"key\",\"value\", true), new Tag(\"x\",\"y\")]).isNegative() // => false\n     */\n    abstract isNegative(): boolean\n\n    /**\n     * Walks the entire tree, every tagsFilter will be passed into the function once\n     */\n    abstract visit(f: (tagsFilter: TagsFilter) => void)\n}\n","import { Utils } from \"../../Utils\"\nimport { TagsFilter } from \"./TagsFilter\"\n\nexport class Tag extends TagsFilter {\n    public key: string\n    public value: string\n    constructor(key: string, value: string) {\n        super()\n        this.key = key\n        this.value = value\n        if (key === undefined || key === \"\") {\n            throw \"Invalid key: undefined or empty\"\n        }\n        if (value === undefined) {\n            throw `Invalid value while constructing a Tag with key '${key}': value is undefined`\n        }\n        if (value === \"*\") {\n            console.warn(`Got suspicious tag ${key}=*   ; did you mean ${key}~* ?`)\n        }\n    }\n\n    /**\n     *\n     * const tag = new Tag(\"key\",\"value\")\n     * tag.matchesProperties({\"key\": \"value\"}) // =>  true\n     * tag.matchesProperties({\"key\": \"z\"}) // =>  false\n     * tag.matchesProperties({\"key\": \"\"}) // => false\n     * tag.matchesProperties({\"other_key\": \"\"}) // => false\n     * tag.matchesProperties({\"other_key\": \"value\"}) // =>  false\n     *\n     * const isEmpty = new Tag(\"key\",\"\")\n     * isEmpty.matchesProperties({\"key\": \"value\"}) // => false\n     * isEmpty.matchesProperties({\"key\": \"\"}) // => true\n     * isEmpty.matchesProperties({\"other_key\": \"\"}) // => true\n     * isEmpty.matchesProperties({\"other_key\": \"value\"}) // => true\n     * isEmpty.matchesProperties({\"key\": undefined}) // => true\n     *\n     * const isTrue = new Tag(\"key\": \"true\")\n     * isTrue.matchesProperties({\"key\":\"true\"}) // => true\n     * isTrue.matchesProperties({\"key\": true}) // => true\n     */\n    matchesProperties(properties: Record<string, string>): boolean {\n        let foundValue = properties[this.key]\n\n        if (foundValue === undefined && (this.value === \"\" || this.value === undefined)) {\n            // The tag was not found\n            // and it shouldn't be found!\n            return true\n        }\n        if (typeof foundValue !== \"string\") {\n            if (foundValue === true && (this.value === \"true\" || this.value === \"yes\")) {\n                return true\n            }\n            if (foundValue === false && (this.value === \"false\" || this.value === \"no\")) {\n                return true\n            }\n            foundValue = \"\" + foundValue\n        }\n        return foundValue === this.value\n    }\n\n    asOverpass(): string[] {\n        if (this.value === \"\") {\n            // NOT having this key\n            return ['[!\"' + this.key + '\"]']\n        }\n        return [`[\"${this.key}\"=\"${this.value}\"]`]\n    }\n\n    /**\n\n     const t = new Tag(\"key\", \"value\")\n     t.asHumanString() // => \"key=value\"\n     t.asHumanString(true) // => \"<a href='https://wiki.openstreetmap.org/wiki/Key:key' target='_blank'>key</a>=<a href='https://wiki.openstreetmap.org/wiki/Tag:key%3Dvalue' target='_blank'>value</a>\"\n     */\n    asHumanString(\n        linkToWiki?: boolean,\n        shorten?: boolean,\n        currentProperties?: Record<string, string>\n    ) {\n        let v = this.value\n        if (typeof v !== \"string\") {\n            v = JSON.stringify(v)\n        }\n        if (shorten) {\n            v = Utils.EllipsesAfter(v, 25)\n        }\n        if ((v === \"\" || v === undefined) && currentProperties !== undefined) {\n            // This tag will be removed if in the properties, so we indicate this with special rendering\n            if ((currentProperties[this.key] ?? \"\") === \"\") {\n                // This tag is not present in the current properties, so this tag doesn't change anything\n                return \"\"\n            }\n            return \"<span class='line-through'>\" + this.key + \"</span>\"\n        }\n        if (linkToWiki) {\n            return (\n                `<a href='https://wiki.openstreetmap.org/wiki/Key:${this.key}' target='_blank'>${this.key}</a>` +\n                `=` +\n                `<a href='https://wiki.openstreetmap.org/wiki/Tag:${this.key}%3D${this.value}' target='_blank'>${v}</a>`\n            )\n        }\n        return this.key + \"=\" + v\n    }\n\n    isUsableAsAnswer(): boolean {\n        return true\n    }\n\n    /**\n     *\n     * import {RegexTag} from \"./RegexTag\";\n     *\n     * // should handle advanced regexes\n     * new Tag(\"key\", \"aaa\").shadows(new RegexTag(\"key\", /a+/)) // => true\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"key\", /^..*$/, true)) // => false\n     * new Tag(\"key\",\"value\").shadows(new Tag(\"key\",\"value\")) // => true\n     * new Tag(\"key\",\"some_other_value\").shadows(new RegexTag(\"key\", \"value\", true)) // => true\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"key\", \"value\", true)) // => false\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"otherkey\", \"value\", true)) // => false\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"otherkey\", \"value\", false)) // => false\n     */\n    shadows(other: TagsFilter): boolean {\n        if (other[\"key\"] !== undefined) {\n            if (other[\"key\"] !== this.key) {\n                return false\n            }\n        }\n        return other.matchesProperties({ [this.key]: this.value })\n    }\n\n    usedKeys(): string[] {\n        return [this.key]\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        if (this.value == \"\") {\n            return []\n        }\n        return [this]\n    }\n\n    asChange(): { k: string; v: string }[] {\n        return [{ k: this.key, v: this.value }]\n    }\n\n    optimize(): TagsFilter | boolean {\n        return this\n    }\n\n    isNegative(): boolean {\n        return false\n    }\n\n    visit(f: (tagsFilter: TagsFilter) => void) {\n        f(this)\n    }\n}\n","import { TagsFilter } from \"./TagsFilter\"\nimport { TagUtils } from \"./TagUtils\"\nimport { And } from \"./And\"\n\nexport class Or extends TagsFilter {\n    public or: TagsFilter[]\n\n    constructor(or: TagsFilter[]) {\n        super()\n        this.or = or\n    }\n\n    public static construct(or: TagsFilter[]): TagsFilter {\n        if (or.length === 1) {\n            return or[0]\n        }\n        return new Or(or)\n    }\n\n    matchesProperties(properties: Record<string, string>): boolean {\n        for (const tagsFilter of this.or) {\n            if (tagsFilter.matchesProperties(properties)) {\n                return true\n            }\n        }\n\n        return false\n    }\n\n    /**\n     *\n     * import {Tag} from \"./Tag\";\n     * import {RegexTag} from \"./RegexTag\";\n     *\n     * const and = new And([new Tag(\"boundary\",\"protected_area\"), new RegexTag(\"protect_class\",\"98\",true)])\n     * const or = new Or([and, new Tag(\"leisure\", \"nature_reserve\"])\n     * or.asOverpass() // => [ \"[\\\"boundary\\\"=\\\"protected_area\\\"][\\\"protect_class\\\"!=\\\"98\\\"]\", \"[\\\"leisure\\\"=\\\"nature_reserve\\\"]\" ]\n     *\n     * // should fuse nested ors into a single list\n     * const or = new Or([new Tag(\"key\",\"value\"), new Or([new Tag(\"key1\",\"value1\"), new Tag(\"key2\",\"value2\")])])\n     * or.asOverpass() // => [ `[\"key\"=\"value\"]`, `[\"key1\"=\"value1\"]`, `[\"key2\"=\"value2\"]` ]\n     */\n    asOverpass(): string[] {\n        const choices = []\n        for (const tagsFilter of this.or) {\n            const subChoices = tagsFilter.asOverpass()\n            choices.push(...subChoices)\n        }\n        return choices\n    }\n\n    asHumanString(linkToWiki: boolean, shorten: boolean, properties) {\n        return this.or.map((t) => t.asHumanString(linkToWiki, shorten, properties)).join(\"|\")\n    }\n\n    isUsableAsAnswer(): boolean {\n        return false\n    }\n\n    shadows(other: TagsFilter): boolean {\n        if (other instanceof Or) {\n            for (const selfTag of this.or) {\n                let matchFound = false\n                for (let i = 0; i < other.or.length && !matchFound; i++) {\n                    let otherTag = other.or[i]\n                    matchFound = selfTag.shadows(otherTag)\n                }\n                if (!matchFound) {\n                    return false\n                }\n            }\n            return true\n        }\n        return false\n    }\n\n    usedKeys(): string[] {\n        return [].concat(...this.or.map((subkeys) => subkeys.usedKeys()))\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        return [].concat(...this.or.map((subkeys) => subkeys.usedTags()))\n    }\n\n    asChange(properties: Record<string, string>): { k: string; v: string }[] {\n        const result = []\n        for (const tagsFilter of this.or) {\n            result.push(...tagsFilter.asChange(properties))\n        }\n        return result\n    }\n\n    /**\n     * IN some contexts, some expressions can be considered true, e.g.\n     * (X=Y & (A=B | X=Y))\n     *        ^---------^\n     * When the evaluation hits (A=B | X=Y), we know _for sure_ that X=Y _does match, as it would have failed the first clause otherwise.\n     * This means we can safely ignore this in the OR\n     *\n     * new Or([ new Tag(\"key\",\"value\") ,new Tag(\"other_key\",\"value\")]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), true) // =>true\n     * new Or([ new Tag(\"key\",\"value\") ,new Tag(\"other_key\",\"value\")]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), false) // => new Tag(\"other_key\",\"value\")\n     * new Or([ new Tag(\"key\",\"value\") ]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), true) // => true\n     * new Or([ new Tag(\"key\",\"value\") ]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), false) // => false\n     * new Or([new RegexTag(\"x\", \"y\", true),new RegexTag(\"c\", \"d\")]).removePhraseConsideredKnown(new Tag(\"foo\",\"bar\"), false) // => new Or([new RegexTag(\"x\", \"y\", true),new RegexTag(\"c\", \"d\")])\n     */\n    removePhraseConsideredKnown(knownExpression: TagsFilter, value: boolean): TagsFilter | boolean {\n        const newOrs: TagsFilter[] = []\n        for (const tag of this.or) {\n            if (tag instanceof Or) {\n                throw \"Optimize expressions before using removePhraseConsideredKnown\"\n            }\n            if (tag instanceof And) {\n                const r = tag.removePhraseConsideredKnown(knownExpression, value)\n                if (r === false) {\n                    continue\n                }\n                if (r === true) {\n                    return true\n                }\n                newOrs.push(r)\n                continue\n            }\n            if (value && knownExpression.shadows(tag)) {\n                /**\n                 * At this point, we do know that 'knownExpression' is true in every case\n                 * As `shadows` does define that 'tag' MUST be true if 'knownExpression' is true,\n                 * we can be sure that 'tag' is true as well.\n                 *\n                 * \"True\" is the absorbing element in an OR, so we can return true\n                 */\n                return true\n            }\n            if (!value && tag.shadows(knownExpression)) {\n                /**\n                 * We know that knownExpression is unmet.\n                 * if the tag shadows 'knownExpression' (which is the case when control flows gets here),\n                 * then tag CANNOT be met too, as known expression is not met.\n                 *\n                 * This implies that 'tag' must be false too!\n                 * false is the neutral element in an OR\n                 */\n                continue\n            }\n            newOrs.push(tag)\n        }\n        if (newOrs.length === 0) {\n            return false\n        }\n        return Or.construct(newOrs)\n    }\n\n    optimize(): TagsFilter | boolean {\n        if (this.or.length === 0) {\n            return false\n        }\n\n        const optimizedRaw = this.or\n            .map((t) => t.optimize())\n            .filter((t) => t !== false /* false is the neutral element in an OR, we drop them*/)\n        if (optimizedRaw.some((t) => t === true)) {\n            // We have an OR with a contained true: this is always 'true'\n            return true\n        }\n        const optimized = <TagsFilter[]>optimizedRaw\n\n        const newOrs: TagsFilter[] = []\n        let containedAnds: And[] = []\n        for (const tf of optimized) {\n            if (tf instanceof Or) {\n                // expand all the nested ors...\n                newOrs.push(...tf.or)\n            } else if (tf instanceof And) {\n                // partition of all the ands\n                containedAnds.push(tf)\n            } else {\n                newOrs.push(tf)\n            }\n        }\n\n        {\n            let dirty = false\n            do {\n                const cleanedContainedANds: And[] = []\n                outer: for (let containedAnd of containedAnds) {\n                    for (const known of newOrs) {\n                        // input for optimazation: (K=V | (X=Y & K=V))\n                        // containedAnd: (X=Y & K=V)\n                        // newOrs (and thus known): (K=V) --> false\n                        const cleaned = containedAnd.removePhraseConsideredKnown(known, false)\n                        if (cleaned === false) {\n                            // The neutral element within an OR\n                            continue outer // skip addition too\n                        }\n                        if (cleaned === true) {\n                            // zero element\n                            return true\n                        }\n                        if (cleaned instanceof And) {\n                            containedAnd = cleaned\n                            continue // clean up with the other known values\n                        }\n                        // the 'and' dissolved into a normal tag -> it has to be added to the newOrs\n                        newOrs.push(cleaned)\n                        dirty = true // rerun this algo later on\n                        continue outer\n                    }\n                    cleanedContainedANds.push(containedAnd)\n                }\n                containedAnds = cleanedContainedANds\n            } while (dirty)\n        }\n        // Extract common keys from the ANDS\n        if (containedAnds.length === 1) {\n            newOrs.push(containedAnds[0])\n        } else if (containedAnds.length > 1) {\n            let commonValues: TagsFilter[] = containedAnds[0].and\n            for (let i = 1; i < containedAnds.length && commonValues.length > 0; i++) {\n                const containedAnd = containedAnds[i]\n                commonValues = commonValues.filter((cv) =>\n                    containedAnd.and.some((candidate) => candidate.shadows(cv))\n                )\n            }\n            if (commonValues.length === 0) {\n                newOrs.push(...containedAnds)\n            } else {\n                const newAnds: TagsFilter[] = []\n                for (const containedAnd of containedAnds) {\n                    const elements = containedAnd.and.filter(\n                        (candidate) => !commonValues.some((cv) => cv.shadows(candidate))\n                    )\n                    newAnds.push(And.construct(elements))\n                }\n\n                commonValues.push(Or.construct(newAnds))\n                const result = new And(commonValues).optimize()\n                if (result === true) {\n                    return true\n                } else if (result === false) {\n                    // neutral element: skip\n                } else {\n                    newOrs.push(And.construct(commonValues))\n                }\n            }\n        }\n\n        if (newOrs.length === 0) {\n            return false\n        }\n\n        if (TagUtils.ContainsOppositeTags(newOrs)) {\n            return true\n        }\n\n        TagUtils.sortFilters(newOrs, false)\n\n        return Or.construct(newOrs)\n    }\n\n    isNegative(): boolean {\n        return this.or.some((t) => t.isNegative())\n    }\n\n    visit(f: (tagsFilter: TagsFilter) => void) {\n        f(this)\n        this.or.forEach((t) => t.visit(f))\n    }\n}\n","import { Tag } from \"./Tag\"\nimport { TagsFilter } from \"./TagsFilter\"\n\nexport class RegexTag extends TagsFilter {\n    public readonly key: RegExp | string\n    public readonly value: RegExp | string\n    public readonly invert: boolean\n    public readonly matchesEmpty: boolean\n\n    constructor(key: string | RegExp, value: RegExp | string, invert: boolean = false) {\n        super()\n        this.key = key\n        this.value = value\n        this.invert = invert\n        this.matchesEmpty = RegexTag.doesMatch(\"\", this.value)\n    }\n\n    /**\n     *\n     * Checks that the value provided by the object properties (`fromTag`) match the specified regex `possibleRegex\n     *\n     * RegexTag.doesMatch(\"abc\", /abc/) // => true\n     * RegexTag.doesMatch(\"ab\", /abc/) // => false\n     * RegexTag.doesMatch(\"\", /.+/) // => false\n     * RegexTag.doesMatch(\"\", new RegExp(\".*\")) // => true\n     *\n     * @param fromTag\n     * @param possibleRegex\n     * @private\n     */\n    private static doesMatch(fromTag: string | number, possibleRegex: string | RegExp): boolean {\n        if (fromTag === undefined) {\n            return\n        }\n        if (typeof fromTag === \"number\") {\n            fromTag = \"\" + fromTag\n        }\n        if (typeof possibleRegex === \"string\") {\n            return fromTag === possibleRegex\n        }\n        return possibleRegex.test(fromTag)\n    }\n\n    private static source(r: string | RegExp) {\n        if (typeof r === \"string\") {\n            return r\n        }\n        return r.source\n    }\n\n    /**\n     * new RegexTag(\"a\", /^[xyz]$/).asOverpass() // => [ `[\"a\"~\"^[xyz]$\"]` ]\n     *\n     * // A wildcard regextag should only give the key\n     * new RegexTag(\"a\", /^..*$/).asOverpass() // => [ `[\"a\"]` ]\n     * new RegexTag(\"a\", /.+/).asOverpass() // => [ `[\"a\"]` ]\n     *\n     * // A regextag with a regex key should give correct output\n     * new RegexTag(/a.*x/, /^..*$/).asOverpass() // => [ `[~\"a.*x\"~\\\"^..*$\\\"]` ]\n     *\n     * // A regextag with a case invariant flag should signal this to overpass\n     * new RegexTag(\"key\", /^.*value.*$/i).asOverpass() // => [ `[\"key\"~\\\"^.*value.*$\\\",i]` ]\n     */\n    asOverpass(): string[] {\n        const inv = this.invert ? \"!\" : \"\"\n        if (typeof this.key !== \"string\") {\n            // The key is a regex too\n            return [`[~\"${this.key.source}\"${inv}~\"${RegexTag.source(this.value)}\"]`]\n        }\n\n        if (this.value instanceof RegExp) {\n            const src = this.value.source\n            if (src === \"^..*$\" || src === \".+\") {\n                // anything goes\n                return [`[${inv}\"${this.key}\"]`]\n            }\n            const modifier = this.value.ignoreCase ? \",i\" : \"\"\n            return [`[\"${this.key}\"${inv}~\"${src}\"${modifier}]`]\n        } else {\n            // Normal key and normal value\n            return [`[\"${this.key}\"${inv}=\"${this.value}\"]`]\n        }\n    }\n\n    isUsableAsAnswer(): boolean {\n        return false\n    }\n\n    /**\n     * Checks if this tag matches the given properties\n     *\n     * const isNotEmpty = new RegexTag(\"key\",/^$/, true);\n     * isNotEmpty.matchesProperties({\"key\": \"value\"}) // => true\n     * isNotEmpty.matchesProperties({\"key\": \"other_value\"}) // => true\n     * isNotEmpty.matchesProperties({\"key\": \"\"}) // => false\n     * isNotEmpty.matchesProperties({\"other_key\": \"\"}) // => false\n     * isNotEmpty.matchesProperties({\"other_key\": \"value\"}) // => false\n     *\n     * const isNotEmpty = new RegexTag(\"key\",/^..*$/, true);\n     * isNotEmpty.matchesProperties({\"key\": \"value\"}) // => false\n     * isNotEmpty.matchesProperties({\"key\": \"other_value\"}) // => false\n     * isNotEmpty.matchesProperties({\"key\": \"\"}) // => true\n     * isNotEmpty.matchesProperties({\"other_key\": \"\"}) // => true\n     * isNotEmpty.matchesProperties({\"other_key\": \"value\"}) // => true\n     *\n     * const notRegex = new RegexTag(\"x\", /^y$/, true)\n     * notRegex.matchesProperties({\"x\": \"y\"}) // => false\n     * notRegex.matchesProperties({\"x\": \"z\"}) // => true\n     * notRegex.matchesProperties({\"x\": \"\"}) // => true\n     * notRegex.matchesProperties({}) // => true\n     *\n     * const bicycleTubeRegex = new RegexTag(\"vending\", /^.*bicycle_tube.*$/)\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"bicycle_tube\"}) // => true\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"something;bicycle_tube\"}) // => true\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"bicycle_tube;something\"}) // => true\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"xyz;bicycle_tube;something\"}) // => true\n     *\n     * const nameStartsWith = new RegexTag(\"name\", /^[sS]peelbox.*$/)\n     * nameStartsWith.matchesProperties({\"name\": \"Speelbos Sint-Anna\"} => true\n     * nameStartsWith.matchesProperties({\"name\": \"speelbos Sint-Anna\"} => true\n     * nameStartsWith.matchesProperties({\"name\": \"Sint-Anna\"} => false\n     * nameStartsWith.matchesProperties({\"name\": \"\"} => false\n     *\n     * const notEmptyList = new RegexTag(\"xyz\", /^\\[\\]$/, true)\n     * notEmptyList.matchesProperties({\"xyz\": undefined}) // => true\n     * notEmptyList.matchesProperties({\"xyz\": \"[]\"}) // => false\n     * notEmptyList.matchesProperties({\"xyz\": \"[\\\"abc\\\"]\"}) // => true\n     *\n     * const importMatch = new RegexTag(\"tags\", /(^|.*;)amenity=public_bookcase($|;.*)/)\n     * importMatch.matchesProperties({\"tags\": \"amenity=public_bookcase;name=test\"}) // =>true\n     * importMatch.matchesProperties({\"tags\": \"amenity=public_bookcase\"}) // =>true\n     * importMatch.matchesProperties({\"tags\": \"name=test;amenity=public_bookcase\"}) // =>true\n     * importMatch.matchesProperties({\"tags\": \"amenity=bench\"}) // =>false\n     *\n     * new RegexTag(\"key\",\"value\").matchesProperties({\"otherkey\":\"value\"}) // => false\n     * new RegexTag(\"key\",\"value\",true).matchesProperties({\"otherkey\":\"something\"}) // => true\n     *\n     * const v: string = <any> {someJson: \"\"}\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": v}) // => true\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": \"\"}) // => true\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": null}) // => true\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": undefined}) // => true\n     *\n     * const v: string = <any> {someJson: \"\"}\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": null}) // => false\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": undefined}) // => false\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": v}) // => true\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": \"\"}) // => false\n     *\n     * // Show work with non-string objects\n     * new RegexTag(\"key\", \"true\").matchesProperties({\"key\": true}) // => true\n     * new RegexTag(\"key\", \"true\", true).matchesProperties({\"key\": true}) // => false\n     */\n    matchesProperties(tags: Record<string, string | number | boolean>): boolean {\n        if (typeof this.key === \"string\") {\n            let value = tags[this.key]\n            if (!value || value === \"\") {\n                // No tag is known, so we assume the empty string\n                // If this regexTag matches the empty string, we return true, otherwise false\n                // (Note: if inverted, we must reverse this)\n                return this.invert !== this.matchesEmpty\n            }\n\n            if (typeof value === \"string\") {\n                return RegexTag.doesMatch(value, this.value) != this.invert\n            }\n\n            // The value under test is _not_ a string; it can be a culculated tag, thus be e.g. a number or a boolean\n            // It might also be an object\n\n            if (typeof this.value !== \"string\") {\n                const regExp = this.value\n                if (regExp.source === \".*\") {\n                    // We match anything, and we do have some value\n                    return !this.invert\n                }\n            }\n            if (typeof value !== \"string\") {\n                value = JSON.stringify(value)\n            }\n            return RegexTag.doesMatch(value, this.value) != this.invert\n        }\n\n        for (const key in tags) {\n            if (key === undefined) {\n                continue\n            }\n            if (RegexTag.doesMatch(key, this.key)) {\n                let value = tags[key] ?? \"\"\n                if (typeof value !== \"string\") {\n                    value = JSON.stringify(value)\n                }\n                return RegexTag.doesMatch(value, this.value) != this.invert\n            }\n        }\n        if (this.matchesEmpty) {\n            // The value is 'empty'\n            return !this.invert\n        }\n        // The matching key was not found\n        return this.invert\n    }\n\n    asHumanString() {\n        if (typeof this.key === \"string\") {\n            const oper = typeof this.value === \"string\" ? \"=\" : \"~\"\n            return `${this.key}${this.invert ? \"!\" : \"\"}${oper}${RegexTag.source(this.value)}`\n        }\n        return `${this.key.source}${this.invert ? \"!\" : \"\"}~~${RegexTag.source(this.value)}`\n    }\n\n    /**\n     *\n     * new RegexTag(\"key\",\"value\").shadows(new Tag(\"key\",\"value\")) // => true\n     * new RegexTag(\"key\",/value/).shadows(new RegexTag(\"key\",\"value\")) // => true\n     * new RegexTag(\"key\",/^..*$/).shadows(new Tag(\"key\",\"value\")) // => false\n     * new RegexTag(\"key\",/^..*$/).shadows(new Tag(\"other_key\",\"value\")) // => false\n     * new RegexTag(\"key\", /^a+$/).shadows(new Tag(\"key\", \"a\")) // => false\n     *\n     *\n     * // should not shadow too eagerly: the first tag might match 'key=abc', the second won't\n     *  new RegexTag(\"key\", /^..*$/).shadows(new Tag(\"key\", \"some_value\")) // => false\n     *\n     * // should handle 'invert'\n     * new RegexTag(\"key\",/^..*$/, true).shadows(new Tag(\"key\",\"value\")) // => false\n     * new RegexTag(\"key\",/^..*$/, true).shadows(new Tag(\"key\",\"\")) // => true\n     * new RegexTag(\"key\",\"value\", true).shadows(new Tag(\"key\",\"value\")) // => false\n     * new RegexTag(\"key\",\"value\", true).shadows(new Tag(\"key\",\"some_other_value\")) // => false\n     */\n    shadows(other: TagsFilter): boolean {\n        if (other instanceof RegexTag) {\n            if ((other.key[\"source\"] ?? other.key) !== (this.key[\"source\"] ?? this.key)) {\n                // Keys don't match, never shadowing\n                return false\n            }\n            if (\n                (other.value[\"source\"] ?? other.key) === (this.value[\"source\"] ?? this.key) &&\n                this.invert == other.invert\n            ) {\n                // Values (and inverts) match\n                return true\n            }\n            if (typeof other.value === \"string\") {\n                const valuesMatch = RegexTag.doesMatch(other.value, this.value)\n                if (!this.invert && !other.invert) {\n                    // this: key~value, other: key=value\n                    return valuesMatch\n                }\n                if (this.invert && !other.invert) {\n                    // this: key!~value, other: key=value\n                    return !valuesMatch\n                }\n                if (!this.invert && other.invert) {\n                    // this: key~value, other: key!=value\n                    return !valuesMatch\n                }\n                if (!this.invert && !other.invert) {\n                    // this: key!~value, other: key!=value\n                    return valuesMatch\n                }\n            }\n            return false\n        }\n        if (other instanceof Tag) {\n            if (!RegexTag.doesMatch(other.key, this.key)) {\n                // Keys don't match\n                return false\n            }\n\n            if (this.value[\"source\"] === \"^..*$\") {\n                if (this.invert) {\n                    return other.value === \"\"\n                }\n                return false\n            }\n\n            if (this.invert) {\n                /*\n                 * this: \"a!=b\"\n                 * other: \"a=c\"\n                 * actual property: a=x\n                 * In other words: shadowing will never occur here\n                 */\n                return false\n            }\n            // Unless the values are the same, it is pretty hard to figure out if they are shadowing. This is future work\n            return (this.value[\"source\"] ?? this.value) === other.value\n        }\n        return false\n    }\n\n    usedKeys(): string[] {\n        if (typeof this.key === \"string\") {\n            return [this.key]\n        }\n        throw \"Key cannot be determined as it is a regex\"\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        return []\n    }\n\n    asChange(): { k: string; v: string }[] {\n        if (this.invert) {\n            return []\n        }\n        if (typeof this.key === \"string\") {\n            if (typeof this.value === \"string\") {\n                return [{ k: this.key, v: this.value }]\n            }\n            return [{ k: this.key, v: undefined }]\n        }\n        console.error(\"Cannot export regex tag to asChange; \", this.key, this.value)\n        return []\n    }\n\n    optimize(): TagsFilter | boolean {\n        return this\n    }\n\n    isNegative(): boolean {\n        return this.invert\n    }\n\n    visit(f: (TagsFilter) => void) {\n        f(this)\n    }\n}\n","import { TagsFilter } from \"./TagsFilter\"\nimport { Or } from \"./Or\"\nimport { TagUtils } from \"./TagUtils\"\nimport { Tag } from \"./Tag\"\nimport { RegexTag } from \"./RegexTag\"\n\nexport class And extends TagsFilter {\n    public and: TagsFilter[]\n\n    constructor(and: TagsFilter[]) {\n        super()\n        this.and = and\n    }\n\n    public static construct(and: TagsFilter[]): TagsFilter {\n        if (and.length === 1) {\n            return and[0]\n        }\n        return new And(and)\n    }\n\n    private static combine(filter: string, choices: string[]): string[] {\n        const values = []\n        for (const or of choices) {\n            values.push(filter + or)\n        }\n        return values\n    }\n\n    normalize() {\n        const ands = []\n        for (const c of this.and) {\n            if (c instanceof And) {\n                ands.push(...c.and)\n            } else {\n                ands.push(c)\n            }\n        }\n        return new And(ands)\n    }\n\n    matchesProperties(tags: Record<string, string>): boolean {\n        for (const tagsFilter of this.and) {\n            if (!tagsFilter.matchesProperties(tags)) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    /**\n     *\n     * const and = new And([new Tag(\"boundary\",\"protected_area\"), new RegexTag(\"protect_class\",\"98\",true)])\n     * and.asOverpass() // => [ \"[\\\"boundary\\\"=\\\"protected_area\\\"][\\\"protect_class\\\"!=\\\"98\\\"]\" ]\n     */\n    asOverpass(): string[] {\n        let allChoices: string[] = null\n        for (const andElement of this.and) {\n            const andElementFilter = andElement.asOverpass()\n            if (allChoices === null) {\n                allChoices = andElementFilter\n                continue\n            }\n\n            const newChoices: string[] = []\n            for (const choice of allChoices) {\n                newChoices.push(...And.combine(choice, andElementFilter))\n            }\n            allChoices = newChoices\n        }\n        return allChoices\n    }\n\n    asHumanString(linkToWiki: boolean, shorten: boolean, properties) {\n        return this.and\n            .map((t) => t.asHumanString(linkToWiki, shorten, properties))\n            .filter((x) => x !== \"\")\n            .join(\"&\")\n    }\n\n    isUsableAsAnswer(): boolean {\n        for (const t of this.and) {\n            if (!t.isUsableAsAnswer()) {\n                return false\n            }\n        }\n        return true\n    }\n\n    /**\n     * const t0 = new And([\n     *     new Tag(\"valves:special\", \"A\"),\n     *     new Tag(\"valves\", \"A\")\n     * ])\n     * const t1 = new And([new Tag(\"valves\", \"A\")])\n     * const t2 = new And([new Tag(\"valves\", \"B\")])\n     * t0.shadows(t0) // => true\n     * t1.shadows(t1) // => true\n     * t2.shadows(t2) // => true\n     * t0.shadows(t1) // => false\n     * t0.shadows(t2) // => false\n     * t1.shadows(t0) // => false\n     * t1.shadows(t2) // => false\n     * t2.shadows(t0) // => false\n     * t2.shadows(t1) // => false\n     */\n    shadows(other: TagsFilter): boolean {\n        if (!(other instanceof And)) {\n            return false\n        }\n\n        for (const selfTag of this.and) {\n            let matchFound = false\n            for (const otherTag of other.and) {\n                matchFound = selfTag.shadows(otherTag)\n                if (matchFound) {\n                    break\n                }\n            }\n            if (!matchFound) {\n                return false\n            }\n        }\n\n        for (const otherTag of other.and) {\n            let matchFound = false\n            for (const selfTag of this.and) {\n                matchFound = selfTag.shadows(otherTag)\n                if (matchFound) {\n                    break\n                }\n            }\n            if (!matchFound) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n    usedKeys(): string[] {\n        return [].concat(...this.and.map((subkeys) => subkeys.usedKeys()))\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        return [].concat(...this.and.map((subkeys) => subkeys.usedTags()))\n    }\n\n    asChange(properties: Record<string, string>): { k: string; v: string }[] {\n        const result = []\n        for (const tagsFilter of this.and) {\n            result.push(...tagsFilter.asChange(properties))\n        }\n        return result\n    }\n\n    /**\n     * IN some contexts, some expressions can be considered true, e.g.\n     * (X=Y | (A=B & X=Y))\n     *        ^---------^\n     * When the evaluation hits (A=B & X=Y), we know _for sure_ that X=Y does _not_ match, as it would have matched the first clause otherwise.\n     * This means that the entire 'AND' is considered FALSE\n     *\n     * new And([ new Tag(\"key\",\"value\") ,new Tag(\"other_key\",\"value\")]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), true) // => new Tag(\"other_key\",\"value\")\n     * new And([ new Tag(\"key\",\"value\") ,new Tag(\"other_key\",\"value\")]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), false) // => false\n     * new And([ new RegexTag(\"key\",/^..*$/) ,new Tag(\"other_key\",\"value\")]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), true) // => new Tag(\"other_key\",\"value\")\n     * new And([ new Tag(\"key\",\"value\") ]).removePhraseConsideredKnown(new Tag(\"key\",\"value\"), true) // => true\n     *\n     * // should remove 'club~*' if we know that 'club=climbing'\n     * const expr = <And> TagUtils.Tag({and: [\"sport=climbing\", {or:[\"club~*\", \"office~*\"]}]} )\n     * expr.removePhraseConsideredKnown(new Tag(\"club\",\"climbing\"), true) // => new Tag(\"sport\",\"climbing\")\n     *\n     * const expr = <And> TagUtils.Tag({and: [\"sport=climbing\", {or:[\"club~*\", \"office~*\"]}]} )\n     * expr.removePhraseConsideredKnown(new Tag(\"club\",\"climbing\"), false) // => expr\n     */\n    removePhraseConsideredKnown(knownExpression: TagsFilter, value: boolean): TagsFilter | boolean {\n        const newAnds: TagsFilter[] = []\n        for (const tag of this.and) {\n            if (tag instanceof And) {\n                throw \"Optimize expressions before using removePhraseConsideredKnown\"\n            }\n            if (tag instanceof Or) {\n                const r = tag.removePhraseConsideredKnown(knownExpression, value)\n                if (r === true) {\n                    continue\n                }\n                if (r === false) {\n                    return false\n                }\n                newAnds.push(r)\n                continue\n            }\n            if (value && knownExpression.shadows(tag)) {\n                /**\n                 * At this point, we do know that 'knownExpression' is true in every case\n                 * As `shadows` does define that 'tag' MUST be true if 'knownExpression' is true,\n                 * we can be sure that 'tag' is true as well.\n                 *\n                 * \"True\" is the neutral element in an AND, so we can skip the tag\n                 */\n                continue\n            }\n            if (!value && tag.shadows(knownExpression)) {\n                /**\n                 * We know that knownExpression is unmet.\n                 * if the tag shadows 'knownExpression' (which is the case when control flows gets here),\n                 * then tag CANNOT be met too, as known expression is not met.\n                 *\n                 * This implies that 'tag' must be false too!\n                 */\n\n                // false is the element which absorbs all\n                return false\n            }\n\n            newAnds.push(tag)\n        }\n        if (newAnds.length === 0) {\n            return true\n        }\n        return And.construct(newAnds)\n    }\n\n    optimize(): TagsFilter | boolean {\n        if (this.and.length === 0) {\n            return true\n        }\n        const optimizedRaw = this.and\n            .map((t) => t.optimize())\n            .filter((t) => t !== true /* true is the neutral element in an AND, we drop them*/)\n        if (optimizedRaw.some((t) => t === false)) {\n            // We have an AND with a contained false: this is always 'false'\n            return false\n        }\n        const optimized = <TagsFilter[]>optimizedRaw\n\n        {\n            // Conflicting keys do return false\n            const properties: object = {}\n            for (const opt of optimized) {\n                if (opt instanceof Tag) {\n                    properties[opt.key] = opt.value\n                }\n            }\n\n            for (let i = 0; i < optimized.length; i++) {\n                const opt = optimized[i]\n                if (opt instanceof Tag) {\n                    const k = opt.key\n                    const v = properties[k]\n                    if (v === undefined) {\n                        continue\n                    }\n                    if (v !== opt.value) {\n                        // detected an internal conflict\n                        return false\n                    }\n                }\n                if (opt instanceof RegexTag) {\n                    const k = opt.key\n                    if (typeof k !== \"string\") {\n                        continue\n                    }\n                    const v = properties[k]\n                    if (v === undefined) {\n                        continue\n                    }\n                    if (opt.invert) {\n                        // We should _not_ match this value\n                        // If 'v' is given, we already know what value it should be\n                        // If 'v' is the not-expected value, we have a conflict and return false\n                        // Otherwise, we can safely drop this value\n\n                        const doesMatch =\n                            (typeof opt.value === \"string\" && v === opt.value) ||\n                            v.match(<RegExp>opt.value) !== null\n\n                        if (doesMatch) {\n                            // We have a conflict as 'opt' is inverted\n                            return false\n                        } else {\n                            optimized.splice(i, 1)\n                            i--\n                        }\n                    } else if (v !== opt.value) {\n                        // detected an internal conflict\n                        return false\n                    }\n                }\n            }\n        }\n\n        const newAnds: TagsFilter[] = []\n\n        let containedOrs: Or[] = []\n        for (const tf of optimized) {\n            if (tf instanceof And) {\n                newAnds.push(...tf.and)\n            } else if (tf instanceof Or) {\n                containedOrs.push(tf)\n            } else {\n                newAnds.push(tf)\n            }\n        }\n\n        {\n            let dirty = false\n            do {\n                const cleanedContainedOrs: Or[] = []\n                outer: for (let containedOr of containedOrs) {\n                    for (const known of newAnds) {\n                        // input for optimazation: (K=V & (X=Y | K=V))\n                        // containedOr: (X=Y | K=V)\n                        // newAnds (and thus known): (K=V) --> true\n                        const cleaned = containedOr.removePhraseConsideredKnown(known, true)\n                        if (cleaned === true) {\n                            // The neutral element within an AND\n                            continue outer // skip addition too\n                        }\n                        if (cleaned === false) {\n                            // zero element\n                            return false\n                        }\n                        if (cleaned instanceof Or) {\n                            containedOr = cleaned\n                            continue\n                        }\n                        // the 'or' dissolved into a normal tag -> it has to be added to the newAnds\n                        newAnds.push(cleaned)\n                        dirty = true // rerun this algo later on\n                        continue outer\n                    }\n                    cleanedContainedOrs.push(containedOr)\n                }\n                containedOrs = cleanedContainedOrs\n            } while (dirty)\n        }\n\n        containedOrs = containedOrs.filter((ca) => {\n            const isShadowed = TagUtils.containsEquivalents(newAnds, ca.or)\n            // If 'isShadowed', then at least one part of the 'OR' is matched by the outer and, so this means that this OR isn't needed at all\n            // XY & (XY | AB) === XY\n            return !isShadowed\n        })\n\n        // Extract common keys from the OR\n        if (containedOrs.length === 1) {\n            newAnds.push(containedOrs[0])\n        } else if (containedOrs.length > 1) {\n            let commonValues: TagsFilter[] = containedOrs[0].or\n            for (let i = 1; i < containedOrs.length && commonValues.length > 0; i++) {\n                const containedOr = containedOrs[i]\n                commonValues = commonValues.filter((cv) =>\n                    containedOr.or.some((candidate) => candidate.shadows(cv))\n                )\n            }\n            if (commonValues.length === 0) {\n                newAnds.push(...containedOrs)\n            } else {\n                const newOrs: TagsFilter[] = []\n                for (const containedOr of containedOrs) {\n                    const elements = containedOr.or.filter(\n                        (candidate) => !commonValues.some((cv) => cv.shadows(candidate))\n                    )\n                    newOrs.push(Or.construct(elements))\n                }\n\n                commonValues.push(And.construct(newOrs))\n                const result = new Or(commonValues).optimize()\n                if (result === false) {\n                    return false\n                } else if (result === true) {\n                    // neutral element: skip\n                } else {\n                    newAnds.push(result)\n                }\n            }\n        }\n        if (newAnds.length === 0) {\n            return true\n        }\n\n        if (TagUtils.ContainsOppositeTags(newAnds)) {\n            return false\n        }\n\n        TagUtils.sortFilters(newAnds, true)\n\n        return And.construct(newAnds)\n    }\n\n    isNegative(): boolean {\n        return !this.and.some((t) => !t.isNegative())\n    }\n\n    visit(f: (tagsFilter: TagsFilter) => void) {\n        f(this)\n        this.and.forEach((sub) => sub.visit(f))\n    }\n}\n","import { TagsFilter } from \"./TagsFilter\"\n\nexport default class ComparingTag implements TagsFilter {\n    private readonly _key: string\n    private readonly _predicate: (value: string) => boolean\n    private readonly _representation: string\n\n    constructor(\n        key: string,\n        predicate: (value: string | undefined) => boolean,\n        representation: string = \"\"\n    ) {\n        this._key = key\n        this._predicate = predicate\n        this._representation = representation\n    }\n\n    asChange(properties: Record<string, string>): { k: string; v: string }[] {\n        throw \"A comparable tag can not be used to be uploaded to OSM\"\n    }\n\n    asHumanString(linkToWiki: boolean, shorten: boolean, properties: Record<string, string>) {\n        return this._key + this._representation\n    }\n\n    asOverpass(): string[] {\n        throw \"A comparable tag can not be used as overpass filter\"\n    }\n\n    shadows(other: TagsFilter): boolean {\n        return other === this\n    }\n\n    isUsableAsAnswer(): boolean {\n        return false\n    }\n\n    /**\n     * Checks if the properties match\n     *\n     * const t = new ComparingTag(\"key\", (x => Number(x) < 42))\n     * t.matchesProperties({key: 42}) // => false\n     * t.matchesProperties({key: 41}) // => true\n     * t.matchesProperties({key: 0}) // => true\n     * t.matchesProperties({differentKey: 42}) // => false\n     */\n    matchesProperties(properties: Record<string, string>): boolean {\n        return this._predicate(properties[this._key])\n    }\n\n    usedKeys(): string[] {\n        return [this._key]\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        return []\n    }\n\n    optimize(): TagsFilter | boolean {\n        return this\n    }\n\n    isNegative(): boolean {\n        return true\n    }\n\n    visit(f: (TagsFilter) => void) {\n        f(this)\n    }\n}\n","import { TagsFilter } from \"./TagsFilter\"\nimport { Tag } from \"./Tag\"\nimport { Utils } from \"../../Utils\"\n\n/**\n * The substituting-tag uses the tags of a feature a variables and replaces them.\n *\n * e.g. key:={other_key}_{ref} will match an object that has at least 'key'.\n * If {other_key} is _not_ defined, it will not be substituted.\n *\n * The 'key' is always fixed and should not contain substitutions.\n * This cannot be used to query features\n */\nexport default class SubstitutingTag implements TagsFilter {\n    private readonly _key: string\n    private readonly _value: string\n    private readonly _invert: boolean\n\n    constructor(key: string, value: string, invert = false) {\n        this._key = key\n        this._value = value\n        this._invert = invert\n    }\n\n    private static substituteString(template: string, dict: Record<string, string>): string {\n        for (const k in dict) {\n            template = template.replace(new RegExp(\"\\\\{\" + k + \"\\\\}\", \"g\"), dict[k])\n        }\n        return template.replace(/{.*}/g, \"\")\n    }\n\n    asTag(currentProperties: Record<string, string>) {\n        if (this._invert) {\n            throw \"Cannot convert an inverted substituting tag\"\n        }\n        return new Tag(this._key, Utils.SubstituteKeys(this._value, currentProperties))\n    }\n\n    asHumanString(linkToWiki: boolean, shorten: boolean, properties) {\n        return (\n            this._key +\n            (this._invert ? \"!\" : \"\") +\n            \"=\" +\n            SubstitutingTag.substituteString(this._value, properties)\n        )\n    }\n\n    asOverpass(): string[] {\n        throw \"A variable with substitution can not be used to query overpass\"\n    }\n\n    shadows(other: TagsFilter): boolean {\n        if (!(other instanceof SubstitutingTag)) {\n            return false\n        }\n        return (\n            other._key === this._key &&\n            other._value === this._value &&\n            other._invert === this._invert\n        )\n    }\n\n    isUsableAsAnswer(): boolean {\n        return !this._invert\n    }\n\n    /**\n     * const assign = new SubstitutingTag(\"survey:date\", \"{_date:now}\")\n     * assign.matchesProperties({\"survey:date\": \"2021-03-29\", \"_date:now\": \"2021-03-29\"}) // => true\n     * assign.matchesProperties({\"survey:date\": \"2021-03-29\", \"_date:now\": \"2021-01-01\"}) // => false\n     * assign.matchesProperties({\"survey:date\": \"2021-03-29\"}) // => false\n     * assign.matchesProperties({\"_date:now\": \"2021-03-29\"}) // => false\n     * assign.matchesProperties({\"some_key\": \"2021-03-29\"}) // => false\n     */\n    matchesProperties(properties: Record<string, string>): boolean {\n        const value = properties[this._key]\n        if (value === undefined || value === \"\") {\n            return false\n        }\n        const expectedValue = SubstitutingTag.substituteString(this._value, properties)\n        return (value === expectedValue) !== this._invert\n    }\n\n    usedKeys(): string[] {\n        return [this._key]\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        return []\n    }\n\n    asChange(properties: Record<string, string>): { k: string; v: string }[] {\n        if (this._invert) {\n            throw \"An inverted substituting tag can not be used to create a change\"\n        }\n        const v = SubstitutingTag.substituteString(this._value, properties)\n        if (v.match(/{.*}/) !== null) {\n            throw \"Could not calculate all the substitutions: still have \" + v\n        }\n        return [{ k: this._key, v: v }]\n    }\n\n    optimize(): TagsFilter | boolean {\n        return this\n    }\n\n    isNegative(): boolean {\n        return false\n    }\n\n    visit(f: (tagsFilter: TagsFilter) => void) {\n        f(this)\n    }\n}\n","import { Tag } from \"./Tag\"\nimport { TagsFilter } from \"./TagsFilter\"\nimport { And } from \"./And\"\nimport { Utils } from \"../../Utils\"\nimport ComparingTag from \"./ComparingTag\"\nimport { RegexTag } from \"./RegexTag\"\nimport SubstitutingTag from \"./SubstitutingTag\"\nimport { Or } from \"./Or\"\nimport { TagConfigJson } from \"../../Models/ThemeConfig/Json/TagConfigJson\"\nimport key_counts from \"../../assets/key_totals.json\"\n\nimport { ConversionContext } from \"../../Models/ThemeConfig/Conversion/ConversionContext\"\n\ntype Tags = Record<string, string>\nexport type UploadableTag = Tag | SubstitutingTag | And\n\nexport class TagUtils {\n    public static readonly comparators: ReadonlyArray<[string, (a: number, b: number) => boolean]> =\n        [\n            [\"<=\", (a, b) => a <= b],\n            [\">=\", (a, b) => a >= b],\n            [\"<\", (a, b) => a < b],\n            [\">\", (a, b) => a > b],\n        ]\n    public static modeDocumentation: Record<\n        string,\n        { name: string; docs: string; uploadable?: boolean; overpassSupport: boolean }\n    > = {\n        \"=\": {\n            name: \"strict equality\",\n            uploadable: true,\n            overpassSupport: true,\n            docs:\n                \"Strict equality is denoted by `key=value`. This key matches __only if__ the keypair is present exactly as stated.\\n\" +\n                \"\\n\" +\n                \"**Only normal tags (eventually in an `and`) can be used in places where they are uploaded**. Normal tags are used in \" +\n                \"the `mappings` of a [TagRendering] (unless `hideInAnswer` is specified), they are used in `addExtraTags` of [Freeform] \" +\n                \"and are used in the `tags`-list of a preset.\\n\" +\n                \"\\n\" +\n                \"If a different kind of tag specification is given, your theme will fail to parse.\\n\" +\n                \"\\n\" +\n                \"### If key is not present\\n\" +\n                \"\\n\" +\n                \"If you want to check if a key is not present, use `key=` (pronounce as *key is empty*). A tag collection will match this\\n\" +\n                \"if `key` is missing or if `key` is a literal empty value.\\n\" +\n                \"\\n\" +\n                \"### Removing a key\\n\" +\n                \"\\n\" +\n                \"If a key should be deleted in the OpenStreetMap-database, specify `key=` as well. This can be used e.g. to remove a\\n\" +\n                \"fixme or value from another mapping if another field is filled out.\",\n        },\n        \"!=\": {\n            name: \"strict not equals\",\n            overpassSupport: true,\n            docs:\n                \"To check if a key does _not_ equal a certain value, use `key!=value`. This is converted behind the scenes\\n\" +\n                \"to `key!~^value$`\\n\" +\n                \"\\n\" +\n                \"If `key` is not present or empty, this will match too.\\n\" +\n                \"\\n\" +\n                \"### If key is present\\n\" +\n                \"\\n\" +\n                \"This implies that, to check if a key is present, `key!=` can be used. This will only match if the key is present and not\\n\" +\n                \"empty.\",\n        },\n        \"~\": {\n            name: \"Value matches regex\",\n            overpassSupport: true,\n            docs:\n                \"A tag can also be tested against a regex with `key~regex`. Note that this regex __must match__ the entire value. If the\\n\" +\n                \"value is allowed to appear anywhere as substring, use `key~.*regex.*`.\\n\" +\n                \"The regex is put within braces as to prevent runaway values.\\n\" +\n                \"\\nUse `key~*` to indicate that any value is allowed. This is effectively the check that the attribute is present (defined _and_ not empty).\" +\n                \"\\n\" +\n                \"Regexes will match the newline character with `.` too - the `s`-flag is enabled by default.\",\n        },\n        \"~i~\": {\n            name: \"Value matches case-invariant regex\",\n            overpassSupport: true,\n            docs: \"A tag can also be tested against a regex with `key~i~regex`, where the case of the value will be ignored. The regex is still matched against the _entire_ value\",\n        },\n        \"!~\": {\n            name: \"Value should _not_ match regex\",\n            overpassSupport: true,\n            docs:\n                \"A tag can also be tested against a regex with `key!~regex`. This filter will match if the value does *not* match the regex. \" +\n                \"\\n If the\\n\" +\n                \"value is allowed to appear anywhere as substring, use `key~.*regex.*`.\\n\" +\n                \"The regex is put within braces as to prevent runaway values.\\n\",\n        },\n        \"!~i~\": {\n            name: \"Value does *not* match case-invariant regex\",\n            overpassSupport: true,\n            docs: \"A tag can also be tested against a regex with `key~i~regex`, where the case of the value will be ignored. The regex is still matched against the _entire_ value. This filter returns true if the value does *not* match\",\n        },\n        \"~~\": {\n            name: \"Key and value should match given regex\",\n            overpassSupport: true,\n            docs: \"Both the `key` and `value` part of this specification are interpreted as regexes, both the key and value musth completely match their respective regexes\",\n        },\n        \":=\": {\n            name: \"Substitute `... {some_key} ...` and match `key`\",\n            overpassSupport: false,\n            uploadable: true,\n            docs:\n                \"**This is an advanced feature - use with caution**\\n\" +\n                \"\\n\" +\n                \"Some tags are automatically set or calculated - see [CalculatedTags](CalculatedTags.md) for an entire overview. If one\\n\" +\n                \"wants to apply such a value as tag, use a substituting-tag such, for example`survey:date:={_date:now}`. Note that the\\n\" +\n                \"separator between key and value here is `:=`. The text between `{` and `}` is interpreted as a key, and the respective\\n\" +\n                \"value is substituted into the string.\\n\" +\n                \"\\n\" +\n                \"One can also append, e.g. `key:={some_key} fixed text {some_other_key}`.\\n\" +\n                \"\\n\" +\n                \"An assigning tag _cannot_ be used to query OpenStreetMap/Overpass.\\n\" +\n                \"\\n\" +\n                \"If using a key or variable which might not be defined, add a condition in the mapping to hide the option. This is\\n\" +\n                \"because, if `some_other_key` is not defined, one might actually upload the literal text `key={some_other_key}` to OSM -\\n\" +\n                \"which we do not want.\\n\" +\n                \"\\n\" +\n                \"To mitigate this, use:\\n\" +\n                \"\\n\" +\n                \"```json\\n\" +\n                \"{\\n\" +\n                '    \"mappings\": [\\n' +\n                \"        {\\n\" +\n                '            \"if\":\"key:={some_other_key}\",\\n' +\n                '            \"then\": \"...\",\\n' +\n                '            \"hideInAnswer\": \"some_other_key=\"\\n' +\n                \"        }\\n\" +\n                \"    ]\\n\" +\n                \"}\\n\" +\n                \"```\\n\" +\n                \"\\n\" +\n                \"One can use `key!:=prefix-{other_key}-postfix` as well, to match if `key` is _not_ the same\\n\" +\n                \"as `prefix-{other_key}-postfix` (with `other_key` substituted by the value)\",\n        },\n        \"!:=\": {\n            name: \"Substitute `{some_key}` should not match `key`\",\n            overpassSupport: false,\n            docs: \"See `:=`, except that this filter is inverted\",\n        },\n    }\n    private static keyCounts: { keys: any; tags: any } = key_counts\n    public static readonly numberAndDateComparisonDocs =\n        \"If the value of a tag is a number (e.g. `key=42`), one can use a filter `key<=42`, `key>=35`, `key>40` or `key<50` to\\n\" +\n        \"match this, e.g. in conditions for renderings. These tags cannot be used to generate an answer nor can they be used to\\n\" +\n        \"request data upstream from overpass.\\n\" +\n        \"\\n\" +\n        \"Note that the value coming from OSM will first be stripped by removing all non-numeric characters. For\\n\" +\n        \"example, `length=42 meter` will be interpreted as `length=42` and will thus match `length<=42` and `length>=42`. In\\n\" +\n        \"special circumstances (e.g. `surface_area=42 m2` or `length=100 feet`), this will result in erronous\\n\" +\n        \"values (`surface=422` or if a length in meters is compared to). However, this can be partially alleviated by using '\\n\" +\n        \"Units' to rewrite to a default format.\\n\" +\n        \"\\n\" +\n        \"Dates can be compared with the same expression: `somekey<2022-06-22` will match if `somekey` is a date and is smaller\\n\" +\n        \"then 22nd june '22.\"\n\n    public static readonly logicalOperator =\n        \"\\n\" +\n        \"## Logical operators\\n\" +\n        \"\\n\" +\n        \"One can combine multiple tags by using `and` or `or`, e.g.:\\n\" +\n        \"\\n\" +\n        \"```json\\n\" +\n        \"{\\n\" +\n        '  \"osmTags\": {\\n' +\n        '    \"or\": [\\n' +\n        '      \"amenity=school\",\\n' +\n        '      \"amenity=kindergarten\"\\n' +\n        \"    ]\\n\" +\n        \"  }\\n\" +\n        \"}\\n\" +\n        \"```\\n\"\n\n    public static readonly intro =\n        \"Tags format\\n\" +\n        \"=============\\n\" +\n        \"\\n\" +\n        \"When creating the `json` file describing your layer or theme, you'll have to add a few tags to describe what you want.\\n\" +\n        \"This document gives an overview of what every expression means and how it behaves in edge cases.\\n\" +\n        \"\\n\" +\n        \"If the schema-files note a type [`TagConfigJson`](https://github.com/pietervdvn/MapComplete/blob/develop/Models/ThemeConfig/Json/TagConfigJson.ts), you can use one of these values.\\n\" +\n        \"\\n\" +\n        \"In some cases, not every type of tags-filter can be used. For example,  _rendering_ an option with a regex is\\n\" +\n        'fine (`\"if\": \"brand~[Bb]randname\", \"then\":\" The brand is Brandname\"`); but this regex can not be used to write a value\\n' +\n        \"into the database. The theme loader will however refuse to work with such inconsistencies and notify you of this while\\n\" +\n        \"you are building your theme.\\n\" +\n        \"\\n\" +\n        \"Example\\n\" +\n        \"-------\\n\" +\n        \"\\n\" +\n        \"This example shows the most common options on how to specify tags:\\n\" +\n        \"\\n\" +\n        \"```json\\n\" +\n        \"{\\n\" +\n        '  \"and\": [\\n' +\n        '    \"key=value\",\\n' +\n        \"    {\\n\" +\n        '      \"or\": [\\n' +\n        '        \"other_key=value\",\\n' +\n        '        \"other_key=some_other_value\"\\n' +\n        \"      ]\\n\" +\n        \"    },\\n\" +\n        '    \"key_which_should_be_missing=\",\\n' +\n        '    \"key_which_should_have_a_value~*\",\\n' +\n        '    \"key~.*some_regex_a*_b+_[a-z]?\",\\n' +\n        '    \"height<1\"\\n' +\n        \"  ]\\n\" +\n        \"}\\n\" +\n        \"```\\n\" +\n        \"\\n\" +\n        \"\\n\"\n\n    static KVtoProperties(tags: Tag[]): Record<string, string> {\n        const properties: Record<string, string> = {}\n        for (const tag of tags) {\n            properties[tag.key] = tag.value\n        }\n        return properties\n    }\n\n    static changeAsProperties(kvs: { k: string; v: string }[]): Record<string, string> {\n        const tags: Record<string, string> = {}\n        for (const kv of kvs) {\n            tags[kv.k] = kv.v\n        }\n        return tags\n    }\n\n    /**\n     * Given two hashes of {key --> values[]}, makes sure that every neededTag is present in availableTags\n     */\n    static AllKeysAreContained(availableTags: any, neededTags: any) {\n        for (const neededKey in neededTags) {\n            const availableValues: string[] = availableTags[neededKey]\n            if (availableValues === undefined) {\n                return false\n            }\n            const neededValues: string[] = neededTags[neededKey]\n            for (const neededValue of neededValues) {\n                if (availableValues.indexOf(neededValue) < 0) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n\n    static SplitKeys(tagsFilters: UploadableTag[]): Record<string, string[]> {\n        return <any>this.SplitKeysRegex(tagsFilters, false)\n    }\n\n    /***\n     * Creates a hash {key --> [values : string | RegexTag ]}, with all the values present in the tagsfilter\n     *\n     * TagUtils.SplitKeysRegex([new Tag(\"isced:level\", \"bachelor; master\")], true) // => {\"isced:level\": [\"bachelor\",\"master\"]}\n     */\n    static SplitKeysRegex(\n        tagsFilters: UploadableTag[],\n        allowRegex: boolean\n    ): Record<string, (string | RegexTag)[]> {\n        const keyValues: Record<string, (string | RegexTag)[]> = {}\n        tagsFilters = [...tagsFilters] // copy all, use as queue\n        while (tagsFilters.length > 0) {\n            const tagsFilter = tagsFilters.shift()\n\n            if (tagsFilter === undefined) {\n                continue\n            }\n\n            if (tagsFilter instanceof And) {\n                tagsFilters.push(...(<UploadableTag[]>tagsFilter.and))\n                continue\n            }\n\n            if (tagsFilter instanceof Tag) {\n                if (keyValues[tagsFilter.key] === undefined) {\n                    keyValues[tagsFilter.key] = []\n                }\n                keyValues[tagsFilter.key].push(...tagsFilter.value.split(\";\").map((s) => s.trim()))\n                continue\n            }\n\n            if (allowRegex && tagsFilter instanceof RegexTag) {\n                const key = tagsFilter.key\n                if (typeof key !== \"string\") {\n                    console.error(\n                        \"Invalid type to flatten the multiAnswer: key is a regex too\",\n                        tagsFilter\n                    )\n                    throw \"Invalid type to FlattenMultiAnswer: key is a regex too\"\n                }\n                const keystr = <string>key\n                if (keyValues[keystr] === undefined) {\n                    keyValues[keystr] = []\n                }\n                keyValues[keystr].push(tagsFilter)\n                continue\n            }\n\n            console.error(\"Invalid type to flatten the multiAnswer\", tagsFilter)\n            throw (\n                \"Invalid type to FlattenMultiAnswer, not one of RegexTag, Tag or And: \" +\n                tagsFilter.asHumanString(false, false, {})\n            )\n        }\n        return keyValues\n    }\n\n    /**\n     * Flattens an 'uploadableTag' and replaces all 'SubstitutingTags' into normal tags\n     */\n    static FlattenAnd(tagFilters: UploadableTag, currentProperties: Record<string, string>): Tag[] {\n        const tags: Tag[] = []\n        tagFilters.visit((tf: UploadableTag) => {\n            if (tf instanceof Tag) {\n                tags.push(tf)\n            }\n            if (tf instanceof SubstitutingTag) {\n                tags.push(tf.asTag(currentProperties))\n            }\n        })\n        return tags\n    }\n\n    /**\n     * Given multiple tagsfilters which can be used as answer, will take the tags with the same keys together as set.\n     *\n     * @see MatchesMultiAnswer to do the reverse\n     *\n     * E.g:\n     *\n     * const tag = TagUtils.ParseUploadableTag({\"and\": [\n     *     {\n     *         and:  [ \"x=a\", \"y=0;1\"],\n     *     },\n     *     {\n     *          and: [\"x=\", \"y=3\"]\n     *     },\n     *     {\n     *         and:  [\"x=b\", \"y=2\"]\n     *     }\n     * ]})\n     * TagUtils.FlattenMultiAnswer([tag]) // => TagUtils.Tag({and:[\"x=a;b\", \"y=0;1;2;3\"] })\n     *\n     * TagUtils.FlattenMultiAnswer(([new Tag(\"x\",\"y\"), new Tag(\"a\",\"b\")])) // => new And([new Tag(\"x\",\"y\"), new Tag(\"a\",\"b\")])\n     * TagUtils.FlattenMultiAnswer(([new Tag(\"x\",\"\")])) // => new And([new Tag(\"x\",\"\")])\n     */\n    static FlattenMultiAnswer(tagsFilters: UploadableTag[]): And {\n        if (tagsFilters === undefined) {\n            return new And([])\n        }\n\n        let keyValues = TagUtils.SplitKeys(tagsFilters)\n        const and: UploadableTag[] = []\n        for (const key in keyValues) {\n            const values = Utils.Dedup(keyValues[key]).filter((v) => v !== \"\")\n            values.sort()\n            and.push(new Tag(key, values.join(\";\")))\n        }\n        return new And(and)\n    }\n\n    /**\n     * Returns true if the properties match the tagsFilter, interpreted as a multikey.\n     * Note that this might match a regex tag\n     *\n     * TagUtils.MatchesMultiAnswer(new Tag(\"isced:level\",\"bachelor\"), {\"isced:level\":\"bachelor; master\"}) // => true\n     * TagUtils.MatchesMultiAnswer(new Tag(\"isced:level\",\"master\"), {\"isced:level\":\"bachelor;master\"}) // => true\n     * TagUtils.MatchesMultiAnswer(new Tag(\"isced:level\",\"doctorate\"), {\"isced:level\":\"bachelor; master\"}) // => false\n     *\n     * // should match with a space too\n     * TagUtils.MatchesMultiAnswer(new Tag(\"isced:level\",\"master\"), {\"isced:level\":\"bachelor; master\"}) // => true\n     */\n    static MatchesMultiAnswer(tag: UploadableTag, properties: Tags): boolean {\n        const splitted = TagUtils.SplitKeysRegex([tag], true)\n        for (const splitKey in splitted) {\n            const neededValues = splitted[splitKey]\n            if (properties[splitKey] === undefined) {\n                return false\n            }\n\n            const actualValue = properties[splitKey].split(\";\").map((s) => s.trim())\n            for (const neededValue of neededValues) {\n                if (neededValue instanceof RegexTag) {\n                    if (!neededValue.matchesProperties(properties)) {\n                        return false\n                    }\n                    continue\n                }\n                if (actualValue.indexOf(neededValue) < 0) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n\n    public static SimpleTag(json: string, context?: string): Tag {\n        const tag = Utils.SplitFirst(json, \"=\")\n        if (tag.length !== 2) {\n            throw `Invalid tag: no (or too much) '=' found (in ${context ?? \"unkown context\"})`\n        }\n        return new Tag(tag[0], tag[1])\n    }\n\n    /**\n     * Returns wether or not a keys is (probably) a valid key.\n     * See 'Tags_format.md' for an overview of what every tag does\n     *\n     * // should accept common keys\n     * TagUtils.isValidKey(\"name\") // => true\n     * TagUtils.isValidKey(\"image:0\") // => true\n     * TagUtils.isValidKey(\"alt_name\") // => true\n     *\n     * // should refuse short keys\n     * TagUtils.isValidKey(\"x\") // => false\n     * TagUtils.isValidKey(\"xy\") // => false\n     *\n     * // should refuse a string with >255 characters\n     * let a255 = \"\"\n     * for(let i = 0; i < 255; i++) { a255 += \"a\"; }\n     * a255.length // => 255\n     * TagUtils.isValidKey(a255) // => true\n     * TagUtils.isValidKey(\"a\"+a255) // => false\n     *\n     * // Should refuse unexpected characters\n     * TagUtils.isValidKey(\"with space\") // => false\n     * TagUtils.isValidKey(\"some$type\") // => false\n     * TagUtils.isValidKey(\"_name\") // => false\n     */\n    public static isValidKey(key: string): boolean {\n        return key.match(/^[a-z][a-z0-9:_]{2,253}[a-z0-9]$/) !== null\n    }\n\n    /**\n     * Parses a tag configuration (a json) into a TagsFilter.\n     *\n     * Note that regexes must match the entire value\n     *\n     * TagUtils.Tag(\"key=value\") // => new Tag(\"key\", \"value\")\n     * TagUtils.Tag(\"key=\") // => new Tag(\"key\", \"\")\n     * TagUtils.Tag(\"key!=\") // => new RegexTag(\"key\", /.+/si)\n     * TagUtils.Tag(\"key~*\") // => new RegexTag(\"key\", /.+/si)\n     * TagUtils.Tag(\"name~i~somename\") // => new RegexTag(\"name\", /^(somename)$/si)\n     * TagUtils.Tag(\"key!=value\") // => new RegexTag(\"key\", \"value\", true)\n     * TagUtils.Tag(\"vending~.*bicycle_tube.*\") // => new RegexTag(\"vending\", /^(.*bicycle_tube.*)$/s)\n     * TagUtils.Tag(\"x!~y\") // => new RegexTag(\"x\", /^(y)$/s, true)\n     * TagUtils.Tag({\"and\": [\"key=value\", \"x=y\"]}) // => new And([new Tag(\"key\",\"value\"), new Tag(\"x\",\"y\")])\n     * TagUtils.Tag(\"name~[sS]peelbos.*\") // => new RegexTag(\"name\", /^([sS]peelbos.*)$/s)\n     * TagUtils.Tag(\"survey:date:={_date:now}\") // => new SubstitutingTag(\"survey:date\", \"{_date:now}\")\n     * TagUtils.Tag(\"xyz!~\\\\[\\\\]\") // => new RegexTag(\"xyz\", /^(\\[\\])$/s, true)\n     * TagUtils.Tag(\"tags~(.*;)?amenity=public_bookcase(;.*)?\") // => new RegexTag(\"tags\", /^((.*;)?amenity=public_bookcase(;.*)?)$/s)\n     * TagUtils.Tag(\"service:bicycle:.*~~*\") // => new RegexTag(/^(service:bicycle:.*)$/, /.+/si)\n     * TagUtils.Tag(\"_first_comment~.*{search}.*\") //  => new RegexTag('_first_comment', /^(.*{search}.*)$/s)\n     *\n     * TagUtils.Tag(\"xyz<5\").matchesProperties({xyz: 4}) // => true\n     * TagUtils.Tag(\"xyz<5\").matchesProperties({xyz: 5}) // => false\n     *\n     * // RegexTags must match values with newlines\n     * TagUtils.Tag(\"note~.*aed.*\").matchesProperties({note: \"Hier bevindt zich wss een defibrillator. \\\\n\\\\n De aed bevindt zich op de 5de verdieping\"}) // => true\n     * TagUtils.Tag(\"note~i~.*aed.*\").matchesProperties({note: \"Hier bevindt zich wss een defibrillator. \\\\n\\\\n De AED bevindt zich op de 5de verdieping\"}) // => true\n     *\n     * // Must match case insensitive\n     * TagUtils.Tag(\"name~i~somename\").matchesProperties({name: \"SoMeName\"}) // => true\n     *\n     * // Must match the entire value\n     * TagUtils.Tag(\"key~value\").matchesProperties({key: \"valueandsome\"}) // => false\n     * TagUtils.Tag(\"key~value\").matchesProperties({key: \"value\"}) // => true\n     * TagUtils.Tag(\"key~x|y\") // => new RegexTag(\"key\", /^(x|y)$/s)\n     * TagUtils.Tag(\"maxspeed~[1-9]0|1[0-4]0\").matchesProperties({maxspeed: \"50 mph\"}) // => false\n     *\n     * // Must match entire value: with mph\n     * const regex = TagUtils.Tag(\"maxspeed~([1-9]0|1[0-4]0) mph\")\n     * regex // => new RegexTag(\"maxspeed\", /^(([1-9]0|1[0-4]0) mph)$/s)\n     * regex.matchesProperties({maxspeed: \"50 mph\"}) // => true\n     */\n\n    public static Tag(json: TagConfigJson, context: string | ConversionContext = \"\"): TagsFilter {\n        try {\n            let ctx = typeof context === \"string\" ? context : context.path.join(\".\")\n            return this.ParseTagUnsafe(json, ctx)\n        } catch (e) {\n            if (typeof context === \"string\") {\n                console.error(\"Could not parse tag\", json, \"in context\", context, \"due to \", e)\n                throw e\n            } else {\n                context.err(e)\n                return undefined\n            }\n        }\n    }\n\n    public static ParseUploadableTag(json: TagConfigJson, context: string = \"\"): UploadableTag {\n        const t = this.Tag(json, context)\n\n        t.visit((t: TagsFilter) => {\n            if (t instanceof And) {\n                return\n            }\n            if (t instanceof Tag) {\n                return\n            }\n            if (t instanceof SubstitutingTag) {\n                return\n            }\n            throw `Error at ${context}: detected a non-uploadable tag at a location where this is not supported: ${t.asHumanString(\n                false,\n                false,\n                {}\n            )}`\n        })\n\n        return <any>t\n    }\n\n    /**\n     * Same as `.Tag`, except that this will return undefined if the json is undefined\n     * @param json\n     * @param context\n     * @constructor\n     */\n    public static TagD(json?: TagConfigJson, context: string = \"\"): TagsFilter | undefined {\n        if (json === undefined) {\n            return undefined\n        }\n        return TagUtils.Tag(json, context)\n    }\n\n    /**\n     * INLINE sort of the given list\n     */\n    public static sortFilters(filters: TagsFilter[], usePopularity: boolean): void {\n        filters.sort((a, b) => TagUtils.order(a, b, usePopularity))\n    }\n\n    public static toString(f: TagsFilter, toplevel = true): string {\n        let r: string\n        if (f instanceof Or) {\n            r = TagUtils.joinL(f.or, \"|\", toplevel)\n        } else if (f instanceof And) {\n            r = TagUtils.joinL(f.and, \"&\", toplevel)\n        } else {\n            r = f.asHumanString(false, false, {})\n        }\n        if (toplevel) {\n            r = r.trim()\n        }\n\n        return r\n    }\n\n    /**\n     * Parses the various parts of a regex tag\n     *\n     * TagUtils.parseRegexOperator(\"key~value\") // => {invert: false, key: \"key\", value: \"value\", modifier: \"\"}\n     * TagUtils.parseRegexOperator(\"key!~value\") // => {invert: true, key: \"key\", value: \"value\", modifier: \"\"}\n     * TagUtils.parseRegexOperator(\"key~i~value\") // => {invert: false, key: \"key\", value: \"value\", modifier: \"i\"}\n     * TagUtils.parseRegexOperator(\"key!~i~someweirdvalue~qsdf\") // => {invert: true, key: \"key\", value: \"someweirdvalue~qsdf\", modifier: \"i\"}\n     * TagUtils.parseRegexOperator(\"_image:0~value\") // => {invert: false, key: \"_image:0\", value: \"value\", modifier: \"\"}\n     * TagUtils.parseRegexOperator(\"key~*\") // => {invert: false, key: \"key\", value: \"*\", modifier: \"\"}\n     * TagUtils.parseRegexOperator(\"Brugs volgnummer~*\") // => {invert: false, key: \"Brugs volgnummer\", value: \"*\", modifier: \"\"}\n     * TagUtils.parseRegexOperator(\"socket:USB-A~*\") // => {invert: false, key: \"socket:USB-A\", value: \"*\", modifier: \"\"}\n     * TagUtils.parseRegexOperator(\"tileId~*\") // => {invert: false, key: \"tileId\", value: \"*\", modifier: \"\"}\n     */\n    public static parseRegexOperator(tag: string): {\n        invert: boolean\n        key: string\n        value: string\n        modifier: \"i\" | \"\"\n    } | null {\n        const match = tag.match(/^([_|a-zA-Z0-9: -]+)(!)?~([i]~)?(.*)$/)\n        if (match == null) {\n            return null\n        }\n        const [_, key, invert, modifier, value] = match\n        return { key, value, invert: invert == \"!\", modifier: modifier == \"i~\" ? \"i\" : \"\" }\n    }\n\n    /**\n     * Returns 'true' is opposite tags are detected.\n     * Note that this method will never work perfectly\n     *\n     * // should be false for some simple cases\n     * TagUtils.ContainsOppositeTags([new Tag(\"key\", \"value\"), new Tag(\"key0\", \"value\")]) // => false\n     * TagUtils.ContainsOppositeTags([new Tag(\"key\", \"value\"), new Tag(\"key\", \"value0\")]) // => false\n     *\n     * // should detect simple cases\n     * TagUtils.ContainsOppositeTags([new Tag(\"key\", \"value\"), new RegexTag(\"key\", \"value\", true)]) // => true\n     * TagUtils.ContainsOppositeTags([new Tag(\"key\", \"value\"), new RegexTag(\"key\", /value/, true)]) // => true\n     */\n    public static ContainsOppositeTags(tags: TagsFilter[]): boolean {\n        for (let i = 0; i < tags.length; i++) {\n            const tag = tags[i]\n            if (!(tag instanceof Tag || tag instanceof RegexTag)) {\n                continue\n            }\n            for (let j = i + 1; j < tags.length; j++) {\n                const guard = tags[j]\n                if (!(guard instanceof Tag || guard instanceof RegexTag)) {\n                    continue\n                }\n                if (guard.key !== tag.key) {\n                    // Different keys: they can _never_ be opposites\n                    continue\n                }\n                if ((guard.value[\"source\"] ?? guard.value) !== (tag.value[\"source\"] ?? tag.value)) {\n                    // different values: the can _never_ be opposites\n                    continue\n                }\n                if ((guard[\"invert\"] ?? false) !== (tag[\"invert\"] ?? false)) {\n                    // The 'invert' flags are opposite, the key and value is the same for both\n                    // This means we have found opposite tags!\n                    return true\n                }\n            }\n        }\n\n        return false\n    }\n\n    /**\n     * Returns a filtered version of 'listToFilter'.\n     * For a list [t0, t1, t2], If `blackList` contains an equivalent (or broader) match of any `t`, this respective `t` is dropped from the returned list\n     * Ignores nested ORS and ANDS\n     *\n     * TagUtils.removeShadowedElementsFrom([new Tag(\"key\",\"value\")],  [new Tag(\"key\",\"value\"), new Tag(\"other_key\",\"value\")]) // => [new Tag(\"other_key\",\"value\")]\n     */\n    public static removeShadowedElementsFrom(\n        blacklist: TagsFilter[],\n        listToFilter: TagsFilter[]\n    ): TagsFilter[] {\n        return listToFilter.filter((tf) => !blacklist.some((guard) => guard.shadows(tf)))\n    }\n\n    /**\n     * Returns a filtered version of 'listToFilter', where no duplicates and no equivalents exists.\n     *\n     * TagUtils.removeEquivalents([new RegexTag(\"key\", /^..*$/), new Tag(\"key\",\"value\")]) // => [new Tag(\"key\", \"value\")]\n     */\n    public static removeEquivalents(listToFilter: (Tag | RegexTag)[]): TagsFilter[] {\n        const result: TagsFilter[] = []\n        outer: for (let i = 0; i < listToFilter.length; i++) {\n            const tag = listToFilter[i]\n            for (let j = 0; j < listToFilter.length; j++) {\n                if (i === j) {\n                    continue\n                }\n                const guard = listToFilter[j]\n                if (guard.shadows(tag)) {\n                    // the guard 'kills' the tag: we continue the outer loop without adding the tag\n                    continue outer\n                }\n            }\n            result.push(tag)\n        }\n        return result\n    }\n\n    /**\n     * Returns `true` if at least one element of the 'guards' shadows one element of the 'listToFilter'.\n     *\n     * TagUtils.containsEquivalents([new Tag(\"key\",\"value\")],  [new Tag(\"key\",\"value\"), new Tag(\"other_key\",\"value\")]) // => true\n     * TagUtils.containsEquivalents([new Tag(\"key\",\"value\")],  [ new Tag(\"other_key\",\"value\")]) // => false\n     * TagUtils.containsEquivalents([new Tag(\"key\",\"value\")],  [ new Tag(\"key\",\"other_value\")]) // => false\n     */\n    public static containsEquivalents(guards: TagsFilter[], listToFilter: TagsFilter[]): boolean {\n        return listToFilter.some((tf) => guards.some((guard) => guard.shadows(tf)))\n    }\n\n    /**\n     * Parses a level specifier to the various available levels\n     *\n     * TagUtils.LevelsParser(\"0\") // => [\"0\"]\n     * TagUtils.LevelsParser(\"1\") // => [\"1\"]\n     * TagUtils.LevelsParser(\"0;2\") // => [\"0\",\"2\"]\n     * TagUtils.LevelsParser(\"0-5\") // => [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"]\n     * TagUtils.LevelsParser(\"0\") // => [\"0\"]\n     * TagUtils.LevelsParser(\"-1\") // => [\"-1\"]\n     * TagUtils.LevelsParser(\"0;-1\") // => [\"0\", \"-1\"]\n     * TagUtils.LevelsParser(undefined) // => []\n     * TagUtils.LevelsParser(\"\") // => []\n     * TagUtils.LevelsParser(\";\") // => []\n     *\n     */\n    public static LevelsParser(level: string): string[] {\n        if (level === undefined || level === null) {\n            return []\n        }\n        let spec = Utils.NoNull([level])\n        spec = [].concat(...spec.map((s) => s?.split(\";\")))\n        spec = [].concat(\n            ...spec.map((s) => {\n                s = s.trim()\n                if (s === \"\") {\n                    return undefined\n                }\n                if (s.indexOf(\"-\") < 0 || s.startsWith(\"-\")) {\n                    return s\n                }\n                const [start, end] = s.split(\"-\").map((s) => Number(s.trim()))\n                if (isNaN(start) || isNaN(end)) {\n                    return undefined\n                }\n                const values = []\n                for (let i = start; i <= end; i++) {\n                    values.push(i + \"\")\n                }\n                return values\n            })\n        )\n        return Utils.NoNull(spec)\n    }\n\n    private static ParseTagUnsafe(json: TagConfigJson, context: string = \"\"): TagsFilter {\n        if (json === undefined) {\n            throw new Error(\n                `Error while parsing a tag: 'json' is undefined in ${context}. Make sure all the tags are defined and at least one tag is present in a complex expression`\n            )\n        }\n        if (typeof json != \"string\") {\n            if (json[\"and\"] !== undefined && json[\"or\"] !== undefined) {\n                throw `Error while parsing a TagConfig: got an object where both 'and' and 'or' are defined. Did you override a value? Perhaps use \\`\"=parent\": { ... }\\` instead of \\\"parent\": {...}\\` to trigger a replacement and not a fuse of values`\n            }\n            if (json[\"and\"] !== undefined) {\n                return new And(json[\"and\"].map((t) => TagUtils.Tag(t, context)))\n            }\n            if (json[\"or\"] !== undefined) {\n                return new Or(json[\"or\"].map((t) => TagUtils.Tag(t, context)))\n            }\n            throw `At ${context}: unrecognized tag: ${JSON.stringify(json)}`\n        }\n\n        const tag = json as string\n        for (const [operator, comparator] of TagUtils.comparators) {\n            if (tag.indexOf(operator) >= 0) {\n                const split = Utils.SplitFirst(tag, operator)\n\n                let val = Number(split[1].trim())\n                if (isNaN(val)) {\n                    val = new Date(split[1].trim()).getTime()\n                }\n\n                const f = (value: string | number | undefined) => {\n                    if (value === undefined) {\n                        return false\n                    }\n                    let b: number\n                    if (typeof value === \"number\") {\n                        b = value\n                    } else if (typeof b === \"string\") {\n                        b = Number(value?.trim())\n                    } else {\n                        b = Number(value)\n                    }\n                    if (isNaN(b) && typeof value === \"string\") {\n                        b = Utils.ParseDate(value).getTime()\n                        if (isNaN(b)) {\n                            return false\n                        }\n                    }\n                    return comparator(b, val)\n                }\n                return new ComparingTag(split[0], f, operator + val)\n            }\n        }\n\n        if (tag.indexOf(\"~~\") >= 0) {\n            const split = Utils.SplitFirst(tag, \"~~\")\n            let keyRegex: RegExp\n            if (split[0] === \"*\") {\n                keyRegex = new RegExp(\".+\", \"i\")\n            } else {\n                keyRegex = new RegExp(\"^(\" + split[0] + \")$\")\n            }\n            let valueRegex: RegExp\n            if (split[1] === \"*\") {\n                valueRegex = new RegExp(\".+\", \"si\")\n            } else {\n                valueRegex = new RegExp(\"^(\" + split[1] + \")$\", \"s\")\n            }\n            return new RegexTag(keyRegex, valueRegex)\n        }\n        const withRegex = TagUtils.parseRegexOperator(tag)\n        if (withRegex != null) {\n            if (withRegex.value === \"*\" && withRegex.invert) {\n                throw `Don't use 'key!~*' - use 'key=' instead (empty string as value (in the tag ${tag} while parsing ${context})`\n            }\n            if (withRegex.value === \"\") {\n                throw (\n                    \"Detected a regextag with an empty regex; this is not allowed. Use '\" +\n                    withRegex.key +\n                    \"='instead (at \" +\n                    context +\n                    \")\"\n                )\n            }\n\n            let value: string | RegExp = withRegex.value\n            if (value === \"*\") {\n                return new RegexTag(\n                    withRegex.key,\n                    new RegExp(\".+\", \"si\" + withRegex.modifier),\n                    withRegex.invert\n                )\n            }\n            return new RegexTag(\n                withRegex.key,\n                new RegExp(\"^(\" + value + \")$\", \"s\" + withRegex.modifier),\n                withRegex.invert\n            )\n        }\n\n        if (tag.indexOf(\"!:=\") >= 0) {\n            const split = Utils.SplitFirst(tag, \"!:=\")\n            return new SubstitutingTag(split[0], split[1], true)\n        }\n        if (tag.indexOf(\":=\") >= 0) {\n            const split = Utils.SplitFirst(tag, \":=\")\n            return new SubstitutingTag(split[0], split[1])\n        }\n\n        if (tag.indexOf(\"!=\") >= 0) {\n            const split = Utils.SplitFirst(tag, \"!=\")\n            if (split[1] === \"*\") {\n                throw (\n                    \"At \" +\n                    context +\n                    \": invalid tag \" +\n                    tag +\n                    \". To indicate a missing tag, use '\" +\n                    split[0] +\n                    \"!=' instead\"\n                )\n            }\n            if (split[1] === \"\") {\n                return new RegexTag(split[0], /.+/is)\n            }\n            return new RegexTag(split[0], split[1], true)\n        }\n\n        if (tag.indexOf(\"=\") >= 0) {\n            const split = Utils.SplitFirst(tag, \"=\")\n            if (split[1] == \"*\") {\n                throw `Error while parsing tag '${tag}' in ${context}: detected a wildcard on a normal value. Use a regex pattern instead`\n            }\n            return new Tag(split[0], split[1])\n        }\n        throw `Error while parsing tag '${tag}' in ${context}: no key part and value part were found`\n    }\n\n    private static GetCount(key: string, value?: string) {\n        if (key === undefined) {\n            return undefined\n        }\n        const tag = TagUtils.keyCounts.tags[key]\n        if (tag !== undefined && tag[value] !== undefined) {\n            return tag[value]\n        }\n        return TagUtils.keyCounts.keys[key]\n    }\n\n    private static order(a: TagsFilter, b: TagsFilter, usePopularity: boolean): number {\n        const rta = a instanceof RegexTag\n        const rtb = b instanceof RegexTag\n        if (rta !== rtb) {\n            // Regex tags should always go at the end: these use a lot of computation at the overpass side, avoiding it is better\n            if (rta) {\n                return 1 // b < a\n            } else {\n                return -1\n            }\n        }\n        if (a[\"key\"] !== undefined && b[\"key\"] !== undefined) {\n            if (usePopularity) {\n                const countA = TagUtils.GetCount(a[\"key\"], a[\"value\"])\n                const countB = TagUtils.GetCount(b[\"key\"], b[\"value\"])\n                if (countA !== undefined && countB !== undefined) {\n                    return countA - countB\n                }\n            }\n\n            if (a[\"key\"] === b[\"key\"]) {\n                return 0\n            }\n            if (a[\"key\"] < b[\"key\"]) {\n                return -1\n            }\n            return 1\n        }\n\n        return 0\n    }\n\n    private static joinL(tfs: TagsFilter[], seperator: string, toplevel: boolean) {\n        const joined = tfs.map((e) => TagUtils.toString(e, false)).join(seperator)\n        if (toplevel) {\n            return joined\n        }\n        return \" (\" + joined + \") \"\n    }\n\n    public static generateDocs(): string {\n        return [\n            TagUtils.intro,\n            ...Object.keys(TagUtils.modeDocumentation).map((mode) => {\n                const doc = TagUtils.modeDocumentation[mode]\n                return [\"\", \"## `\" + mode + \"` \" + doc.name, \"\", doc.docs, \"\", \"\"].join(\"\\n\")\n            }),\n            \"## \" +\n                TagUtils.comparators.map((comparator) => \"`\" + comparator[0] + \"`\").join(\" \") +\n                \" Logical comparators\",\n            TagUtils.numberAndDateComparisonDocs,\n            TagUtils.logicalOperator,\n        ].join(\"\\n\")\n    }\n}\n","export default {}","import { Utils } from \"../../Utils\"\nimport BaseUIElement from \"../BaseUIElement\"\nimport Translations from \"../i18n/Translations\"\n\nexport default class List extends BaseUIElement {\n    private readonly uiElements: BaseUIElement[]\n    private readonly _ordered: boolean\n\n    constructor(uiElements: (string | BaseUIElement)[], ordered = false) {\n        super()\n        this._ordered = ordered\n        this.uiElements = Utils.NoNull(uiElements).map((s) => Translations.W(s))\n    }\n\n    AsMarkdown(): string {\n        if (this._ordered) {\n            return (\n                \"\\n\\n\" +\n                this.uiElements\n                    .map((el, i) => \"  \" + i + \". \" + el.AsMarkdown().replace(/\\n/g, \"  \\n\"))\n                    .join(\"\\n\") +\n                \"\\n\"\n            )\n        } else {\n            return (\n                \"\\n\\n\" +\n                this.uiElements\n                    .map((el) => \"  - \" + el.AsMarkdown().replace(/\\n/g, \"  \\n\"))\n                    .join(\"\\n\") +\n                \"\\n\"\n            )\n        }\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const el = document.createElement(this._ordered ? \"ol\" : \"ul\")\n\n        for (const subEl of this.uiElements) {\n            if (subEl === undefined || subEl === null) {\n                continue\n            }\n            const subHtml = subEl.ConstructElement()\n            if (subHtml !== undefined) {\n                const item = document.createElement(\"li\")\n                item.appendChild(subHtml)\n                el.appendChild(item)\n            }\n        }\n\n        return el\n    }\n}\n","import BaseUIElement from \"../BaseUIElement\"\n\nexport class Paragraph extends BaseUIElement {\n    public readonly content: string | BaseUIElement\n\n    constructor(html: string | BaseUIElement) {\n        super()\n        this.content = html ?? \"\"\n    }\n\n    AsMarkdown(): string {\n        let c: string\n        if (typeof this.content !== \"string\") {\n            c = this.content.AsMarkdown()\n        } else {\n            c = this.content\n        }\n        return \"\\n\\n\" + c + \"\\n\\n\"\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const e = document.createElement(\"p\")\n        if (typeof this.content !== \"string\") {\n            e.appendChild(this.content.ConstructElement())\n        } else {\n            e.innerHTML = this.content\n        }\n        return e\n    }\n}\n","import BaseUIElement from \"../BaseUIElement\"\nimport { Translation } from \"../i18n/Translation\"\nimport Translations from \"../i18n/Translations\"\n\n/**\n * A 'TextFieldValidator' contains various methods to check and cleanup an entered value or to give feedback.\n * They also double as an index of supported types for textfields in MapComplete\n */\nexport abstract class Validator {\n    public readonly name: string\n    /*\n     * An explanation for the theme builder.\n     * This can indicate which special input element is used, ...\n     * */\n    public readonly explanation: string\n    /**\n     * What HTML-inputmode to use\n     */\n    public readonly inputmode?:\n        | \"none\"\n        | \"text\"\n        | \"tel\"\n        | \"url\"\n        | \"email\"\n        | \"numeric\"\n        | \"decimal\"\n        | \"search\"\n    public readonly textArea: boolean\n\n    public readonly isMeta?: boolean\n\n    constructor(\n        name: string,\n        explanation: string | BaseUIElement,\n        inputmode?: \"none\" | \"text\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\" | \"search\",\n        textArea?: false | boolean\n    ) {\n        this.name = name\n        this.inputmode = inputmode\n        this.textArea = textArea ?? false\n        if (this.name.endsWith(\"textfield\")) {\n            this.name = this.name.substr(0, this.name.length - \"TextField\".length)\n        }\n        if (this.name.endsWith(\"textfielddef\")) {\n            this.name = this.name.substr(0, this.name.length - \"TextFieldDef\".length)\n        }\n        if (typeof explanation === \"string\") {\n            this.explanation = explanation\n        } else {\n            this.explanation = explanation.AsMarkdown()\n        }\n    }\n\n    /**\n     * Gets a piece of feedback. By default, validation.<type> will be used, resulting in a generic 'not a valid <type>'.\n     * However, inheritors might overwrite this to give more specific feedback\n     *\n     * Returns 'undefined' if the element is valid\n     */\n    public getFeedback(s: string, _?: () => string): Translation | undefined {\n        if (this.isValid(s)) {\n            return undefined\n        }\n        const tr = Translations.t.validation[this.name]\n        if (tr !== undefined) {\n            return tr[\"feedback\"]\n        }\n    }\n\n    public getPlaceholder() {\n        return Translations.t.validation[this.name].description\n    }\n\n    public isValid(key: string, getCountry?: () => string): boolean {\n        return true\n    }\n\n    /**\n     * Reformats for the human\n     */\n    public reformat(s: string, _?: () => string): string {\n        return s\n    }\n}\n","import { Validator } from \"../Validator\"\n\nexport default class StringValidator extends Validator {\n    constructor() {\n        super(\"string\", \"A simple piece of text\")\n    }\n}\n","import { Validator } from \"../Validator\"\n\nexport default class TextValidator extends Validator {\n    constructor() {\n        super(\n            \"text\",\n            \"A longer piece of text. Uses an textArea instead of a textField\",\n            \"text\",\n            true\n        )\n    }\n}\n","import { Validator } from \"../Validator\"\n\nexport default class DateValidator extends Validator {\n    constructor() {\n        super(\"date\", \"A date with date picker\")\n    }\n\n    isValid(str: string): boolean {\n        return !isNaN(new Date(str).getTime())\n    }\n\n    reformat(str: string) {\n        console.log(\"Reformatting\", str)\n        if (!this.isValid(str)) {\n            // The date is invalid - we return the string as is\n            return str\n        }\n        const d = new Date(str)\n        let month = \"\" + (d.getMonth() + 1)\n        let day = \"\" + d.getDate()\n        const year = d.getFullYear()\n\n        if (month.length < 2) month = \"0\" + month\n        if (day.length < 2) day = \"0\" + day\n\n        return [year, month, day].join(\"-\")\n    }\n}\n","import { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\nimport { Validator } from \"../Validator\"\n\nexport default class IntValidator extends Validator {\n    constructor(name?: string, explanation?: string) {\n        super(\n            name ?? \"int\",\n            explanation ?? \"A whole number, either positive, negative or zero\",\n            \"numeric\"\n        )\n    }\n\n    isValid(str): boolean {\n        str = \"\" + str\n        return str !== undefined && str.indexOf(\".\") < 0 && !isNaN(Number(str))\n    }\n\n    getFeedback(s: string): Translation {\n        const n = Number(s)\n        if (isNaN(n)) {\n            return Translations.t.validation.nat.notANumber\n        }\n        if (Math.floor(n) !== n) {\n            return Translations.t.validation.nat.mustBeWhole\n        }\n        return undefined\n    }\n}\n","import IntValidator from \"./IntValidator\"\nimport { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\n\nexport default class NatValidator extends IntValidator {\n    constructor(name?: string, explanation?: string) {\n        super(name ?? \"nat\", explanation ?? \"A  whole, positive number or zero\")\n    }\n\n    isValid(str): boolean {\n        if (str === undefined) {\n            return false\n        }\n        str = \"\" + str\n\n        return str.indexOf(\".\") < 0 && !isNaN(Number(str)) && Number(str) >= 0\n    }\n\n    getFeedback(s: string): Translation {\n        const spr = super.getFeedback(s)\n        if (spr !== undefined) {\n            return spr\n        }\n        const n = Number(s)\n        if (n < 0) {\n            return Translations.t.validation.nat.mustBePositive\n        }\n        return undefined\n    }\n}\n","import { Validator } from \"../Validator\"\n\nexport default class LengthValidator extends Validator {\n    constructor() {\n        super(\n            \"distance\",\n            'A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `[\"21\", \"map,photo\"]',\n            \"decimal\"\n        )\n    }\n\n    isValid = (str) => {\n        const t = Number(str)\n        return !isNaN(t)\n    }\n}\n","import IntValidator from \"./IntValidator\"\n\nexport default class DirectionValidator extends IntValidator {\n    constructor() {\n        super(\n            \"direction\",\n            [\n                \"A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl).\",\n                \"### Input helper\",\n                \"This element has an input helper showing a map and 'viewport' indicating the direction. By default, this map is zoomed to zoomlevel 17, but this can be changed with the first argument\",\n            ].join(\"\\n\\n\")\n        )\n    }\n\n    isValid(str): boolean {\n        if (str.endsWith(\"°\")) {\n            str = str.substring(0, str.length - 1)\n        }\n        return super.isValid(str)\n    }\n\n    reformat(str): string {\n        if (str.endsWith(\"°\")) {\n            str = str.substring(0, str.length - 1)\n        }\n        const n = Number(str) % 360\n        return \"\" + n\n    }\n}\n","module.exports = {\n  // Ex: keep only 'fr' in 'fr_FR'\n  shortLang: language => language.toLowerCase().split('_')[0],\n\n  // a polymorphism helper:\n  // accept either a string or an array and return an array\n  forceArray: array => {\n    if (typeof array === 'string') array = [ array ]\n    return array || []\n  },\n\n  // simplistic implementation to filter-out arrays\n  isPlainObject: obj => {\n    if (!obj || typeof obj !== 'object' || obj instanceof Array) return false\n    return true\n  },\n\n  // encodeURIComponent ignores !, ', (, ), and *\n  // cf https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#Description\n  fixedEncodeURIComponent: str => {\n    return encodeURIComponent(str).replace(/[!'()*]/g, encodeCharacter)\n  },\n\n  replaceSpaceByUnderscores: str => str.replace(/\\s/g, '_'),\n\n  uniq: array => Array.from(new Set(array))\n}\n\nconst encodeCharacter = char => '%' + char.charCodeAt(0).toString(16)\n","const simplifyTextAttributes = multivalue => data => {\n  const simplified = {}\n  Object.keys(data).forEach(lang => {\n    const obj = data[lang]\n    if (obj != null) {\n      simplified[lang] = multivalue ? obj.map(getValue) : obj.value\n    } else {\n      simplified[lang] = multivalue ? [] : null\n    }\n  })\n  return simplified\n}\n\nconst getValue = obj => obj.value\n\nconst singleValue = simplifyTextAttributes(false)\n\nmodule.exports = {\n  labels: singleValue,\n  descriptions: singleValue,\n  aliases: simplifyTextAttributes(true),\n  lemmas: singleValue,\n  representations: singleValue,\n  glosses: singleValue\n}\n","module.exports = wikibaseTime => {\n  // Also accept claim datavalue.value objects\n  if (typeof wikibaseTime === 'object') {\n    wikibaseTime = wikibaseTime.time\n  }\n\n  const sign = wikibaseTime[0]\n  let [ yearMonthDay, withinDay ] = wikibaseTime.slice(1).split('T')\n\n  // Wikidata generates invalid ISO dates to indicate precision\n  // ex: +1990-00-00T00:00:00Z to indicate 1990 with year precision\n  yearMonthDay = yearMonthDay.replace(/-00/g, '-01')\n  const rest = `${yearMonthDay}T${withinDay}`\n\n  return fullDateData(sign, rest)\n}\n\nconst fullDateData = (sign, rest) => {\n  const year = rest.split('-')[0]\n  const needsExpandedYear = sign === '-' || year.length > 4\n\n  return needsExpandedYear ? expandedYearDate(sign, rest, year) : new Date(rest)\n}\n\nconst expandedYearDate = (sign, rest, year) => {\n  let date\n  // Using ISO8601 expanded notation for negative years or positive\n  // years with more than 4 digits: adding up to 2 leading zeros\n  // when needed. Can't find the documentation again, but testing\n  // with `new Date(date)` gives a good clue of the implementation\n  if (year.length === 4) {\n    date = `${sign}00${rest}`\n  } else if (year.length === 5) {\n    date = `${sign}0${rest}`\n  } else {\n    date = sign + rest\n  }\n  return new Date(date)\n}\n","const toDateObject = require('./wikibase_time_to_date_object')\n\nconst helpers = {}\nhelpers.isNumericId = id => /^[1-9][0-9]*$/.test(id)\nhelpers.isEntityId = id => /^((Q|P|L)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)$/.test(id)\nhelpers.isEntitySchemaId = id => /^E[1-9][0-9]*$/.test(id)\nhelpers.isItemId = id => /^Q[1-9][0-9]*$/.test(id)\nhelpers.isPropertyId = id => /^P[1-9][0-9]*$/.test(id)\nhelpers.isLexemeId = id => /^L[1-9][0-9]*$/.test(id)\nhelpers.isFormId = id => /^L[1-9][0-9]*-F[1-9][0-9]*$/.test(id)\nhelpers.isSenseId = id => /^L[1-9][0-9]*-S[1-9][0-9]*$/.test(id)\nhelpers.isGuid = guid => /^((Q|P|L)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)\\$[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(guid)\nhelpers.isHash = hash => /^[0-9a-f]{40}$/.test(hash)\nhelpers.isPropertyClaimsId = id => {\n  const [ entityId, propertyId ] = id.split('#')\n  return helpers.isEntityId(entityId) && helpers.isPropertyId(propertyId)\n}\nhelpers.isRevisionId = id => /^\\d+$/.test(id)\n\nhelpers.isEntityPageTitle = title => {\n  if (typeof title !== 'string') return false\n  let [ namespace, id ] = title.split(':')\n  if (namespace && id) {\n    return isEntityNamespace(namespace) && helpers[`is${namespace}Id`](id)\n  } else {\n    id = namespace\n    return helpers.isItemId(id)\n  }\n}\n\nconst entityNamespaces = [ 'Item', 'Property', 'Lexeme' ]\n\nconst isEntityNamespace = str => entityNamespaces.includes(str)\n\nconst isNonNestedEntityId = id => /^(Q|P|L)[1-9][0-9]*$/.test(id)\n\nhelpers.getNumericId = id => {\n  if (!isNonNestedEntityId(id)) throw new Error(`invalid entity id: ${id}`)\n  return id.replace(/^(Q|P|L)/, '')\n}\n\nhelpers.wikibaseTimeToDateObject = toDateObject\n\n// Try to parse the date or return the input\nconst bestEffort = fn => value => {\n  try {\n    return fn(value)\n  } catch (err) {\n    value = value.time || value\n\n    const sign = value[0]\n    let [ yearMonthDay, withinDay ] = value.slice(1).split('T')\n    yearMonthDay = yearMonthDay.replace(/-00/g, '-01')\n\n    return `${sign}${yearMonthDay}T${withinDay}`\n  }\n}\n\nconst toEpochTime = wikibaseTime => toDateObject(wikibaseTime).getTime()\nconst toISOString = wikibaseTime => toDateObject(wikibaseTime).toISOString()\n\n// A date format that knows just three precisions:\n// 'yyyy', 'yyyy-mm', and 'yyyy-mm-dd' (including negative and non-4 digit years)\n// Should be able to handle the old and the new Wikidata time:\n// - in the old one, units below the precision where set to 00\n// - in the new one, those months and days are set to 01 in those cases,\n//   so when we can access the full claim object, we check the precision\n//   to recover the old format\nconst toSimpleDay = wikibaseTime => {\n  // Also accept claim datavalue.value objects, and actually prefer those,\n  // as we can check the precision\n  if (typeof wikibaseTime === 'object') {\n    const { time, precision } = wikibaseTime\n    // Year precision\n    if (precision === 9) wikibaseTime = time.replace('-01-01T', '-00-00T')\n    // Month precision\n    else if (precision === 10) wikibaseTime = time.replace('-01T', '-00T')\n    else wikibaseTime = time\n  }\n\n  return wikibaseTime.split('T')[0]\n  // Remove positive years sign\n  .replace(/^\\+/, '')\n  // Remove years padding zeros\n  .replace(/^(-?)0+/, '$1')\n  // Remove days if not included in the Wikidata date precision\n  .replace(/-00$/, '')\n  // Remove months if not included in the Wikidata date precision\n  .replace(/-00$/, '')\n}\n\nhelpers.wikibaseTimeToEpochTime = bestEffort(toEpochTime)\nhelpers.wikibaseTimeToISOString = bestEffort(toISOString)\nhelpers.wikibaseTimeToSimpleDay = bestEffort(toSimpleDay)\n\nhelpers.getImageUrl = (filename, width) => {\n  let url = `https://commons.wikimedia.org/wiki/Special:FilePath/${filename}`\n  if (typeof width === 'number') url += `?width=${width}`\n  return url\n}\n\nhelpers.getEntityIdFromGuid = guid => {\n  const parts = guid.split(/[$-]/)\n  if (parts.length === 6) {\n    // Examples:\n    // - q520$BCA8D9DE-B467-473B-943C-6FD0C5B3D02C\n    // - P6216-a7fd6230-496e-6b47-ca4a-dcec5dbd7f95\n    return parts[0].toUpperCase()\n  } else if (parts.length === 7) {\n    // Examples:\n    // - L525-S1$66D20252-8CEC-4DB1-8B00-D713CFF42E48\n    // - L525-F2-52c9b382-02f5-4413-9923-26ade74f5a0d\n    return parts.slice(0, 2).join('-').toUpperCase()\n  } else {\n    throw new Error(`invalid guid: ${guid}`)\n  }\n}\n\nmodule.exports = helpers\n","const { wikibaseTimeToISOString, wikibaseTimeToEpochTime, wikibaseTimeToSimpleDay } = require('./helpers')\n\nconst simple = datavalue => datavalue.value\n\nconst monolingualtext = (datavalue, options) => {\n  return options.keepRichValues ? datavalue.value : datavalue.value.text\n}\n\nconst entity = (datavalue, options) => prefixedId(datavalue, options.entityPrefix)\n\nconst entityLetter = {\n  item: 'Q',\n  lexeme: 'L',\n  property: 'P'\n}\n\nconst prefixedId = (datavalue, prefix) => {\n  const { value } = datavalue\n  const id = value.id || entityLetter[value['entity-type']] + value['numeric-id']\n  return typeof prefix === 'string' ? `${prefix}:${id}` : id\n}\n\nconst quantity = (datavalue, options) => {\n  const { value } = datavalue\n  const amount = parseFloat(value.amount)\n  if (options.keepRichValues) {\n    const richValue = {\n      amount: parseFloat(value.amount),\n      // ex: http://www.wikidata.org/entity/\n      unit: value.unit.replace(/^https?:\\/\\/.*\\/entity\\//, '')\n    }\n    if (value.upperBound != null) richValue.upperBound = parseFloat(value.upperBound)\n    if (value.lowerBound != null) richValue.lowerBound = parseFloat(value.lowerBound)\n    return richValue\n  } else {\n    return amount\n  }\n}\n\nconst coordinate = (datavalue, options) => {\n  if (options.keepRichValues) {\n    return datavalue.value\n  } else {\n    return [ datavalue.value.latitude, datavalue.value.longitude ]\n  }\n}\n\nconst time = (datavalue, options) => {\n  let timeValue\n  if (typeof options.timeConverter === 'function') {\n    timeValue = options.timeConverter(datavalue.value)\n  } else {\n    timeValue = getTimeConverter(options.timeConverter)(datavalue.value)\n  }\n  if (options.keepRichValues) {\n    const { timezone, before, after, precision, calendarmodel } = datavalue.value\n    return { time: timeValue, timezone, before, after, precision, calendarmodel }\n  } else {\n    return timeValue\n  }\n}\n\nconst getTimeConverter = (key = 'iso') => {\n  const converter = timeConverters[key]\n  if (!converter) throw new Error(`invalid converter key: ${JSON.stringify(key).substring(0, 100)}`)\n  return converter\n}\n\n// Each time converter should be able to accept 2 keys of arguments:\n// - either datavalue.value objects (prefered as it gives access to the precision)\n// - or the time string (datavalue.value.time)\nconst timeConverters = {\n  iso: wikibaseTimeToISOString,\n  epoch: wikibaseTimeToEpochTime,\n  'simple-day': wikibaseTimeToSimpleDay,\n  none: wikibaseTime => wikibaseTime.time || wikibaseTime\n}\n\nconst parsers = {\n  commonsMedia: simple,\n  'external-id': simple,\n  'geo-shape': simple,\n  'globe-coordinate': coordinate,\n  math: simple,\n  monolingualtext,\n  'musical-notation': simple,\n  quantity,\n  string: simple,\n  'tabular-data': simple,\n  time,\n  url: simple,\n  'wikibase-entityid': entity,\n  'wikibase-form': entity,\n  'wikibase-item': entity,\n  'wikibase-lexeme': entity,\n  'wikibase-property': entity,\n  'wikibase-sense': entity\n}\n\nmodule.exports = {\n  parsers,\n  parse: (datatype, datavalue, options, claimId) => {\n    // Known case of missing datatype: form.claims, sense.claims\n    datatype = datatype || datavalue.type\n    // Known case requiring this: legacy \"muscial notation\" datatype\n    datatype = datatype.replace(' ', '-')\n\n    try {\n      return parsers[datatype](datavalue, options)\n    } catch (err) {\n      if (err.message === 'parsers[datatype] is not a function') {\n        err.message = `${datatype} claim parser isn't implemented\n        Claim id: ${claimId}\n        Please report to https://github.com/maxlath/wikibase-sdk/issues`\n      }\n      throw err\n    }\n  }\n}\n","const truthyPropertyClaims = propClaims => {\n  const aggregate = propClaims.reduce(aggregatePerRank, {})\n  // on truthyness: https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#Truthy_statements\n  return aggregate.preferred || aggregate.normal || []\n}\n\nconst nonDeprecatedPropertyClaims = propClaims => {\n  return propClaims.filter(claim => claim.rank !== 'deprecated')\n}\n\nconst aggregatePerRank = (aggregate, claim) => {\n  const { rank } = claim\n  aggregate[rank] || (aggregate[rank] = [])\n  aggregate[rank].push(claim)\n  return aggregate\n}\n\nconst truthyClaims = claims => {\n  const truthClaimsOnly = {}\n  Object.keys(claims).forEach(property => {\n    truthClaimsOnly[property] = truthyPropertyClaims(claims[property])\n  })\n  return truthClaimsOnly\n}\n\nmodule.exports = { truthyClaims, truthyPropertyClaims, nonDeprecatedPropertyClaims }\n","const { parse: parseClaim } = require('./parse_claim')\nconst { uniq } = require('../utils/utils')\nconst { truthyPropertyClaims, nonDeprecatedPropertyClaims } = require('./rank')\n\n// Expects an entity 'claims' object\n// Ex: entity.claims\nconst simplifyClaims = (claims, ...options) => {\n  const { propertyPrefix } = parseOptions(options)\n  const simpleClaims = {}\n  for (let id in claims) {\n    const propClaims = claims[id]\n    if (propertyPrefix) {\n      id = propertyPrefix + ':' + id\n    }\n    simpleClaims[id] = simplifyPropertyClaims(propClaims, ...options)\n  }\n  return simpleClaims\n}\n\n// Expects the 'claims' array of a particular property\n// Ex: entity.claims.P369\nconst simplifyPropertyClaims = (propClaims, ...options) => {\n  // Avoid to throw on empty inputs to allow to simplify claims array\n  // without having to know if the entity as claims for this property\n  // Ex: simplifyPropertyClaims(entity.claims.P124211616)\n  if (propClaims == null || propClaims.length === 0) return []\n\n  const { keepNonTruthy, keepNonDeprecated, areSubSnaks } = parseOptions(options)\n\n  if (keepNonDeprecated) {\n    propClaims = nonDeprecatedPropertyClaims(propClaims)\n  } else if (!(keepNonTruthy || areSubSnaks)) {\n    propClaims = truthyPropertyClaims(propClaims)\n  }\n\n  propClaims = propClaims\n    .map(claim => simplifyClaim(claim, ...options))\n    // Filter-out novalue and somevalue claims,\n    // unless a novalueValue or a somevalueValue is passed in options\n    .filter(defined)\n\n  // Deduplicate values unless we return a rich value object\n  if (propClaims[0] && typeof propClaims[0] !== 'object') {\n    return uniq(propClaims)\n  } else {\n    return propClaims\n  }\n}\n\n// Considers null as defined\nconst defined = obj => obj !== undefined\n\n// Expects a single claim object\n// Ex: entity.claims.P369[0]\nconst simplifyClaim = (claim, ...options) => {\n  options = parseOptions(options)\n  const { keepQualifiers, keepReferences, keepIds, keepHashes, keepTypes, keepSnaktypes, keepRanks } = parseKeepOptions(options)\n\n  // tries to replace wikidata deep claim object by a simple value\n  // e.g. a string, an entity Qid or an epoch time number\n  const { mainsnak, rank } = claim\n\n  let value, datatype, datavalue, snaktype, isQualifierSnak, isReferenceSnak\n  if (mainsnak) {\n    datatype = mainsnak.datatype\n    datavalue = mainsnak.datavalue\n    snaktype = mainsnak.snaktype\n  } else {\n    // Qualifiers have no mainsnak, and define datatype, datavalue on claim\n    datavalue = claim.datavalue\n    datatype = claim.datatype\n    snaktype = claim.snaktype\n    // Duck typing the sub-snak type\n    if (claim.hash) isQualifierSnak = true\n    else isReferenceSnak = true\n  }\n\n  if (datavalue) {\n    value = parseClaim(datatype, datavalue, options, claim.id)\n  } else {\n    if (snaktype === 'somevalue') value = options.somevalueValue\n    else if (snaktype === 'novalue') value = options.novalueValue\n    else throw new Error('no datavalue or special snaktype found')\n  }\n\n  // Qualifiers should not attempt to keep sub-qualifiers or references\n  if (isQualifierSnak) {\n    if (!(keepHashes || keepTypes || keepSnaktypes)) return value\n\n    const valueObj = { value }\n\n    if (keepHashes) valueObj.hash = claim.hash\n    if (keepTypes) valueObj.type = datatype\n    if (keepSnaktypes) valueObj.snaktype = snaktype\n\n    return valueObj\n  }\n  if (isReferenceSnak) {\n    if (!keepTypes) return value\n\n    return { type: datatype, value }\n  }\n  // No need to test keepHashes as it has no effect if neither\n  // keepQualifiers or keepReferences is true\n  if (!(keepQualifiers || keepReferences || keepIds || keepTypes || keepSnaktypes || keepRanks)) {\n    return value\n  }\n\n  // When keeping qualifiers or references, the value becomes an object\n  // instead of a direct value\n  const valueObj = { value }\n\n  if (keepTypes) valueObj.type = datatype\n\n  if (keepSnaktypes) valueObj.snaktype = snaktype\n\n  if (keepRanks) valueObj.rank = rank\n\n  const subSnaksOptions = getSubSnakOptions(options)\n  subSnaksOptions.keepHashes = keepHashes\n\n  if (keepQualifiers) {\n    valueObj.qualifiers = simplifyQualifiers(claim.qualifiers, subSnaksOptions)\n  }\n\n  if (keepReferences) {\n    claim.references = claim.references || []\n    valueObj.references = simplifyReferences(claim.references, subSnaksOptions)\n  }\n\n  if (keepIds) valueObj.id = claim.id\n\n  return valueObj\n}\n\nconst parseOptions = options => {\n  if (options == null) return {}\n\n  if (options[0] && typeof options[0] === 'object') return options[0]\n\n  // Legacy interface\n  const [ entityPrefix, propertyPrefix, keepQualifiers ] = options\n  return { entityPrefix, propertyPrefix, keepQualifiers }\n}\n\nconst simplifyQualifiers = (qualifiers, options) => {\n  return simplifyClaims(qualifiers, getSubSnakOptions(options))\n}\n\nconst simplifyPropertyQualifiers = (propertyQualifiers, options) => {\n  return simplifyPropertyClaims(propertyQualifiers, getSubSnakOptions(options))\n}\n\nconst simplifyReferences = (references, options) => {\n  return references.map(refRecord => {\n    return simplifyReferenceRecord(refRecord, options)\n  })\n}\n\nconst simplifyReferenceRecord = (refRecord, options) => {\n  const subSnaksOptions = getSubSnakOptions(options)\n  const snaks = simplifyClaims(refRecord.snaks, subSnaksOptions)\n  if (subSnaksOptions.keepHashes) return { snaks, hash: refRecord.hash }\n  else return snaks\n}\n\nconst getSubSnakOptions = (options = {}) => {\n  if (options.areSubSnaks) return options\n  // Using a new object so that the original options object isn't modified\n  else return Object.assign({}, options, { areSubSnaks: true })\n}\n\nconst keepOptions = [ 'keepQualifiers', 'keepReferences', 'keepIds', 'keepHashes', 'keepTypes', 'keepSnaktypes', 'keepRanks', 'keepRichValues' ]\n\nconst parseKeepOptions = options => {\n  if (options.keepAll) {\n    keepOptions.forEach(optionName => {\n      if (options[optionName] == null) options[optionName] = true\n    })\n  }\n  return options\n}\n\nmodule.exports = {\n  simplifyClaims,\n  simplifyPropertyClaims,\n  simplifyClaim,\n  simplifyQualifiers,\n  simplifyPropertyQualifiers,\n  simplifyQualifier: simplifyClaim,\n  simplifyReferences,\n}\n","const { isFormId } = require('./helpers')\nconst { representations: simplifyRepresentations } = require('./simplify_text_attributes')\nconst { simplifyClaims } = require('./simplify_claims')\n\nconst simplifyForm = (form, options) => {\n  const { id, representations, grammaticalFeatures, claims } = form\n  if (!isFormId(id)) throw new Error('invalid form object')\n  return {\n    id,\n    representations: simplifyRepresentations(representations),\n    grammaticalFeatures,\n    claims: simplifyClaims(claims, options)\n  }\n}\n\nconst simplifyForms = (forms, options) => forms.map(form => simplifyForm(form, options))\n\nmodule.exports = { simplifyForm, simplifyForms }\n","const { isSenseId } = require('./helpers')\nconst { glosses: simplifyGlosses } = require('./simplify_text_attributes')\nconst { simplifyClaims } = require('./simplify_claims')\n\nconst simplifySense = (sense, options) => {\n  const { id, glosses, claims } = sense\n  if (!isSenseId(id)) throw new Error('invalid sense object')\n  return {\n    id,\n    glosses: simplifyGlosses(glosses),\n    claims: simplifyClaims(claims, options)\n  }\n}\n\nconst simplifySenses = (senses, options) => senses.map(sense => simplifySense(sense, options))\n\nmodule.exports = { simplifySense, simplifySenses }\n","// Generated by 'npm run update-sitelinks-languages'\nmodule.exports = [\n  'aa',\n  'ab',\n  'ace',\n  'ady',\n  'af',\n  'ak',\n  'als',\n  'alt',\n  'ami',\n  'am',\n  'ang',\n  'an',\n  'arc',\n  'ar',\n  'ary',\n  'arz',\n  'ast',\n  'as',\n  'atj',\n  'avk',\n  'av',\n  'awa',\n  'ay',\n  'azb',\n  'az',\n  'ban',\n  'bar',\n  'bat_smg',\n  'ba',\n  'bcl',\n  'be_x_old',\n  'be',\n  'bg',\n  'bh',\n  'bi',\n  'bjn',\n  'bm',\n  'bn',\n  'bo',\n  'bpy',\n  'br',\n  'bs',\n  'bug',\n  'bxr',\n  'ca',\n  'cbk_zam',\n  'cdo',\n  'ceb',\n  'ce',\n  'cho',\n  'chr',\n  'ch',\n  'chy',\n  'ckb',\n  'co',\n  'crh',\n  'cr',\n  'csb',\n  'cs',\n  'cu',\n  'cv',\n  'cy',\n  'dag',\n  'da',\n  'de',\n  'din',\n  'diq',\n  'dsb',\n  'dty',\n  'dv',\n  'dz',\n  'ee',\n  'el',\n  'eml',\n  'en',\n  'eo',\n  'es',\n  'et',\n  'eu',\n  'ext',\n  'fa',\n  'ff',\n  'fiu_vro',\n  'fi',\n  'fj',\n  'fo',\n  'frp',\n  'frr',\n  'fr',\n  'fur',\n  'fy',\n  'gag',\n  'gan',\n  'ga',\n  'gcr',\n  'gd',\n  'glk',\n  'gl',\n  'gn',\n  'gom',\n  'gor',\n  'got',\n  'gu',\n  'gv',\n  'hak',\n  'ha',\n  'haw',\n  'he',\n  'hif',\n  'hi',\n  'ho',\n  'hr',\n  'hsb',\n  'ht',\n  'hu',\n  'hy',\n  'hyw',\n  'hz',\n  'ia',\n  'id',\n  'ie',\n  'ig',\n  'ii',\n  'ik',\n  'ilo',\n  'inh',\n  'io',\n  'is',\n  'it',\n  'iu',\n  'jam',\n  'ja',\n  'jbo',\n  'jv',\n  'kaa',\n  'kab',\n  'ka',\n  'kbd',\n  'kbp',\n  'kg',\n  'ki',\n  'kj',\n  'kk',\n  'kl',\n  'km',\n  'kn',\n  'koi',\n  'ko',\n  'krc',\n  'kr',\n  'ksh',\n  'ks',\n  'ku',\n  'kv',\n  'kw',\n  'ky',\n  'lad',\n  'la',\n  'lbe',\n  'lb',\n  'lez',\n  'lfn',\n  'lg',\n  'lij',\n  'li',\n  'lld',\n  'lmo',\n  'ln',\n  'lo',\n  'lrc',\n  'ltg',\n  'lt',\n  'lv',\n  'mad',\n  'mai',\n  'map_bms',\n  'mdf',\n  'mg',\n  'mhr',\n  'mh',\n  'min',\n  'mi',\n  'mk',\n  'ml',\n  'mni',\n  'mn',\n  'mnw',\n  'mo',\n  'mrj',\n  'mr',\n  'ms',\n  'mt',\n  'mus',\n  'mwl',\n  'myv',\n  'my',\n  'mzn',\n  'nah',\n  'nap',\n  'na',\n  'nds_nl',\n  'nds',\n  'ne',\n  'new',\n  'ng',\n  'nia',\n  'nl',\n  'nn',\n  'nov',\n  'no',\n  'nqo',\n  'nrm',\n  'nso',\n  'nv',\n  'ny',\n  'oc',\n  'olo',\n  'om',\n  'or',\n  'os',\n  'pag',\n  'pam',\n  'pap',\n  'pa',\n  'pcd',\n  'pdc',\n  'pfl',\n  'pih',\n  'pi',\n  'pl',\n  'pms',\n  'pnb',\n  'pnt',\n  'ps',\n  'pt',\n  'pwn',\n  'qu',\n  'rm',\n  'rmy',\n  'rn',\n  'roa_rup',\n  'roa_tara',\n  'ro',\n  'rue',\n  'ru',\n  'rw',\n  'sah',\n  'sat',\n  'sa',\n  'scn',\n  'sco',\n  'sc',\n  'sd',\n  'se',\n  'sg',\n  'shi',\n  'shn',\n  'sh',\n  'shy',\n  'simple',\n  'si',\n  'skr',\n  'sk',\n  'sl',\n  'smn',\n  'sm',\n  'sn',\n  'sources',\n  'so',\n  'sq',\n  'srn',\n  'sr',\n  'ss',\n  'stq',\n  'st',\n  'su',\n  'sv',\n  'sw',\n  'szl',\n  'szy',\n  'ta',\n  'tay',\n  'tcy',\n  'tet',\n  'te',\n  'tg',\n  'th',\n  'ti',\n  'tk',\n  'tl',\n  'tn',\n  'to',\n  'tpi',\n  'trv',\n  'tr',\n  'ts',\n  'tt',\n  'tum',\n  'tw',\n  'tyv',\n  'ty',\n  'udm',\n  'ug',\n  'uk',\n  'ur',\n  'uz',\n  'vec',\n  'vep',\n  've',\n  'vi',\n  'vls',\n  'vo',\n  'war',\n  'wa',\n  'wo',\n  'wuu',\n  'xal',\n  'xh',\n  'xmf',\n  'yi',\n  'yo',\n  'yue',\n  'za',\n  'zea',\n  'zh_classical',\n  'zh_min_nan',\n  'zh_yue',\n  'zh',\n  'zu'\n]\n","const { fixedEncodeURIComponent, replaceSpaceByUnderscores, isPlainObject } = require('../utils/utils')\nconst { isPropertyId } = require('./helpers')\nconst wikidataBase = 'https://www.wikidata.org/wiki/'\nconst languages = require('./sitelinks_languages')\n\nconst getSitelinkUrl = (site, title) => {\n  if (isPlainObject(site)) {\n    title = site.title\n    site = site.site\n  }\n\n  if (!site) throw new Error('missing a site')\n  if (!title) throw new Error('missing a title')\n\n  const shortSiteKey = site.replace(/wiki$/, '')\n  const specialUrlBuilder = siteUrlBuilders[shortSiteKey] || siteUrlBuilders[site]\n  if (specialUrlBuilder) return specialUrlBuilder(title)\n\n  const { lang, project } = getSitelinkData(site)\n  title = fixedEncodeURIComponent(replaceSpaceByUnderscores(title))\n  return `https://${lang}.${project}.org/wiki/${title}`\n}\n\nconst wikimediaSite = subdomain => title => `https://${subdomain}.wikimedia.org/wiki/${title}`\n\nconst siteUrlBuilders = {\n  commons: wikimediaSite('commons'),\n  mediawiki: title => `https://www.mediawiki.org/wiki/${title}`,\n  meta: wikimediaSite('meta'),\n  species: wikimediaSite('species'),\n  wikidata: title => {\n    if (isPropertyId(title)) return `${wikidataBase}Property:${title}`\n    return `${wikidataBase}${title}`\n  },\n  wikimania: wikimediaSite('wikimania')\n}\n\nconst sitelinkUrlPattern = /^https?:\\/\\/([\\w-]{2,10})\\.(\\w+)\\.org\\/\\w+\\/(.*)/\n\nconst getSitelinkData = site => {\n  if (site.startsWith('http')) {\n    const url = site\n    const matchData = url.match(sitelinkUrlPattern)\n    if (!matchData) throw new Error(`invalid sitelink url: ${url}`)\n    let [ lang, project, title ] = matchData.slice(1)\n    title = decodeURIComponent(title)\n    let key\n    // Known case: wikidata, mediawiki\n    if (lang === 'www') {\n      lang = 'en'\n      key = project\n    } else if (lang === 'commons') {\n      lang = 'en'\n      project = key = 'commons'\n    } else {\n      key = `${lang}${project}`.replace('wikipedia', 'wiki')\n    }\n    return { lang, project, key, title, url }\n  } else {\n    const key = site\n    const specialProjectName = specialSites[key]\n    if (specialProjectName) return { lang: 'en', project: specialProjectName, key }\n\n    const [ lang, projectSuffix, rest ] = key.split('wik')\n\n    // Detecting cases like 'frwikiwiki' that would return [ 'fr', 'i', 'i' ]\n    if (rest != null) throw new Error(`invalid sitelink key: ${key}`)\n\n    if (languages.indexOf(lang) === -1) {\n      throw new Error(`sitelink lang not found: ${lang}`)\n    }\n\n    const project = projectsBySuffix[projectSuffix]\n    if (!project) throw new Error(`sitelink project not found: ${project}`)\n\n    return { lang, project, key }\n  }\n}\n\nconst specialSites = {\n  commonswiki: 'commons',\n  mediawikiwiki: 'mediawiki',\n  metawiki: 'meta',\n  specieswiki: 'specieswiki',\n  wikidatawiki: 'wikidata',\n  wikimaniawiki: 'wikimania'\n}\n\nconst isSitelinkKey = site => {\n  try {\n    // relies on getSitelinkData validation\n    getSitelinkData(site)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\nconst projectsBySuffix = {\n  i: 'wikipedia',\n  isource: 'wikisource',\n  iquote: 'wikiquote',\n  tionary: 'wiktionary',\n  ibooks: 'wikibooks',\n  iversity: 'wikiversity',\n  ivoyage: 'wikivoyage',\n  inews: 'wikinews'\n}\n\nmodule.exports = { getSitelinkUrl, getSitelinkData, isSitelinkKey }\n","const { getSitelinkUrl } = require('./sitelinks')\n\nmodule.exports = (sitelinks, options = {}) => {\n  const { addUrl } = options\n  return Object.keys(sitelinks).reduce(aggregateValues(sitelinks, addUrl), {})\n}\n\nconst aggregateValues = (sitelinks, addUrl) => (index, key) => {\n  // Accomodating for wikibase-cli, which might set the sitelink to null\n  // to signify that a requested sitelink was not found\n  if (sitelinks[key] == null) {\n    index[key] = sitelinks[key]\n    return index\n  }\n  const { title } = sitelinks[key]\n  if (addUrl) {\n    index[key] = { title, url: getSitelinkUrl(key, title) }\n  } else {\n    index[key] = title\n  }\n  return index\n}\n","module.exports = (input, options = {}) => {\n  if (typeof input === 'string') input = JSON.parse(input)\n\n  const { vars } = input.head\n  const results = input.results.bindings\n\n  if (vars.length === 1 && options.minimize === true) {\n    const varName = vars[0]\n    return results\n    .map(result => parseValue(result[varName]))\n    // filtering-out bnodes\n    .filter(result => result != null)\n  }\n\n  const { richVars, associatedVars, standaloneVars } = identifyVars(vars)\n  return results.map(getSimplifiedResult(richVars, associatedVars, standaloneVars))\n}\n\nconst parseValue = valueObj => {\n  if (!(valueObj)) return\n  let { datatype } = valueObj\n  datatype = datatype && datatype.replace('http://www.w3.org/2001/XMLSchema#', '')\n  const parser = parsers[valueObj.type] || getDatatypesParsers(datatype)\n  return parser(valueObj)\n}\n\nconst parsers = {\n  uri: valueObj => parseUri(valueObj.value),\n  // blank nodes will be filtered-out in order to get things simple\n  bnode: () => null\n}\n\nconst numberParser = valueObj => parseFloat(valueObj.value)\n\nconst getDatatypesParsers = datatype => {\n  datatype = datatype && datatype.replace('http://www.w3.org/2001/XMLSchema#', '')\n  return datatypesParsers[datatype] || passValue\n}\n\nconst datatypesParsers = {\n  decimal: numberParser,\n  integer: numberParser,\n  float: numberParser,\n  double: numberParser,\n  boolean: valueObj => valueObj.value === 'true'\n}\n\n// return the raw value if the datatype is missing\nconst passValue = valueObj => valueObj.value\n\nconst parseUri = uri => {\n  // ex: http://www.wikidata.org/entity/statement/\n  if (uri.match(/http.*\\/entity\\/statement\\//)) {\n    return convertStatementUriToGuid(uri)\n  }\n\n  return uri\n  // ex: http://www.wikidata.org/entity/\n  .replace(/^https?:\\/\\/.*\\/entity\\//, '')\n  // ex: http://www.wikidata.org/prop/direct/\n  .replace(/^https?:\\/\\/.*\\/prop\\/direct\\//, '')\n}\n\nconst convertStatementUriToGuid = uri => {\n  // ex: http://www.wikidata.org/entity/statement/\n  uri = uri.replace(/^https?:\\/\\/.*\\/entity\\/statement\\//, '')\n  const parts = uri.split('-')\n  return parts[0] + '$' + parts.slice(1).join('-')\n}\n\nconst identifyVars = vars => {\n  let richVars = vars.filter(varName => vars.some(isAssociatedVar(varName)))\n  richVars = richVars.filter(richVar => {\n    return !richVars.some(otherRichVar => {\n      return richVar !== otherRichVar && richVar.startsWith(otherRichVar)\n    })\n  })\n  const associatedVarPattern = new RegExp(`^(${richVars.join('|')})[A-Z]`)\n  const associatedVars = vars.filter(varName => associatedVarPattern.test(varName))\n  const standaloneVars = vars.filter(varName => {\n    return !richVars.includes(varName) && !associatedVarPattern.test(varName)\n  })\n  return { richVars, associatedVars, standaloneVars }\n}\n\nconst isAssociatedVar = varNameA => {\n  const pattern = new RegExp(`^${varNameA}[A-Z]\\\\w+`)\n  return pattern.test.bind(pattern)\n}\n\nconst getSimplifiedResult = (richVars, associatedVars, standaloneVars) => result => {\n  const simplifiedResult = {}\n  for (const varName of richVars) {\n    const richVarData = {}\n    const value = parseValue(result[varName])\n    if (value != null) richVarData.value = value\n    for (const associatedVarName of associatedVars) {\n      if (associatedVarName.startsWith(varName)) addAssociatedValue(result, varName, associatedVarName, richVarData)\n    }\n    if (Object.keys(richVarData).length > 0) simplifiedResult[varName] = richVarData\n  }\n  for (const varName of standaloneVars) {\n    simplifiedResult[varName] = parseValue(result[varName])\n  }\n  return simplifiedResult\n}\n\nconst addAssociatedValue = (result, varName, associatedVarName, richVarData) => {\n  // ex: propertyType => Type\n  let shortAssociatedVarName = associatedVarName.split(varName)[1]\n  // ex: Type => type\n  shortAssociatedVarName = shortAssociatedVarName[0].toLowerCase() + shortAssociatedVarName.slice(1)\n  // ex: altLabel => aliases\n  shortAssociatedVarName = specialNames[shortAssociatedVarName] || shortAssociatedVarName\n  const associatedVarData = result[associatedVarName]\n  if (associatedVarData != null) richVarData[shortAssociatedVarName] = associatedVarData.value\n}\n\nconst specialNames = {\n  altLabel: 'aliases'\n}\n","const { labels, descriptions, aliases, lemmas, glosses } = require('./simplify_text_attributes')\n\nconst {\n  simplifyClaim: claim,\n  simplifyPropertyClaims: propertyClaims,\n  simplifyClaims: claims,\n  simplifyQualifier: qualifier,\n  simplifyPropertyQualifiers: propertyQualifiers,\n  simplifyQualifiers: qualifiers,\n  simplifyReferences: references,\n} = require('./simplify_claims')\n\nconst { simplifyForm: form, simplifyForms: forms } = require('./simplify_forms')\nconst { simplifySense: sense, simplifySenses: senses } = require('./simplify_senses')\n\nconst sitelinks = require('./simplify_sitelinks')\nconst sparqlResults = require('./simplify_sparql_results')\n\nmodule.exports = {\n  labels,\n  descriptions,\n  aliases,\n  claim,\n  propertyClaims,\n  claims,\n  qualifier,\n  propertyQualifiers,\n  qualifiers,\n  references,\n  sitelinks,\n\n  // Aliases\n  snak: claim,\n  propertySnaks: propertyClaims,\n  snaks: claims,\n\n  // Lexemes\n  lemmas,\n  glosses,\n  form,\n  forms,\n  sense,\n  senses,\n\n  sparqlResults\n\n  // Set in ./simplify_entity\n  // entity,\n  // entities,\n}\n","const simplify = require('./simplify')\n\nconst simplifyEntity = (entity, options) => {\n  const { type } = entity\n  const simplified = {\n    id: entity.id,\n    type,\n    modified: entity.modified\n  }\n\n  if (entity.datatype) simplified.datatype = entity.datatype\n\n  if (type === 'item') {\n    simplifyIfDefined(entity, simplified, 'labels')\n    simplifyIfDefined(entity, simplified, 'descriptions')\n    simplifyIfDefined(entity, simplified, 'aliases')\n    simplifyIfDefined(entity, simplified, 'claims', options)\n    simplifyIfDefined(entity, simplified, 'sitelinks', options)\n  } else if (type === 'property') {\n    simplified.datatype = entity.datatype\n    simplifyIfDefined(entity, simplified, 'labels')\n    simplifyIfDefined(entity, simplified, 'descriptions')\n    simplifyIfDefined(entity, simplified, 'aliases')\n    simplifyIfDefined(entity, simplified, 'claims', options)\n  } else if (type === 'lexeme') {\n    simplifyIfDefined(entity, simplified, 'lemmas')\n    simplified.lexicalCategory = entity.lexicalCategory\n    simplified.language = entity.language\n    simplifyIfDefined(entity, simplified, 'claims', options)\n    simplifyIfDefined(entity, simplified, 'forms', options)\n    simplifyIfDefined(entity, simplified, 'senses', options)\n  }\n\n  return simplified\n}\n\nconst simplifyIfDefined = (entity, simplified, attribute, options) => {\n  if (entity[attribute] != null) {\n    simplified[attribute] = simplify[attribute](entity[attribute], options)\n  }\n}\n\nconst simplifyEntities = (entities, options = {}) => {\n  if (entities.entities) entities = entities.entities\n  const { entityPrefix } = options\n  return Object.keys(entities).reduce((obj, key) => {\n    const entity = entities[key]\n    if (entityPrefix) key = `${entityPrefix}:${key}`\n    obj[key] = simplifyEntity(entity, options)\n    return obj\n  }, {})\n}\n\n// Set those here instead of in ./simplify to avoid a circular dependency\nsimplify.entity = simplifyEntity\nsimplify.entities = simplifyEntities\n\nmodule.exports = { simplifyEntity, simplifyEntities }\n","const { simplifyEntity } = require('./simplify_entity')\n\nconst wb = {\n  entities: res => {\n    // Legacy convenience for the time the 'request' lib was all the rage\n    res = res.body || res\n    const { entities } = res\n    Object.keys(entities).forEach(entityId => {\n      entities[entityId] = simplifyEntity(entities[entityId])\n    })\n    return entities\n  },\n\n  pagesTitles: res => {\n    // Same behavior as above\n    res = res.body || res\n    return res.query.search.map(result => result.title)\n  }\n}\n\nmodule.exports = {\n  wb,\n  // Legacy\n  wd: wb\n}\n","const isBrowser = typeof location !== 'undefined' && typeof document !== 'undefined'\n\nlet stringifyQuery\nif (isBrowser) {\n  stringifyQuery = queryObj => new URLSearchParams(queryObj).toString()\n} else {\n  // TODO: use URLSearchParams in NodeJS too, but that would mean dropping support for NodeJS < v10\n  stringifyQuery = require('querystring').stringify\n}\n\nmodule.exports = instanceApiEndpoint => queryObj => {\n  // Request CORS headers if the request is made from a browser\n  // See https://www.wikidata.org/w/api.php ('origin' parameter)\n  if (isBrowser) queryObj.origin = '*'\n\n  // Remove null or undefined parameters\n  Object.keys(queryObj).forEach(key => {\n    if (queryObj[key] == null) delete queryObj[key]\n  })\n\n  return instanceApiEndpoint + '?' + stringifyQuery(queryObj)\n}\n","const { isPlainObject } = require('../utils/utils')\nconst types = [ 'item', 'property', 'lexeme', 'form', 'sense' ]\n\nmodule.exports = buildUrl => (search, language, limit, format, uselang) => {\n  // Using the variable 'offset' instead of 'continue' as the later is a reserved word\n  let type, offset\n\n  // polymorphism: arguments can be passed as an object keys\n  if (isPlainObject(search)) {\n    // Not using destructuring assigment there as it messes with both babel and standard\n    const params = search\n    search = params.search\n    language = params.language\n    limit = params.limit\n    offset = params.continue\n    format = params.format\n    uselang = params.uselang\n    type = params.type\n  }\n\n  if (!(search && search.length > 0)) throw new Error(\"search can't be empty\")\n\n  language = language || 'en'\n  uselang = uselang || language\n  limit = limit || '20'\n  format = format || 'json'\n  type = type || 'item'\n  offset = offset || '0'\n\n  if (!types.includes(type)) throw new Error(`invalid type: ${type}`)\n\n  return buildUrl({\n    action: 'wbsearchentities',\n    search,\n    language,\n    limit,\n    continue: offset,\n    format,\n    uselang,\n    type\n  })\n}\n","// See https://www.wikidata.org/w/api.php?action=help&modules=query%2Bsearch\n\nconst { isPlainObject } = require('../utils/utils')\nconst namespacePattern = /^\\d+[|\\d]*$/\n\nmodule.exports = buildUrl => params => {\n  if (!isPlainObject(params)) {\n    throw new Error(`expected parameters to be passed as an object, got ${params} (${typeof params})`)\n  }\n\n  // Accept sr parameters with or without prefix\n  for (const key in params) {\n    if (key.startsWith('sr')) {\n      const shortKey = key.replace(/^sr/, '')\n      if (params[shortKey] != null) throw new Error(`${shortKey} and ${key} are the same`)\n      params[shortKey] = params[key]\n    }\n  }\n\n  const { search, haswbstatement, format = 'json', limit, offset, profile, sort } = params\n  let { namespace, prop } = params\n\n  if (!(search || haswbstatement)) throw new Error('missing \"search\" or \"haswbstatement\" parameter')\n\n  let srsearch = ''\n  if (search) srsearch += search\n\n  if (haswbstatement) {\n    const statements = haswbstatement instanceof Array ? haswbstatement : [ haswbstatement ]\n    for (const statement of statements) {\n      if (statement[0] === '-') srsearch += ` -haswbstatement:${statement.slice(1)}`\n      else srsearch += ` haswbstatement:${statement}`\n    }\n  }\n\n  if (limit != null && (typeof limit !== 'number' || limit < 1)) {\n    throw new Error(`invalid limit: ${limit}`)\n  }\n\n  if (offset != null && (typeof offset !== 'number' || offset < 0)) {\n    throw new Error(`invalid offset: ${offset}`)\n  }\n\n  if (namespace instanceof Array) namespace = namespace.join('|')\n  else if (typeof namespace === 'number') namespace = namespace.toString()\n\n  if (namespace && !namespacePattern.test(namespace)) {\n    throw new Error(`invalid namespace: ${namespace}`)\n  }\n\n  if (profile != null && typeof profile !== 'string') {\n    throw new Error(`invalid profile: ${profile} (${typeof profile}, expected string)`)\n  }\n\n  if (sort != null && typeof sort !== 'string') {\n    throw new Error(`invalid sort: ${sort} (${typeof sort}, expected string)`)\n  }\n\n  if (prop != null) {\n    if (namespace instanceof Array) prop = prop.join('|')\n    if (typeof prop !== 'string') {\n      throw new Error(`invalid prop: ${prop} (${typeof prop}, expected string)`)\n    }\n  }\n\n  return buildUrl({\n    action: 'query',\n    list: 'search',\n    srsearch: srsearch.trim(),\n    format,\n    srnamespace: namespace,\n    srlimit: limit,\n    sroffset: offset,\n    srqiprofile: profile,\n    srsort: sort,\n    srprop: prop,\n  })\n}\n","const helpers = require('./helpers')\n\nconst validate = (name, testName) => value => {\n  if (!helpers[testName](value)) throw new Error(`invalid ${name}: ${value}`)\n}\n\nmodule.exports = {\n  entityId: validate('entity id', 'isEntityId'),\n  propertyId: validate('property id', 'isPropertyId'),\n  entityPageTitle: validate('entity page title', 'isEntityPageTitle'),\n  revisionId: validate('revision id', 'isRevisionId')\n}\n","const { isPlainObject, forceArray, shortLang } = require('../utils/utils')\nconst validate = require('../helpers/validate')\n\nmodule.exports = buildUrl => (ids, languages, props, format, redirects) => {\n  // Polymorphism: arguments can be passed as an object keys\n  if (isPlainObject(ids)) {\n    ({ ids, languages, props, format, redirects } = ids)\n  }\n\n  format = format || 'json'\n\n  // ids can't be let empty\n  if (!(ids && ids.length > 0)) throw new Error('no id provided')\n\n  // Allow to pass ids as a single string\n  ids = forceArray(ids)\n\n  ids.forEach(validate.entityId)\n\n  if (ids.length > 50) {\n    console.warn(`getEntities accepts 50 ids max to match Wikidata API limitations:\n      this request won't get all the desired entities.\n      You can use getManyEntities instead to generate several request urls\n      to work around this limitation`)\n  }\n\n  // Properties can be either one property as a string\n  // or an array or properties;\n  // either case me just want to deal with arrays\n\n  const query = {\n    action: 'wbgetentities',\n    ids: ids.join('|'),\n    format\n  }\n\n  if (redirects === false) query.redirects = 'no'\n\n  if (languages) {\n    languages = forceArray(languages).map(shortLang)\n    query.languages = languages.join('|')\n  }\n\n  if (props && props.length > 0) query.props = forceArray(props).join('|')\n\n  return buildUrl(query)\n}\n","const { isPlainObject } = require('../utils/utils')\n\nmodule.exports = buildUrl => {\n  const getEntities = require('./get_entities')(buildUrl)\n  return (ids, languages, props, format, redirects) => {\n    // Polymorphism: arguments can be passed as an object keys\n    if (isPlainObject(ids)) {\n      ({ ids, languages, props, format, redirects } = ids)\n    }\n\n    if (!(ids instanceof Array)) throw new Error('getManyEntities expects an array of ids')\n\n    return getIdsGroups(ids)\n    .map(idsGroup => getEntities(idsGroup, languages, props, format, redirects))\n  }\n}\n\nconst getIdsGroups = ids => {\n  const groups = []\n  while (ids.length > 0) {\n    const group = ids.slice(0, 50)\n    ids = ids.slice(50)\n    groups.push(group)\n  }\n  return groups\n}\n","const { forceArray } = require('../utils/utils')\nconst validate = require('../helpers/validate')\n\n// See https://www.wikidata.org/w/api.php?action=help&modules=query+revisions\n\nmodule.exports = buildUrl => (ids, options = {}) => {\n  ids = forceArray(ids)\n  ids.forEach(validate.entityPageTitle)\n\n  const uniqueId = ids.length === 1\n  const query = {\n    action: 'query',\n    prop: 'revisions'\n  }\n\n  query.titles = ids.join('|')\n  query.format = options.format || 'json'\n  if (uniqueId) query.rvlimit = options.limit || 'max'\n  if (uniqueId && options.start) query.rvstart = getEpochSeconds(options.start)\n  if (uniqueId && options.end) query.rvend = getEpochSeconds(options.end)\n\n  const { prop, user, excludeuser, tag } = options\n  if (prop) {\n    query.rvprop = forceArray(prop).join('|')\n  } else {\n    query.rvprop = 'ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores'\n  }\n  query.rvslots = '*'\n  if (user) query.rvuser = user\n  if (excludeuser) query.rvexcludeuser = excludeuser\n  if (tag) query.rvtag = tag\n\n  return buildUrl(query)\n}\n\nconst getEpochSeconds = date => {\n  // Return already formatted epoch seconds:\n  // if a date in milliseconds appear to be earlier than 2000-01-01, that's probably\n  // already seconds actually\n  if (typeof date === 'number' && date < earliestPointInMs) return date\n  return Math.trunc(new Date(date).getTime() / 1000)\n}\n\nconst earliestPointInMs = new Date('2000-01-01').getTime()\n","const validate = require('../helpers/validate')\nconst { isPlainObject } = require('../utils/utils')\n\nmodule.exports = (instance, wgScriptPath) => (id, revision) => {\n  if (isPlainObject(id)) {\n    revision = id.revision\n    id = id.id\n  }\n  validate.entityId(id)\n  validate.revisionId(revision)\n  return `${instance}/${wgScriptPath}/index.php?title=Special:EntityData/${id}.json&revision=${revision}`\n}\n","const { isPlainObject, forceArray, shortLang } = require('../utils/utils')\n\nmodule.exports = buildUrl => (titles, sites, languages, props, format, redirects) => {\n  // polymorphism: arguments can be passed as an object keys\n  if (isPlainObject(titles)) {\n    // Not using destructuring assigment there as it messes with both babel and standard\n    const params = titles\n    titles = params.titles\n    sites = params.sites\n    languages = params.languages\n    props = params.props\n    format = params.format\n    redirects = params.redirects\n  }\n\n  format = format || 'json'\n\n  // titles cant be let empty\n  if (!(titles && titles.length > 0)) throw new Error('no titles provided')\n  // default to the English Wikipedia\n  if (!(sites && sites.length > 0)) sites = [ 'enwiki' ]\n\n  // Properties can be either one property as a string\n  // or an array or properties;\n  // either case me just want to deal with arrays\n  titles = forceArray(titles)\n  sites = forceArray(sites).map(parseSite)\n  props = forceArray(props)\n\n  const query = {\n    action: 'wbgetentities',\n    titles: titles.join('|'),\n    sites: sites.join('|'),\n    format\n  }\n\n  // Normalizing only works if there is only one site and title\n  if (sites.length === 1 && titles.length === 1) {\n    query.normalize = true\n  }\n\n  if (languages) {\n    languages = forceArray(languages).map(shortLang)\n    query.languages = languages.join('|')\n  }\n\n  if (props && props.length > 0) query.props = props.join('|')\n\n  if (redirects === false) query.redirects = 'no'\n\n  return buildUrl(query)\n}\n\n// convert 2 letters language code to Wikipedia sitelinks code\nconst parseSite = site => site.length === 2 ? `${site}wiki` : site\n","const { fixedEncodeURIComponent } = require('../utils/utils')\n\nmodule.exports = sparqlEndpoint => sparql => {\n  const query = fixedEncodeURIComponent(sparql)\n  return `${sparqlEndpoint}?format=json&query=${query}`\n}\n","const { forceArray } = require('../utils/utils')\nconst { isItemId } = require('../helpers/helpers')\nconst validate = require('../helpers/validate')\n\n// Fiter-out properties. Can't be filtered by\n// `?subject a wikibase:Item`, as those triples are omitted\n// https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#WDQS_data_differences\nconst itemsOnly = 'FILTER NOT EXISTS { ?subject rdf:type wikibase:Property . } '\n\nmodule.exports = sparqlEndpoint => {\n  const sparqlQuery = require('./sparql_query')(sparqlEndpoint)\n  return (property, value, options = {}) => {\n    const { limit, caseInsensitive, keepProperties } = options\n    const valueFn = caseInsensitive ? caseInsensitiveValueQuery : directValueQuery\n    const filter = keepProperties ? '' : itemsOnly\n\n    // Allow to request values for several properties at once\n    let properties = forceArray(property)\n    properties.forEach(validate.propertyId)\n    properties = properties.map(prefixifyProperty).join('|')\n\n    const valueBlock = getValueBlock(value, valueFn, properties, filter)\n    let sparql = `SELECT DISTINCT ?subject WHERE { ${valueBlock} }`\n    if (limit) sparql += ` LIMIT ${limit}`\n    return sparqlQuery(sparql)\n  }\n}\n\nconst getValueBlock = (value, valueFn, properties, filter) => {\n  if (!(value instanceof Array)) {\n    return valueFn(properties, getValueString(value), filter)\n  }\n\n  const valuesBlocks = value\n    .map(getValueString)\n    .map(valStr => valueFn(properties, valStr, filter))\n\n  return '{ ' + valuesBlocks.join('} UNION {') + ' }'\n}\n\nconst getValueString = value => {\n  if (isItemId(value)) {\n    value = `wd:${value}`\n  } else if (typeof value === 'string') {\n    value = `'${value}'`\n  }\n  return value\n}\n\nconst directValueQuery = (properties, value, filter, limit) => {\n  return `?subject ${properties} ${value} .\n    ${filter}`\n}\n\n// Discussion on how to make this query optimal:\n// http://stackoverflow.com/q/43073266/3324977\nconst caseInsensitiveValueQuery = (properties, value, filter, limit) => {\n  return `?subject ${properties} ?value .\n    FILTER (lcase(?value) = ${value.toLowerCase()})\n    ${filter}`\n}\n\nconst prefixifyProperty = property => 'wdt:' + property\n","const { isPlainObject } = require('./utils/utils')\n\nconst simplify = require('./helpers/simplify')\nconst parse = require('./helpers/parse_responses')\nconst helpers = require('./helpers/helpers')\nconst sitelinksHelpers = require('../lib/helpers/sitelinks')\nconst rankHelpers = require('../lib/helpers/rank')\nconst tip = `Tip: if you just want to access functions that don't need an instance or a sparqlEndpoint,\nthose are also exposed directly on the module object. Exemple:\nconst { isItemId, simplify } = require('wikibase-sdk')`\n\nconst common = Object.assign({ simplify, parse }, helpers, sitelinksHelpers, rankHelpers)\n\nconst WBK = config => {\n  if (!isPlainObject(config)) throw new Error('invalid config')\n  const { instance, sparqlEndpoint } = config\n  let { wgScriptPath = 'w' } = config\n\n  wgScriptPath = wgScriptPath.replace(/^\\//, '')\n\n  if (!(instance || sparqlEndpoint)) {\n    throw new Error(`one of instance or sparqlEndpoint should be set at initialization.\\n${tip}`)\n  }\n\n  let wikibaseApiFunctions, instanceRoot, instanceApiEndpoint\n  if (instance) {\n    validateEndpoint('instance', instance)\n\n    instanceRoot = instance\n      .replace(/\\/$/, '')\n      .replace(`/${wgScriptPath}/api.php`, '')\n\n    instanceApiEndpoint = `${instanceRoot}/${wgScriptPath}/api.php`\n\n    const buildUrl = require('./utils/build_url')(instanceApiEndpoint)\n\n    wikibaseApiFunctions = {\n      searchEntities: require('./queries/search_entities')(buildUrl),\n      cirrusSearchPages: require('./queries/cirrus_search')(buildUrl),\n      getEntities: require('./queries/get_entities')(buildUrl),\n      getManyEntities: require('./queries/get_many_entities')(buildUrl),\n      getRevisions: require('./queries/get_revisions')(buildUrl),\n      getEntityRevision: require('./queries/get_entity_revision')(instance, wgScriptPath),\n      getEntitiesFromSitelinks: require('./queries/get_entities_from_sitelinks')(buildUrl)\n    }\n  } else {\n    wikibaseApiFunctions = {\n      searchEntities: missingInstance('searchEntities'),\n      cirrusSearchPages: missingInstance('cirrusSearchPages'),\n      getEntities: missingInstance('getEntities'),\n      getManyEntities: missingInstance('getManyEntities'),\n      getRevisions: missingInstance('getRevisions'),\n      getEntityRevision: missingInstance('getEntityRevision'),\n      getEntitiesFromSitelinks: missingInstance('getEntitiesFromSitelinks')\n    }\n  }\n\n  let wikibaseQueryServiceFunctions\n  if (sparqlEndpoint) {\n    validateEndpoint('sparqlEndpoint', sparqlEndpoint)\n    wikibaseQueryServiceFunctions = {\n      sparqlQuery: require('./queries/sparql_query')(sparqlEndpoint),\n      getReverseClaims: require('./queries/get_reverse_claims')(sparqlEndpoint)\n    }\n  } else {\n    wikibaseQueryServiceFunctions = {\n      sparqlQuery: missingSparqlEndpoint('sparqlQuery'),\n      getReverseClaims: missingSparqlEndpoint('getReverseClaims')\n    }\n  }\n\n  const parsedData = {\n    instance: {\n      root: instanceRoot,\n      apiEndpoint: instanceApiEndpoint\n    }\n  }\n\n  return Object.assign(parsedData, common, wikibaseApiFunctions, wikibaseQueryServiceFunctions)\n}\n\n// Make heplpers that don't require an instance to be specified available\n// directly on the exported function object\nObject.assign(WBK, common)\n\nconst validateEndpoint = (name, url) => {\n  if (!(typeof url === 'string' && url.startsWith('http'))) {\n    throw new Error(`invalid ${name}: ${url}`)\n  }\n}\n\nconst missingConfig = missingParameter => name => () => {\n  throw new Error(`${name} requires ${missingParameter} to be set at initialization`)\n}\n\nconst missingSparqlEndpoint = missingConfig('a sparqlEndpoint')\nconst missingInstance = missingConfig('an instance')\n\nmodule.exports = WBK\n","module.exports = require('wikibase-sdk')({\n  instance: 'https://www.wikidata.org',\n  sparqlEndpoint: 'https://query.wikidata.org/sparql'\n})\n","import { Utils } from \"../../Utils\"\nimport { Store, UIEventSource } from \"../UIEventSource\"\nimport * as wds from \"wikidata-sdk\"\n\nexport class WikidataResponse {\n    public readonly id: string\n    public readonly labels: Map<string, string>\n    public readonly descriptions: Map<string, string>\n    public readonly claims: Map<string, Set<string>>\n    public readonly wikisites: Map<string, string>\n    public readonly commons: string\n\n    constructor(\n        id: string,\n        labels: Map<string, string>,\n        descriptions: Map<string, string>,\n        claims: Map<string, Set<string>>,\n        wikisites: Map<string, string>,\n        commons: string\n    ) {\n        this.id = id\n        this.labels = labels\n        this.descriptions = descriptions\n        this.claims = claims\n        this.wikisites = wikisites\n        this.commons = commons\n    }\n\n    public static fromJson(entity: any): WikidataResponse {\n        const labels = new Map<string, string>()\n        for (const labelName in entity.labels) {\n            // The labelname is the language code\n            labels.set(labelName, entity.labels[labelName].value)\n        }\n\n        const descr = new Map<string, string>()\n        for (const labelName in entity.descriptions) {\n            // The labelname is the language code\n            descr.set(labelName, entity.descriptions[labelName].value)\n        }\n\n        const sitelinks = new Map<string, string>()\n        for (const labelName in entity.sitelinks) {\n            // labelName is `${language}wiki`\n            const language = labelName.substring(0, labelName.length - 4)\n            const title = entity.sitelinks[labelName].title\n            sitelinks.set(language, title)\n        }\n\n        const commons = sitelinks.get(\"commons\")\n        sitelinks.delete(\"commons\")\n        const claims = WikidataResponse.extractClaims(entity.claims)\n        return new WikidataResponse(entity.id, labels, descr, claims, sitelinks, commons)\n    }\n\n    static extractClaims(claimsJson: any): Map<string, Set<string>> {\n        const simplified = wds.simplify.claims(claimsJson, {\n            timeConverter: \"simple-day\",\n        })\n\n        const claims = new Map<string, Set<string>>()\n        for (const claimId in simplified) {\n            const claimsList: any[] = simplified[claimId]\n            claims.set(claimId, new Set(claimsList))\n        }\n        return claims\n    }\n}\n\nexport class WikidataLexeme {\n    id: string\n    lemma: Map<string, string>\n    senses: Map<string, string>\n    claims: Map<string, Set<string>>\n\n    constructor(json) {\n        this.id = json.id\n        this.claims = WikidataResponse.extractClaims(json.claims)\n        this.lemma = new Map<string, string>()\n        for (const language in json.lemmas) {\n            this.lemma.set(language, json.lemmas[language].value)\n        }\n\n        this.senses = new Map<string, string>()\n\n        for (const sense of json.senses) {\n            const glosses = sense.glosses\n            for (const language in glosses) {\n                let previousSenses = this.senses.get(language)\n                if (previousSenses === undefined) {\n                    previousSenses = \"\"\n                } else {\n                    previousSenses = previousSenses + \"; \"\n                }\n                this.senses.set(language, previousSenses + glosses[language].value ?? \"\")\n            }\n        }\n    }\n\n    asWikidataResponse() {\n        return new WikidataResponse(\n            this.id,\n            this.lemma,\n            this.senses,\n            this.claims,\n            new Map(),\n            undefined\n        )\n    }\n}\n\nexport interface WikidataSearchoptions {\n    lang?: \"en\" | string\n    maxCount?: 20 | number\n}\n\nexport interface WikidataAdvancedSearchoptions extends WikidataSearchoptions {\n    instanceOf?: number[]\n    notInstanceOf?: number[]\n}\n\n/**\n * Utility functions around wikidata\n */\nexport default class Wikidata {\n    public static readonly neededUrls = [\n        \"https://www.wikidata.org/\",\n        \"https://wikidata.org/\",\n        \"https://query.wikidata.org\",\n        \"https://m.wikidata.org\", // Important: a mobile browser will request m.wikidata.org instead of www.wikidata.org ; this URL needs to be listed for the CSP\n    ]\n    private static readonly _identifierPrefixes = [\"Q\", \"L\"].map((str) => str.toLowerCase())\n    private static readonly _prefixesToRemove = [\n        \"https://www.wikidata.org/wiki/Lexeme:\",\n        \"https://www.wikidata.org/wiki/\",\n        \"http://www.wikidata.org/entity/\",\n        \"Lexeme:\",\n    ].map((str) => str.toLowerCase())\n    private static readonly _storeCache = new Map<\n        string,\n        Store<{ success: WikidataResponse } | { error: any }>\n    >()\n\n    /**\n     * Same as LoadWikidataEntry, but wrapped into a UIEventSource\n     * @param value\n     * @constructor\n     */\n    public static LoadWikidataEntry(\n        value: string | number\n    ): Store<{ success: WikidataResponse } | { error: any }> {\n        const key = this.ExtractKey(value)\n        const cached = Wikidata._storeCache.get(key)\n        if (cached) {\n            return cached\n        }\n        const src = UIEventSource.FromPromiseWithErr(Wikidata.LoadWikidataEntryAsync(key))\n        Wikidata._storeCache.set(key, src)\n        return src\n    }\n\n    /**\n     * Given a search text, searches for the relevant wikidata entries, excluding pages \"outside of the main tree\", e.g. disambiguation pages.\n     * Optionally, an 'instance of' can be given to limit the scope, e.g. instanceOf:5 (humans) will only search for humans\n     */\n    public static async searchAdvanced(\n        text: string,\n        options?: WikidataAdvancedSearchoptions\n    ): Promise<\n        {\n            id: string\n            relevance?: number\n            label: string\n            description?: string\n        }[]\n    > {\n        let instanceOf = \"\"\n        if (options?.instanceOf !== undefined && options.instanceOf.length > 0) {\n            const phrases = options.instanceOf.map((q) => `{ ?item wdt:P31/wdt:P279* wd:Q${q}. }`)\n            instanceOf = \"{\" + phrases.join(\" UNION \") + \"}\"\n        }\n        const forbidden = (options?.notInstanceOf ?? []).concat([17379835]) // blacklist 'wikimedia pages outside of the main knowledge tree', e.g. disambiguation pages\n        const minusPhrases = forbidden.map((q) => `MINUS {?item wdt:P31/wdt:P279* wd:Q${q} .}`)\n        const sparql = `SELECT * WHERE {\n            SERVICE wikibase:mwapi {\n                bd:serviceParam wikibase:api \"EntitySearch\" .\n                bd:serviceParam wikibase:endpoint \"www.wikidata.org\" .\n                bd:serviceParam mwapi:search \"${text.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"')}\" .\n                bd:serviceParam mwapi:language \"${options.lang}\" .\n                ?item wikibase:apiOutputItem mwapi:item .\n                ?num wikibase:apiOrdinal true .\n                bd:serviceParam wikibase:limit ${\n                    Math.round(\n                        (options?.maxCount ?? 20) * 1.5\n                    ) /*Some padding for disambiguation pages */\n                } .\n                ?label wikibase:apiOutput mwapi:label .\n                ?description wikibase:apiOutput \"@description\" .\n            }\n            ${instanceOf}\n            ${minusPhrases.join(\"\\n    \")}\n        } ORDER BY ASC(?num) LIMIT ${options?.maxCount ?? 20}`\n        const url = wds.sparqlQuery(sparql)\n\n        const result = await Utils.downloadJson(url)\n        /*The full uri of the wikidata-item*/\n\n        return result.results.bindings.map(({ item, label, description, num }) => ({\n            relevance: num?.value,\n            id: item?.value,\n            label: label?.value,\n            description: description?.value,\n        }))\n    }\n\n    public static async search(\n        search: string,\n        options?: WikidataSearchoptions,\n        page = 1\n    ): Promise<\n        {\n            id: string\n            label: string\n            description: string\n        }[]\n    > {\n        const maxCount = options?.maxCount ?? 20\n        let pageCount = Math.min(maxCount, 50)\n        const start = page * pageCount - pageCount\n        const lang = options?.lang ?? \"en\"\n        const url =\n            \"https://www.wikidata.org/w/api.php?action=wbsearchentities&search=\" +\n            search +\n            \"&language=\" +\n            lang +\n            \"&limit=\" +\n            pageCount +\n            \"&continue=\" +\n            start +\n            \"&format=json&uselang=\" +\n            lang +\n            \"&type=item&origin=*\" +\n            \"&props=\" // props= removes some unused values in the result\n        const response = await Utils.downloadJsonCached(url, 10000)\n\n        const result: any[] = response.search\n\n        if (result.length < pageCount) {\n            // No next page\n            return result\n        }\n        if (result.length < maxCount) {\n            const newOptions = { ...options }\n            newOptions.maxCount = maxCount - result.length\n            result.push(...(await Wikidata.search(search, newOptions, page + 1)))\n        }\n\n        return result\n    }\n\n    public static async searchAndFetch(\n        search: string,\n        options?: WikidataAdvancedSearchoptions\n    ): Promise<WikidataResponse[]> {\n        // We provide some padding to filter away invalid values\n        const searchResults = await Wikidata.searchAdvanced(search, options)\n        const maybeResponses = await Promise.all(\n            searchResults.map(async (r) => {\n                try {\n                    console.log(\"Loading \", r.id)\n                    return await Wikidata.LoadWikidataEntry(r.id).AsPromise()\n                } catch (e) {\n                    console.error(e)\n                    return undefined\n                }\n            })\n        )\n        return Utils.NoNull(maybeResponses.map((r) => <WikidataResponse>r[\"success\"]))\n    }\n\n    /**\n     * Gets the 'key' segment from a URL\n     *\n     * Wikidata.ExtractKey(\"https://www.wikidata.org/wiki/Lexeme:L614072\") // => \"L614072\"\n     * Wikidata.ExtractKey(\"http://www.wikidata.org/entity/Q55008046\") // => \"Q55008046\"\n     * Wikidata.ExtractKey(\"Q55008046\") // => \"Q55008046\"\n     * Wikidata.ExtractKey(\"A55008046\") // => undefined\n     * Wikidata.ExtractKey(\"Q55008046X\") // => undefined\n     */\n    public static ExtractKey(value: string | number): string {\n        if (typeof value === \"number\") {\n            return \"Q\" + value\n        }\n        if (value === undefined) {\n            console.error(\"ExtractKey: value is undefined\")\n            return undefined\n        }\n        value = value.trim().toLowerCase()\n\n        for (const prefix of Wikidata._prefixesToRemove) {\n            if (value.startsWith(prefix)) {\n                value = value.substring(prefix.length)\n            }\n        }\n\n        if (value.startsWith(\"http\") && value === \"\") {\n            // Probably some random link in the image field - we skip it\n            return undefined\n        }\n\n        for (const identifierPrefix of Wikidata._identifierPrefixes) {\n            if (value.startsWith(identifierPrefix)) {\n                const trimmed = value.substring(identifierPrefix.length)\n                if (trimmed === \"\") {\n                    return undefined\n                }\n                const n = Number(trimmed)\n                if (isNaN(n)) {\n                    return undefined\n                }\n                return value.toUpperCase()\n            }\n        }\n\n        if (value !== \"\" && !isNaN(Number(value))) {\n            return \"Q\" + value\n        }\n\n        return undefined\n    }\n\n    /**\n     * Converts 'Q123' into 123, returns undefined if invalid\n     *\n     * Wikidata.QIdToNumber(\"Q123\") // => 123\n     * Wikidata.QIdToNumber(\"  Q123  \") // => 123\n     *  Wikidata.QIdToNumber(\"  X123  \") // => undefined\n     * Wikidata.QIdToNumber(\"  Q123X  \") // => undefined\n     * Wikidata.QIdToNumber(undefined) // => undefined\n     * Wikidata.QIdToNumber(123) // => 123\n     */\n    public static QIdToNumber(q: string | number): number | undefined {\n        if (q === undefined || q === null) {\n            return\n        }\n        if (typeof q === \"number\") {\n            return q\n        }\n        q = q.trim()\n        if (!q.startsWith(\"Q\")) {\n            return\n        }\n        q = q.substr(1)\n        const n = Number(q)\n        if (isNaN(n)) {\n            return\n        }\n        return n\n    }\n\n    public static IdToArticle(id: string) {\n        if (id.startsWith(\"Q\")) {\n            return \"https://wikidata.org/wiki/\" + id\n        }\n        if (id.startsWith(\"L\")) {\n            return \"https://wikidata.org/wiki/Lexeme:\" + id\n        }\n        throw \"Unknown id type: \" + id\n    }\n\n    /**\n     * Build a SPARQL-query, return the result\n     *\n     * @param keys: how variables are named. Every key not ending with 'Label' should appear in at least one statement\n     * @param statements\n     * @constructor\n     */\n    public static async Sparql<T>(\n        keys: string[],\n        statements: string[]\n    ): Promise<(T & Record<string, { type: string; value: string }>)[]> {\n        const query =\n            \"SELECT \" +\n            keys.map((k) => (k.startsWith(\"?\") ? k : \"?\" + k)).join(\" \") +\n            \"\\n\" +\n            \"WHERE\\n\" +\n            \"{\\n\" +\n            statements.map((stmt) => (stmt.endsWith(\".\") ? stmt : stmt + \".\")).join(\"\\n\") +\n            '  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }\\n' +\n            \"}\"\n        const url = wds.sparqlQuery(query)\n        const result = await Utils.downloadJsonCached(url, 24 * 60 * 60 * 1000)\n        return result.results.bindings\n    }\n\n    private static _cache = new Map<string, Promise<WikidataResponse>>()\n\n    public static async LoadWikidataEntryAsync(value: string | number): Promise<WikidataResponse> {\n        const key = \"\" + value\n        const cached = Wikidata._cache.get(key)\n        if (cached) {\n            return cached\n        }\n        const uncached = Wikidata.LoadWikidataEntryUncachedAsync(value)\n        Wikidata._cache.set(key, uncached)\n        return uncached\n    }\n\n    /**\n     * Loads a wikidata page\n     * @returns the entity of the given value\n     */\n    private static async LoadWikidataEntryUncachedAsync(\n        value: string | number\n    ): Promise<WikidataResponse> {\n        const id = Wikidata.ExtractKey(value)\n        if (id === undefined) {\n            console.warn(\"Could not extract a wikidata entry from\", value)\n            return undefined\n        }\n\n        const url = \"https://www.wikidata.org/wiki/Special:EntityData/\" + id + \".json\"\n        const entities = (await Utils.downloadJsonCached(url, 10000)).entities\n        const firstKey = <string>Array.from(Object.keys(entities))[0] // Roundabout way to fetch the entity; it might have been a redirect\n        const response = entities[firstKey]\n\n        if (id.startsWith(\"L\")) {\n            // This is a lexeme:\n            return new WikidataLexeme(response).asWikidataResponse()\n        }\n\n        return WikidataResponse.fromJson(response)\n    }\n}\n","import { Store, UIEventSource } from \"../../Logic/UIEventSource\"\nimport BaseUIElement from \"../BaseUIElement\"\n\n/**\n * @deprecated\n */\nexport interface ReadonlyInputElement<T> extends BaseUIElement {\n    GetValue(): Store<T>\n    IsValid(t: T): boolean\n}\n\n/**\n * @deprecated\n */\nexport abstract class InputElement<T> extends BaseUIElement implements ReadonlyInputElement<any> {\n    abstract GetValue(): UIEventSource<T>\n    abstract IsValid(t: T): boolean\n}\n","import { InputElement } from \"./InputElement\"\nimport { Store, UIEventSource } from \"../../Logic/UIEventSource\"\nimport BaseUIElement from \"../BaseUIElement\"\nimport { Translation } from \"../i18n/Translation\"\nimport Locale from \"../i18n/Locale\"\n\n/**\n * @deprecated\n */\ninterface TextFieldOptions {\n    placeholder?: string | Store<string> | Translation\n    value?: UIEventSource<string>\n    htmlType?: \"area\" | \"text\" | \"time\" | string\n    inputMode?: string\n    label?: BaseUIElement\n    textAreaRows?: number\n    inputStyle?: string\n    isValid?: (s: string) => boolean\n}\n\n/**\n * @deprecated\n */\nexport class TextField extends InputElement<string> {\n    public readonly enterPressed = new UIEventSource<string>(undefined)\n    private readonly value: UIEventSource<string>\n    private _actualField: HTMLElement\n    private readonly _isValid: (s: string) => boolean\n    private readonly _rawValue: UIEventSource<string>\n    private _isFocused = false\n    private readonly _options: TextFieldOptions\n\n    constructor(options?: TextFieldOptions) {\n        super()\n        this._options = options ?? {}\n        options = options ?? {}\n        this.value = options?.value ?? new UIEventSource<string>(undefined)\n        this._rawValue = new UIEventSource<string>(\"\")\n        this._isValid = options.isValid ?? ((_) => true)\n    }\n\n    private static SetCursorPosition(textfield: HTMLElement, i: number) {\n        if (textfield === undefined || textfield === null) {\n            return\n        }\n        if (i === -1) {\n            // @ts-ignore\n            i = textfield.value.length\n        }\n        textfield.focus()\n        // @ts-ignore\n        textfield.setSelectionRange(i, i)\n    }\n\n    GetValue(): UIEventSource<string> {\n        return this.value\n    }\n\n    IsValid(t: string): boolean {\n        if (t === undefined || t === null) {\n            return false\n        }\n        return this._isValid(t)\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const options = this._options\n        const self = this\n        let placeholderStore: Store<string>\n        let placeholder: string = \"\"\n        if (options.placeholder) {\n            if (typeof options.placeholder === \"string\") {\n                placeholder = options.placeholder\n                placeholderStore = undefined\n            } else {\n                if (\n                    options.placeholder instanceof Store &&\n                    options.placeholder[\"data\"] !== undefined\n                ) {\n                    placeholderStore = options.placeholder\n                } else if (\n                    options.placeholder instanceof Translation &&\n                    options.placeholder[\"translations\"] !== undefined\n                ) {\n                    placeholderStore = <Store<string>>(\n                        Locale.language.map((l) => (<Translation>options.placeholder).textFor(l))\n                    )\n                }\n                placeholder = placeholderStore?.data ?? placeholder ?? \"\"\n            }\n        }\n\n        this.SetClass(\"form-text-field\")\n        let inputEl: HTMLElement\n        if (options.htmlType === \"area\") {\n            this.SetClass(\"w-full box-border max-w-full\")\n            const el = document.createElement(\"textarea\")\n            el.placeholder = placeholder\n            el.rows = options.textAreaRows\n            el.cols = 50\n            el.style.width = \"100%\"\n            el.dir = \"auto\"\n            inputEl = el\n            if (placeholderStore) {\n                placeholderStore.addCallbackAndRunD((placeholder) => (el.placeholder = placeholder))\n            }\n        } else {\n            const el = document.createElement(\"input\")\n            el.type = options.htmlType ?? \"text\"\n            el.inputMode = options.inputMode\n            el.placeholder = placeholder\n            el.style.cssText = options.inputStyle ?? \"width: 100%;\"\n            el.dir = \"auto\"\n            inputEl = el\n            if (placeholderStore) {\n                placeholderStore.addCallbackAndRunD((placeholder) => (el.placeholder = placeholder))\n            }\n        }\n\n        const form = document.createElement(\"form\")\n        form.appendChild(inputEl)\n        form.onsubmit = () => false\n\n        if (options.label) {\n            form.appendChild(options.label.ConstructElement())\n        }\n\n        const field = inputEl\n\n        this.value.addCallbackAndRunD((value) => {\n            // We leave the textfield as is in the case of undefined or null (handled by addCallbackAndRunD) - make sure we do not erase it!\n            field[\"value\"] = value\n        })\n\n        field.oninput = () => {\n            // How much characters are on the right, not including spaces?\n            // @ts-ignore\n            const endDistance = field.value.substring(field.selectionEnd).replace(/ /g, \"\").length\n            // @ts-ignore\n            let val: string = field.value\n            self._rawValue.setData(val)\n            if (!self.IsValid(val)) {\n                self.value.setData(undefined)\n            } else {\n                self.value.setData(val)\n            }\n            // Setting the value might cause the value to be set again. We keep the distance _to the end_ stable, as phone number formatting might cause the start to change\n            // See https://github.com/pietervdvn/MapComplete/issues/103\n            // We reread the field value - it might have changed!\n\n            // @ts-ignore\n            val = field.value\n            let newCursorPos = val.length - endDistance\n            while (\n                newCursorPos >= 0 &&\n                // We count the number of _actual_ characters (non-space characters) on the right of the new value\n                // This count should become bigger then the end distance\n                val.substr(newCursorPos).replace(/ /g, \"\").length < endDistance\n            ) {\n                newCursorPos--\n            }\n            TextField.SetCursorPosition(field, newCursorPos)\n        }\n\n        field.addEventListener(\"keyup\", function (event) {\n            if (event.key === \"Enter\") {\n                // @ts-ignore\n                self.enterPressed.setData(field.value)\n            }\n        })\n\n        if (this._isFocused) {\n            field.focus()\n        }\n\n        this._actualField = field\n        return form\n    }\n\n    public focus() {\n        if (this._actualField === undefined) {\n            this._isFocused = true\n        } else {\n            this._actualField.focus()\n        }\n    }\n}\n","import Combine from \"./Combine\"\nimport Svg from \"../../Svg\"\nimport Translations from \"../i18n/Translations\"\nimport BaseUIElement from \"../BaseUIElement\"\n\nexport default class Loading extends Combine {\n    constructor(msg?: BaseUIElement | string) {\n        const t = Translations.W(msg) ?? Translations.t.general.loading\n        t.SetClass(\"pl-2\")\n        super([\n            Svg.loading_svg()\n                .SetClass(\"animate-spin self-center\")\n                .SetStyle(\"width: 1.5rem; height: 1.5rem; min-width: 1.5rem;\"),\n            t,\n        ])\n        this.SetClass(\"flex p-1\")\n    }\n}\n","import { Store, UIEventSource } from \"../UIEventSource\"\nimport BaseUIElement from \"../../UI/BaseUIElement\"\nimport { LicenseInfo } from \"./LicenseInfo\"\nimport { Utils } from \"../../Utils\"\n\nexport interface ProvidedImage {\n    url: string\n    key: string\n    provider: ImageProvider\n}\n\nexport default abstract class ImageProvider {\n    public abstract readonly defaultKeyPrefixes: string[]\n\n    public abstract SourceIcon(backlinkSource?: string): BaseUIElement\n\n    /**\n     * Given a properies object, maps it onto _all_ the available pictures for this imageProvider\n     */\n    public GetRelevantUrls(\n        allTags: Store<any>,\n        options?: {\n            prefixes?: string[]\n        }\n    ): UIEventSource<ProvidedImage[]> {\n        const prefixes = options?.prefixes ?? this.defaultKeyPrefixes\n        if (prefixes === undefined) {\n            throw \"No `defaultKeyPrefixes` defined by this image provider\"\n        }\n        const relevantUrls = new UIEventSource<\n            { url: string; key: string; provider: ImageProvider }[]\n        >([])\n        const seenValues = new Set<string>()\n        allTags.addCallbackAndRunD((tags) => {\n            for (const key in tags) {\n                if (!prefixes.some((prefix) => key.startsWith(prefix))) {\n                    continue\n                }\n                const values = Utils.NoEmpty(tags[key]?.split(\";\")?.map((v) => v.trim()) ?? [])\n                for (const value of values) {\n                    if (seenValues.has(value)) {\n                        continue\n                    }\n                    seenValues.add(value)\n                    this.ExtractUrls(key, value).then((promises) => {\n                        for (const promise of promises ?? []) {\n                            if (promise === undefined) {\n                                continue\n                            }\n                            promise.then((providedImage) => {\n                                if (providedImage === undefined) {\n                                    return\n                                }\n                                relevantUrls.data.push(providedImage)\n                                relevantUrls.ping()\n                            })\n                        }\n                    })\n                }\n            }\n        })\n        return relevantUrls\n    }\n\n    public abstract ExtractUrls(key: string, value: string): Promise<Promise<ProvidedImage>[]>\n\n    public abstract DownloadAttribution(url: string): Promise<LicenseInfo>\n\n    public abstract apiUrls(): string[]\n}\n","export class LicenseInfo {\n    title: string = \"\"\n    artist: string = \"\"\n    license: string = undefined\n    licenseShortName: string = \"\"\n    usageTerms: string = \"\"\n    attributionRequired: boolean = false\n    copyrighted: boolean = false\n    credit: string = \"\"\n    description: string = \"\"\n    informationLocation: URL = undefined\n}\n","import { Utils } from \"../../Utils\"\n\nexport default class Wikimedia {\n    /**\n     * Recursively walks a wikimedia commons category in order to search for entries, which can be File: or Category: entries\n     * Returns (a promise of) a list of URLS\n     * @param categoryName The name of the wikimedia category\n     * @param maxLoad: the maximum amount of images to return\n     * @param continueParameter: if the page indicates that more pages should be loaded, this uses a token to continue. Provided by wikimedia\n     */\n    public static async GetCategoryContents(\n        categoryName: string,\n        maxLoad = 10,\n        continueParameter: string = undefined\n    ): Promise<string[]> {\n        if (categoryName === undefined || categoryName === null || categoryName === \"\") {\n            return []\n        }\n        if (!categoryName.startsWith(\"Category:\")) {\n            categoryName = \"Category:\" + categoryName\n        }\n\n        let url =\n            \"https://commons.wikimedia.org/w/api.php?\" +\n            \"action=query&list=categorymembers&format=json&\" +\n            \"&origin=*\" +\n            \"&cmtitle=\" +\n            encodeURIComponent(categoryName)\n        if (continueParameter !== undefined) {\n            url = `${url}&cmcontinue=${continueParameter}`\n        }\n        const response = await Utils.downloadJson(url)\n        const members = response.query?.categorymembers ?? []\n        const imageOverview: string[] = members.map((member) => member.title)\n\n        if (response.continue === undefined) {\n            // We are done crawling through the category - no continuation in sight\n            return imageOverview\n        }\n\n        if (maxLoad - imageOverview.length <= 0) {\n            console.debug(`Recursive wikimedia category load stopped for ${categoryName}`)\n            return imageOverview\n        }\n\n        // We do have a continue token - let's load the next page\n        const recursive = await Wikimedia.GetCategoryContents(\n            categoryName,\n            maxLoad - imageOverview.length,\n            response.continue.cmcontinue\n        )\n        imageOverview.push(...recursive)\n        return imageOverview\n    }\n}\n","import ImageProvider, { ProvidedImage } from \"./ImageProvider\"\nimport BaseUIElement from \"../../UI/BaseUIElement\"\nimport Svg from \"../../Svg\"\nimport Link from \"../../UI/Base/Link\"\nimport { Utils } from \"../../Utils\"\nimport { LicenseInfo } from \"./LicenseInfo\"\nimport Wikimedia from \"../Web/Wikimedia\"\n\n/**\n * This module provides endpoints for wikimedia and others\n */\nexport class WikimediaImageProvider extends ImageProvider {\n    public static readonly singleton = new WikimediaImageProvider()\n    public static readonly apiUrls = [\n        \"https://commons.wikimedia.org/wiki/\",\n        \"https://upload.wikimedia.org\",\n    ]\n    public static readonly commonsPrefixes = [...WikimediaImageProvider.apiUrls, \"File:\"]\n    private readonly commons_key = \"wikimedia_commons\"\n    public readonly defaultKeyPrefixes = [this.commons_key, \"image\"]\n\n    private constructor() {\n        super()\n    }\n\n    private static ExtractFileName(url: string) {\n        if (!url.startsWith(\"http\")) {\n            return url\n        }\n        const path = new URL(url).pathname\n        return path.substring(path.lastIndexOf(\"/\") + 1)\n    }\n\n    private static PrepareUrl(value: string): string {\n        if (value.toLowerCase().startsWith(\"https://commons.wikimedia.org/wiki/\")) {\n            return value\n        }\n        return `https://commons.wikimedia.org/wiki/Special:FilePath/${encodeURIComponent(\n            value\n        )}?width=500&height=400`\n    }\n\n    private static startsWithCommonsPrefix(value: string): boolean {\n        return WikimediaImageProvider.commonsPrefixes.some((prefix) => value.startsWith(prefix))\n    }\n\n    private static removeCommonsPrefix(value: string): string {\n        if (value.startsWith(\"https://upload.wikimedia.org/\")) {\n            value = value.substring(value.lastIndexOf(\"/\") + 1)\n            value = decodeURIComponent(value)\n            if (!value.startsWith(\"File:\")) {\n                value = \"File:\" + value\n            }\n            return value\n        }\n\n        for (const prefix of WikimediaImageProvider.commonsPrefixes) {\n            if (value.startsWith(prefix)) {\n                let part = value.substr(prefix.length)\n                if (prefix.startsWith(\"http\")) {\n                    part = decodeURIComponent(part)\n                }\n                return part\n            }\n        }\n        return value\n    }\n\n    apiUrls(): string[] {\n        return WikimediaImageProvider.apiUrls\n    }\n\n    SourceIcon(backlink: string): BaseUIElement {\n        const img = Svg.wikimedia_commons_white_svg().SetStyle(\"width:2em;height: 2em\")\n        if (backlink === undefined) {\n            return img\n        }\n\n        return new Link(\n            Svg.wikimedia_commons_white_svg(),\n            `https://commons.wikimedia.org/wiki/${backlink}`,\n            true\n        )\n    }\n\n    public PrepUrl(value: string): ProvidedImage {\n        value = WikimediaImageProvider.removeCommonsPrefix(value)\n\n        if (value.startsWith(\"File:\")) {\n            return this.UrlForImage(value)\n        }\n\n        // We do a last effort and assume this is a file\n        return this.UrlForImage(\"File:\" + value)\n    }\n\n    public async ExtractUrls(key: string, value: string): Promise<Promise<ProvidedImage>[]> {\n        const hasCommonsPrefix = WikimediaImageProvider.startsWithCommonsPrefix(value)\n        if (key !== undefined && key !== this.commons_key && !hasCommonsPrefix) {\n            return []\n        }\n\n        value = WikimediaImageProvider.removeCommonsPrefix(value)\n        if (value.startsWith(\"Category:\")) {\n            const urls = await Wikimedia.GetCategoryContents(value)\n            return urls\n                .filter((url) => url.startsWith(\"File:\"))\n                .map((image) => Promise.resolve(this.UrlForImage(image)))\n        }\n        if (value.startsWith(\"File:\")) {\n            return [Promise.resolve(this.UrlForImage(value))]\n        }\n        if (value.startsWith(\"http\")) {\n            // PRobably an error\n            return []\n        }\n        // We do a last effort and assume this is a file\n        return [Promise.resolve(this.UrlForImage(\"File:\" + value))]\n    }\n\n    public async DownloadAttribution(filename: string): Promise<LicenseInfo> {\n        filename = WikimediaImageProvider.ExtractFileName(filename)\n\n        if (filename === \"\") {\n            return undefined\n        }\n\n        const url =\n            \"https://en.wikipedia.org/w/\" +\n            \"api.php?action=query&prop=imageinfo&iiprop=extmetadata&\" +\n            \"titles=\" +\n            filename +\n            \"&format=json&origin=*\"\n        const data = await Utils.downloadJsonCached(url, 365 * 24 * 60 * 60)\n        const licenseInfo = new LicenseInfo()\n        const pageInfo = data.query.pages[-1]\n        if (pageInfo === undefined) {\n            return undefined\n        }\n\n        const license = (pageInfo.imageinfo ?? [])[0]?.extmetadata\n        if (license === undefined) {\n            console.warn(\n                \"The file\",\n                filename,\n                \"has no usable metedata or license attached... Please fix the license info file yourself!\"\n            )\n            return undefined\n        }\n\n        let title = pageInfo.title\n        if (title.startsWith(\"File:\")) {\n            title = title.substr(\"File:\".length)\n        }\n        if (title.endsWith(\".jpg\") || title.endsWith(\".png\")) {\n            title = title.substring(0, title.length - 4)\n        }\n\n        licenseInfo.title = title\n        licenseInfo.artist = license.Artist?.value\n        licenseInfo.license = license.License?.value\n        licenseInfo.copyrighted = license.Copyrighted?.value\n        licenseInfo.attributionRequired = license.AttributionRequired?.value\n        licenseInfo.usageTerms = license.UsageTerms?.value\n        licenseInfo.licenseShortName = license.LicenseShortName?.value\n        licenseInfo.credit = license.Credit?.value\n        licenseInfo.description = license.ImageDescription?.value\n        licenseInfo.informationLocation = new URL(\"https://en.wikipedia.org/wiki/\" + pageInfo.title)\n        return licenseInfo\n    }\n\n    private UrlForImage(image: string): ProvidedImage {\n        if (!image.startsWith(\"File:\")) {\n            image = \"File:\" + image\n        }\n        return { url: WikimediaImageProvider.PrepareUrl(image), key: undefined, provider: this }\n    }\n}\n","import { VariableUiElement } from \"../Base/VariableUIElement\"\nimport { Store } from \"../../Logic/UIEventSource\"\nimport Wikidata, { WikidataResponse } from \"../../Logic/Web/Wikidata\"\nimport { Translation, TypedTranslation } from \"../i18n/Translation\"\nimport { FixedUiElement } from \"../Base/FixedUiElement\"\nimport Loading from \"../Base/Loading\"\nimport Translations from \"../i18n/Translations\"\nimport Combine from \"../Base/Combine\"\nimport Img from \"../Base/Img\"\nimport { WikimediaImageProvider } from \"../../Logic/ImageProviders/WikimediaImageProvider\"\nimport Link from \"../Base/Link\"\nimport Svg from \"../../Svg\"\nimport BaseUIElement from \"../BaseUIElement\"\nimport { Utils } from \"../../Utils\"\n\nexport default class WikidataPreviewBox extends VariableUiElement {\n    private static isHuman = [{ p: 31 /*is a*/, q: 5 /* human */ }]\n    // @ts-ignore\n    private static extraProperties: {\n        requires?: { p: number; q?: number }[]\n        property: string\n        display:\n            | TypedTranslation<{ value }>\n            | Map<string, string | (() => BaseUIElement) /*If translation: Subs({value: * })  */>\n        textMode?: Map<string, string>\n    }[] = [\n        {\n            requires: WikidataPreviewBox.isHuman,\n            property: \"P21\",\n            display: new Map([\n                [\"Q6581097\", () => Svg.gender_male_svg().SetStyle(\"width: 1rem; height: auto\")],\n                [\"Q6581072\", () => Svg.gender_female_svg().SetStyle(\"width: 1rem; height: auto\")],\n                [\"Q1097630\", () => Svg.gender_inter_svg().SetStyle(\"width: 1rem; height: auto\")],\n                [\n                    \"Q1052281\",\n                    () =>\n                        Svg.gender_trans_svg().SetStyle(\n                            \"width: 1rem; height: auto\"\n                        ) /*'transwomen'*/,\n                ],\n                [\n                    \"Q2449503\",\n                    () =>\n                        Svg.gender_trans_svg().SetStyle(\"width: 1rem; height: auto\") /*'transmen'*/,\n                ],\n                [\"Q48270\", () => Svg.gender_queer_svg().SetStyle(\"width: 1rem; height: auto\")],\n            ]),\n            textMode: new Map([\n                [\"Q6581097\", \"♂️\"],\n                [\"Q6581072\", \"♀️\"],\n                [\"Q1097630\", \"⚥️\"],\n                [\"Q1052281\", \"🏳️‍⚧️\" /*'transwomen'*/],\n                [\"Q2449503\", \"🏳️‍⚧️\" /*'transmen'*/],\n                [\"Q48270\", \"🏳️‍🌈 ⚧\"],\n            ]),\n        },\n        {\n            property: \"P569\",\n            requires: WikidataPreviewBox.isHuman,\n            display: Translations.t.general.wikipedia.previewbox.born,\n        },\n        {\n            property: \"P570\",\n            requires: WikidataPreviewBox.isHuman,\n            display: Translations.t.general.wikipedia.previewbox.died,\n        },\n    ]\n\n    constructor(\n        wikidataId: Store<string>,\n        options?: {\n            noImages?: boolean\n            imageStyle?: string\n            whileLoading?: BaseUIElement | string\n            extraItems?: (BaseUIElement | string)[]\n        }\n    ) {\n        let inited = false\n        const wikidata = wikidataId.stabilized(250).bind((id) => {\n            if (id === undefined || id === \"\" || id === \"Q\") {\n                return null\n            }\n            inited = true\n            return Wikidata.LoadWikidataEntry(id)\n        })\n\n        super(\n            wikidata.map((maybeWikidata) => {\n                if (maybeWikidata === null || !inited) {\n                    return options?.whileLoading\n                }\n\n                if (maybeWikidata === undefined) {\n                    return new Loading(Translations.t.general.loading)\n                }\n\n                if (maybeWikidata[\"error\"] !== undefined) {\n                    return new FixedUiElement(maybeWikidata[\"error\"]).SetClass(\"alert\")\n                }\n                const wikidata = <WikidataResponse>maybeWikidata[\"success\"]\n                return WikidataPreviewBox.WikidataResponsePreview(wikidata, options)\n            })\n        )\n    }\n\n    public static WikidataResponsePreview(\n        wikidata: WikidataResponse,\n        options?: {\n            noImages?: boolean\n            imageStyle?: string\n            extraItems?: (BaseUIElement | string)[]\n        }\n    ): BaseUIElement {\n        let link = new Link(\n            new Combine([\n                wikidata.id,\n                options?.noImages\n                    ? wikidata.id\n                    : Svg.wikidata_svg().SetStyle(\"width: 2.5rem\").SetClass(\"block\"),\n            ]).SetClass(\"flex\"),\n            Wikidata.IdToArticle(wikidata.id),\n            true\n        )?.SetClass(\"must-link\")\n\n        let info = new Combine([\n            new Combine([\n                Translation.fromMap(wikidata.labels)?.SetClass(\"font-bold\"),\n                link,\n            ]).SetClass(\"flex justify-between flex-wrap-reverse\"),\n            Translation.fromMap(wikidata.descriptions),\n            WikidataPreviewBox.QuickFacts(wikidata, options),\n            ...(options?.extraItems ?? []),\n        ]).SetClass(\"flex flex-col link-underline\")\n\n        let imageUrl = undefined\n        if (wikidata.claims.get(\"P18\")?.size > 0) {\n            imageUrl = Array.from(wikidata.claims.get(\"P18\"))[0]\n        }\n        if (imageUrl && !options?.noImages) {\n            imageUrl = WikimediaImageProvider.singleton.PrepUrl(imageUrl).url\n            info = new Combine([\n                new Img(imageUrl)\n                    .SetStyle(options?.imageStyle ?? \"max-width: 5rem; width: unset; height: 4rem\")\n                    .SetClass(\"rounded-xl mr-2\"),\n                info.SetClass(\"w-full\"),\n            ]).SetClass(\"flex\")\n        }\n\n        info.SetClass(\"p-2 w-full\")\n\n        return info\n    }\n\n    public static QuickFacts(\n        wikidata: WikidataResponse,\n        options?: { noImages?: boolean }\n    ): BaseUIElement {\n        const els: BaseUIElement[] = []\n        for (const extraProperty of WikidataPreviewBox.extraProperties) {\n            let hasAllRequirements = true\n            for (const requirement of extraProperty.requires) {\n                if (!wikidata.claims?.has(\"P\" + requirement.p)) {\n                    hasAllRequirements = false\n                    break\n                }\n                if (!wikidata.claims?.get(\"P\" + requirement.p).has(\"Q\" + requirement.q)) {\n                    hasAllRequirements = false\n                    break\n                }\n            }\n            if (!hasAllRequirements) {\n                continue\n            }\n\n            const key = extraProperty.property\n            const display =\n                (options?.noImages ? extraProperty.textMode : extraProperty.display) ??\n                extraProperty.display\n            if (wikidata.claims?.get(key) === undefined) {\n                continue\n            }\n            const value: string[] = Array.from(wikidata.claims.get(key))\n\n            if (display instanceof Translation) {\n                els.push(display.Subs({ value: value.join(\", \") }).SetClass(\"m-2\"))\n                continue\n            }\n            const constructors = Utils.NoNull(value.map((property) => display.get(property)))\n            const elems = constructors.map((v) => {\n                if (typeof v === \"string\") {\n                    return new FixedUiElement(v)\n                } else {\n                    return v()\n                }\n            })\n            els.push(new Combine(elems).SetClass(\"flex m-2\"))\n        }\n        if (els.length === 0) {\n            return undefined\n        }\n\n        return new Combine(els).SetClass(\"flex\")\n    }\n}\n","import BaseUIElement from \"../BaseUIElement\"\nimport { Utils } from \"../../Utils\"\nimport Translations from \"../i18n/Translations\"\nimport { UIEventSource } from \"../../Logic/UIEventSource\"\n\nexport default class Table extends BaseUIElement {\n    private readonly _header: BaseUIElement[]\n    private readonly _contents: BaseUIElement[][]\n    private readonly _contentStyle: string[][]\n    private readonly _sortable: boolean\n\n    constructor(\n        header: (BaseUIElement | string)[],\n        contents: (BaseUIElement | string)[][],\n        options?: {\n            contentStyle?: string[][]\n            sortable?: false | boolean\n        }\n    ) {\n        super()\n        this._contentStyle = options?.contentStyle ?? [[\"min-width: 9rem\"]]\n        this._header = header?.map(Translations.W)\n        this._contents = contents.map((row) => row.map(Translations.W))\n        this._sortable = options?.sortable ?? false\n    }\n\n    AsMarkdown(): string {\n        const headerMarkdownParts = this._header.map((hel) => hel?.AsMarkdown() ?? \" \")\n        const header = Utils.NoNull(headerMarkdownParts).join(\" | \")\n        const headerSep = headerMarkdownParts.map((part) => \"-\".repeat(part.length + 2)).join(\" | \")\n        const table = this._contents\n            .map((row) =>\n                row\n                    .map(\n                        (el) =>\n                            el?.AsMarkdown()?.replaceAll(\"\\\\\", \"\\\\\\\\\")?.replaceAll(\"|\", \"\\\\|\") ??\n                            \" \"\n                    )\n                    .join(\" | \")\n            )\n            .join(\"\\n\")\n\n        return \"\\n\\n\" + [header, headerSep, table, \"\"].join(\"\\n\")\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const table = document.createElement(\"table\")\n\n        /**\n         * Sortmode: i: sort column i ascending;\n         * if i is negative : sort column (-i - 1) descending\n         */\n        const sortmode = new UIEventSource<number>(undefined)\n        const self = this\n        const headerElems = Utils.NoNull(\n            (this._header ?? []).map((elem, i) => {\n                if (self._sortable) {\n                    elem.onClick(() => {\n                        const current = sortmode.data\n                        if (current == i) {\n                            sortmode.setData(-1 - i)\n                        } else {\n                            sortmode.setData(i)\n                        }\n                    })\n                }\n                return elem.ConstructElement()\n            })\n        )\n        if (headerElems.length > 0) {\n            const thead = document.createElement(\"thead\")\n\n            const tr = document.createElement(\"tr\")\n            headerElems.forEach((headerElem) => {\n                const td = document.createElement(\"th\")\n                td.appendChild(headerElem)\n                tr.appendChild(td)\n            })\n            thead.appendChild(tr)\n            table.appendChild(thead)\n        }\n\n        for (let i = 0; i < this._contents.length; i++) {\n            let row = this._contents[i]\n            const tr = document.createElement(\"tr\")\n            for (let j = 0; j < row.length; j++) {\n                try {\n                    let elem = row[j]\n                    if (elem?.ConstructElement === undefined) {\n                        continue\n                    }\n                    const htmlElem = elem?.ConstructElement()\n                    if (htmlElem === undefined) {\n                        continue\n                    }\n\n                    let style = undefined\n                    if (\n                        this._contentStyle !== undefined &&\n                        this._contentStyle[i] !== undefined &&\n                        this._contentStyle[j] !== undefined\n                    ) {\n                        style = this._contentStyle[i][j]\n                    }\n\n                    const td = document.createElement(\"td\")\n                    td.style.cssText = style\n                    td.appendChild(htmlElem)\n                    tr.appendChild(td)\n                } catch (e) {\n                    console.error(\"Could not render an element in a table due to\", e, row[j])\n                }\n            }\n            table.appendChild(tr)\n        }\n\n        sortmode.addCallback((sortCol) => {\n            if (sortCol === undefined) {\n                return\n            }\n            const descending = sortCol < 0\n            const col = descending ? -sortCol - 1 : sortCol\n            let rows: HTMLTableRowElement[] = Array.from(table.rows)\n            rows.splice(0, 1) // remove header row\n            rows = rows.sort((a, b) => {\n                const ac = a.cells[col]?.textContent?.toLowerCase()\n                const bc = b.cells[col]?.textContent?.toLowerCase()\n                if (ac === bc) {\n                    return 0\n                }\n                return ac < bc !== descending ? -1 : 1\n            })\n            for (let j = rows.length; j > 1; j--) {\n                table.deleteRow(j)\n            }\n            for (const row of rows) {\n                table.appendChild(row)\n            }\n        })\n\n        return table\n    }\n}\n","import Combine from \"../Base/Combine\"\nimport { InputElement } from \"../Input/InputElement\"\nimport { TextField } from \"../Input/TextField\"\nimport Translations from \"../i18n/Translations\"\nimport { ImmutableStore, Store, Stores, UIEventSource } from \"../../Logic/UIEventSource\"\nimport Wikidata, { WikidataResponse } from \"../../Logic/Web/Wikidata\"\nimport Locale from \"../i18n/Locale\"\nimport { VariableUiElement } from \"../Base/VariableUIElement\"\nimport WikidataPreviewBox from \"./WikidataPreviewBox\"\nimport Title from \"../Base/Title\"\nimport Svg from \"../../Svg\"\nimport Loading from \"../Base/Loading\"\nimport Table from \"../Base/Table\"\n\nexport default class WikidataSearchBox extends InputElement<string> {\n    public static docs = new Combine([\n        new Title(\"Helper arguments\"),\n        new Table(\n            [\"name\", \"doc\"],\n            [\n                [\"key\", \"the value of this tag will initialize search (default: name)\"],\n                [\n                    \"options\",\n                    new Combine([\n                        \"A JSON-object of type `{ removePrefixes: string[], removePostfixes: string[] }`.\",\n                        new Table(\n                            [\"subarg\", \"doc\"],\n                            [\n                                [\n                                    \"removePrefixes\",\n                                    \"remove these snippets of text from the start of the passed string to search. This is either a list OR a hash of languages to a list. The individual strings are interpreted as case ignoring regexes\",\n                                ],\n                                [\n                                    \"removePostfixes\",\n                                    \"remove these snippets of text from the end of the passed string to search. This is either a list OR a hash of languages to a list. The individual strings are interpreted as case ignoring regexes.\",\n                                ],\n                                [\n                                    \"instanceOf\",\n                                    \"A list of Q-identifier which indicates that the search results _must_ be an entity of this type, e.g. [`Q5`](https://www.wikidata.org/wiki/Q5) for humans\",\n                                ],\n                                [\n                                    \"notInstanceof\",\n                                    \"A list of Q-identifiers which indicates that the search results _must not_ be an entity of this type, e.g. [`Q79007`](https://www.wikidata.org/wiki/Q79007) to filter away all streets from the search results\",\n                                ],\n                            ]\n                        ),\n                    ]),\n                ],\n            ]\n        ),\n        new Title(\"Example usage\"),\n        `The following is the 'freeform'-part of a layer config which will trigger a search for the wikidata item corresponding with the name of the selected feature. It will also remove '-street', '-square', ... if found at the end of the name\n\n\\`\\`\\`json\n\"freeform\": {\n    \"key\": \"name:etymology:wikidata\",\n    \"type\": \"wikidata\",\n    \"helperArgs\": [\n        \"name\",\n        {\n            \"removePostfixes\": {\"en\": [\n                \"street\",\n                \"boulevard\",\n                \"path\",\n                \"square\",\n                \"plaza\",\n            ],\n             \"nl\": [\"straat\",\"plein\",\"pad\",\"weg\",laan\"],\n             \"fr\":[\"route (de|de la|de l'| de le)\"]\n             },\n\n            \"#\": \"Remove streets and parks from the search results:\"\n             \"notInstanceOf\": [\"Q79007\",\"Q22698\"]\n        }\n\n    ]\n}\n\\`\\`\\`\n\nAnother example is to search for species and trees:\n\n\\`\\`\\`json\n \"freeform\": {\n        \"key\": \"species:wikidata\",\n        \"type\": \"wikidata\",\n        \"helperArgs\": [\n          \"species\",\n          {\n          \"instanceOf\": [10884, 16521]\n        }]\n      }\n\\`\\`\\`\n`,\n    ])\n    private static readonly _searchCache = new Map<string, Promise<WikidataResponse[]>>()\n    private readonly wikidataId: UIEventSource<string>\n    private readonly searchText: UIEventSource<string>\n    private readonly instanceOf?: number[]\n    private readonly notInstanceOf?: number[]\n\n    constructor(options?: {\n        searchText?: UIEventSource<string>\n        value?: UIEventSource<string>\n        notInstanceOf?: number[]\n        instanceOf?: number[]\n    }) {\n        super()\n        this.searchText = options?.searchText\n        this.wikidataId = options?.value ?? new UIEventSource<string>(undefined)\n        this.instanceOf = options?.instanceOf\n        this.notInstanceOf = options?.notInstanceOf\n    }\n\n    GetValue(): UIEventSource<string> {\n        return this.wikidataId\n    }\n\n    IsValid(t: string): boolean {\n        return t.startsWith(\"Q\") && !isNaN(Number(t.substring(1)))\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const searchField = new TextField({\n            placeholder: Translations.t.general.wikipedia.searchWikidata,\n            value: this.searchText,\n            inputStyle: \"width: calc(100% - 0.5rem); border: 1px solid black\",\n        })\n        const selectedWikidataId = this.wikidataId\n\n        const tooShort = new ImmutableStore<{ success: WikidataResponse[] }>({ success: undefined })\n        const searchResult: Store<{ success?: WikidataResponse[]; error?: any }> = searchField\n            .GetValue()\n            .bind((searchText) => {\n                if (searchText.length < 3 && !searchText.match(/[qQ][0-9]+/)) {\n                    return tooShort\n                }\n                const lang = Locale.language.data\n                const key = lang + \":\" + searchText\n                let promise = WikidataSearchBox._searchCache.get(key)\n                if (promise === undefined) {\n                    promise = Wikidata.searchAndFetch(searchText, {\n                        lang,\n                        maxCount: 5,\n                        notInstanceOf: this.notInstanceOf,\n                        instanceOf: this.instanceOf,\n                    })\n                    WikidataSearchBox._searchCache.set(key, promise)\n                }\n                return Stores.FromPromiseWithErr(promise)\n            })\n\n        const previews = new VariableUiElement(\n            searchResult.map(\n                (searchResultsOrFail) => {\n                    if (searchField.GetValue().data.length === 0) {\n                        return Translations.t.general.wikipedia.doSearch\n                    }\n\n                    if (searchField.GetValue().data.length < 3) {\n                        return Translations.t.general.wikipedia.searchToShort\n                    }\n\n                    if (searchResultsOrFail === undefined) {\n                        return new Loading(Translations.t.general.loading)\n                    }\n\n                    if (searchResultsOrFail.error !== undefined) {\n                        return new Combine([\n                            Translations.t.general.wikipedia.failed.Clone().SetClass(\"alert\"),\n                            searchResultsOrFail.error,\n                        ])\n                    }\n\n                    const searchResults = searchResultsOrFail.success\n                    if (searchResults.length === 0) {\n                        return Translations.t.general.wikipedia.noResults.Subs({\n                            search: searchField.GetValue().data ?? \"\",\n                        })\n                    }\n\n                    return new Combine(\n                        searchResults.map((wikidataresponse) => {\n                            const el = WikidataPreviewBox.WikidataResponsePreview(\n                                wikidataresponse\n                            ).SetClass(\n                                \"rounded-xl p-1 sm:p-2 md:p-3 m-px border-2 sm:border-4 transition-colors\"\n                            )\n                            el.onClick(() => {\n                                selectedWikidataId.setData(wikidataresponse.id)\n                            })\n                            selectedWikidataId.addCallbackAndRunD((selected) => {\n                                if (selected === wikidataresponse.id) {\n                                    el.SetClass(\"subtle-background border-attention\")\n                                } else {\n                                    el.RemoveClass(\"subtle-background\")\n                                    el.RemoveClass(\"border-attention\")\n                                }\n                            })\n                            return el\n                        })\n                    ).SetClass(\"flex flex-col\")\n                },\n                [searchField.GetValue()]\n            )\n        )\n\n        return new Combine([\n            new Title(Translations.t.general.wikipedia.searchWikidata, 3).SetClass(\"m-2\"),\n            new Combine([\n                Svg.search_svg().SetStyle(\"width: 1.5rem\"),\n                searchField.SetClass(\"m-2 w-full\"),\n            ]).SetClass(\"flex\"),\n            previews,\n        ])\n            .SetClass(\"flex flex-col border-2 border-black rounded-xl m-2 p-2\")\n            .ConstructElement()\n    }\n}\n","import Combine from \"../../Base/Combine\"\nimport Wikidata from \"../../../Logic/Web/Wikidata\"\nimport WikidataSearchBox from \"../../Wikipedia/WikidataSearchBox\"\nimport { Validator } from \"../Validator\"\n\nexport default class WikidataValidator extends Validator {\n    constructor() {\n        super(\"wikidata\", new Combine([\"A wikidata identifier, e.g. Q42.\", WikidataSearchBox.docs]))\n    }\n\n    public isValid(str): boolean {\n        if (str === undefined) {\n            return false\n        }\n        if (str.length <= 2) {\n            return false\n        }\n        return !str.split(\";\").some((str) => Wikidata.ExtractKey(str) === undefined)\n    }\n\n    public reformat(str) {\n        if (str === undefined) {\n            return undefined\n        }\n        let out = str\n            .split(\";\")\n            .map((str) => Wikidata.ExtractKey(str))\n            .join(\"; \")\n        if (str.endsWith(\";\")) {\n            out = out + \";\"\n        }\n        return out\n    }\n}\n","import { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\nimport NatValidator from \"./NatValidator\"\n\nexport default class PNatValidator extends NatValidator {\n    constructor() {\n        super(\"pnat\", \"A strict positive number\")\n    }\n\n    getFeedback(s: string): Translation {\n        const spr = super.getFeedback(s)\n        if (spr !== undefined) {\n            return spr\n        }\n        if (Number(s) === 0) {\n            return Translations.t.validation.pnat.noZero\n        }\n        return undefined\n    }\n\n    isValid = (str) => {\n        if (!super.isValid(str)) {\n            return false\n        }\n        return Number(str) > 0\n    }\n}\n","import { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\nimport { Validator } from \"../Validator\"\nimport { ValidatorType } from \"../Validators\"\n\nexport default class FloatValidator extends Validator {\n    inputmode: \"decimal\" = \"decimal\"\n\n    constructor(name?: ValidatorType, explanation?: string) {\n        super(name ?? \"float\", explanation ?? \"A decimal number\", \"decimal\")\n    }\n\n    isValid(str) {\n        return !isNaN(Number(str)) && !str.endsWith(\".\") && !str.endsWith(\",\")\n    }\n\n    reformat(str): string {\n        return \"\" + Number(str)\n    }\n\n    getFeedback(s: string): Translation {\n        if (isNaN(Number(s))) {\n            return Translations.t.validation.nat.notANumber\n        }\n\n        return undefined\n    }\n}\n","import { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\nimport { Validator } from \"../Validator\"\n\nexport default class PFloatValidator extends Validator {\n    constructor() {\n        super(\"pfloat\", \"A positive decimal number or zero\")\n    }\n\n    isValid = (str) =>\n        !isNaN(Number(str)) && Number(str) >= 0 && !str.endsWith(\".\") && !str.endsWith(\",\")\n\n    getFeedback(s: string): Translation {\n        const spr = super.getFeedback(s)\n        if (spr !== undefined) {\n            return spr\n        }\n        if (Number(s) < 0) {\n            return Translations.t.validation.nat.mustBePositive\n        }\n        return undefined\n    }\n}\n","\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}","import { Translation } from \"../../i18n/Translation.js\"\nimport Translations from \"../../i18n/Translations.js\"\nimport * as emailValidatorLibrary from \"email-validator\"\nimport { Validator } from \"../Validator\"\n\nexport default class EmailValidator extends Validator {\n    constructor() {\n        super(\"email\", \"An email adress\", \"email\")\n    }\n\n    isValid = (str) => {\n        if (str === undefined) {\n            return false\n        }\n        str = str.trim()\n        if (str.startsWith(\"mailto:\")) {\n            str = str.substring(\"mailto:\".length)\n        }\n        return emailValidatorLibrary.validate(str)\n    }\n\n    reformat = (str) => {\n        if (str === undefined) {\n            return undefined\n        }\n        str = str.trim()\n        if (str.startsWith(\"mailto:\")) {\n            str = str.substring(\"mailto:\".length)\n        }\n        return str\n    }\n\n    getFeedback(s: string): Translation {\n        if (s.indexOf(\"@\") < 0) {\n            return Translations.t.validation.email.noAt\n        }\n\n        return super.getFeedback(s)\n    }\n}\n","import { Validator } from \"../Validator\"\n\nexport default class UrlValidator extends Validator {\n    constructor(name?: string, explanation?: string) {\n        super(\n            name ??\"url\",\n             explanation?? \"The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed\",\n            \"url\"\n        )\n    }\n    reformat(str: string): string {\n        try {\n            let url: URL\n            // str = str.toLowerCase() // URLS are case sensitive. Lowercasing them might break some URLS. See #763\n            if (\n                !str.startsWith(\"http://\") &&\n                !str.startsWith(\"https://\") &&\n                !str.startsWith(\"http:\")\n            ) {\n                url = new URL(\"https://\" + str)\n            } else {\n                url = new URL(str)\n            }\n            const blacklistedTrackingParams = [\n                \"fbclid\", // Oh god, how I hate the fbclid. Let it burn, burn in hell!\n                \"gclid\",\n                \"cmpid\",\n                \"agid\",\n                \"utm\",\n                \"utm_source\",\n                \"utm_medium\",\n                \"campaignid\",\n                \"campaign\",\n                \"AdGroupId\",\n                \"AdGroup\",\n                \"TargetId\",\n                \"msclkid\",\n            ]\n            for (const dontLike of blacklistedTrackingParams) {\n                url.searchParams.delete(dontLike.toLowerCase())\n            }\n            let cleaned = url.toString()\n            if (cleaned.endsWith(\"/\") && !str.endsWith(\"/\")) {\n                // Do not add a trailing '/' if it wasn't typed originally\n                cleaned = cleaned.substr(0, cleaned.length - 1)\n            }\n\n            return cleaned\n        } catch (e) {\n            console.error(e)\n            return undefined\n        }\n    }\n\n    isValid(str: string): boolean {\n        try {\n            if (\n                !str.startsWith(\"http://\") &&\n                !str.startsWith(\"https://\") &&\n                !str.startsWith(\"http:\")\n            ) {\n                str = \"https://\" + str\n            }\n            const url = new URL(str)\n            const dotIndex = url.host.indexOf(\".\")\n            return dotIndex > 0 && url.host[url.host.length - 1] !== \".\"\n        } catch (e) {\n            return false\n        }\n    }\n}\n","// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([457]\\\\d{6})$\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2457]\\\\d{6})$\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([267]\\\\d{6})$\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"0|(183[12])\",0,0,0,[[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:83[0-389]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[047]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"[24-689]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([3-8]\\\\d{6})$\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-79]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-7]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"0|([59]\\\\d{7})$\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:83[0-389]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"0|(1(?:[12]\\\\d|79)\\\\d\\\\d)\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0(4(?:[14]4|56)|[579])?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"[27]\\\\d{6,7}|[34]\\\\d{5,7}|(?:5|8\\\\d\\\\d)\\\\d{7}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"0|([59]\\\\d{7})$\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:83[0-389]|93[0-6])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[189]\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[12]00|[368]|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[1245]|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0-579])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d\\\\d|1(?:[0-7]\\\\d\\\\d|8(?:[02]\\\\d|1[0-246-9])))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"(?:[56]94|80\\\\d|976)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"0|([25-9]\\\\d{5})$\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d\\\\d|606)\\\\d{5}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-389]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([3-9]\\\\d{6})$\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"0|([25-8]\\\\d{5})$\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"0|([0-24-8]\\\\d{5})$\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|(?:[235-8]\\\\d|99)\\\\d{7}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-8]\\\\d{6})$\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"0|(1001)\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:[25]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[4-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(8-$1)\",1]],\"8\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{5})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29[1289]|389)\",\"529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|9)|892\",\"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5293[01]\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|2[0-2]|6[0-8]|8[0-3]))\\\\d{6}\"],[\"80\\\\d{7}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"592(?:4[0-2]|93)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"(?:590|(?:69|80)\\\\d|976)\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"976[01]\\\\d{5}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"0|([24-9]\\\\d{6})$\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"(?:69|80)\\\\d{7}|(?:59|97)6\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([34]\\\\d{6})$\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[3467]|9[1-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[04]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-7]|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[489]|59\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-7]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[47]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-579]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|[89]0\",\"50(?:[0367]|88)|[89]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[59]|80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7|86\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"(?:[45]|80\\\\d\\\\d)\\\\d{5}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[16]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"00\",\"976\\\\d{6}|(?:26|[68]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,\"26[23]|69|[89]\"],\"RO\":[\"40\",\"00\",\"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[237-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-6]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|[57]9)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3478]|64|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6(?:0[5-7]|[1-35-9])|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|(5\\\\d{6})$\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-479]\\\\d{6})$\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"(?:00|[1-57-9]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[34]7|91[78]\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"[1-6]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|616)\",\"5(?:[0-59]|6161)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-46-8]\\\\d{6})$\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"505(?:[2-57-9]\\\\d\\\\d|6(?:[0-35-9]\\\\d|4[46]))\\\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"(?:0004|4)\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[7,8,10,13],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"405|8|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"810\",\"(?:33|[5-79]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[35-9]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-7]\\\\d{6})$\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"1|([2-578]\\\\d{6})$\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"1|([2-9]\\\\d{6})$\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[69]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3578]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23]\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"80\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,\"269|63\"],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"[0-36-9]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-36-9]\"]]],0,0,0,0,0,0,[0,[\"[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}","// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// https://stackoverflow.com/a/46971044/970769\n// \"Breaking changes in Typescript 2.1\"\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nvar ParseError = /*#__PURE__*/function (_Error) {\n  _inherits(ParseError, _Error);\n\n  var _super = _createSuper(ParseError);\n\n  function ParseError(code) {\n    var _this;\n\n    _classCallCheck(this, ParseError);\n\n    _this = _super.call(this, code); // Set the prototype explicitly.\n    // Any subclass of FooError will have to manually set the prototype as well.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), ParseError.prototype);\n    _this.name = _this.constructor.name;\n    return _this;\n  }\n\n  return _createClass(ParseError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport { ParseError as default };\n//# sourceMappingURL=ParseError.js.map","// The minimum length of the national significant number.\nexport var MIN_LENGTH_FOR_NSN = 2; // The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\n\nexport var MAX_LENGTH_FOR_NSN = 17; // The maximum length of the country calling code.\n\nexport var MAX_LENGTH_COUNTRY_CODE = 3; // Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\n\nexport var VALID_DIGITS = \"0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9\"; // `DASHES` will be right after the opening square bracket of the \"character class\"\n\nvar DASHES = \"-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D\";\nvar SLASHES = \"\\uFF0F/\";\nvar DOTS = \"\\uFF0E.\";\nexport var WHITESPACE = \" \\xA0\\xAD\\u200B\\u2060\\u3000\";\nvar BRACKETS = \"()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]\"; // export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\n\nvar TILDES = \"~\\u2053\\u223C\\uFF5E\"; // Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\n\nexport var VALID_PUNCTUATION = \"\".concat(DASHES).concat(SLASHES).concat(DOTS).concat(WHITESPACE).concat(BRACKETS).concat(TILDES);\nexport var PLUS_CHARS = \"+\\uFF0B\"; // const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')\n//# sourceMappingURL=constants.js.map","// Copy-pasted from:\n// https://github.com/substack/semver-compare/blob/master/index.js\n//\n// Inlining this function because some users reported issues with\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\n//\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\nexport default function (a, b) {\n  a = a.split('-');\n  b = b.split('-');\n  var pa = a[0].split('.');\n  var pb = b[0].split('.');\n\n  for (var i = 0; i < 3; i++) {\n    var na = Number(pa[i]);\n    var nb = Number(pb[i]);\n    if (na > nb) return 1;\n    if (nb > na) return -1;\n    if (!isNaN(na) && isNaN(nb)) return 1;\n    if (isNaN(na) && !isNaN(nb)) return -1;\n  }\n\n  if (a[1] && b[1]) {\n    return a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0;\n  }\n\n  return !a[1] && b[1] ? 1 : a[1] && !b[1] ? -1 : 0;\n}\n//# sourceMappingURL=semver-compare.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport compare from './tools/semver-compare.js'; // Added \"possibleLengths\" and renamed\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\n\nvar V2 = '1.0.18'; // Added \"idd_prefix\" and \"default_idd_prefix\".\n\nvar V3 = '1.2.0'; // Moved `001` country code to \"nonGeographic\" section of metadata.\n\nvar V4 = '1.7.35';\nvar DEFAULT_EXT_PREFIX = ' ext. ';\nvar CALLING_CODE_REG_EXP = /^\\d+$/;\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\n\nvar Metadata = /*#__PURE__*/function () {\n  function Metadata(metadata) {\n    _classCallCheck(this, Metadata);\n\n    validateMetadata(metadata);\n    this.metadata = metadata;\n    setVersion.call(this, metadata);\n  }\n\n  _createClass(Metadata, [{\n    key: \"getCountries\",\n    value: function getCountries() {\n      return Object.keys(this.metadata.countries).filter(function (_) {\n        return _ !== '001';\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function getCountryMetadata(countryCode) {\n      return this.metadata.countries[countryCode];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function nonGeographic() {\n      if (this.v1 || this.v2 || this.v3) return; // `nonGeographical` was a typo.\n      // It's present in metadata generated from `1.7.35` to `1.7.37`.\n      // The test case could be found by searching for \"nonGeographical\".\n\n      return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function hasCountry(country) {\n      return this.getCountryMetadata(country) !== undefined;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function hasCallingCode(callingCode) {\n      if (this.getCountryCodesForCallingCode(callingCode)) {\n        return true;\n      }\n\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[callingCode]) {\n          return true;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function isNonGeographicCallingCode(callingCode) {\n      if (this.nonGeographic()) {\n        return this.nonGeographic()[callingCode] ? true : false;\n      } else {\n        return this.getCountryCodesForCallingCode(callingCode) ? false : true;\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"country\",\n    value: function country(countryCode) {\n      return this.selectNumberingPlan(countryCode);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function selectNumberingPlan(countryCode, callingCode) {\n      // Supports just passing `callingCode` as the first argument.\n      if (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\n        callingCode = countryCode;\n        countryCode = null;\n      }\n\n      if (countryCode && countryCode !== '001') {\n        if (!this.hasCountry(countryCode)) {\n          throw new Error(\"Unknown country: \".concat(countryCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this);\n      } else if (callingCode) {\n        if (!this.hasCallingCode(callingCode)) {\n          throw new Error(\"Unknown calling code: \".concat(callingCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this);\n      } else {\n        this.numberingPlan = undefined;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function getCountryCodesForCallingCode(callingCode) {\n      var countryCodes = this.countryCallingCodes()[callingCode];\n\n      if (countryCodes) {\n        // Metadata before V4 included \"non-geographic entity\" calling codes\n        // inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\n        // Now the semantics of `country_calling_codes` has changed:\n        // it's specifically for \"countries\" now.\n        // Older versions of custom metadata will simply skip parsing\n        // \"non-geographic entity\" phone numbers with new versions\n        // of this library: it's not considered a bug,\n        // because such numbers are extremely rare,\n        // and developers extremely rarely use custom metadata.\n        if (countryCodes.length === 1 && countryCodes[0].length === 3) {\n          return;\n        }\n\n        return countryCodes;\n      }\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function getCountryCodeForCallingCode(callingCode) {\n      var countryCodes = this.getCountryCodesForCallingCode(callingCode);\n\n      if (countryCodes) {\n        return countryCodes[0];\n      }\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function getNumberingPlanMetadata(callingCode) {\n      var countryCode = this.getCountryCodeForCallingCode(callingCode);\n\n      if (countryCode) {\n        return this.getCountryMetadata(countryCode);\n      }\n\n      if (this.nonGeographic()) {\n        var metadata = this.nonGeographic()[callingCode];\n\n        if (metadata) {\n          return metadata;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        // In that metadata, there was no concept of \"non-geographic\" metadata\n        // so metadata for `001` country code was stored along with other countries.\n        // The test case can be found by searching for:\n        // \"should work around `nonGeographic` metadata not existing\".\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return this.metadata.countries['001'];\n        }\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"countryCallingCode\",\n    value: function countryCallingCode() {\n      return this.numberingPlan.callingCode();\n    } // Deprecated.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      return this.numberingPlan.IDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      return this.numberingPlan.defaultIDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      return this.numberingPlan.nationalNumberPattern();\n    } // Deprecated.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      return this.numberingPlan.possibleLengths();\n    } // Deprecated.\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return this.numberingPlan.formats();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    } // Deprecated.\n\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.numberingPlan.leadingDigits();\n    } // Deprecated.\n\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      return this.numberingPlan.hasTypes();\n    } // Deprecated.\n\n  }, {\n    key: \"type\",\n    value: function type(_type) {\n      return this.numberingPlan.type(_type);\n    } // Deprecated.\n\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function countryCallingCodes() {\n      if (this.v1) return this.metadata.country_phone_code_to_countries;\n      return this.metadata.country_calling_codes;\n    } // Deprecated.\n\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function chooseCountryByCountryCallingCode(callingCode) {\n      return this.selectNumberingPlan(callingCode);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function hasSelectedNumberingPlan() {\n      return this.numberingPlan !== undefined;\n    }\n  }]);\n\n  return Metadata;\n}();\n\nexport { Metadata as default };\n\nvar NumberingPlan = /*#__PURE__*/function () {\n  function NumberingPlan(metadata, globalMetadataObject) {\n    _classCallCheck(this, NumberingPlan);\n\n    this.globalMetadataObject = globalMetadataObject;\n    this.metadata = metadata;\n    setVersion.call(this, globalMetadataObject.metadata);\n  }\n\n  _createClass(NumberingPlan, [{\n    key: \"callingCode\",\n    value: function callingCode() {\n      return this.metadata[0];\n    } // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function getDefaultCountryMetadataForRegion() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    } // Is always present.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[1];\n    } // Is only present when a country supports multiple IDD prefixes.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      if (this.v1 || this.v2) return this.metadata[1];\n      return this.metadata[2];\n    } // \"possible length\" data is always present in Google's metadata.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.v1) return;\n      return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function _getFormats(metadata) {\n      return metadata[this.v1 ? 2 : this.v2 ? 3 : 4];\n    } // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      var _this = this;\n\n      var formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return formats.map(function (_) {\n        return new Format(_, _this);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function nationalPrefix() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function _getNationalPrefixFormattingRule(metadata) {\n      return metadata[this.v1 ? 4 : this.v2 ? 5 : 6];\n    } // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function _nationalPrefixForParsing() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      // If `national_prefix_for_parsing` is not set explicitly,\n      // then infer it from `national_prefix` (if any)\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function _getNationalPrefixIsOptionalWhenFormatting() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    } // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function types() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      // Versions 1.2.0 - 1.2.4: can be `[]`.\n\n      /* istanbul ignore next */\n      if (this.types() && this.types().length === 0) {\n        return false;\n      } // Versions <= 1.2.4: can be `undefined`.\n      // Version >= 1.2.5: can be `0`.\n\n\n      return !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function type(_type2) {\n      if (this.hasTypes() && getType(this.types(), _type2)) {\n        return new Type(getType(this.types(), _type2), this);\n      }\n    }\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      if (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;\n      return this.metadata[13] || DEFAULT_EXT_PREFIX;\n    }\n  }]);\n\n  return NumberingPlan;\n}();\n\nvar Format = /*#__PURE__*/function () {\n  function Format(format, metadata) {\n    _classCallCheck(this, Format);\n\n    this._format = format;\n    this.metadata = metadata;\n  }\n\n  _createClass(Format, [{\n    key: \"pattern\",\n    value: function pattern() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function leadingDigitsPatterns() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\n      // National prefix is omitted if there's no national prefix formatting rule\n      // set for this country, or when the national prefix formatting rule\n      // contains no national prefix itself, or when this rule is set but\n      // national prefix is optional for this phone number format\n      // (and it is not enforced explicitly)\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    } // Checks whether national prefix formatting rule contains national prefix.\n\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function usesNationalPrefix() {\n      return this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule()) // In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\n      // when `national_prefix_formatting_rule` is not present.\n      // So, `true` or `false` are returned explicitly here, so that\n      // `0` number isn't returned.\n      ? true : false;\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function internationalFormat() {\n      return this._format[5] || this.format();\n    }\n  }]);\n\n  return Format;\n}();\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\n\n\nvar FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/;\n\nvar Type = /*#__PURE__*/function () {\n  function Type(type, metadata) {\n    _classCallCheck(this, Type);\n\n    this.type = type;\n    this.metadata = metadata;\n  }\n\n  _createClass(Type, [{\n    key: \"pattern\",\n    value: function pattern() {\n      if (this.metadata.v1) return this.type;\n      return this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.metadata.v1) return;\n      return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]);\n\n  return Type;\n}();\n\nfunction getType(types, type) {\n  switch (type) {\n    case 'FIXED_LINE':\n      return types[0];\n\n    case 'MOBILE':\n      return types[1];\n\n    case 'TOLL_FREE':\n      return types[2];\n\n    case 'PREMIUM_RATE':\n      return types[3];\n\n    case 'PERSONAL_NUMBER':\n      return types[4];\n\n    case 'VOICEMAIL':\n      return types[5];\n\n    case 'UAN':\n      return types[6];\n\n    case 'PAGER':\n      return types[7];\n\n    case 'VOIP':\n      return types[8];\n\n    case 'SHARED_COST':\n      return types[9];\n  }\n}\n\nexport function validateMetadata(metadata) {\n  if (!metadata) {\n    throw new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');\n  } // `country_phone_code_to_countries` was renamed to\n  // `country_calling_codes` in `1.0.18`.\n\n\n  if (!is_object(metadata) || !is_object(metadata.countries)) {\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata, \".\"));\n  }\n} // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar is_object = function is_object(_) {\n  return _typeof(_) === 'object';\n}; // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\n\nvar type_of = function type_of(_) {\n  return _typeof(_);\n};\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\n\n\nexport function getExtPrefix(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).ext();\n  }\n\n  return DEFAULT_EXT_PREFIX;\n}\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\n\nexport function getCountryCallingCode(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).countryCallingCode();\n  }\n\n  throw new Error(\"Unknown country: \".concat(country));\n}\nexport function isSupportedCountry(country, metadata) {\n  // metadata = new Metadata(metadata)\n  // return metadata.hasCountry(country)\n  return metadata.countries[country] !== undefined;\n}\n\nfunction setVersion(metadata) {\n  var version = metadata.version;\n\n  if (typeof version === 'number') {\n    this.v1 = version === 1;\n    this.v2 = version === 2;\n    this.v3 = version === 3;\n    this.v4 = version === 4;\n  } else {\n    if (!version) {\n      this.v1 = true;\n    } else if (compare(version, V3) === -1) {\n      this.v2 = true;\n    } else if (compare(version, V4) === -1) {\n      this.v3 = true;\n    } else {\n      this.v4 = true;\n    }\n  }\n} // const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\n// function isCountryCode(countryCode) {\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\n// }\n//# sourceMappingURL=metadata.js.map","import { VALID_DIGITS } from '../../constants.js'; // The RFC 3966 format for extensions.\n\nvar RFC3966_EXTN_PREFIX = ';ext=';\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\n\nvar getExtensionDigitsPattern = function getExtensionDigitsPattern(maxLength) {\n  return \"([\".concat(VALID_DIGITS, \"]{1,\").concat(maxLength, \"})\");\n};\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\n\n\nexport default function createExtensionPattern(purpose) {\n  // We cap the maximum length of an extension based on the ambiguity of the way\n  // the extension is prefixed. As per ITU, the officially allowed length for\n  // extensions is actually 40, but we don't support this since we haven't seen real\n  // examples and this introduces many false interpretations as the extension labels\n  // are not standardized.\n\n  /** @type {string} */\n  var extLimitAfterExplicitLabel = '20';\n  /** @type {string} */\n\n  var extLimitAfterLikelyLabel = '15';\n  /** @type {string} */\n\n  var extLimitAfterAmbiguousChar = '9';\n  /** @type {string} */\n\n  var extLimitWhenNotSure = '6';\n  /** @type {string} */\n\n  var possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\xA0\\\\t,]*\"; // Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\n\n  /** @type {string} */\n\n  var possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\";\n  /** @type {string} */\n\n  var optionalExtnSuffix = \"#?\"; // Here the extension is called out in more explicit way, i.e mentioning it obvious\n  // patterns like \"ext.\".\n\n  /** @type {string} */\n\n  var explicitExtLabels = \"(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\"; // One-character symbols that can be used to indicate an extension, and less\n  // commonly used or more ambiguous extension labels.\n\n  /** @type {string} */\n\n  var ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\"; // When extension is not separated clearly.\n\n  /** @type {string} */\n\n  var ambiguousSeparator = \"[- ]+\"; // This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\n  // comma as extension label may have it.\n\n  /** @type {string} */\n\n  var possibleSeparatorsNumberExtLabelNoComma = \"[ \\xA0\\\\t]*\"; // \",,\" is commonly used for auto dialling the extension when connected. First\n  // comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\n  // not repeat it here. Semi-colon works in Iphone and Android also to pop up a\n  // button with the extension number following.\n\n  /** @type {string} */\n\n  var autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\n  /** @type {string} */\n\n  var rfcExtn = RFC3966_EXTN_PREFIX + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\n  /** @type {string} */\n\n  var explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterExplicitLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var americanStyleExtnWithSuffix = ambiguousSeparator + getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\n  /** @type {string} */\n\n  var autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterLikelyLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma + \"(?:,)+\" + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix; // The first regular expression covers RFC 3966 format, where the extension is added\n  // using \";ext=\". The second more generic where extension is mentioned with explicit\n  // labels like \"ext:\". In both the above cases we allow more numbers in extension than\n  // any other extension labels. The third one captures when single character extension\n  // labels or less commonly used labels are used. In such cases we capture fewer\n  // extension digits in order to reduce the chance of falsely interpreting two\n  // numbers beside each other as a number + extension. The fourth one covers the\n  // special case of American numbers where the extension is written with a hash\n  // at the end, such as \"- 503#\". The fifth one is exclusively for extension\n  // autodialling formats which are used when dialling and in this case we accept longer\n  // extensions. The last one is more liberal on the number of commas that acts as\n  // extension labels, so we have a strict cap on the number of digits in such extensions.\n\n  return rfcExtn + \"|\" + explicitExtn + \"|\" + ambiguousExtn + \"|\" + americanStyleExtnWithSuffix + \"|\" + autoDiallingExtn + \"|\" + onlyCommasExtn;\n}\n//# sourceMappingURL=createExtensionPattern.js.map","import { MIN_LENGTH_FOR_NSN, VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS } from '../constants.js';\nimport createExtensionPattern from './extension/createExtensionPattern.js'; //  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\n\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'; //\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\n\nexport var VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*'; // This regular expression isn't present in Google's `libphonenumber`\n// and is only used to determine whether the phone number being input\n// is too short for it to even consider it a \"valid\" number.\n// This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nvar VALID_PHONE_NUMBER_START_REG_EXP = new RegExp('^' + '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){1,2}' + '$', 'i');\nexport var VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER + // Phone number extensions\n'(?:' + createExtensionPattern() + ')?'; // The combined regular expression for valid phone numbers:\n//\n\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp( // Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' + // Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER_WITH_EXTENSION + '$', 'i'); // Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\n\nexport default function isViablePhoneNumber(number) {\n  return number.length >= MIN_LENGTH_FOR_NSN && VALID_PHONE_NUMBER_PATTERN.test(number);\n} // This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nexport function isViablePhoneNumberStart(number) {\n  return VALID_PHONE_NUMBER_START_REG_EXP.test(number);\n}\n//# sourceMappingURL=isViablePhoneNumber.js.map","import createExtensionPattern from './createExtensionPattern.js'; // Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\n\nvar EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i'); // Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\n\nexport default function extractExtension(number) {\n  var start = number.search(EXTN_PATTERN);\n\n  if (start < 0) {\n    return {};\n  } // If we find a potential extension, and the number preceding this is a viable\n  // number, we assume it is an extension.\n\n\n  var numberWithoutExtension = number.slice(0, start);\n  var matches = number.match(EXTN_PATTERN);\n  var i = 1;\n\n  while (i < matches.length) {\n    if (matches[i]) {\n      return {\n        number: numberWithoutExtension,\n        ext: matches[i]\n      };\n    }\n\n    i++;\n  }\n}\n//# sourceMappingURL=extractExtension.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGITS = {\n  '0': '0',\n  '1': '1',\n  '2': '2',\n  '3': '3',\n  '4': '4',\n  '5': '5',\n  '6': '6',\n  '7': '7',\n  '8': '8',\n  '9': '9',\n  \"\\uFF10\": '0',\n  // Fullwidth digit 0\n  \"\\uFF11\": '1',\n  // Fullwidth digit 1\n  \"\\uFF12\": '2',\n  // Fullwidth digit 2\n  \"\\uFF13\": '3',\n  // Fullwidth digit 3\n  \"\\uFF14\": '4',\n  // Fullwidth digit 4\n  \"\\uFF15\": '5',\n  // Fullwidth digit 5\n  \"\\uFF16\": '6',\n  // Fullwidth digit 6\n  \"\\uFF17\": '7',\n  // Fullwidth digit 7\n  \"\\uFF18\": '8',\n  // Fullwidth digit 8\n  \"\\uFF19\": '9',\n  // Fullwidth digit 9\n  \"\\u0660\": '0',\n  // Arabic-indic digit 0\n  \"\\u0661\": '1',\n  // Arabic-indic digit 1\n  \"\\u0662\": '2',\n  // Arabic-indic digit 2\n  \"\\u0663\": '3',\n  // Arabic-indic digit 3\n  \"\\u0664\": '4',\n  // Arabic-indic digit 4\n  \"\\u0665\": '5',\n  // Arabic-indic digit 5\n  \"\\u0666\": '6',\n  // Arabic-indic digit 6\n  \"\\u0667\": '7',\n  // Arabic-indic digit 7\n  \"\\u0668\": '8',\n  // Arabic-indic digit 8\n  \"\\u0669\": '9',\n  // Arabic-indic digit 9\n  \"\\u06F0\": '0',\n  // Eastern-Arabic digit 0\n  \"\\u06F1\": '1',\n  // Eastern-Arabic digit 1\n  \"\\u06F2\": '2',\n  // Eastern-Arabic digit 2\n  \"\\u06F3\": '3',\n  // Eastern-Arabic digit 3\n  \"\\u06F4\": '4',\n  // Eastern-Arabic digit 4\n  \"\\u06F5\": '5',\n  // Eastern-Arabic digit 5\n  \"\\u06F6\": '6',\n  // Eastern-Arabic digit 6\n  \"\\u06F7\": '7',\n  // Eastern-Arabic digit 7\n  \"\\u06F8\": '8',\n  // Eastern-Arabic digit 8\n  \"\\u06F9\": '9' // Eastern-Arabic digit 9\n\n};\nexport function parseDigit(character) {\n  return DIGITS[character];\n}\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\n\nexport default function parseDigits(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    var digit = parseDigit(character);\n\n    if (digit) {\n      result += digit;\n    }\n  }\n\n  return result;\n}\n//# sourceMappingURL=parseDigits.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { parseDigit } from './helpers/parseDigits.js';\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\n\nexport default function parseIncompletePhoneNumber(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    result += parsePhoneNumberCharacter(character, result) || '';\n  }\n\n  return result;\n}\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\n\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters) {\n  // Only allow a leading `+`.\n  if (character === '+') {\n    // If this `+` is not the first parsed character\n    // then discard it.\n    if (prevParsedCharacters) {\n      return;\n    }\n\n    return '+';\n  } // Allow digits.\n\n\n  return parseDigit(character);\n}\n//# sourceMappingURL=parseIncompletePhoneNumber.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\nexport default function mergeArrays(a, b) {\n  var merged = a.slice();\n\n  for (var _iterator = _createForOfIteratorHelperLoose(b), _step; !(_step = _iterator()).done;) {\n    var element = _step.value;\n\n    if (a.indexOf(element) < 0) {\n      merged.push(element);\n    }\n  }\n\n  return merged.sort(function (a, b) {\n    return a - b;\n  }); // ES6 version, requires Set polyfill.\n  // let merged = new Set(a)\n  // for (const element of b) {\n  // \tmerged.add(i)\n  // }\n  // return Array.from(merged).sort((a, b) => a - b)\n}\n//# sourceMappingURL=mergeArrays.js.map","import mergeArrays from './mergeArrays.js';\nexport default function checkNumberLength(nationalNumber, metadata) {\n  return checkNumberLengthForType(nationalNumber, undefined, metadata);\n} // Checks whether a number is possible for the country based on its length.\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\n\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\n  var type_info = metadata.type(type); // There should always be \"<possiblePengths/>\" set for every type element.\n  // This is declared in the XML schema.\n  // For size efficiency, where a sub-description (e.g. fixed-line)\n  // has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\n  // so we fall back to the \"general description\". Where no numbers of the type\n  // exist at all, there is one possible length (-1) which is guaranteed\n  // not to match the length of any real phone number.\n\n  var possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths(); // let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\n  // Metadata before version `1.0.18` didn't contain `possible_lengths`.\n\n  if (!possible_lengths) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (type === 'FIXED_LINE_OR_MOBILE') {\n    // No such country in metadata.\n\n    /* istanbul ignore next */\n    if (!metadata.type('FIXED_LINE')) {\n      // The rare case has been encountered where no fixedLine data is available\n      // (true for some non-geographic entities), so we just check mobile.\n      return checkNumberLengthForType(nationalNumber, 'MOBILE', metadata);\n    }\n\n    var mobile_type = metadata.type('MOBILE');\n\n    if (mobile_type) {\n      // Merge the mobile data in if there was any. \"Concat\" creates a new\n      // array, it doesn't edit possible_lengths in place, so we don't need a copy.\n      // Note that when adding the possible lengths from mobile, we have\n      // to again check they aren't empty since if they are this indicates\n      // they are the same as the general desc and should be obtained from there.\n      possible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths()); // The current list is sorted; we need to merge in the new list and\n      // re-sort (duplicates are okay). Sorting isn't so expensive because\n      // the lists are very small.\n      // if (local_lengths) {\n      // \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\n      // } else {\n      // \tlocal_lengths = mobile_type.possibleLengthsLocal()\n      // }\n    }\n  } // If the type doesn't exist then return 'INVALID_LENGTH'.\n  else if (type && !type_info) {\n    return 'INVALID_LENGTH';\n  }\n\n  var actual_length = nationalNumber.length; // In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\n  // // This is safe because there is never an overlap beween the possible lengths\n  // // and the local-only lengths; this is checked at build time.\n  // if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\n  // {\n  // \treturn 'IS_POSSIBLE_LOCAL_ONLY'\n  // }\n\n  var minimum_length = possible_lengths[0];\n\n  if (minimum_length === actual_length) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (minimum_length > actual_length) {\n    return 'TOO_SHORT';\n  }\n\n  if (possible_lengths[possible_lengths.length - 1] < actual_length) {\n    return 'TOO_LONG';\n  } // We skip the first element since we've already checked it.\n\n\n  return possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';\n}\n//# sourceMappingURL=checkNumberLength.js.map","import Metadata from './metadata.js';\nimport checkNumberLength from './helpers/checkNumberLength.js';\nexport default function isPossiblePhoneNumber(input, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (options.v2) {\n    if (!input.countryCallingCode) {\n      throw new Error('Invalid phone number object passed');\n    }\n\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else {\n    if (!input.phone) {\n      return false;\n    }\n\n    if (input.country) {\n      if (!metadata.hasCountry(input.country)) {\n        throw new Error(\"Unknown country: \".concat(input.country));\n      }\n\n      metadata.country(input.country);\n    } else {\n      if (!input.countryCallingCode) {\n        throw new Error('Invalid phone number object passed');\n      }\n\n      metadata.selectNumberingPlan(input.countryCallingCode);\n    }\n  } // Old metadata (< 1.0.18) had no \"possible length\" data.\n\n\n  if (metadata.possibleLengths()) {\n    return isPossibleNumber(input.phone || input.nationalNumber, metadata);\n  } else {\n    // There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\n    // were missing for \"non-geographical\" numbering plans.\n    // Just assume the number is possible in such cases:\n    // it's unlikely that anyone generated their custom metadata\n    // in that short period of time (one day).\n    // This code can be removed in some future major version update.\n    if (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\n      // \"Non-geographic entities\" did't have `possibleLengths`\n      // due to a bug in metadata generation process.\n      return true;\n    } else {\n      throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n    }\n  }\n}\nexport function isPossibleNumber(nationalNumber, metadata) {\n  //, isInternational) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'IS_POSSIBLE':\n      return true;\n    // This library ignores \"local-only\" phone numbers (for simplicity).\n    // See the readme for more info on what are \"local-only\" phone numbers.\n    // case 'IS_POSSIBLE_LOCAL_ONLY':\n    // \treturn !isInternational\n\n    default:\n      return false;\n  }\n}\n//# sourceMappingURL=isPossibleNumber_.js.map","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport isViablePhoneNumber from './isViablePhoneNumber.js'; // https://www.ietf.org/rfc/rfc3966.txt\n\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\nexport function parseRFC3966(text) {\n  var number;\n  var ext; // Replace \"tel:\" with \"tel=\" for parsing convenience.\n\n  text = text.replace(/^tel:/, 'tel=');\n\n  for (var _iterator = _createForOfIteratorHelperLoose(text.split(';')), _step; !(_step = _iterator()).done;) {\n    var part = _step.value;\n\n    var _part$split = part.split('='),\n        _part$split2 = _slicedToArray(_part$split, 2),\n        name = _part$split2[0],\n        value = _part$split2[1];\n\n    switch (name) {\n      case 'tel':\n        number = value;\n        break;\n\n      case 'ext':\n        ext = value;\n        break;\n\n      case 'phone-context':\n        // Only \"country contexts\" are supported.\n        // \"Domain contexts\" are ignored.\n        if (value[0] === '+') {\n          number = value + number;\n        }\n\n        break;\n    }\n  } // If the phone number is not viable, then abort.\n\n\n  if (!isViablePhoneNumber(number)) {\n    return {};\n  }\n\n  var result = {\n    number: number\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\n\nexport function formatRFC3966(_ref) {\n  var number = _ref.number,\n      ext = _ref.ext;\n\n  if (!number) {\n    return '';\n  }\n\n  if (number[0] !== '+') {\n    throw new Error(\"\\\"formatRFC3966()\\\" expects \\\"number\\\" to be in E.164 format.\");\n  }\n\n  return \"tel:\".concat(number).concat(ext ? ';ext=' + ext : '');\n}\n//# sourceMappingURL=RFC3966.js.map","/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\nexport default function matchesEntirely(text, regular_expression) {\n  // If assigning the `''` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  text = text || '';\n  return new RegExp('^(?:' + regular_expression + ')$').test(text);\n}\n//# sourceMappingURL=matchesEntirely.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nvar NON_FIXED_LINE_PHONE_TYPES = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL']; // Finds out national phone number type (fixed line, mobile, etc)\n\nexport default function getNumberType(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {}; // When `parse()` returned `{}`\n  // meaning that the phone number is not a valid one.\n\n  if (!input.country) {\n    return;\n  }\n\n  metadata = new Metadata(metadata);\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode);\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // The following is copy-pasted from the original function:\n  // https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n  // Is this national number even valid for this country\n\n  if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\n    return;\n  } // Is it fixed line number\n\n\n  if (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\n    // Because duplicate regular expressions are removed\n    // to reduce metadata size, if \"mobile\" pattern is \"\"\n    // then it means it was removed due to being a duplicate of the fixed-line pattern.\n    //\n    if (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\n    // For example, for \"US\" country.\n    // Old metadata (< `1.0.18`) had a specific \"types\" data structure\n    // that happened to be `undefined` for `MOBILE` in that case.\n    // Newer metadata (>= `1.0.18`) has another data structure that is\n    // not `undefined` for `MOBILE` in that case (it's just an empty array).\n    // So this `if` is just for backwards compatibility with old metadata.\n\n\n    if (!metadata.type('MOBILE')) {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // Check if the number happens to qualify as both fixed line and mobile.\n    // (no such country in the minimal metadata set)\n\n    /* istanbul ignore if */\n\n\n    if (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\n      return 'FIXED_LINE_OR_MOBILE';\n    }\n\n    return 'FIXED_LINE';\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose(NON_FIXED_LINE_PHONE_TYPES), _step; !(_step = _iterator()).done;) {\n    var type = _step.value;\n\n    if (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\n      return type;\n    }\n  }\n}\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\n  type = metadata.type(type);\n\n  if (!type || !type.pattern()) {\n    return false;\n  } // Check if any possible number lengths are present;\n  // if so, we use them to avoid checking\n  // the validation pattern if they don't match.\n  // If they are absent, this means they match\n  // the general description, which we have\n  // already checked before a specific number type.\n\n\n  if (type.possibleLengths() && type.possibleLengths().indexOf(nationalNumber.length) < 0) {\n    return false;\n  }\n\n  return matchesEntirely(nationalNumber, type.pattern());\n}\n//# sourceMappingURL=getNumberType.js.map","import Metadata from './metadata.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport getNumberType from './helpers/getNumberType.js';\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\n\nexport default function isValidNumber(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata); // This is just to support `isValidNumber({})`\n  // for cases when `parseNumber()` returns `{}`.\n\n  if (!input.country) {\n    return false;\n  }\n\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode); // By default, countries only have type regexps when it's required for\n  // distinguishing different countries having the same `countryCallingCode`.\n\n  if (metadata.hasTypes()) {\n    return getNumberType(input, options, metadata.metadata) !== undefined;\n  } // If there are no type regexps for this country in metadata then use\n  // `nationalNumberPattern` as a \"better than nothing\" replacement.\n\n\n  var national_number = options.v2 ? input.nationalNumber : input.phone;\n  return matchesEntirely(national_number, metadata.nationalNumberPattern());\n}\n//# sourceMappingURL=validate_.js.map","import Metadata from '../metadata.js';\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\n\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  var possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return [];\n  }\n\n  return possibleCountries.filter(function (country) {\n    return couldNationalNumberBelongToCountry(nationalNumber, country, metadata);\n  });\n}\n\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  _metadata.selectNumberingPlan(country);\n\n  if (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=getPossibleCountriesForNumber.js.map","import { VALID_PUNCTUATION } from '../constants.js'; // Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\n//\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\n//\n// \"The country calling code for all countries participating in the NANP is 1.\n// In international format, an NANP number should be listed as +1 301 555 01 00,\n// where 301 is an area code (Maryland).\"\n//\n// I personally prefer the international format without any punctuation.\n// For example, brackets are remnants of the old age, meaning that the\n// phone number part in brackets (so called \"area code\") can be omitted\n// if dialing within the same \"area\".\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\n// He has a couple of seconds to memorize that number until it passes by.\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\n// but with hyphens instead of spaces the grouping is more explicit.\n// I personally think that hyphens introduce visual clutter,\n// so I prefer replacing them with spaces in international numbers.\n// In the modern age all output is done on displays where spaces are clearly distinguishable\n// so hyphens can be safely replaced with spaces without losing any legibility.\n//\n\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\n  return formattedNumber.replace(new RegExp(\"[\".concat(VALID_PUNCTUATION, \"]+\"), 'g'), ' ').trim();\n}\n//# sourceMappingURL=applyInternationalSeparatorStyle.js.map","import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'; // This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly. Therefore, we use `\\d`, so that the first\n// group actually used in the pattern will be matched.\n\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\nexport default function formatNationalNumberUsingFormat(number, format, _ref) {\n  var useInternationalFormat = _ref.useInternationalFormat,\n      withNationalPrefix = _ref.withNationalPrefix,\n      carrierCode = _ref.carrierCode,\n      metadata = _ref.metadata;\n  var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : // This library doesn't use `domestic_carrier_code_formatting_rule`,\n  // because that one is only used when formatting phone numbers\n  // for dialing from a mobile phone, and this is not a dialing library.\n  // carrierCode && format.domesticCarrierCodeFormattingRule()\n  // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n  // \t// Then, replace the $FG in the formatting rule with the first group\n  // \t// and the carrier code combined in the appropriate way.\n  // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n  // \t: (\n  // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n  // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n  // \t\t\t: format.format()\n  // \t)\n  withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());\n\n  if (useInternationalFormat) {\n    return applyInternationalSeparatorStyle(formattedNumber);\n  }\n\n  return formattedNumber;\n}\n//# sourceMappingURL=formatNationalNumberUsingFormat.js.map","import Metadata from '../metadata.js';\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\n\nvar SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/; // For regions that have multiple IDD prefixes\n// a preferred IDD prefix is returned.\n\nexport default function getIddPrefix(country, callingCode, metadata) {\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n\n  if (countryMetadata.defaultIDDPrefix()) {\n    return countryMetadata.defaultIDDPrefix();\n  }\n\n  if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\n    return countryMetadata.IDDPrefix();\n  }\n}\n//# sourceMappingURL=getIddPrefix.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js';\nimport Metadata, { getCountryCallingCode } from './metadata.js';\nimport getIddPrefix from './helpers/getIddPrefix.js';\nimport { formatRFC3966 } from './helpers/RFC3966.js';\nvar DEFAULT_OPTIONS = {\n  formatExtension: function formatExtension(formattedNumber, extension, metadata) {\n    return \"\".concat(formattedNumber).concat(metadata.ext()).concat(extension);\n  }\n}; // Formats a phone number\n//\n// Example use cases:\n//\n// ```js\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL')\n// formatNumber('8005553535', 'RU', 'INTERNATIONAL', metadata)\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL')\n// formatNumber({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', metadata)\n// formatNumber('+78005553535', 'NATIONAL')\n// formatNumber('+78005553535', 'NATIONAL', metadata)\n// ```\n//\n\nexport default function formatNumber(input, format, options, metadata) {\n  // Apply default options.\n  if (options) {\n    options = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n  } else {\n    options = DEFAULT_OPTIONS;\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (input.country && input.country !== '001') {\n    // Validate `input.country`.\n    if (!metadata.hasCountry(input.country)) {\n      throw new Error(\"Unknown country: \".concat(input.country));\n    }\n\n    metadata.country(input.country);\n  } else if (input.countryCallingCode) {\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else return input.phone || '';\n\n  var countryCallingCode = metadata.countryCallingCode();\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // This variable should have been declared inside `case`s\n  // but Babel has a bug and it says \"duplicate variable declaration\".\n\n  var number;\n\n  switch (format) {\n    case 'NATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return '';\n      }\n\n      number = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'INTERNATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return \"+\".concat(countryCallingCode);\n      }\n\n      number = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options);\n      number = \"+\".concat(countryCallingCode, \" \").concat(number);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'E.164':\n      // `E.164` doesn't define \"phone number extensions\".\n      return \"+\".concat(countryCallingCode).concat(nationalNumber);\n\n    case 'RFC3966':\n      return formatRFC3966({\n        number: \"+\".concat(countryCallingCode).concat(nationalNumber),\n        ext: input.ext\n      });\n    // For reference, here's Google's IDD formatter:\n    // https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\n    // Not saying that this IDD formatter replicates it 1:1, but it seems to work.\n    // Who would even need to format phone numbers in IDD format anyway?\n\n    case 'IDD':\n      if (!options.fromCountry) {\n        return; // throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n      }\n\n      var formattedNumber = formatIDD(nationalNumber, input.carrierCode, countryCallingCode, options.fromCountry, metadata);\n      return addExtension(formattedNumber, input.ext, metadata, options.formatExtension);\n\n    default:\n      throw new Error(\"Unknown \\\"format\\\" argument passed to \\\"formatNumber()\\\": \\\"\".concat(format, \"\\\"\"));\n  }\n}\n\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\n  var format = chooseFormatForNumber(metadata.formats(), number);\n\n  if (!format) {\n    return number;\n  }\n\n  return formatNationalNumberUsingFormat(number, format, {\n    useInternationalFormat: formatAs === 'INTERNATIONAL',\n    withNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && options && options.nationalPrefix === false ? false : true,\n    carrierCode: carrierCode,\n    metadata: metadata\n  });\n}\n\nfunction chooseFormatForNumber(availableFormats, nationalNnumber) {\n  for (var _iterator = _createForOfIteratorHelperLoose(availableFormats), _step; !(_step = _iterator()).done;) {\n    var format = _step.value;\n\n    // Validate leading digits.\n    // The test case for \"else path\" could be found by searching for\n    // \"format.leadingDigitsPatterns().length === 0\".\n    if (format.leadingDigitsPatterns().length > 0) {\n      // The last leading_digits_pattern is used here, as it is the most detailed\n      var lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]; // If leading digits don't match then move on to the next phone number format\n\n      if (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\n        continue;\n      }\n    } // Check that the national number matches the phone number format regular expression\n\n\n    if (matchesEntirely(nationalNnumber, format.pattern())) {\n      return format;\n    }\n  }\n}\n\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\n  return ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber;\n}\n\nfunction formatIDD(nationalNumber, carrierCode, countryCallingCode, fromCountry, metadata) {\n  var fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata); // When calling within the same country calling code.\n\n  if (fromCountryCallingCode === countryCallingCode) {\n    var formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata); // For NANPA regions, return the national format for these regions\n    // but prefix it with the country calling code.\n\n    if (countryCallingCode === '1') {\n      return countryCallingCode + ' ' + formattedNumber;\n    } // If regions share a country calling code, the country calling code need\n    // not be dialled. This also applies when dialling within a region, so this\n    // if clause covers both these cases. Technically this is the case for\n    // dialling from La Reunion to other overseas departments of France (French\n    // Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n    // this edge case for now and for those cases return the version including\n    // country calling code. Details here:\n    // http://www.petitfute.com/voyage/225-info-pratiques-reunion\n    //\n\n\n    return formattedNumber;\n  }\n\n  var iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata);\n\n  if (iddPrefix) {\n    return \"\".concat(iddPrefix, \" \").concat(countryCallingCode, \" \").concat(formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata));\n  }\n}\n//# sourceMappingURL=format_.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport Metadata from './metadata.js';\nimport isPossibleNumber from './isPossibleNumber_.js';\nimport isValidNumber from './validate_.js';\nimport isValidNumberForRegion from './isValidNumberForRegion_.js';\nimport getNumberType from './helpers/getNumberType.js';\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js';\nimport formatNumber from './format_.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar PhoneNumber = /*#__PURE__*/function () {\n  function PhoneNumber(countryCallingCode, nationalNumber, metadata) {\n    _classCallCheck(this, PhoneNumber);\n\n    if (!countryCallingCode) {\n      throw new TypeError('`country` or `countryCallingCode` not passed');\n    }\n\n    if (!nationalNumber) {\n      throw new TypeError('`nationalNumber` not passed');\n    }\n\n    if (!metadata) {\n      throw new TypeError('`metadata` not passed');\n    }\n\n    var _metadata = new Metadata(metadata); // If country code is passed then derive `countryCallingCode` from it.\n    // Also store the country code as `.country`.\n\n\n    if (isCountryCode(countryCallingCode)) {\n      this.country = countryCallingCode;\n\n      _metadata.country(countryCallingCode);\n\n      countryCallingCode = _metadata.countryCallingCode();\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (_metadata.isNonGeographicCallingCode(countryCallingCode)) {\n          this.country = '001';\n        }\n      }\n    }\n\n    this.countryCallingCode = countryCallingCode;\n    this.nationalNumber = nationalNumber;\n    this.number = '+' + this.countryCallingCode + this.nationalNumber;\n    this.metadata = metadata;\n  }\n\n  _createClass(PhoneNumber, [{\n    key: \"setExt\",\n    value: function setExt(ext) {\n      this.ext = ext;\n    }\n  }, {\n    key: \"getPossibleCountries\",\n    value: function getPossibleCountries() {\n      if (this.country) {\n        return [this.country];\n      }\n\n      return getPossibleCountriesForNumber(this.countryCallingCode, this.nationalNumber, this.metadata);\n    }\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      return isPossibleNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return isValidNumber(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function isNonGeographic() {\n      var metadata = new Metadata(this.metadata);\n      return metadata.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(phoneNumber) {\n      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;\n    } // // Is just an alias for `this.isValid() && this.country === country`.\n    // // https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\n    // isValidForRegion(country) {\n    // \treturn isValidNumberForRegion(this, country, { v2: true }, this.metadata)\n    // }\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return getNumberType(this, {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format, options) {\n      return formatNumber(this, _format, options ? _objectSpread(_objectSpread({}, options), {}, {\n        v2: true\n      }) : {\n        v2: true\n      }, this.metadata);\n    }\n  }, {\n    key: \"formatNational\",\n    value: function formatNational(options) {\n      return this.format('NATIONAL', options);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function formatInternational(options) {\n      return this.format('INTERNATIONAL', options);\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI(options) {\n      return this.format('RFC3966', options);\n    }\n  }]);\n\n  return PhoneNumber;\n}();\n\nexport { PhoneNumber as default };\n\nvar isCountryCode = function isCountryCode(value) {\n  return /^[A-Z]{2}$/.test(value);\n};\n//# sourceMappingURL=PhoneNumber.js.map","import Metadata from '../metadata.js';\nimport { VALID_DIGITS } from '../constants.js';\nvar CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])');\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\n  if (!country) {\n    return;\n  } // Check if the number is IDD-prefixed.\n\n\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n  var IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());\n\n  if (number.search(IDDPrefixPattern) !== 0) {\n    return;\n  } // Strip IDD prefix.\n\n\n  number = number.slice(number.match(IDDPrefixPattern)[0].length); // If there're any digits after an IDD prefix,\n  // then those digits are a country calling code.\n  // Since no country code starts with a `0`,\n  // the code below validates that the next digit (if present) is not `0`.\n\n  var matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);\n\n  if (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\n    if (matchedGroups[1] === '0') {\n      return;\n    }\n  }\n\n  return number;\n}\n//# sourceMappingURL=stripIddPrefix.js.map","/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\n  if (number && metadata.numberingPlan.nationalPrefixForParsing()) {\n    // See METADATA.md for the description of\n    // `national_prefix_for_parsing` and `national_prefix_transform_rule`.\n    // Attempt to parse the first digits as a national prefix.\n    var prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')');\n    var prefixMatch = prefixPattern.exec(number);\n\n    if (prefixMatch) {\n      var nationalNumber;\n      var carrierCode; // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\n      // If a `national_prefix_for_parsing` has any \"capturing groups\"\n      // then it means that the national (significant) number is equal to\n      // those \"capturing groups\" transformed via `national_prefix_transform_rule`,\n      // and nothing could be said about the actual national prefix:\n      // what is it and was it even there.\n      // If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\n      // then everything it matches is a national prefix.\n      // To determine whether `national_prefix_for_parsing` matched any\n      // \"capturing groups\", the value of the result of calling `.exec()`\n      // is looked at, and if it has non-undefined values where there're\n      // \"capturing groups\" in the regular expression, then it means\n      // that \"capturing groups\" have been matched.\n      // It's not possible to tell whether there'll be any \"capturing gropus\"\n      // before the matching process, because a `national_prefix_for_parsing`\n      // could exhibit both behaviors.\n\n      var capturedGroupsCount = prefixMatch.length - 1;\n      var hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount];\n\n      if (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\n        nationalNumber = number.replace(prefixPattern, metadata.nationalPrefixTransformRule()); // If there's more than one captured group,\n        // then carrier code is the second one.\n\n        if (capturedGroupsCount > 1) {\n          carrierCode = prefixMatch[1];\n        }\n      } // If there're no \"capturing groups\",\n      // or if there're \"capturing groups\" but no\n      // `national_prefix_transform_rule`,\n      // then just strip the national prefix from the number,\n      // and possibly a carrier code.\n      // Seems like there could be more.\n      else {\n        // `prefixBeforeNationalNumber` is the whole substring matched by\n        // the `national_prefix_for_parsing` regular expression.\n        // There seem to be no guarantees that it's just a national prefix.\n        // For example, if there's a carrier code, it's gonna be a\n        // part of `prefixBeforeNationalNumber` too.\n        var prefixBeforeNationalNumber = prefixMatch[0];\n        nationalNumber = number.slice(prefixBeforeNationalNumber.length); // If there's at least one captured group,\n        // then carrier code is the first one.\n\n        if (hasCapturedGroups) {\n          carrierCode = prefixMatch[1];\n        }\n      } // Tries to guess whether a national prefix was present in the input.\n      // This is not something copy-pasted from Google's library:\n      // they don't seem to have an equivalent for that.\n      // So this isn't an \"officially approved\" way of doing something like that.\n      // But since there seems no other existing method, this library uses it.\n\n\n      var nationalPrefix;\n\n      if (hasCapturedGroups) {\n        var possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1]);\n        var possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup); // Example: an Argentinian (AR) phone number `0111523456789`.\n        // `prefixMatch[0]` is `01115`, and `$1` is `11`,\n        // and the rest of the phone number is `23456789`.\n        // The national number is transformed via `9$1` to `91123456789`.\n        // National prefix `0` is detected being present at the start.\n        // if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\n\n        if (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\n          nationalPrefix = metadata.numberingPlan.nationalPrefix();\n        }\n      } else {\n        nationalPrefix = prefixMatch[0];\n      }\n\n      return {\n        nationalNumber: nationalNumber,\n        nationalPrefix: nationalPrefix,\n        carrierCode: carrierCode\n      };\n    }\n  }\n\n  return {\n    nationalNumber: number\n  };\n}\n//# sourceMappingURL=extractNationalNumberFromPossiblyIncompleteNumber.js.map","import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport checkNumberLength from './checkNumberLength.js';\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\n\nexport default function extractNationalNumber(number, metadata) {\n  // Parsing national prefixes and carrier codes\n  // is only required for local phone numbers\n  // but some people don't understand that\n  // and sometimes write international phone numbers\n  // with national prefixes (or maybe even carrier codes).\n  // http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\n  // Google's original library forgives such mistakes\n  // and so does this library, because it has been requested:\n  // https://github.com/catamphetamine/libphonenumber-js/issues/127\n  var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(number, metadata),\n      carrierCode = _extractNationalNumbe.carrierCode,\n      nationalNumber = _extractNationalNumbe.nationalNumber;\n\n  if (nationalNumber !== number) {\n    if (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\n      // Don't strip the national prefix.\n      return {\n        nationalNumber: number\n      };\n    } // Check the national (significant) number length after extracting national prefix and carrier code.\n    // Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\n\n\n    if (metadata.possibleLengths()) {\n      // The number remaining after stripping the national prefix and carrier code\n      // should be long enough to have a possible length for the country.\n      // Otherwise, don't strip the national prefix and carrier code,\n      // since the original number could be a valid number.\n      // This check has been copy-pasted \"as is\" from Google's original library:\n      // https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\n      // It doesn't check for the \"possibility\" of the original `number`.\n      // I guess it's fine not checking that one. It works as is anyway.\n      if (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\n        // Don't strip the national prefix.\n        return {\n          nationalNumber: number\n        };\n      }\n    }\n  }\n\n  return {\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n} // In some countries, the same digit could be a national prefix\n// or a leading digit of a valid phone number.\n// For example, in Russia, national prefix is `8`,\n// and also `800 555 35 35` is a valid number\n// in which `8` is not a national prefix, but the first digit\n// of a national (significant) number.\n// Same's with Belarus:\n// `82004910060` is a valid national (significant) number,\n// but `2004910060` is not.\n// To support such cases (to prevent the code from always stripping\n// national prefix), a condition is imposed: a national prefix\n// is not extracted when the original number is \"viable\" and the\n// resultant number is not, a \"viable\" national number being the one\n// that matches `national_number_pattern`.\n\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\n  // The equivalent in Google's code is:\n  // https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\n  if (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) && !matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\n    return false;\n  } // This \"is possible\" national number (length) check has been commented out\n  // because it's superceded by the (effectively) same check done in the\n  // `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\n  // In other words, why run the same check twice if it could only be run once.\n  // // Check the national (significant) number length after extracting national prefix and carrier code.\n  // // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\n  // // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\n  // if (metadata.possibleLengths()) {\n  // \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\n  // \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\n  // \t\treturn false\n  // \t}\n  // }\n\n\n  return true;\n}\n\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'TOO_SHORT':\n    case 'INVALID_LENGTH':\n      // This library ignores \"local-only\" phone numbers (for simplicity).\n      // See the readme for more info on what are \"local-only\" phone numbers.\n      // case 'IS_POSSIBLE_LOCAL_ONLY':\n      return false;\n\n    default:\n      return true;\n  }\n}\n//# sourceMappingURL=extractNationalNumber.js.map","import Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport extractNationalNumber from './extractNationalNumber.js';\nimport checkNumberLength from './checkNumberLength.js';\nimport getCountryCallingCode from '../getCountryCallingCode.js';\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\n\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata) {\n  var countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode;\n\n  if (number.indexOf(countryCallingCode) === 0) {\n    metadata = new Metadata(metadata);\n    metadata.selectNumberingPlan(country, callingCode);\n    var possibleShorterNumber = number.slice(countryCallingCode.length);\n\n    var _extractNationalNumbe = extractNationalNumber(possibleShorterNumber, metadata),\n        possibleShorterNationalNumber = _extractNationalNumbe.nationalNumber;\n\n    var _extractNationalNumbe2 = extractNationalNumber(number, metadata),\n        nationalNumber = _extractNationalNumbe2.nationalNumber; // If the number was not valid before but is valid now,\n    // or if it was too long before, we consider the number\n    // with the country calling code stripped to be a better result\n    // and keep that instead.\n    // For example, in Germany (+49), `49` is a valid area code,\n    // so if a number starts with `49`, it could be both a valid\n    // national German number or an international number without\n    // a leading `+`.\n\n\n    if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) && matchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern()) || checkNumberLength(nationalNumber, metadata) === 'TOO_LONG') {\n      return {\n        countryCallingCode: countryCallingCode,\n        number: possibleShorterNumber\n      };\n    }\n  }\n\n  return {\n    number: number\n  };\n}\n//# sourceMappingURL=extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js.map","import stripIddPrefix from './stripIddPrefix.js';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js';\nimport Metadata from '../metadata.js';\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js';\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\n\nexport default function extractCountryCallingCode(number, country, callingCode, metadata) {\n  if (!number) {\n    return {};\n  } // If this is not an international phone number,\n  // then either extract an \"IDD\" prefix, or extract a\n  // country calling code from a number by autocorrecting it\n  // by prepending a leading `+` in cases when it starts\n  // with the country calling code.\n  // https://wikitravel.org/en/International_dialling_prefix\n  // https://github.com/catamphetamine/libphonenumber-js/issues/376\n\n\n  if (number[0] !== '+') {\n    // Convert an \"out-of-country\" dialing phone number\n    // to a proper international phone number.\n    var numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata); // If an IDD prefix was stripped then\n    // convert the number to international one\n    // for subsequent parsing.\n\n    if (numberWithoutIDD && numberWithoutIDD !== number) {\n      number = '+' + numberWithoutIDD;\n    } else {\n      // Check to see if the number starts with the country calling code\n      // for the default country. If so, we remove the country calling code,\n      // and do some checks on the validity of the number before and after.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/376\n      if (country || callingCode) {\n        var _extractCountryCallin = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata),\n            countryCallingCode = _extractCountryCallin.countryCallingCode,\n            shorterNumber = _extractCountryCallin.number;\n\n        if (countryCallingCode) {\n          return {\n            countryCallingCode: countryCallingCode,\n            number: shorterNumber\n          };\n        }\n      }\n\n      return {\n        number: number\n      };\n    }\n  } // Fast abortion: country codes do not begin with a '0'\n\n\n  if (number[1] === '0') {\n    return {};\n  }\n\n  metadata = new Metadata(metadata); // The thing with country phone codes\n  // is that they are orthogonal to each other\n  // i.e. there's no such country phone code A\n  // for which country phone code B exists\n  // where B starts with A.\n  // Therefore, while scanning digits,\n  // if a valid country code is found,\n  // that means that it is the country code.\n  //\n\n  var i = 2;\n\n  while (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n    var _countryCallingCode = number.slice(1, i);\n\n    if (metadata.hasCallingCode(_countryCallingCode)) {\n      metadata.selectNumberingPlan(_countryCallingCode);\n      return {\n        countryCallingCode: _countryCallingCode,\n        number: number.slice(i)\n      };\n    }\n\n    i++;\n  }\n\n  return {};\n}\n//# sourceMappingURL=extractCountryCallingCode.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport getNumberType from './getNumberType.js';\nexport default function getCountryByNationalNumber(possibleCountries, nationalPhoneNumber, metadata) {\n  // Re-create `metadata` because it will be selecting a `country`.\n  metadata = new Metadata(metadata);\n\n  for (var _iterator = _createForOfIteratorHelperLoose(possibleCountries), _step; !(_step = _iterator()).done;) {\n    var country = _step.value;\n    metadata.country(country); // \"Leading digits\" patterns are only defined for about 20% of all countries.\n    // By definition, matching \"leading digits\" is a sufficient but not a necessary\n    // condition for a phone number to belong to a country.\n    // The point of \"leading digits\" check is that it's the fastest one to get a match.\n    // https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\n\n    if (metadata.leadingDigits()) {\n      if (nationalPhoneNumber && nationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\n        return country;\n      }\n    } // Else perform full validation with all of those\n    // fixed-line/mobile/etc regular expressions.\n    else if (getNumberType({\n      phone: nationalPhoneNumber,\n      country: country\n    }, undefined, metadata.metadata)) {\n      return country;\n    }\n  }\n}\n//# sourceMappingURL=getCountryByNationalNumber.js.map","import getCountryByNationalNumber from './getCountryByNationalNumber.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\nexport default function getCountryByCallingCode(callingCode, nationalPhoneNumber, metadata) {\n  /* istanbul ignore if */\n  if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n    if (metadata.isNonGeographicCallingCode(callingCode)) {\n      return '001';\n    }\n  }\n\n  var possibleCountries = metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return;\n  } // If there's just one country corresponding to the country code,\n  // then just return it, without further phone number digits validation.\n\n\n  if (possibleCountries.length === 1) {\n    return possibleCountries[0];\n  }\n\n  return getCountryByNationalNumber(possibleCountries, nationalPhoneNumber, metadata.metadata);\n}\n//# sourceMappingURL=getCountryByCallingCode.js.map","// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport { VALID_DIGITS, PLUS_CHARS, MIN_LENGTH_FOR_NSN, MAX_LENGTH_FOR_NSN } from './constants.js';\nimport ParseError from './ParseError.js';\nimport Metadata from './metadata.js';\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js';\nimport extractExtension from './helpers/extension/extractExtension.js';\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js';\nimport getCountryCallingCode from './getCountryCallingCode.js';\nimport { isPossibleNumber } from './isPossibleNumber_.js';\nimport { parseRFC3966 } from './helpers/RFC3966.js';\nimport PhoneNumber from './PhoneNumber.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js';\nimport extractNationalNumber from './helpers/extractNationalNumber.js';\nimport stripIddPrefix from './helpers/stripIddPrefix.js';\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'; // We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\n\nvar MAX_INPUT_STRING_LENGTH = 250; // This consists of the plus symbol, digits, and arabic-indic digits.\n\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']'); // Regular expression of trailing characters that we want to remove.\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\n\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$');\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false; // Examples:\n//\n// ```js\n// parse('8 (800) 555-35-35', 'RU')\n// parse('8 (800) 555-35-35', 'RU', metadata)\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n// parse('+7 800 555 35 35')\n// parse('+7 800 555 35 35', metadata)\n// ```\n//\n\nexport default function parse(text, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata); // Validate `defaultCountry`.\n\n  if (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    throw new Error(\"Unknown country: \".concat(options.defaultCountry));\n  } // Parse the phone number.\n\n\n  var _parseInput = parseInput(text, options.v2, options.extract),\n      formattedPhoneNumber = _parseInput.number,\n      ext = _parseInput.ext,\n      error = _parseInput.error; // If the phone number is not viable then return nothing.\n\n\n  if (!formattedPhoneNumber) {\n    if (options.v2) {\n      if (error === 'TOO_SHORT') {\n        throw new ParseError('TOO_SHORT');\n      }\n\n      throw new ParseError('NOT_A_NUMBER');\n    }\n\n    return {};\n  }\n\n  var _parsePhoneNumber = parsePhoneNumber(formattedPhoneNumber, options.defaultCountry, options.defaultCallingCode, metadata),\n      country = _parsePhoneNumber.country,\n      nationalNumber = _parsePhoneNumber.nationalNumber,\n      countryCallingCode = _parsePhoneNumber.countryCallingCode,\n      carrierCode = _parsePhoneNumber.carrierCode;\n\n  if (!metadata.hasSelectedNumberingPlan()) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    return {};\n  } // Validate national (significant) number length.\n\n\n  if (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\n    // Won't throw here because the regexp already demands length > 1.\n\n    /* istanbul ignore if */\n    if (options.v2) {\n      throw new ParseError('TOO_SHORT');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  } // Validate national (significant) number length.\n  //\n  // A sidenote:\n  //\n  // They say that sometimes national (significant) numbers\n  // can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n  // https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n  // Such numbers will just be discarded.\n  //\n\n\n  if (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\n    if (options.v2) {\n      throw new ParseError('TOO_LONG');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  }\n\n  if (options.v2) {\n    var phoneNumber = new PhoneNumber(countryCallingCode, nationalNumber, metadata.metadata);\n\n    if (country) {\n      phoneNumber.country = country;\n    }\n\n    if (carrierCode) {\n      phoneNumber.carrierCode = carrierCode;\n    }\n\n    if (ext) {\n      phoneNumber.ext = ext;\n    }\n\n    return phoneNumber;\n  } // Check if national phone number pattern matches the number.\n  // National number pattern is different for each country,\n  // even for those ones which are part of the \"NANPA\" group.\n\n\n  var valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ? matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) : false;\n\n  if (!options.extended) {\n    return valid ? result(country, nationalNumber, ext) : {};\n  } // isInternational: countryCallingCode !== undefined\n\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    carrierCode: carrierCode,\n    valid: valid,\n    possible: valid ? true : options.extended === true && metadata.possibleLengths() && isPossibleNumber(nationalNumber, metadata) ? true : false,\n    phone: nationalNumber,\n    ext: ext\n  };\n}\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\n\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\n  if (!text) {\n    return;\n  }\n\n  if (text.length > MAX_INPUT_STRING_LENGTH) {\n    if (throwOnError) {\n      throw new ParseError('TOO_LONG');\n    }\n\n    return;\n  }\n\n  if (extract === false) {\n    return text;\n  } // Attempt to extract a possible number from the string passed in\n\n\n  var startsAt = text.search(PHONE_NUMBER_START_PATTERN);\n\n  if (startsAt < 0) {\n    return;\n  }\n\n  return text // Trim everything to the left of the phone number\n  .slice(startsAt) // Remove trailing non-numerical characters\n  .replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\n\nfunction parseInput(text, v2, extract) {\n  // Parse RFC 3966 phone number URI.\n  if (text && text.indexOf('tel:') === 0) {\n    return parseRFC3966(text);\n  }\n\n  var number = extractFormattedPhoneNumber(text, extract, v2); // If the phone number is not viable, then abort.\n\n  if (!number) {\n    return {};\n  }\n\n  if (!isViablePhoneNumber(number)) {\n    if (isViablePhoneNumberStart(number)) {\n      return {\n        error: 'TOO_SHORT'\n      };\n    }\n\n    return {};\n  } // Attempt to parse extension first, since it doesn't require region-specific\n  // data and we want to have the non-normalised number here.\n\n\n  var withExtensionStripped = extractExtension(number);\n\n  if (withExtensionStripped.ext) {\n    return withExtensionStripped;\n  }\n\n  return {\n    number: number\n  };\n}\n/**\r\n * Creates `parse()` result object.\r\n */\n\n\nfunction result(country, nationalNumber, ext) {\n  var result = {\n    country: country,\n    phone: nationalNumber\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\n\n\nfunction parsePhoneNumber(formattedPhoneNumber, defaultCountry, defaultCallingCode, metadata) {\n  // Extract calling code from phone number.\n  var _extractCountryCallin = extractCountryCallingCode(parseIncompletePhoneNumber(formattedPhoneNumber), defaultCountry, defaultCallingCode, metadata.metadata),\n      countryCallingCode = _extractCountryCallin.countryCallingCode,\n      number = _extractCountryCallin.number; // Choose a country by `countryCallingCode`.\n\n\n  var country;\n\n  if (countryCallingCode) {\n    metadata.selectNumberingPlan(countryCallingCode);\n  } // If `formattedPhoneNumber` is in \"national\" format\n  // then `number` is defined and `countryCallingCode` isn't.\n  else if (number && (defaultCountry || defaultCallingCode)) {\n    metadata.selectNumberingPlan(defaultCountry, defaultCallingCode);\n\n    if (defaultCountry) {\n      country = defaultCountry;\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\n          country = '001';\n        }\n      }\n    }\n\n    countryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata);\n  } else return {};\n\n  if (!number) {\n    return {\n      countryCallingCode: countryCallingCode\n    };\n  }\n\n  var _extractNationalNumbe = extractNationalNumber(parseIncompletePhoneNumber(number), metadata),\n      nationalNumber = _extractNationalNumbe.nationalNumber,\n      carrierCode = _extractNationalNumbe.carrierCode; // Sometimes there are several countries\n  // corresponding to the same country phone code\n  // (e.g. NANPA countries all having `1` country phone code).\n  // Therefore, to reliably determine the exact country,\n  // national (significant) number should have been parsed first.\n  //\n  // When `metadata.json` is generated, all \"ambiguous\" country phone codes\n  // get their countries populated with the full set of\n  // \"phone number type\" regular expressions.\n  //\n\n\n  var exactCountry = getCountryByCallingCode(countryCallingCode, nationalNumber, metadata);\n\n  if (exactCountry) {\n    country = exactCountry;\n    /* istanbul ignore if */\n\n    if (exactCountry === '001') {// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\n      // If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\n      // then remove the \"istanbul ignore if\".\n    } else {\n      metadata.country(country);\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n}\n//# sourceMappingURL=parse_.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parseNumber from './parse_.js';\nexport default function parsePhoneNumber(text, options, metadata) {\n  return parseNumber(text, _objectSpread(_objectSpread({}, options), {}, {\n    v2: true\n  }), metadata);\n}\n//# sourceMappingURL=parsePhoneNumber_.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport parsePhoneNumber_ from './parsePhoneNumber_.js';\nexport default function parsePhoneNumber() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return parsePhoneNumber_(text, options, metadata);\n}\nexport function normalizeArguments(args) {\n  var _Array$prototype$slic = Array.prototype.slice.call(args),\n      _Array$prototype$slic2 = _slicedToArray(_Array$prototype$slic, 4),\n      arg_1 = _Array$prototype$slic2[0],\n      arg_2 = _Array$prototype$slic2[1],\n      arg_3 = _Array$prototype$slic2[2],\n      arg_4 = _Array$prototype$slic2[3];\n\n  var text;\n  var options;\n  var metadata; // If the phone number is passed as a string.\n  // `parsePhoneNumber('88005553535', ...)`.\n\n  if (typeof arg_1 === 'string') {\n    text = arg_1;\n  } else throw new TypeError('A text for parsing must be a string.'); // If \"default country\" argument is being passed then move it to `options`.\n  // `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\n\n\n  if (!arg_2 || typeof arg_2 === 'string') {\n    if (arg_4) {\n      options = arg_3;\n      metadata = arg_4;\n    } else {\n      options = undefined;\n      metadata = arg_3;\n    }\n\n    if (arg_2) {\n      options = _objectSpread({\n        defaultCountry: arg_2\n      }, options);\n    }\n  } // `defaultCountry` is not passed.\n  // Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\n  else if (isObject(arg_2)) {\n    if (arg_3) {\n      options = arg_2;\n      metadata = arg_3;\n    } else {\n      metadata = arg_2;\n    }\n  } else throw new Error(\"Invalid second argument: \".concat(arg_2));\n\n  return {\n    text: text,\n    options: options,\n    metadata: metadata\n  };\n} // Otherwise istanbul would show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar isObject = function isObject(_) {\n  return _typeof(_) === 'object';\n};\n//# sourceMappingURL=parsePhoneNumber.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parsePhoneNumber from './parsePhoneNumber_.js';\nimport ParseError from './ParseError.js';\nimport { isSupportedCountry } from './metadata.js';\nexport default function parsePhoneNumberFromString(text, options, metadata) {\n  // Validate `defaultCountry`.\n  if (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\n    options = _objectSpread(_objectSpread({}, options), {}, {\n      defaultCountry: undefined\n    });\n  } // Parse phone number.\n\n\n  try {\n    return parsePhoneNumber(text, options, metadata);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (error instanceof ParseError) {//\n    } else {\n      throw error;\n    }\n  }\n}\n//# sourceMappingURL=parsePhoneNumberFromString_.js.map","import { normalizeArguments } from './parsePhoneNumber.js';\nimport parsePhoneNumberFromString_ from './parsePhoneNumberFromString_.js';\nexport default function parsePhoneNumberFromString() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return parsePhoneNumberFromString_(text, options, metadata);\n}\n//# sourceMappingURL=parsePhoneNumberFromString.js.map","import withMetadataArgument from './withMetadataArgument.js'\r\nimport { parsePhoneNumberFromString as _parsePhoneNumberFromString } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumberFromString() {\r\n\treturn withMetadataArgument(_parsePhoneNumberFromString, arguments)\r\n}","import { parsePhoneNumberFromString } from \"libphonenumber-js\"\nimport { Validator } from \"../Validator\"\nimport { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\n\nexport default class PhoneValidator extends Validator {\n    constructor() {\n        super(\"phone\", \"A phone number\", \"tel\")\n    }\n\n    getFeedback(s: string, requestCountry?: () => string): Translation {\n        if (this.isValid(s, requestCountry)) {\n            return undefined\n        }\n        const tr = Translations.t.validation.phone\n        const generic = tr.feedback\n        if (requestCountry) {\n            const country = requestCountry()\n            if (country) {\n                return tr.feedbackCountry.Subs({ country })\n            }\n        }\n\n        return generic\n    }\n\n    public isValid(str, country: () => string): boolean {\n        if (str === undefined) {\n            return false\n        }\n        if (str.startsWith(\"tel:\")) {\n            str = str.substring(\"tel:\".length)\n        }\n        let countryCode = undefined\n        if (country !== undefined) {\n            countryCode = country()?.toUpperCase()\n        }\n        return parsePhoneNumberFromString(str, countryCode)?.isValid() ?? false\n    }\n\n    public reformat(str, country: () => string) {\n        if (str.startsWith(\"tel:\")) {\n            str = str.substring(\"tel:\".length)\n        }\n        let countryCode = undefined\n        if (country) {\n            countryCode = country()\n        }\n        return parsePhoneNumberFromString(\n            str,\n            countryCode?.toUpperCase() as any\n        )?.formatInternational()\n    }\n}\n","import Combine from \"../../Base/Combine\"\nimport Title from \"../../Base/Title\"\nimport Table from \"../../Base/Table\"\nimport { Validator } from \"../Validator\"\n\nexport default class OpeningHoursValidator extends Validator {\n    constructor() {\n        super(\n            \"opening_hours\",\n            new Combine([\n                \"Has extra elements to easily input when a POI is opened.\",\n                new Title(\"Helper arguments\"),\n                new Table(\n                    [\"name\", \"doc\"],\n                    [\n                        [\n                            \"options\",\n                            new Combine([\n                                \"A JSON-object of type `{ prefix: string, postfix: string }`. \",\n                                new Table(\n                                    [\"subarg\", \"doc\"],\n                                    [\n                                        [\n                                            \"prefix\",\n                                            \"Piece of text that will always be added to the front of the generated opening hours. If the OSM-data does not start with this, it will fail to parse.\",\n                                        ],\n                                        [\n                                            \"postfix\",\n                                            \"Piece of text that will always be added to the end of the generated opening hours\",\n                                        ],\n                                    ]\n                                ),\n                            ]),\n                        ],\n                    ]\n                ),\n                new Title(\"Example usage\"),\n                \"To add a conditional (based on time) access restriction:\\n\\n```\\n\" +\n                    `\n\"freeform\": {\n    \"key\": \"access:conditional\",\n    \"type\": \"opening_hours\",\n    \"helperArgs\": [\n        {\n          \"prefix\":\"no @ (\",\n          \"postfix\":\")\"\n        }\n    ]\n}` +\n                    \"\\n```\\n\\n*Don't forget to pass the prefix and postfix in the rendering as well*: `{opening_hours_table(opening_hours,yes @ &LPARENS, &RPARENS )`\",\n            ])\n        )\n    }\n}\n","import { Validator } from \"../Validator\"\n\nexport default class ColorValidator extends Validator {\n    constructor() {\n        super(\"color\", \"Shows a color picker\")\n    }\n}\n","import { Validator } from \"../Validator\"\nimport { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\n\nexport default class TagKeyValidator extends Validator {\n\n    public readonly isMeta = true\n    constructor() {\n        super(\"key\", \"Validates a key, mostly that no weird characters are used\")\n    }\n\n    getFeedback(key: string, _?: () => string): Translation | undefined {\n        if (key.length > 255) {\n            return Translations.T(\"A `key` should be at most 255 characters\")\n        }\n\n        if (key.length == 0) {\n            return Translations.T(\"A `key` should not be empty\")\n        }\n        const keyRegex = /[a-zA-Z0-9:_]+/\n        if (!key.match(keyRegex)) {\n            return Translations.T(\n                \"A `key` should only have the characters `a-zA-Z0-9`, `:`  or `_`\"\n            )\n        }\n        return undefined\n    }\n\n    isValid(key: string, getCountry?: () => string): boolean {\n        return this.getFeedback(key, getCountry) === undefined\n    }\n}\n","import { Validator } from \"../Validator\"\nimport { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\nimport TagKeyValidator from \"./TagKeyValidator\"\n\n/**\n * Checks that the input conforms `key=value`, where `key` and `value` don't have too much weird characters\n */\nexport default class SimpleTagValidator extends Validator {\n    private static readonly KeyValidator = new TagKeyValidator()\n\n    public readonly isMeta = true\n    constructor() {\n        super(\n            \"simple_tag\",\n            \"A simple tag of the format `key=value` where `key` conforms to a normal key `\"\n        )\n    }\n\n    getFeedback(tag: string, _): Translation | undefined {\n        const parts = tag.split(\"=\")\n        if (parts.length < 2) {\n            return Translations.T(\"A tag should contain a = to separate the 'key' and 'value'\")\n        }\n        if (parts.length > 2) {\n            return Translations.T(\n                \"A tag should contain precisely one `=` to separate the 'key' and 'value', but \" +\n                    (parts.length - 1) +\n                    \" equal signs were found\"\n            )\n        }\n\n        const [key, value] = parts\n        const keyFeedback = SimpleTagValidator.KeyValidator.getFeedback(key, _)\n        if (keyFeedback) {\n            return keyFeedback\n        }\n\n        if (value.length > 255) {\n            return Translations.T(\"A `value should be at most 255 characters\")\n        }\n\n        if (value.length == 0) {\n            return Translations.T(\"A `value should not be empty\")\n        }\n\n        return undefined\n    }\n\n    isValid(tag: string, _): boolean {\n        return this.getFeedback(tag, _) === undefined\n    }\n}\n","import UrlValidator from \"./UrlValidator\"\nimport { Translation } from \"../../i18n/Translation\"\n\nexport default class ImageUrlValidator extends UrlValidator {\n    private static readonly allowedExtensions = [\"jpg\", \"jpeg\", \"svg\", \"png\"]\n    public readonly isMeta = true\n\n    constructor() {\n        super(\n            \"image\",\n            \"Same as the URL-parameter, except that it checks that the URL ends with `.jpg`, `.png` or some other typical image format\"\n        )\n    }\n\n    private static hasValidExternsion(str: string): boolean {\n        str = str.toLowerCase()\n        return ImageUrlValidator.allowedExtensions.some((ext) => str.endsWith(ext))\n    }\n\n    getFeedback(s: string, _?: () => string): Translation | undefined {\n        const superF = super.getFeedback(s, _)\n        if (superF) {\n            return superF\n        }\n        if (!ImageUrlValidator.hasValidExternsion(s)) {\n            return new Translation(\n                \"This URL does not end with one of the allowed extensions. These are: \" +\n                    ImageUrlValidator.allowedExtensions.join(\", \")\n            )\n        }\n        return undefined\n    }\n\n    isValid(str: string): boolean {\n        if (!super.isValid(str)) {\n            return false\n        }\n        return ImageUrlValidator.hasValidExternsion(str)\n    }\n}\n","import { Validator } from \"../Validator\"\n\nexport default class TranslationValidator extends Validator {\n\n    public readonly isMeta = true\n    constructor() {\n        super(\"translation\", \"Makes sure the the string is of format `Record<string, string>` \")\n    }\n\n    isValid(value: string, getCountry?: () => string): boolean {\n        try {\n            JSON.parse(value)\n            return true\n        } catch (e) {\n            return false\n        }\n    }\n}\n","import { Validator } from \"../Validator\"\nimport { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\n\nexport default class FediverseValidator extends Validator {\n    public static readonly usernameAtServer: RegExp = /^@?(\\w+)@((\\w|\\.)+)$/\n\n    constructor() {\n        super(\n            \"fediverse\",\n            \"Validates fediverse addresses and normalizes them into `@username@server`-format\"\n        )\n    }\n\n    /**\n     * Returns an `@username@host`\n     * @param s\n     */\n    reformat(s: string): string {\n        if (!s.startsWith(\"@\")) {\n            s = \"@\" + s\n        }\n        if (s.match(FediverseValidator.usernameAtServer)) {\n            return s\n        }\n        try {\n            const url = new URL(s)\n            const path = url.pathname\n            if (path.match(/^\\/\\w+$/)) {\n                return `@${path.substring(1)}@${url.hostname}`\n            }\n        } catch (e) {\n            // Nothing to do here\n        }\n        return undefined\n    }\n    getFeedback(s: string): Translation | undefined {\n        const match = s.match(FediverseValidator.usernameAtServer)\n        console.log(\"Match:\", match)\n        if (match) {\n            const host = match[2]\n            try {\n                new URL(\"https://\" + host)\n                return undefined\n            } catch (e) {\n                return Translations.t.validation.fediverse.invalidHost.Subs({ host })\n            }\n        }\n        try {\n            const url = new URL(s)\n            const path = url.pathname\n            if (path.match(/^\\/\\w+$/)) {\n                return undefined\n            }\n        } catch (e) {\n            // Nothing to do here\n        }\n        return Translations.t.validation.fediverse.feedback\n    }\n\n    isValid(s): boolean {\n        return this.getFeedback(s) === undefined\n    }\n}\n","import { Validator } from \"../Validator\"\nimport { Translation } from \"../../i18n/Translation\"\nimport licenses from \"../../../assets/generated/license_info.json\"\nimport { Utils } from \"../../../Utils\"\n\nexport default class IconValidator extends Validator {\n    private static allLicenses = new Set(licenses.map((l) => l.path))\n    private static allLicensesArr = Array.from(IconValidator.allLicenses)\n    public static readonly isMeta = true\n    constructor() {\n        super(\"icon\", \"Makes sure that a valid .svg-path is added\")\n    }\n\n    reformat(s: string, _?: () => string): string {\n        return s.trim()\n    }\n\n    getFeedback(s: string, getCountry, sloppy?: boolean): Translation | undefined {\n        s = this.reformat(s)\n        if (!s.startsWith(\"http\")) {\n            if (!IconValidator.allLicenses.has(s)) {\n                const close = sloppy\n                    ? []\n                    : Utils.sortedByLevenshteinDistance(\n                          s.substring(s.lastIndexOf(\"/\")),\n                          IconValidator.allLicensesArr,\n                          (s) => s.substring(s.lastIndexOf(\"/\"))\n                      ).slice(0, 5)\n                return new Translation(\n                    [\n                        `Unkown builtin icon ${s}, perhaps you meant one of: <ul>`,\n                        ...close.map(\n                            (item) =>\n                                `<li><span class=\"flex justify-start\"> <img src='${item}' class=\"w-6 h-6\"/>${item}</span></li>`\n                        ),\n                        \"</ul>\",\n                    ].join(\"\")\n                )\n            }\n        }\n\n        if (!s.endsWith(\".svg\")) {\n            return new Translation(\"An icon should end with `.svg`\")\n        }\n        return undefined\n    }\n\n    isValid(key: string, getCountry?: () => string): boolean {\n        return this.getFeedback(key, getCountry, true) === undefined\n    }\n}\n","import { Validator } from \"../Validator\"\nimport { Translation } from \"../../i18n/Translation\"\nimport Translations from \"../../i18n/Translations\"\nimport TagKeyValidator from \"./TagKeyValidator\"\nimport SimpleTagValidator from \"./SimpleTagValidator\"\n\n/**\n * Checks that the input conforms a JSON-encoded tag expression or a simpleTag`key=value`,\n */\nexport default class TagValidator extends Validator {\n\n    public readonly isMeta = true\n    constructor() {\n        super(\"tag\", \"A simple tag of the format `key=value` OR a tagExpression\")\n    }\n\n    getFeedback(tag: string, _): Translation | undefined {\n        return undefined\n    }\n\n    isValid(tag: string, _): boolean {\n        return this.getFeedback(tag, _) === undefined\n    }\n}\n","import { Translation } from \"../../i18n/Translation\"\nimport { Validator } from \"../Validator\"\nimport Translations from \"../../i18n/Translations\"\n\nexport default class IdValidator extends Validator {\n    constructor() {\n        super(\n            \"id\",\n            \"Checks for valid identifiers for layers, will automatically replace spaces and uppercase\"\n        )\n    }\n    isValid(key: string, getCountry?: () => string): boolean {\n        return this.getFeedback(key, getCountry) === undefined\n    }\n\n    reformat(s: string, _?: () => string): string {\n        return s.replaceAll(\" \", \"_\").toLowerCase()\n    }\n\n    getFeedback(s: string, _?: () => string): Translation | undefined {\n        if (s.length < 3) {\n            return Translations.t.validation.id.shouldBeLonger\n        }\n        if (!s.match(/^[a-zA-Z0-9_ ]+$/)) {\n            return Translations.t.validation.id.invalidCharacter\n        }\n        return undefined\n    }\n}\n","import { Validator } from \"./Validator\"\nimport StringValidator from \"./Validators/StringValidator\"\nimport TextValidator from \"./Validators/TextValidator\"\nimport DateValidator from \"./Validators/DateValidator\"\nimport NatValidator from \"./Validators/NatValidator\"\nimport IntValidator from \"./Validators/IntValidator\"\nimport LengthValidator from \"./Validators/LengthValidator\"\nimport DirectionValidator from \"./Validators/DirectionValidator\"\nimport WikidataValidator from \"./Validators/WikidataValidator\"\nimport PNatValidator from \"./Validators/PNatValidator\"\nimport FloatValidator from \"./Validators/FloatValidator\"\nimport PFloatValidator from \"./Validators/PFloatValidator\"\nimport EmailValidator from \"./Validators/EmailValidator\"\nimport UrlValidator from \"./Validators/UrlValidator\"\nimport PhoneValidator from \"./Validators/PhoneValidator\"\nimport OpeningHoursValidator from \"./Validators/OpeningHoursValidator\"\nimport ColorValidator from \"./Validators/ColorValidator\"\nimport BaseUIElement from \"../BaseUIElement\"\nimport Combine from \"../Base/Combine\"\nimport Title from \"../Base/Title\"\nimport SimpleTagValidator from \"./Validators/SimpleTagValidator\"\nimport ImageUrlValidator from \"./Validators/ImageUrlValidator\"\nimport TagKeyValidator from \"./Validators/TagKeyValidator\"\nimport TranslationValidator from \"./Validators/TranslationValidator\"\nimport FediverseValidator from \"./Validators/FediverseValidator\"\nimport IconValidator from \"./Validators/IconValidator\"\nimport TagValidator from \"./Validators/TagValidator\"\nimport IdValidator from \"./Validators/IdValidator\"\n\nexport type ValidatorType = (typeof Validators.availableTypes)[number]\n\nexport default class Validators {\n    public static readonly availableTypes = [\n        \"string\",\n        \"text\",\n        \"date\",\n        \"nat\",\n        \"int\",\n        \"distance\",\n        \"direction\",\n        \"wikidata\",\n        \"pnat\",\n        \"float\",\n        \"pfloat\",\n        \"email\",\n        \"url\",\n        \"phone\",\n        \"opening_hours\",\n        \"color\",\n        \"image\",\n        \"simple_tag\",\n        \"key\",\n        \"translation\",\n        \"icon\",\n        \"fediverse\",\n        \"tag\",\n        \"fediverse\",\n        \"id\",\n    ] as const\n\n    public static readonly AllValidators: ReadonlyArray<Validator> = [\n        new StringValidator(),\n        new TextValidator(),\n        new DateValidator(),\n        new NatValidator(),\n        new IntValidator(),\n        new LengthValidator(),\n        new DirectionValidator(),\n        new WikidataValidator(),\n        new PNatValidator(),\n        new FloatValidator(),\n        new PFloatValidator(),\n        new EmailValidator(),\n        new UrlValidator(),\n        new PhoneValidator(),\n        new OpeningHoursValidator(),\n        new ColorValidator(),\n        new ImageUrlValidator(),\n        new SimpleTagValidator(),\n        new TagValidator(),\n        new TagKeyValidator(),\n        new TranslationValidator(),\n        new IconValidator(),\n        new FediverseValidator(),\n        new IdValidator(),\n    ]\n\n    private static _byType = Validators._byTypeConstructor()\n\n    public static HelpText(): BaseUIElement {\n        const explanations: BaseUIElement[] = Validators.AllValidators.map((type) =>\n            new Combine([new Title(type.name, 3), type.explanation]).SetClass(\"flex flex-col\")\n        )\n        return new Combine([\n            new Title(\"Available types for text fields\", 1),\n            \"The listed types here trigger a special input element. Use them in `tagrendering.freeform.type` of your tagrendering to activate them\",\n            ...explanations,\n        ]).SetClass(\"flex flex-col\")\n    }\n\n    private static _byTypeConstructor(): Map<ValidatorType, Validator> {\n        const map = new Map<ValidatorType, Validator>()\n        for (const validator of Validators.AllValidators) {\n            map.set(<ValidatorType>validator.name, validator)\n        }\n        return map\n    }\n\n    static get(type: ValidatorType): Validator {\n        return Validators._byType.get(type)\n    }\n}\n","import { Translation, TypedTranslation } from \"../../UI/i18n/Translation\"\nimport { TagsFilter } from \"../../Logic/Tags/TagsFilter\"\nimport Translations from \"../../UI/i18n/Translations\"\nimport { TagUtils, UploadableTag } from \"../../Logic/Tags/TagUtils\"\nimport { And } from \"../../Logic/Tags/And\"\nimport { Utils } from \"../../Utils\"\nimport { Tag } from \"../../Logic/Tags/Tag\"\nimport BaseUIElement from \"../../UI/BaseUIElement\"\nimport Combine from \"../../UI/Base/Combine\"\nimport Title from \"../../UI/Base/Title\"\nimport Link from \"../../UI/Base/Link\"\nimport List from \"../../UI/Base/List\"\nimport {\n    MappingConfigJson,\n    QuestionableTagRenderingConfigJson,\n} from \"./Json/QuestionableTagRenderingConfigJson\"\nimport { FixedUiElement } from \"../../UI/Base/FixedUiElement\"\nimport { Paragraph } from \"../../UI/Base/Paragraph\"\nimport Svg from \"../../Svg\"\nimport Validators, { ValidatorType } from \"../../UI/InputElement/Validators\"\nimport { TagRenderingConfigJson } from \"./Json/TagRenderingConfigJson\"\n\nexport interface Icon {}\n\nexport interface Mapping {\n    readonly if: UploadableTag\n    readonly ifnot?: UploadableTag\n    readonly then: TypedTranslation<object>\n    readonly icon: string\n    readonly iconClass:\n        | string\n        | \"small\"\n        | \"medium\"\n        | \"large\"\n        | \"small-height\"\n        | \"medium-height\"\n        | \"large-height\"\n    readonly hideInAnswer: boolean | TagsFilter\n    readonly addExtraTags: Tag[]\n    readonly searchTerms?: Record<string, string[]>\n    readonly priorityIf?: TagsFilter\n}\n\n/***\n * The parsed version of TagRenderingConfigJSON\n * Identical data, but with some methods and validation\n */\nexport default class TagRenderingConfig {\n    public readonly id: string\n    public readonly render?: TypedTranslation<object>\n    public readonly renderIcon?: string\n    public readonly renderIconClass?: string\n    public readonly question?: TypedTranslation<object>\n    public readonly questionhint?: TypedTranslation<object>\n    public readonly condition?: TagsFilter\n    public readonly invalidValues?: TagsFilter\n    /**\n     * Evaluated against the current 'usersettings'-state\n     */\n    public readonly metacondition?: TagsFilter\n    public readonly description?: Translation\n\n    public readonly configuration_warnings: string[] = []\n\n    public readonly freeform?: {\n        readonly key: string\n        readonly type: ValidatorType\n        readonly placeholder: Translation\n        readonly addExtraTags: UploadableTag[]\n        readonly inline: boolean\n        readonly default?: string\n        readonly helperArgs?: (string | number | boolean)[]\n    }\n\n    public readonly multiAnswer: boolean\n\n    public readonly mappings?: Mapping[]\n    public readonly labels: string[]\n    public readonly classes: string[]\n\n    constructor(\n        config: string | TagRenderingConfigJson | QuestionableTagRenderingConfigJson,\n        context?: string\n    ) {\n        let json = <string | QuestionableTagRenderingConfigJson>config\n        if (json === undefined) {\n            throw \"Initing a TagRenderingConfig with undefined in \" + context\n        }\n\n        if (typeof json === \"number\") {\n            json = \"\" + json\n        }\n\n        let translationKey = context\n        if (json[\"id\"] !== undefined) {\n            const layerId = (context ?? \"\").split(\".\")[0]\n            if (json[\"source\"]) {\n                let src = json[\"source\"] + \":\"\n                if (json[\"source\"] === \"shared-questions\") {\n                    src += \"shared_questions.\"\n                }\n                translationKey = `${src}${json[\"id\"] ?? \"\"}`\n            } else {\n                translationKey = `layers:${layerId}.tagRenderings.${json[\"id\"] ?? \"\"}`\n            }\n        }\n\n        if (typeof json === \"string\") {\n            this.render = Translations.T(json, translationKey + \".render\")\n            this.multiAnswer = false\n            return\n        }\n\n        this.id = json.id ?? \"\" // Some tagrenderings - especially for the map rendering - don't need an ID\n        if (this.id.match(/^[a-zA-Z0-9 ()?\\/=:;,_-]*$/) === null) {\n            throw (\n                \"Invalid ID in \" +\n                context +\n                \": an id can only contain [a-zA-Z0-0_-] as characters. The offending id is: \" +\n                this.id\n            )\n        }\n\n        this.labels = json.labels ?? []\n        if (typeof json.classes === \"string\") {\n            this.classes = (<string>json.classes).split(\" \")\n        } else {\n            this.classes = json.classes ?? []\n        }\n        this.classes = [].concat(...this.classes.map((cl) => cl.split(\" \")))\n\n        this.render = Translations.T(<any>json.render, translationKey + \".render\")\n        this.question = Translations.T(json.question, translationKey + \".question\")\n        this.questionhint = Translations.T(json.questionHint, translationKey + \".questionHint\")\n        this.description = Translations.T(json.description, translationKey + \".description\")\n        this.condition = TagUtils.Tag(json.condition ?? { and: [] }, `${context}.condition`)\n        this.invalidValues = json[\"invalidValues\"]\n            ? TagUtils.Tag(json[\"invalidValues\"], `${context}.invalidValues`)\n            : undefined\n        if (typeof json.icon === \"string\") {\n            this.renderIcon = json.icon\n            this.renderIconClass = \"small\"\n        } else if (typeof json.icon === \"object\") {\n            this.renderIcon = json.icon.path\n            this.renderIconClass = json.icon.class\n        }\n        this.metacondition = TagUtils.Tag(\n            json.metacondition ?? { and: [] },\n            `${context}.metacondition`\n        )\n        if (json.freeform) {\n            if (\n                json.freeform.addExtraTags !== undefined &&\n                json.freeform.addExtraTags.map === undefined\n            ) {\n                throw `Freeform.addExtraTags should be a list of strings - not a single string (at ${context})`\n            }\n            if (\n                json.freeform.type &&\n                Validators.availableTypes.indexOf(<any>json.freeform.type) < 0\n            ) {\n                throw `At ${context}: invalid type ${\n                    json.freeform.type\n                }, perhaps you meant ${Utils.sortedByLevenshteinDistance(\n                    json.freeform.key,\n                    <any>Validators.availableTypes,\n                    (s) => <any>s\n                )}`\n            }\n            const type: ValidatorType = <any>json.freeform.type ?? \"string\"\n\n            let placeholder: Translation = Translations.T(json.freeform.placeholder)\n            if (placeholder === undefined) {\n                const typeDescription = <Translation>Translations.t.validation[type]?.description\n                const key = json.freeform.key\n                if (typeDescription !== undefined) {\n                    placeholder = typeDescription.OnEveryLanguage((l) => key + \" (\" + l + \")\")\n                } else {\n                    placeholder = Translations.T(key + \" (\" + type + \")\")\n                }\n            }\n\n            this.freeform = {\n                key: json.freeform.key,\n                type,\n                placeholder,\n                addExtraTags:\n                    json.freeform.addExtraTags?.map((tg, i) =>\n                        TagUtils.ParseUploadableTag(tg, `${context}.extratag[${i}]`)\n                    ) ?? [],\n                inline: json.freeform.inline ?? false,\n                default: json.freeform.default,\n                helperArgs: json.freeform.helperArgs,\n            }\n            if (json.freeform[\"extraTags\"] !== undefined) {\n                throw `Freeform.extraTags is defined. This should probably be 'freeform.addExtraTag' (at ${context})`\n            }\n            if (this.freeform.key === undefined || this.freeform.key === \"\") {\n                throw `Freeform.key is undefined or the empty string - this is not allowed; either fill out something or remove the freeform block alltogether. Error in ${context}`\n            }\n            if (json.freeform[\"args\"] !== undefined) {\n                throw `Freeform.args is defined. This should probably be 'freeform.helperArgs' (at ${context})`\n            }\n\n            if (json.freeform.key === \"questions\") {\n                if (this.id !== \"questions\") {\n                    throw `If you use a freeform key 'questions', the ID must be 'questions' too to trigger the special behaviour. The current id is '${this.id}' (at ${context})`\n                }\n            }\n\n            // freeform.type is validated in Validation.ts so that we don't need ValidatedTextFields here\n            if (this.freeform.addExtraTags) {\n                const usedKeys = new And(this.freeform.addExtraTags).usedKeys()\n                if (usedKeys.indexOf(this.freeform.key) >= 0) {\n                    throw `The freeform key ${this.freeform.key} will be overwritten by one of the extra tags, as they use the same key too. This is in ${context}`\n                }\n            }\n        }\n\n        this.multiAnswer = json.multiAnswer ?? false\n        if (json.mappings) {\n            if (!Array.isArray(json.mappings)) {\n                throw \"Tagrendering has a 'mappings'-object, but expected a list (\" + context + \")\"\n            }\n\n            const commonIconSize =\n                Utils.NoNull(\n                    json.mappings.map((m) => (m.icon !== undefined ? m.icon[\"class\"] : undefined))\n                )[0] ?? \"small\"\n            this.mappings = json.mappings.map((m, i) =>\n                TagRenderingConfig.ExtractMapping(\n                    m,\n                    i,\n                    translationKey,\n                    context,\n                    this.multiAnswer,\n                    this.question !== undefined,\n                    commonIconSize\n                )\n            )\n        }\n\n        if (!json.multiAnswer && this.mappings !== undefined && this.question !== undefined) {\n            let keys = []\n            for (let i = 0; i < this.mappings.length; i++) {\n                const mapping = this.mappings[i]\n                if (mapping.if === undefined) {\n                    throw `${context}.mappings[${i}].if is undefined`\n                }\n                keys.push(...mapping.if.usedKeys())\n            }\n            keys = Utils.Dedup(keys)\n            for (let i = 0; i < this.mappings.length; i++) {\n                const mapping = this.mappings[i]\n                if (mapping.hideInAnswer) {\n                    continue\n                }\n\n                const usedKeys = mapping.if.usedKeys()\n                for (const expectedKey of keys) {\n                    if (usedKeys.indexOf(expectedKey) < 0) {\n                        const msg = `${context}.mappings[${i}]: This mapping only defines values for ${usedKeys.join(\n                            \", \"\n                        )}, but it should also give a value for ${expectedKey}`\n                        this.configuration_warnings.push(msg)\n                    }\n                }\n            }\n        }\n\n        if (this.question !== undefined && json.multiAnswer) {\n            if ((this.mappings?.length ?? 0) === 0) {\n                throw `${context} MultiAnswer is set, but no mappings are defined`\n            }\n\n            let allKeys = []\n            let allHaveIfNot = true\n            for (const mapping of this.mappings) {\n                if (mapping.hideInAnswer) {\n                    continue\n                }\n                if (mapping.ifnot === undefined) {\n                    allHaveIfNot = false\n                }\n                allKeys = allKeys.concat(mapping.if.usedKeys())\n            }\n            allKeys = Utils.Dedup(allKeys)\n            if (allKeys.length > 1 && !allHaveIfNot) {\n                throw `${context}: A multi-answer is defined, which generates values over multiple keys. Please define ifnot-tags too on every mapping`\n            }\n\n            if (allKeys.length > 1 && this.freeform?.key !== undefined) {\n                throw `${context}: A multi-answer is defined, which generates values over multiple keys. This is incompatible with having a freeform key`\n            }\n        }\n    }\n\n    /**\n     * const tr = TagRenderingConfig.ExtractMapping({if: \"a=b\", then: \"x\", priorityIf: \"_country=be\"}, 0, \"test\",\"test\", false,true)\n     * tr.if // => new Tag(\"a\",\"b\")\n     * tr.priorityIf // => new Tag(\"_country\",\"be\")\n     */\n    public static ExtractMapping(\n        mapping: MappingConfigJson,\n        i: number,\n        translationKey: string,\n        context: string,\n        multiAnswer?: boolean,\n        isQuestionable?: boolean,\n        commonSize: string = \"small\"\n    ) {\n        const ctx = `${translationKey}.mappings.${i}`\n        if (mapping.if === undefined) {\n            throw `Invalid mapping: \"if\" is not defined`\n        }\n        if (mapping.then === undefined) {\n            if (mapping[\"render\"] !== undefined) {\n                throw `${ctx}: Invalid mapping: no 'then'-clause found. You might have typed 'render' instead of 'then', change it in ${JSON.stringify(\n                    mapping\n                )}`\n            }\n            throw `${ctx}: Invalid mapping: no 'then'-clause found in ${JSON.stringify(mapping)}`\n        }\n        if (mapping.ifnot !== undefined && !multiAnswer) {\n            throw `${ctx}: Invalid mapping: 'ifnot' is defined, but the tagrendering is not a multianswer. Either remove ifnot or set 'multiAnswer:true' to enable checkboxes instead of radiobuttons`\n        }\n\n        if (mapping[\"render\"] !== undefined) {\n            throw `${ctx}: Invalid mapping: a 'render'-key is present, this is probably a bug: ${JSON.stringify(\n                mapping\n            )}`\n        }\n        if (typeof mapping.if !== \"string\" && mapping.if[\"length\"] !== undefined) {\n            throw `${ctx}: Invalid mapping: \"if\" is defined as an array. Use {\"and\": <your conditions>} or {\"or\": <your conditions>} instead`\n        }\n\n        if (mapping.addExtraTags !== undefined && multiAnswer) {\n            throw `${ctx}: Invalid mapping: got a multi-Answer with addExtraTags; this is not allowed`\n        }\n\n        let hideInAnswer: boolean | TagsFilter = false\n        if (typeof mapping.hideInAnswer === \"boolean\") {\n            hideInAnswer = mapping.hideInAnswer\n        } else if (mapping.hideInAnswer !== undefined) {\n            hideInAnswer = TagUtils.Tag(\n                mapping.hideInAnswer,\n                `${context}.mapping[${i}].hideInAnswer`\n            )\n        }\n        const addExtraTags = (mapping.addExtraTags ?? []).map((str, j) =>\n            TagUtils.SimpleTag(str, `${ctx}.addExtraTags[${j}]`)\n        )\n        if (hideInAnswer === true && addExtraTags.length > 0) {\n            throw `${ctx}: Invalid mapping: 'hideInAnswer' is set to 'true', but 'addExtraTags' is enabled as well. This means that extra tags will be applied if this mapping is chosen as answer, but it cannot be chosen as answer. This either indicates a thought error or obsolete code that must be removed.`\n        }\n\n        let icon = undefined\n        let iconClass = commonSize\n        if (mapping.icon !== undefined) {\n            if (typeof mapping.icon === \"string\" && mapping.icon !== \"\") {\n                let stripped = mapping.icon\n                if (stripped.endsWith(\".svg\")) {\n                    stripped = stripped.substring(0, stripped.length - 4)\n                }\n                if (Svg.All[stripped + \".svg\"] !== undefined) {\n                    icon = \"./assets/svg/\" + mapping.icon\n                    if (!icon.endsWith(\".svg\")) {\n                        icon += \".svg\"\n                    }\n                } else {\n                    icon = mapping.icon\n                }\n            } else {\n                icon = mapping.icon[\"path\"]\n                iconClass = mapping.icon[\"class\"] ?? iconClass\n            }\n        }\n        const prioritySearch =\n            mapping.priorityIf !== undefined ? TagUtils.Tag(mapping.priorityIf) : undefined\n        const mp = <Mapping>{\n            if: TagUtils.Tag(mapping.if, `${ctx}.if`),\n            ifnot:\n                mapping.ifnot !== undefined\n                    ? TagUtils.Tag(mapping.ifnot, `${ctx}.ifnot`)\n                    : undefined,\n            then: Translations.T(mapping.then, `${ctx}.then`),\n            hideInAnswer,\n            icon,\n            iconClass,\n            addExtraTags,\n            searchTerms: mapping.searchTerms,\n            priorityIf: prioritySearch,\n        }\n        if (isQuestionable) {\n            if (hideInAnswer !== true && mp.if !== undefined && !mp.if.isUsableAsAnswer()) {\n                throw `${context}.mapping[${i}].if: This value cannot be used to answer a question, probably because it contains a regex or an OR. Either change it or set 'hideInAnswer'`\n            }\n\n            if (hideInAnswer !== true && !(mp.ifnot?.isUsableAsAnswer() ?? true)) {\n                throw `${context}.mapping[${i}].ifnot: This value cannot be used to answer a question, probably because it contains a regex or an OR. If a contributor were to pick this as an option, MapComplete wouldn't be able to determine which tags to add.\\n    Either change it or set 'hideInAnswer'`\n            }\n        }\n\n        return mp\n    }\n\n    /**\n     * Returns true if it is known or not shown, false if the question should be asked\n     * @constructor\n     */\n    public IsKnown(tags: Record<string, string>): boolean {\n        if (this.condition && !this.condition.matchesProperties(tags)) {\n            // Filtered away by the condition, so it is kind of known\n            return true\n        }\n        if (this.invalidValues && this.invalidValues.matchesProperties(tags)) {\n            return false\n        }\n        if (this.multiAnswer) {\n            for (const m of this.mappings ?? []) {\n                if (TagUtils.MatchesMultiAnswer(m.if, tags)) {\n                    return true\n                }\n            }\n\n            const free = this.freeform?.key\n            if (free !== undefined) {\n                const value = tags[free]\n                if (typeof value === \"object\") {\n                    return Object.keys(value).length > 0\n                }\n                return value !== undefined && value !== \"\"\n            }\n            return false\n        }\n\n        if (this.GetRenderValue(tags) !== undefined) {\n            // This value is known and can be rendered\n            return true\n        }\n\n        return false\n    }\n\n    /**\n     * Gets all the render values. Will return multiple render values if 'multianswer' is enabled.\n     * The result will equal [GetRenderValue] if not 'multiAnswer'\n     * @param tags\n     * @constructor\n     */\n    public GetRenderValues(\n        tags: Record<string, string>\n    ): { then: Translation; icon?: string; iconClass?: string }[] {\n        if (!this.multiAnswer) {\n            return [this.GetRenderValueWithImage(tags)]\n        }\n\n        // A flag to check that the freeform key isn't matched multiple times\n        // If it is undefined, it is \"used\" already, or at least we don't have to check for it anymore\n        let freeformKeyDefined = this.freeform?.key !== undefined\n        let usedFreeformValues = new Set<string>()\n        // We run over all the mappings first, to check if the mapping matches\n        const applicableMappings: {\n            then: TypedTranslation<Record<string, string>>\n            img?: string\n        }[] = Utils.NoNull(\n            (this.mappings ?? [])?.map((mapping) => {\n                if (mapping.if === undefined) {\n                    return mapping\n                }\n                if (TagUtils.MatchesMultiAnswer(mapping.if, tags)) {\n                    if (freeformKeyDefined && mapping.if.isUsableAsAnswer()) {\n                        // THe freeform key is defined: what value does it use though?\n                        // We mark the value to see if we have any leftovers\n                        const value = mapping.if\n                            .asChange({})\n                            .find((kv) => kv.k === this.freeform.key).v\n                        usedFreeformValues.add(value)\n                    }\n                    return mapping\n                }\n                return undefined\n            })\n        )\n\n        if (freeformKeyDefined && tags[this.freeform.key] !== undefined) {\n            const freeformValues = tags[this.freeform.key].split(\";\")\n            const leftovers = freeformValues.filter((v) => !usedFreeformValues.has(v))\n            for (const leftover of leftovers) {\n                applicableMappings.push({\n                    then: new TypedTranslation<object>(\n                        this.render.replace(\"{\" + this.freeform.key + \"}\", leftover).translations\n                    ),\n                })\n            }\n        }\n        return applicableMappings\n    }\n\n    public GetRenderValue(tags: Record<string, string>): TypedTranslation<any> | undefined {\n        return this.GetRenderValueWithImage(tags)?.then\n    }\n\n    /**\n     * Gets the correct rendering value (or undefined if not known)\n     * Not compatible with multiAnswer - use GetRenderValueS instead in that case\n     * @constructor\n     */\n    public GetRenderValueWithImage(\n        tags: Record<string, string>\n    ): { then: TypedTranslation<any>; icon?: string; iconClass?: string } | undefined {\n        if (this.condition !== undefined) {\n            if (!this.condition.matchesProperties(tags)) {\n                return undefined\n            }\n        }\n\n        if (this.mappings !== undefined && !this.multiAnswer) {\n            for (const mapping of this.mappings) {\n                if (mapping.if === undefined) {\n                    return mapping\n                }\n                if (mapping.if.matchesProperties(tags)) {\n                    return mapping\n                }\n            }\n        }\n\n        if (this.freeform?.key === undefined || tags[this.freeform.key] !== undefined) {\n            return { then: this.render, icon: this.renderIcon, iconClass: this.renderIconClass }\n        }\n\n        return undefined\n    }\n\n    /**\n     * Gets all translations that might be rendered in all languages\n     * USed for static analysis\n     * @constructor\n     * @private\n     */\n    EnumerateTranslations(): Translation[] {\n        const translations: Translation[] = []\n        for (const key in this) {\n            if (!this.hasOwnProperty(key)) {\n                continue\n            }\n            const o = this[key]\n            if (o instanceof Translation) {\n                translations.push(o)\n            }\n        }\n        return translations\n    }\n\n    FreeformValues(): { key: string; type?: string; values?: string[] } {\n        try {\n            const key = this.freeform?.key\n            const answerMappings = this.mappings?.filter((m) => m.hideInAnswer !== true)\n            if (key === undefined) {\n                let values: { k: string; v: string }[][] = Utils.NoNull(\n                    answerMappings?.map((m) => m.if.asChange({})) ?? []\n                )\n                if (values.length === 0) {\n                    return\n                }\n\n                const allKeys = values.map((arr) => arr.map((o) => o.k))\n                let common = allKeys[0]\n                for (const keyset of allKeys) {\n                    common = common.filter((item) => keyset.indexOf(item) >= 0)\n                }\n                const commonKey = common[0]\n                if (commonKey === undefined) {\n                    return undefined\n                }\n                return {\n                    key: commonKey,\n                    values: Utils.NoNull(\n                        values.map((arr) => arr.filter((item) => item.k === commonKey)[0]?.v)\n                    ),\n                }\n            }\n\n            let values = Utils.NoNull(\n                answerMappings?.map(\n                    (m) => m.if.asChange({}).filter((item) => item.k === key)[0]?.v\n                ) ?? []\n            )\n            if (values.length === undefined) {\n                values = undefined\n            }\n            return {\n                key,\n                type: this.freeform.type,\n                values,\n            }\n        } catch (e) {\n            console.error(\"Could not create FreeformValues for tagrendering\", this.id)\n            return undefined\n        }\n    }\n\n    /**\n     * Given a value for the freeform key and an overview of the selected mappings, construct the correct tagsFilter to apply\n     *\n     * const config = new TagRenderingConfig({\"id\":\"bookcase-booktypes\",\"render\":{\"en\":\"This place mostly serves {books}\" },\n     * \"question\":{\"en\":\"What kind of books can be found in this public bookcase?\"},\n     * \"freeform\":{\"key\":\"books\",\"addExtraTags\":[\"fixme=Freeform tag `books` used, to be doublechecked\"],\n     * \"inline\":true},\n     * \"multiAnswer\":true,\n     * \"mappings\":[{\"if\":\"books=children\",\"then\":\"Mostly children books\"},\n     * {\"if\":\"books=adults\",\"then\": \"Mostly books for adults\"}]}\n     * , \"testcase\")\n     * config.constructChangeSpecification(undefined, undefined, [false, true, false], {amenity: \"public_bookcase\"}) // => new And([new Tag(\"books\",\"adults\")])\n     *\n     * @param freeformValue The freeform value which will be applied as 'freeform.key'. Ignored if 'freeform.key' is not set\n     *\n     * @param singleSelectedMapping (Only used if multiAnswer == false): the single mapping to apply. Use (mappings.length) for the freeform\n     * @param multiSelectedMapping (Only used if multiAnswer == true): all the mappings that must be applied. Set multiSelectedMapping[mappings.length] to use the freeform as well\n     * @param currentProperties The current properties of the object for which the question should be answered\n     */\n    public constructChangeSpecification(\n        freeformValue: string | undefined,\n        singleSelectedMapping: number,\n        multiSelectedMapping: boolean[] | undefined,\n        currentProperties: Record<string, string>\n    ): UploadableTag {\n        if (typeof freeformValue === \"string\") {\n            freeformValue = freeformValue?.trim()\n        }\n        const validator = Validators.get(<ValidatorType>this.freeform?.type)\n        if (validator && freeformValue) {\n            freeformValue = validator.reformat(freeformValue, () => currentProperties[\"_country\"])\n        }\n        if (freeformValue === \"\") {\n            freeformValue = undefined\n        }\n        if (\n            freeformValue === undefined &&\n            singleSelectedMapping === undefined &&\n            multiSelectedMapping === undefined\n        ) {\n            return undefined\n        }\n\n        if (this.mappings === undefined && freeformValue === undefined) {\n            return undefined\n        }\n        if (\n            this.freeform !== undefined &&\n            (this.mappings === undefined ||\n                this.mappings.length == 0 ||\n                (singleSelectedMapping === this.mappings.length && !this.multiAnswer))\n        ) {\n            // Either no mappings, or this is a radio-button selected freeform value\n            return new And([\n                new Tag(this.freeform.key, freeformValue),\n                ...(this.freeform.addExtraTags ?? []),\n            ])\n        }\n\n        if (this.multiAnswer) {\n            let selectedMappings: UploadableTag[] = this.mappings\n                .filter((_, i) => multiSelectedMapping[i])\n                .map((m) => new And([m.if, ...(m.addExtraTags ?? [])]))\n\n            let unselectedMappings: UploadableTag[] = this.mappings\n                .filter((_, i) => !multiSelectedMapping[i])\n                .map((m) => m.ifnot)\n\n            if (multiSelectedMapping.at(-1) && this.freeform) {\n                // The freeform value was selected as well\n                selectedMappings.push(\n                    new And([\n                        new Tag(this.freeform.key, freeformValue),\n                        ...(this.freeform.addExtraTags ?? []),\n                    ])\n                )\n            }\n            const and = TagUtils.FlattenMultiAnswer([...selectedMappings, ...unselectedMappings])\n            if (and.and.length === 0) {\n                return undefined\n            }\n            return and\n        }\n\n        // Is at least one mapping shown in the answer?\n        const someMappingIsShown = this.mappings.some((m) => {\n            if (typeof m.hideInAnswer === \"boolean\") {\n                return !m.hideInAnswer\n            }\n            const isHidden = m.hideInAnswer.matchesProperties(currentProperties)\n            return !isHidden\n        })\n        // If all mappings are hidden for the current tags, we can safely assume that we should use the freeform key\n        const useFreeform =\n            freeformValue !== undefined &&\n            (singleSelectedMapping === this.mappings.length ||\n                !someMappingIsShown ||\n                singleSelectedMapping === undefined)\n        if (useFreeform) {\n            return new And([\n                new Tag(this.freeform.key, freeformValue),\n                ...(this.freeform.addExtraTags ?? []),\n            ])\n        } else if (singleSelectedMapping !== undefined) {\n            return new And([\n                this.mappings[singleSelectedMapping].if,\n                ...(this.mappings[singleSelectedMapping].addExtraTags ?? []),\n            ])\n        } else {\n            console.error(\"TagRenderingConfig.ConstructSpecification has a weird fallback for\", {\n                freeformValue,\n                singleSelectedMapping,\n                multiSelectedMapping,\n                currentProperties,\n                useFreeform,\n            })\n\n            return undefined\n        }\n    }\n\n    GenerateDocumentation(): BaseUIElement {\n        let withRender: (BaseUIElement | string)[] = []\n        if (this.freeform?.key !== undefined) {\n            withRender = [\n                `This rendering asks information about the property `,\n                Link.OsmWiki(this.freeform.key),\n                new Paragraph(\n                    new Combine([\n                        \"This is rendered with \",\n                        new FixedUiElement(this.render.txt).SetClass(\"code font-bold\"),\n                    ])\n                ),\n            ]\n        }\n\n        let mappings: BaseUIElement = undefined\n        if (this.mappings !== undefined) {\n            mappings = new List(\n                [].concat(\n                    ...this.mappings.map((m) => {\n                        const msgs: (string | BaseUIElement)[] = [\n                            new Combine([\n                                new FixedUiElement(m.then.txt).SetClass(\"font-bold\"),\n                                \" corresponds with \",\n                                new FixedUiElement(m.if.asHumanString(false, false, {})).SetClass(\n                                    \"code\"\n                                ),\n                            ]),\n                        ]\n                        if (m.hideInAnswer === true) {\n                            msgs.push(\n                                new FixedUiElement(\n                                    \"This option cannot be chosen as answer\"\n                                ).SetClass(\"italic\")\n                            )\n                        }\n                        if (m.ifnot !== undefined) {\n                            msgs.push(\n                                \"Unselecting this answer will add \" +\n                                    m.ifnot.asHumanString(true, false, {})\n                            )\n                        }\n                        return msgs\n                    })\n                )\n            )\n        }\n\n        let condition: BaseUIElement = undefined\n        if (this.condition !== undefined && !this.condition?.matchesProperties({})) {\n            condition = new Combine([\n                \"This tagrendering is only visible in the popup if the following condition is met:\",\n                new FixedUiElement(this.condition.asHumanString(false, false, {})).SetClass(\"code\"),\n            ])\n        }\n\n        let labels: BaseUIElement = undefined\n        if (this.labels?.length > 0) {\n            labels = new Combine([\n                \"This tagrendering has labels \",\n                ...this.labels.map((label) => new FixedUiElement(label).SetClass(\"code\")),\n            ]).SetClass(\"flex\")\n        }\n\n        return new Combine([\n            new Title(this.id, 3),\n            this.description,\n            this.question !== undefined\n                ? new Combine([\n                      \"The question is \",\n                      new FixedUiElement(this.question.txt).SetClass(\"font-bold bold\"),\n                  ])\n                : new FixedUiElement(\n                      \"This tagrendering has no question and is thus read-only\"\n                  ).SetClass(\"italic\"),\n            new Combine(withRender),\n            mappings,\n            condition,\n            labels,\n        ]).SetClass(\"flex flex-col\")\n    }\n}\n","import TagRenderingConfig from \"./TagRenderingConfig\"\nimport { TagRenderingConfigJson } from \"./Json/TagRenderingConfigJson\"\nimport { Translatable } from \"./Json/Translatable\"\nimport { QuestionableTagRenderingConfigJson } from \"./Json/QuestionableTagRenderingConfigJson\"\n\nexport default class WithContextLoader {\n    protected readonly _context: string\n    private readonly _json: any\n\n    constructor(json: any, context: string) {\n        this._json = json\n        this._context = context\n    }\n\n    /** Given a key, gets the corresponding property from the json (or the default if not found\n     *\n     * The found value is interpreted as a tagrendering and fetched/parsed\n     * */\n    public tr(key: string, deflt?: string, translationContext?: string) {\n        let v: Translatable | TagRenderingConfigJson = this._json[key]\n        if (v === undefined || v === null) {\n            if (deflt === undefined) {\n                return undefined\n            }\n            return new TagRenderingConfig(\n                deflt,\n                `${translationContext ?? this._context}.${key}.default value`\n            )\n        }\n        if (Object.keys(v).length === 1 && typeof v[\"render\"] === \"string\") {\n            throw `At ${\n                translationContext ?? \"<unknown>\"\n            }: use the content directly instead of {${key}: ${JSON.stringify(v)}}`\n        }\n\n        return new TagRenderingConfig(\n            <QuestionableTagRenderingConfigJson>v,\n            `${translationContext ?? this._context}.${key}`\n        )\n    }\n\n    /**\n     * Converts a list of tagRenderingCOnfigJSON in to TagRenderingConfig\n     * A string is interpreted as a name to call\n     */\n    public ParseTagRenderings(\n        tagRenderings: TagRenderingConfigJson[],\n        options?: {\n            /**\n             * Throw an error if 'question' is defined\n             */\n            readOnlyMode?: boolean\n            requiresId?: boolean\n            prepConfig?: (config: TagRenderingConfigJson) => TagRenderingConfigJson\n        }\n    ): TagRenderingConfig[] {\n        if (tagRenderings === undefined) {\n            return []\n        }\n\n        const context = this._context\n        options = options ?? {}\n        if (options.prepConfig === undefined) {\n            options.prepConfig = (c) => c\n        }\n        const renderings: TagRenderingConfig[] = []\n        for (let i = 0; i < tagRenderings.length; i++) {\n            const preparedConfig = tagRenderings[i]\n            const tr = new TagRenderingConfig(\n                <QuestionableTagRenderingConfigJson>preparedConfig,\n                `${context}.tagrendering[${i}]`\n            )\n            if (options.readOnlyMode && tr.question !== undefined) {\n                throw (\n                    \"A question is defined for \" +\n                    `${context}.tagrendering[${i}], but this is not allowed at this position - probably because this rendering is an icon, badge or label`\n                )\n            }\n            if (options.requiresId && tr.id === \"\") {\n                throw `${context}.tagrendering[${i}] has an invalid ID - make sure it is defined and not empty`\n            }\n\n            renderings.push(tr)\n        }\n\n        return renderings\n    }\n}\n","<script>\nexport let color = \"#000000\"\n</script>\n <svg    width=\"314px\"    height=\"374px\"    viewBox=\"0 0 314 374\"    version=\"1.1\"    id=\"svg7\"    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\">   <defs      id=\"defs11\" />   <path      id=\"path2\"      class=\"selectable\"      style=\"fill:{color};fill-opacity:1;fill-rule:nonzero;stroke:none\"      d=\"M 157 0 C 70.296875 1.8947806e-14 0.01171875 70.121098 0.01171875 156.62109 C 0.01171875 231.01726 52.025471 293.25325 121.74219 309.22266 L 147.24609 364.68359 C 152.95703 377.10547 170.65234 377.10547 176.36719 364.68359 L 203.19922 306.33398 C 267.35183 286.6535 313.98828 227.07489 313.98828 156.62109 C 313.98828 70.121098 243.70312 0 157 0 z \" /> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg    width=\"375px\"    height=\"375px\"    viewBox=\"0 0 375 375\"    version=\"1.1\"    id=\"svg5\"    sodipodi:docname=\"square.svg\"    inkscape:version=\"1.1.2 (0a00cf5339, 2022-02-04)\"    xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"    xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\">   <g      id=\"surface1\">     <path class=\"selectable\"        id=\"rect2\"           style=\"fill:{color};\"        d=\"M 0,0 H 375 V 375 H 0 Z\" />   </g> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">     <g id=\"surface1\">         <path                 style=\"fill:{color};\"                 class=\"selectable\"               d=\"M 375 187.5 C 375 291.054688 291.054688 375 187.5 375 C 83.945312 375 0 291.054688 0 187.5 C 0 83.945312 83.945312 0 187.5 0 C 291.054688 0 375 83.945312 375 187.5 Z M 375 187.5 \"/>     </g> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"374px\" height=\"259px\" viewBox=\"0 0 374 259\" version=\"1.1\">   <g id=\"surface1\">     <path style=\"fill: none !important;stroke-width:4;stroke-linecap:butt;stroke-linejoin:round;stroke:{color};stroke-opacity:1;stroke-miterlimit:4;\" d=\"M 2.999896 7.285624 L 10.826182 14.99991 L 23.000104 3.00009 \" transform=\"matrix(14.384615,0,0,14.388889,0,0)\"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\"fill: none !important;stroke-width:9;stroke-linecap:round;stroke-linejoin:miter;stroke:{color};stroke-opacity:1;stroke-miterlimit:4;\" d=\"M 46 55.932292 L 66.551042 55.932292 \" transform=\"matrix(3.75,0,0,3.75,0,0)\"/>     <path style=\"fill: none !important;stroke-width:9;stroke-linecap:round;stroke-linejoin:miter;stroke:{color};stroke-opacity:1;stroke-miterlimit:4;\" d=\"M 46 55.534375 L 46 27.729167 \" transform=\"matrix(3.75,0,0,3.75,0,0)\"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\"fill: none !important;stroke-width:6.012842;stroke-linecap:round;stroke-linejoin:miter;stroke:{color};stroke-opacity:1;stroke-miterlimit:4;\" d=\"M 23.165924 293.603402 L 3.541282 273.978759 \" transform=\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\"/>     <path style=\"fill: none !important;stroke-width:6.012921;stroke-linecap:round;stroke-linejoin:miter;stroke:{color};stroke-opacity:1;stroke-miterlimit:4;\" d=\"M 23.195414 273.884226 L 3.571047 293.508593 \" transform=\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg    width=\"375px\"    height=\"375px\"    viewBox=\"0 0 375 375\"    version=\"1.1\"    id=\"svg15\"    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\">   <path      id=\"path2\"      style=\"color:{color};fill:{color};fill-opacity:0.988235;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none\"      d=\"M 187.5 0.17578125 A 15 15 0 0 0 172.5 15.175781 L 172.5 43.708984 C 104.37541 50.343145 49.843699 104.61884 42.837891 172.63672 L 14.765625 172.63672 A 14.86235 14.86235 0 0 0 -0.09765625 187.5 A 14.86235 14.86235 0 0 0 14.765625 202.36133 L 42.837891 202.36133 C 49.842792 270.37794 104.37427 324.65648 172.5 331.29102 L 172.5 360.10156 A 15 15 0 0 0 187.5 375.10156 A 15 15 0 0 0 202.5 360.10156 L 202.5 331.08594 C 269.70108 323.65092 323.26953 269.82518 330.26953 202.5 L 360.08203 202.5 A 15 15 0 0 0 375.08203 187.5 A 15 15 0 0 0 360.08203 172.5 L 330.26953 172.5 C 323.26946 105.17266 269.70061 51.348735 202.5 43.914062 L 202.5 15.175781 A 15 15 0 0 0 187.5 0.17578125 z M 186.5625 80.511719 C 245.87515 80.511719 293.55078 128.18741 293.55078 187.5 C 293.55078 246.80822 245.87443 294.48828 186.5625 294.48828 C 127.25056 294.48828 79.574219 246.80822 79.574219 187.5 C 79.574219 128.1874 127.24984 80.511719 186.5625 80.511719 z M 187.5 139.21094 C 160.83203 139.21094 139.21094 160.83203 139.21094 187.5 C 139.21094 214.16797 160.83203 235.78906 187.5 235.78906 C 214.16797 235.78906 235.78906 214.16797 235.78906 187.5 C 235.78906 160.83203 214.16797 139.21094 187.5 139.21094 z \" /> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 225.160156 268.851562 L 160.957031 268.851562 L 160.957031 260.476562 C 160.957031 246.230469 162.574219 234.664062 165.804688 225.777344 C 169.035156 216.890625 174.679688 208.773438 181.066406 201.429688 C 187.457031 194.085938 196.832031 191.542969 219.160156 173.035156 C 231.054688 163.339844 239.914062 144.070312 239.914062 135.992188 C 240.742188 114.621094 234.679688 106.203125 226.9375 98.460938 C 218.425781 91.074219 204.160156 87.171875 192.773438 87.171875 C 182.34375 87.171875 167.070312 90.207031 159.824219 96.695312 C 150.085938 103.183594 135.332031 124.367188 138.40625 145.707031 L 65.378906 146.347656 C 65.378906 87.324219 76.414062 71.75 102.546875 47.597656 C 127.851562 27.183594 150.050781 20.089844 194.09375 20.089844 C 227.777344 20.089844 254.875 26.773438 274.558594 40.140625 C 301.292969 58.207031 320.476562 81.882812 320.476562 126.53125 C 320.476562 143.171875 313.285156 160.613281 304.304688 174.710938 C 297.398438 186.316406 281.636719 199.660156 259.921875 213.910156 C 243.839844 223.585938 234.894531 233.855469 231 240.980469 C 227.109375 248.101562 225.160156 257.394531 225.160156 268.851562 Z M 225.160156 268.851562 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 228.535156 323.679688 C 228.539062 338.824219 212.730469 351.101562 193.226562 351.101562 C 173.722656 351.101562 157.914062 338.824219 157.921875 323.679688 C 157.914062 308.539062 173.722656 296.261719 193.226562 296.261719 C 212.730469 296.261719 228.539062 308.539062 228.535156 323.679688 Z M 228.535156 323.679688 \"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 362.109375 164.0625 L 328.125 130.101562 L 328.125 46.875 C 328.125 33.984375 317.578125 23.4375 304.6875 23.4375 L 281.25 23.4375 C 268.359375 23.4375 257.8125 33.984375 257.8125 46.875 L 257.8125 59.835938 L 210.9375 13.007812 C 204.539062 6.960938 198.679688 0 187.5 0 C 176.320312 0 170.460938 6.960938 164.0625 13.007812 L 12.890625 164.0625 C 5.578125 171.679688 0 177.234375 0 187.5 C 0 200.695312 10.125 210.9375 23.4375 210.9375 L 46.875 210.9375 L 46.875 351.5625 C 46.875 364.453125 57.421875 375 70.3125 375 L 140.625 375 L 140.625 257.8125 C 140.625 244.921875 151.171875 234.375 164.0625 234.375 L 210.9375 234.375 C 223.828125 234.375 234.375 244.921875 234.375 257.8125 L 234.375 375 L 304.6875 375 C 317.578125 375 328.125 364.453125 328.125 351.5625 L 328.125 210.9375 L 351.5625 210.9375 C 364.875 210.9375 375 200.695312 375 187.5 C 375 177.234375 369.421875 171.679688 362.109375 164.0625 Z M 362.109375 164.0625 \"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\"><path fill=\"#DD2E44\" d=\"M18 0C8.059 0 0 8.059 0 18s8.059 18 18 18 18-8.059 18-18S27.941 0 18 0zm13 18c0 2.565-.753 4.95-2.035 6.965L11.036 7.036C13.05 5.753 15.435 5 18 5c7.18 0 13 5.821 13 13zM5 18c0-2.565.753-4.95 2.036-6.964l17.929 17.929C22.95 30.247 20.565 31 18 31c-7.179 0-13-5.82-13-13z\"/></svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 370.789062 174.078125 L 310.925781 174.078125 C 308.027344 144.964844 295.136719 117.75 274.449219 97.058594 C 253.757812 76.371094 226.542969 63.480469 197.425781 60.582031 L 197.425781 0 L 173.484375 0 L 173.484375 61.179688 C 144.359375 64.054688 117.128906 76.9375 96.4375 97.632812 C 75.742188 118.328125 62.859375 145.554688 59.984375 174.679688 L 0.121094 174.679688 L 0.121094 199.34375 L 59.984375 199.34375 C 62.84375 228.460938 75.722656 255.6875 96.421875 276.367188 C 117.121094 297.042969 144.359375 309.890625 173.484375 312.71875 L 173.484375 372.460938 L 197.425781 372.460938 L 197.425781 312.601562 C 226.539062 309.75 253.765625 296.894531 274.460938 276.21875 C 295.160156 255.542969 308.046875 228.335938 310.925781 199.222656 L 370.789062 199.222656 Z M 185.335938 288.175781 C 165.210938 288.152344 145.550781 282.164062 128.828125 270.96875 C 112.109375 259.773438 99.085938 243.867188 91.402344 225.273438 C 83.71875 206.675781 81.71875 186.21875 85.660156 166.484375 C 89.597656 146.753906 99.300781 128.628906 113.539062 114.410156 C 127.773438 100.191406 145.90625 90.507812 165.644531 86.59375 C 185.382812 82.675781 205.835938 84.699219 224.425781 92.402344 C 243.015625 100.109375 258.898438 113.15625 270.078125 129.886719 C 281.253906 146.621094 287.21875 166.289062 287.21875 186.410156 C 287.265625 199.820312 284.667969 213.109375 279.566406 225.511719 C 274.46875 237.914062 266.96875 249.1875 257.503906 258.6875 C 248.039062 268.1875 236.792969 275.722656 224.40625 280.867188 C 212.023438 286.007812 198.746094 288.65625 185.335938 288.65625 Z M 185.335938 288.175781 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 185.332031 128.542969 C 196.777344 128.542969 207.964844 131.933594 217.484375 138.292969 C 227 144.652344 234.417969 153.691406 238.796875 164.265625 C 243.179688 174.839844 244.324219 186.476562 242.089844 197.699219 C 239.859375 208.925781 234.34375 219.238281 226.253906 227.332031 C 218.160156 235.425781 207.847656 240.9375 196.621094 243.171875 C 185.398438 245.402344 173.757812 244.257812 163.1875 239.875 C 152.609375 235.496094 143.574219 228.078125 137.214844 218.5625 C 130.855469 209.046875 127.460938 197.855469 127.460938 186.410156 C 127.488281 171.070312 133.59375 156.367188 144.441406 145.519531 C 155.289062 134.671875 169.992188 128.566406 185.332031 128.542969 Z M 185.332031 128.542969 \"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 372.8125 175.78125 L 312.5 175.78125 C 306.570312 115.964844 259.332031 68.597656 199.53125 62.5 L 199.53125 1.71875 L 175.46875 1.71875 L 175.46875 62.5 C 115.511719 68.765625 68.269531 116.398438 62.5 176.40625 L 2.1875 176.40625 L 2.1875 201.09375 L 62.5 201.09375 C 68.292969 261.152344 115.871094 308.664062 175.9375 314.375 L 175.9375 375 L 200 375 L 200 314.21875 C 259.703125 308.089844 306.78125 260.679688 312.5 200.9375 L 372.34375 200.9375 L 372.34375 175.78125 Z M 187.5 289.84375 C 167.40625 289.867188 147.761719 283.878906 131.09375 272.65625 C 96.832031 249.789062 79.742188 208.519531 87.8125 168.125 C 91.808594 148.441406 101.476562 130.351562 115.625 116.09375 C 144.636719 86.929688 188.359375 78.113281 226.40625 93.75 C 264.28125 109.484375 288.949219 146.488281 288.90625 187.5 C 288.988281 214.550781 278.304688 240.519531 259.21875 259.6875 C 249.785156 269.242188 238.519531 276.789062 226.09375 281.875 C 213.71875 287.035156 200.441406 289.691406 187.03125 289.6875 Z M 187.5 289.84375 \"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 370.789062 174.078125 L 310.925781 174.078125 C 308.027344 144.964844 295.136719 117.75 274.449219 97.058594 C 253.757812 76.371094 226.542969 63.480469 197.425781 60.582031 L 197.425781 0 L 173.484375 0 L 173.484375 61.179688 C 144.359375 64.054688 117.128906 76.9375 96.4375 97.632812 C 75.742188 118.328125 62.859375 145.554688 59.984375 174.679688 L 0.121094 174.679688 L 0.121094 199.34375 L 59.984375 199.34375 C 62.84375 228.460938 75.722656 255.6875 96.421875 276.367188 C 117.121094 297.042969 144.359375 309.890625 173.484375 312.71875 L 173.484375 372.460938 L 197.425781 372.460938 L 197.425781 312.601562 C 226.539062 309.75 253.765625 296.894531 274.460938 276.21875 C 295.160156 255.542969 308.046875 228.335938 310.925781 199.222656 L 370.789062 199.222656 Z M 185.335938 288.175781 C 165.210938 288.152344 145.550781 282.164062 128.828125 270.96875 C 112.109375 259.773438 99.085938 243.867188 91.402344 225.273438 C 83.71875 206.675781 81.71875 186.21875 85.660156 166.484375 C 89.597656 146.753906 99.300781 128.628906 113.539062 114.410156 C 127.773438 100.191406 145.90625 90.507812 165.644531 86.59375 C 185.382812 82.675781 205.835938 84.699219 224.425781 92.402344 C 243.015625 100.109375 258.898438 113.15625 270.078125 129.886719 C 281.253906 146.621094 287.21875 166.289062 287.21875 186.410156 C 287.265625 199.820312 284.667969 213.109375 279.566406 225.511719 C 274.46875 237.914062 266.96875 249.1875 257.503906 258.6875 C 248.039062 268.1875 236.792969 275.722656 224.40625 280.867188 C 212.023438 286.007812 198.746094 288.65625 185.335938 288.65625 Z M 185.335938 288.175781 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:0.988235;\" d=\"M 233.257812 166.777344 L 224.351562 166.777344 L 224.351562 137.683594 C 224.351562 137.683594 224.351562 95.8125 182.734375 95.8125 C 141.113281 95.8125 141.113281 137.683594 141.113281 137.683594 L 141.113281 166.777344 L 132.207031 166.777344 C 123.335938 166.777344 116.144531 174.015625 116.144531 182.941406 L 116.144531 247.21875 C 116.191406 256.113281 123.367188 263.300781 132.207031 263.300781 L 233.257812 263.300781 C 242.128906 263.300781 249.320312 256.0625 249.320312 247.136719 L 249.320312 182.941406 C 249.320312 174.015625 242.128906 166.777344 233.257812 166.777344 Z M 182.734375 229.800781 C 167.902344 229.800781 160.476562 211.761719 170.960938 201.210938 C 181.449219 190.660156 199.378906 198.128906 199.378906 213.054688 C 199.378906 222.304688 191.925781 229.800781 182.734375 229.800781 Z M 207.703125 166.777344 L 157.761719 166.777344 L 157.761719 141.871094 C 157.761719 129.308594 157.761719 112.558594 182.734375 112.558594 C 207.703125 112.558594 207.703125 129.308594 207.703125 141.871094 Z M 207.703125 166.777344 \"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg    width=\"275px\"    height=\"374px\"    viewBox=\"0 0 275 374\"    version=\"1.1\"    id=\"svg7\"    sodipodi:docname=\"note.svg\"    inkscape:version=\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\"    xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"    xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\">   <defs      id=\"defs11\" />   <path      id=\"path2\"      class=\"selectable\"      style=\"fill:#c60000;fill-opacity:1;fill-rule:nonzero;stroke:#950000;stroke-width:5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"      d=\"M 135.55664,1.9765625 C 74.593645,2.1922681 20.084472,43.910648 7.2773438,104.37109 4.936895,115.41704 4.1435422,126.42334 4.7265625,137.18555 2.5821353,205.89923 56.815085,269.30423 107.08203,335.96094 c 12.32031,15.26562 30.35156,34.07422 30.35156,34.07422 l 27.64453,-32.61328 C 227.98632,255.40992 319.84389,135.74148 238.04492,49.080078 219.42005,26.853995 193.07863,10.556457 161.97656,4.4921875 153.10693,2.7626953 144.26564,1.9457474 135.55664,1.9765625 Z\"/>   <path      id=\"path5936\"      style=\"color:{color};fill:#fffffd;stroke:{color};stroke-width:5;stroke-linecap:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\"      d=\"m 202.54602,49.933374 a 19.846225,19.846225 0 0 0 -14.03347,5.812789 L 137.36365,106.89506 86.838795,56.370195 a 19.845967,19.845967 0 0 0 -14.033473,-5.812787 19.845967,19.845967 0 0 0 -14.033471,5.812787 19.845967,19.845967 0 0 0 0,28.066944 l 50.524859,50.524871 -50.328371,50.32837 a 19.846225,19.846225 0 0 0 0,28.06695 19.846225,19.846225 0 0 0 28.066944,0 l 50.328367,-50.32838 50.95423,50.95424 a 19.845967,19.845967 0 0 0 28.06694,0 19.845967,19.845967 0 0 0 0,-28.06695 L 165.4306,134.96201 216.57949,83.813106 a 19.846225,19.846225 0 0 0 0,-28.066943 19.846225,19.846225 0 0 0 -14.03347,-5.812789 z\" /> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg    width=\"275px\"    height=\"374px\"    viewBox=\"0 0 275 374\"    version=\"1.1\"    id=\"svg7\"    sodipodi:docname=\"resolved.svg\"    inkscape:version=\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\"    xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"    xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\">   <defs      id=\"defs11\" />   <path      id=\"path2\"      class=\"selectable\"      style=\"fill:#00c82e;fill-opacity:1;fill-rule:nonzero;stroke:#40ff00;stroke-width:5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"      d=\"M 135.55664,1.9765625 C 74.593645,2.1922681 20.084472,43.910648 7.2773438,104.37109 4.936895,115.41704 4.1435422,126.42334 4.7265625,137.18555 2.5821353,205.89923 56.815085,269.30423 107.08203,335.96094 c 12.32031,15.26562 30.35156,34.07422 30.35156,34.07422 l 27.64453,-32.61328 C 227.98632,255.40992 319.84389,135.74148 238.04492,49.080078 219.42005,26.853995 193.07863,10.556457 161.97656,4.4921875 153.10693,2.7626953 144.26564,1.9457474 135.55664,1.9765625 Z\"      sodipodi:nodetypes=\"scccccccs\" />   <path      style=\"color:{color};fill:#ffffff;fill-opacity:1;stroke:{color};stroke-width:3.52437;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"      d=\"m 216.35763,81.457377 c -6.31364,-1.014444 -12.65279,1.657101 -16.62944,7.00824 L 117.3564,199.32492 69.393978,152.33285 c -7.532586,-9.1813 -20.4662,-9.07329 -27.311559,-1.91781 -7.087039,7.56459 -8.507731,17.24412 -0.648456,25.76692 l 61.942427,65.80658 c 7.15464,9.62634 20.80539,9.62634 27.96003,0 l 96.3518,-129.67383 c 6.14683,-8.27231 4.87072,-20.317183 -2.85026,-26.902908 -2.45389,-2.092661 -5.37864,-3.456485 -8.48033,-3.954425 z\"      id=\"path3639\"      sodipodi:nodetypes=\"ccccccccccc\" /> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\"fill: none !important;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke:{color};stroke-opacity:1;stroke-miterlimit:4;\" d=\"M 95 50 C 95 74.853125 74.853125 95 50 95 C 25.146875 95 5 74.853125 5 50 C 5 25.146875 25.146875 5 50 5 C 74.853125 5 95 25.146875 95 50 Z M 95 50 \" transform=\"matrix(3.75,0,0,3.75,0,0)\"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"375px\" height=\"375px\" viewBox=\"0 0 375 375\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 101.5625 46.875 C 71.875 46.875 46.875 71.875 46.875 101.5625 C 46.875 131.25 71.875 156.25 101.5625 156.25 C 131.25 156.25 156.25 131.25 156.25 101.5625 C 156.25 71.875 131.25 46.875 101.5625 46.875 Z M 101.5625 125 C 89.0625 125 78.125 114.0625 78.125 101.5625 C 78.125 89.0625 89.0625 78.125 101.5625 78.125 C 114.0625 78.125 125 89.0625 125 101.5625 C 125 114.0625 114.0625 125 101.5625 125 Z M 101.5625 125 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 101.5625 218.75 C 71.875 218.75 46.875 243.75 46.875 273.4375 C 46.875 303.125 71.875 328.125 101.5625 328.125 C 131.25 328.125 156.25 303.125 156.25 273.4375 C 156.25 243.75 131.25 218.75 101.5625 218.75 Z M 101.5625 296.875 C 89.0625 296.875 78.125 285.9375 78.125 273.4375 C 78.125 260.9375 89.0625 250 101.5625 250 C 114.0625 250 125 260.9375 125 273.4375 C 125 285.9375 114.0625 296.875 101.5625 296.875 Z M 101.5625 296.875 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 210.9375 148.4375 L 242.1875 179.6875 L 343.75 78.125 L 281.25 78.125 Z M 210.9375 148.4375 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 168.75 190.625 L 200 221.875 L 151.5625 270.3125 L 125 234.375 Z M 168.75 190.625 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:1;\" d=\"M 142.1875 110.9375 L 109.375 140.625 L 281.25 312.5 L 343.75 312.5 Z M 195.3125 203.125 C 190.625 203.125 187.5 200 187.5 195.3125 C 187.5 190.625 190.625 187.5 195.3125 187.5 C 200 187.5 203.125 190.625 203.125 195.3125 C 203.125 200 200 203.125 195.3125 203.125 Z M 195.3125 203.125 \"/>   </g> </svg>","<script>\nexport let color = \"#000000\"\n</script>\n <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"275px\" height=\"374px\" viewBox=\"0 0 275 374\" version=\"1.1\">   <g id=\"surface1\">     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:0.988235;\" class=\"selectable\" d=\"M 137.433594 370.035156 C 136.605469 368.027344 119.402344 351.226562 107.082031 335.960938 C 34.097656 239.179688 -47.273438 149.257812 47.746094 39.980469 C 89.816406 -0.617188 141.691406 -2.933594 195.023438 15.992188 C 345.191406 102.777344 236.46875 244.351562 165.078125 337.421875 Z M 182.605469 221.6875 C 282.765625 150.148438 205.328125 12.386719 95.28125 58.183594 C 63.148438 75.296875 47.203125 105.070312 46.644531 140.195312 C 45.109375 174.359375 63.277344 202.929688 92.066406 220.429688 C 112.707031 231.652344 121.78125 233.675781 145.152344 232.285156 C 160.300781 231.386719 169.027344 228.914062 182.605469 221.6875 Z M 182.605469 221.6875 \"/>     <path style=\" stroke:none;fill-rule:nonzero;fill:{color};fill-opacity:0.988235;\" d=\"M 108.722656 255.84375 C 37.953125 241.132812 -7.363281 173.46875 7.277344 104.371094 C 21.914062 35.273438 91.019531 -9.34375 161.976562 4.492188 C 232.9375 18.328125 279.128906 85.421875 265.390625 154.699219 C 251.65625 223.972656 183.136719 269.4375 112.003906 256.484375 \"/>   </g> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg    width=\"400\"    height=\"400\"    viewBox=\"0 0 400 400\"    version=\"1.1\"    id=\"svg11\"    sodipodi:docname=\"teardrop_with_hole_green.svg\"    inkscape:version=\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\"    xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"    xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"    xmlns=\"http://www.w3.org/2000/svg\"    xmlns:svg=\"http://www.w3.org/2000/svg\">   <defs      id=\"defs15\" />   <sodipodi:namedview      id=\"namedview13\"      pagecolor=\"#505050\"      bordercolor=\"#eeeeee\"      borderopacity=\"1\"      inkscape:pageshadow=\"0\"      inkscape:pageopacity=\"0\"      inkscape:pagecheckerboard=\"0\"      showgrid=\"false\"      width=\"400px\"      showguides=\"true\"      inkscape:guide-bbox=\"true\"      inkscape:zoom=\"1.8002433\"      inkscape:cx=\"161.08934\"      inkscape:cy=\"210.5271\"      inkscape:current-layer=\"svg11\">     <sodipodi:guide        position=\"199.99891,418.65297\"        orientation=\"1,0\"        id=\"guide832\" />   </sodipodi:namedview>   <g      id=\"surface1\"      transform=\"matrix(1.0785793,0,0,1.0785793,51.765885,-0.40531133)\">     <path        style=\"fill:#007f00;fill-opacity:0.988235;fill-rule:nonzero;stroke:none\"        d=\"m 137.43359,370.03516 c -0.82812,-2.00782 -18.03125,-18.8086 -30.35156,-34.07422 C 34.097656,239.17969 -47.273438,149.25781 47.746094,39.980469 89.816406,-0.617188 141.69141,-2.933594 195.02344,15.992188 345.19141,102.77734 236.46875,244.35156 165.07812,337.42187 Z M 182.60547,221.6875 C 282.76562,150.14844 205.32812,12.386719 95.28125,58.183594 63.148438,75.296875 47.203125,105.07031 46.644531,140.19531 c -1.535156,34.16406 16.632813,62.73438 45.421875,80.23438 20.640624,11.22265 29.714844,13.24609 53.085934,11.85547 15.14844,-0.89844 23.875,-3.3711 37.45313,-10.59766 z m 0,0\"        id=\"path2\" />     <path        style=\"fill:#007f00;fill-opacity:0.988235;fill-rule:nonzero;stroke:none\"        d=\"M 108.72266,255.84375 C 37.953125,241.13281 -7.363281,173.46875 7.277344,104.37109 21.914062,35.273438 91.019531,-9.34375 161.97656,4.492188 232.9375,18.328125 279.12891,85.421875 265.39062,154.69922 251.65625,223.97266 183.13672,269.4375 112.00391,256.48437\"        id=\"path4\" />     <path        style=\"fill:#009400;fill-opacity:1;fill-rule:nonzero;stroke:none\"        d=\"M 117.33203,237.78516 C 64.75,226.24609 31.078125,173.16797 41.957031,118.96875 52.835938,64.765625 104.17969,29.769531 156.89844,40.621094 c 52.72265,10.851562 87.04297,63.484376 76.83593,117.824216 -10.20703,54.33985 -61.11328,90.00391 -113.96484,79.84375\"        id=\"path6\" />     <path        style=\"fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none\"        d=\"M 122.92188,202.85156 C 88.144531,195.28125 65.878906,160.48437 73.074219,124.94531 80.265625,89.40625 114.22266,66.457031 149.08594,73.574219 c 34.86718,7.117187 57.5664,41.625001 50.8164,77.253901 -6.75,35.62891 -40.41797,59.01563 -75.37109,52.35157\"        id=\"path8\" />   </g> </svg> ","<script>\nexport let color = \"#000000\"\n</script>\n <svg         style=\"fill:none\"         version=\"1.1\"         viewBox=\"0 0 100 100\"         height=\"100\"         width=\"100\">         <polygon style=\"fill:{color};fill-opacity:1\" points=\"50,0 0,100 100,100\" /> </svg> ","<script lang=\"ts\">\n  import Pin from \"../../assets/svg/Pin.svelte\";\n  import Square from \"../../assets/svg/Square.svelte\";\n  import Circle from \"../../assets/svg/Circle.svelte\";\n  import Checkmark from \"../../assets/svg/Checkmark.svelte\";\n  import Clock from \"../../assets/svg/Clock.svelte\";\n  import Close from \"../../assets/svg/Close.svelte\";\n  import Crosshair from \"../../assets/svg/Crosshair.svelte\";\n  import Help from \"../../assets/svg/Help.svelte\";\n  import Home from \"../../assets/svg/Home.svelte\";\n  import Invalid from \"../../assets/svg/Invalid.svelte\";\n  import Location from \"../../assets/svg/Location.svelte\";\n  import Location_empty from \"../../assets/svg/Location_empty.svelte\";\n  import Location_locked from \"../../assets/svg/Location_locked.svelte\";\n  import Note from \"../../assets/svg/Note.svelte\";\n  import Resolved from \"../../assets/svg/Resolved.svelte\";\n  import Ring from \"../../assets/svg/Ring.svelte\";\n  import Scissors from \"../../assets/svg/Scissors.svelte\";\n  import Teardrop from \"../../assets/svg/Teardrop.svelte\";\n  import Teardrop_with_hole_green from \"../../assets/svg/Teardrop_with_hole_green.svelte\";\n  import Triangle from \"../../assets/svg/Triangle.svelte\";\n\n  /**\n   * Renders a single icon.\n   *\n   * Icons -placed on top of each other- form a 'Marker' together\n   */\n\n  export let icon: string | undefined;\n  export let color: string | undefined;\n\n</script>\n\n{#if icon}\n  <div class=\"absolute top-0 left-0 w-full h-full\">\n    {#if icon === \"pin\"}\n      <Pin {color} />\n    {:else if icon === \"square\"}\n      <Square {color} />\n    {:else if icon === \"circle\"}\n      <Circle {color} />\n    {:else if icon === \"checkmark\"}\n      <Checkmark {color} />\n    {:else if icon === \"clock\"}\n      <Clock {color} />\n    {:else if icon === \"close\"}\n      <Close {color} />\n    {:else if icon === \"crosshair\"}\n      <Crosshair {color} />\n    {:else if icon === \"help\"}\n      <Help {color} />\n    {:else if icon === \"home\"}\n      <Home {color} />\n    {:else if icon === \"invalid\"}\n      <Invalid {color} />\n    {:else if icon === \"location\"}\n      <Location {color} />\n    {:else if icon === \"location_empty\"}\n      <Location_empty {color} />\n    {:else if icon === \"location_locked\"}\n      <Location_locked {color} />\n    {:else if icon === \"note\"}\n      <Note {color} />\n    {:else if icon === \"resolved\"}\n      <Resolved {color} />\n    {:else if icon === \"ring\"}\n      <Ring {color} />\n    {:else if icon === \"scissors\"}\n      <Scissors {color} />\n    {:else if icon === \"teardrop\"}\n      <Teardrop {color} />\n    {:else if icon === \"teardrop_with_hole_green\"}\n      <Teardrop_with_hole_green {color} />\n    {:else if icon === \"triangle\"}\n      <Triangle {color} />\n    {:else}\n      <img class=\"w-full h-full\" src={icon} />\n    {/if}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { IconConfig } from \"../../Models/ThemeConfig/PointRenderingConfig\";\n  import { Store } from \"../../Logic/UIEventSource\";\n  import Pin from \"../../assets/svg/Pin.svelte\";\n  import Square from \"../../assets/svg/Square.svelte\";\n  import Circle from \"../../assets/svg/Circle.svelte\";\n  import Checkmark from \"../../assets/svg/Checkmark.svelte\";\n  import Clock from \"../../assets/svg/Clock.svelte\";\n  import Close from \"../../assets/svg/Close.svelte\";\n  import Crosshair from \"../../assets/svg/Crosshair.svelte\";\n  import Help from \"../../assets/svg/Help.svelte\";\n  import Home from \"../../assets/svg/Home.svelte\";\n  import Invalid from \"../../assets/svg/Invalid.svelte\";\n  import Location from \"../../assets/svg/Location.svelte\";\n  import Location_empty from \"../../assets/svg/Location_empty.svelte\";\n  import Location_locked from \"../../assets/svg/Location_locked.svelte\";\n  import Note from \"../../assets/svg/Note.svelte\";\n  import Resolved from \"../../assets/svg/Resolved.svelte\";\n  import Ring from \"../../assets/svg/Ring.svelte\";\n  import Scissors from \"../../assets/svg/Scissors.svelte\";\n  import Teardrop from \"../../assets/svg/Teardrop.svelte\";\n  import Teardrop_with_hole_green from \"../../assets/svg/Teardrop_with_hole_green.svelte\";\n  import Triangle from \"../../assets/svg/Triangle.svelte\";\n  import Icon from \"./Icon.svelte\";\n\n  /**\n   * Renders a single icon.\n   *\n   * Icons -placed on top of each other- form a 'Marker' together\n   */\n  export let icon: IconConfig;\n  export let tags: Store<Record<string, string>>;\n\n  let iconItem = icon.icon?.GetRenderValue(tags)?.txt;\n  $: iconItem = icon.icon?.GetRenderValue($tags)?.txt;\n  let color = icon.color?.GetRenderValue(tags)?.txt ?? \"#000000\";\n  $: color = icon.color?.GetRenderValue($tags)?.txt ?? \"#000000\";\n\n</script>\n\n<Icon icon={iconItem} {color}/>\n","<script lang=\"ts\">\n\n  import PointRenderingConfig, { IconConfig } from \"../../Models/ThemeConfig/PointRenderingConfig\";\n  import { Store } from \"../../Logic/UIEventSource\";\n  import DynamicIcon from \"./DynamicIcon.svelte\";\n\n  /**\n   * Renders a 'marker', which consists of multiple 'icons'\n   */\n  export let config: PointRenderingConfig;\n  let icons: IconConfig[] = config.marker;\n  export let tags: Store<Record<string, string>>;\n\n</script>\n{#if config !== undefined}\n  <div class=\"relative w-full h-full\">\n    {#each icons as icon}\n      <DynamicIcon {icon} {tags} />\n    {/each}\n  </div>\n{/if}\n","import PointRenderingConfigJson from \"./Json/PointRenderingConfigJson\"\nimport TagRenderingConfig from \"./TagRenderingConfig\"\nimport { TagsFilter } from \"../../Logic/Tags/TagsFilter\"\nimport { TagUtils } from \"../../Logic/Tags/TagUtils\"\nimport { Utils } from \"../../Utils\"\nimport Svg from \"../../Svg\"\nimport WithContextLoader from \"./WithContextLoader\"\nimport { ImmutableStore, Store } from \"../../Logic/UIEventSource\"\nimport BaseUIElement from \"../../UI/BaseUIElement\"\nimport { FixedUiElement } from \"../../UI/Base/FixedUiElement\"\nimport Img from \"../../UI/Base/Img\"\nimport Combine from \"../../UI/Base/Combine\"\nimport { VariableUiElement } from \"../../UI/Base/VariableUIElement\"\nimport { TagRenderingConfigJson } from \"./Json/TagRenderingConfigJson\"\nimport SvelteUIElement from \"../../UI/Base/SvelteUIElement\"\nimport DynamicMarker from \"../../UI/Map/DynamicMarker.svelte\"\n\nexport class IconConfig extends WithContextLoader {\n    public readonly icon: TagRenderingConfig\n    public readonly color: TagRenderingConfig\n\n    public static readonly defaultIcon = new IconConfig({ icon: \"pin\", color: \"#ff9939\" })\n    constructor(\n        config: {\n            icon: string | TagRenderingConfigJson\n            color?: string | TagRenderingConfigJson\n        },\n        context?: string\n    ) {\n        super(config, context)\n        this.icon = this.tr(\"icon\")\n        this.color = this.tr(\"color\")\n    }\n}\n\nexport default class PointRenderingConfig extends WithContextLoader {\n    static readonly allowed_location_codes: ReadonlySet<string> = new Set<string>([\n        \"point\",\n        \"centroid\",\n        \"start\",\n        \"end\",\n        \"projected_centerpoint\",\n    ])\n    public readonly location: Set<\n        \"point\" | \"centroid\" | \"start\" | \"end\" | \"projected_centerpoint\" | string\n    >\n\n    public readonly marker: IconConfig[]\n    public readonly iconBadges: { if: TagsFilter; then: TagRenderingConfig }[]\n    public readonly iconSize: TagRenderingConfig\n    public readonly anchor: TagRenderingConfig\n\n    public readonly label: TagRenderingConfig\n    public readonly labelCss: TagRenderingConfig\n    public readonly labelCssClasses: TagRenderingConfig\n    public readonly rotation: TagRenderingConfig\n    public readonly cssDef: TagRenderingConfig\n    public readonly cssClasses?: TagRenderingConfig\n    public readonly pitchAlignment?: TagRenderingConfig\n    public readonly rotationAlignment?: TagRenderingConfig\n\n    constructor(json: PointRenderingConfigJson, context: string) {\n        super(json, context)\n\n        if (json === undefined || json === null) {\n            throw `At ${context}: Invalid PointRenderingConfig: undefined or null`\n        }\n\n        if (typeof json.location === \"string\") {\n            json.location = [json.location]\n        }\n\n        this.location = new Set(json.location)\n\n        this.location.forEach((l) => {\n            const allowed = PointRenderingConfig.allowed_location_codes\n            if (!allowed.has(l)) {\n                throw `A point rendering has an invalid location: '${l}' is not one of ${Array.from(\n                    allowed\n                ).join(\", \")} (at ${context}.location)`\n            }\n        })\n\n        if (json.marker === undefined && json.label === undefined) {\n            throw `At ${context}: A point rendering should define at least an marker or a label`\n        }\n\n        if (this.location.size == 0) {\n            throw (\n                \"A pointRendering should have at least one 'location' to defined where it should be rendered. (At \" +\n                context +\n                \".location)\"\n            )\n        }\n        this.marker = (json.marker ?? []).map((m) => new IconConfig(<any>m))\n        if (json.css !== undefined) {\n            this.cssDef = this.tr(\"css\", undefined)\n        }\n        this.cssClasses = this.tr(\"cssClasses\", undefined)\n        this.labelCss = this.tr(\"labelCss\", undefined)\n        this.labelCssClasses = this.tr(\"labelCssClasses\", undefined)\n        this.iconBadges = (json.iconBadges ?? []).map((overlay, i) => {\n            return {\n                if: TagUtils.Tag(overlay.if),\n                then: new TagRenderingConfig(overlay.then, `iconBadges.${i}`),\n            }\n        })\n\n        if (typeof json.iconSize === \"string\") {\n            const s = json.iconSize\n            if ([\"bottom\", \"top\", \"center\"].some((e) => s.endsWith(e))) {\n                throw (\n                    \"At \" +\n                    context +\n                    \" in : iconSize uses legacy ,bottom, center or top postfix. Use the field `anchor` instead.\"\n                )\n            }\n        }\n        this.iconSize = this.tr(\"iconSize\", \"40,40\", context + \".iconsize\")\n        this.anchor = this.tr(\"anchor\", \"center\", context + \".anchor\")\n        this.label = this.tr(\"label\", undefined, context + \".label\")\n        this.rotation = this.tr(\"rotation\", \"0\", context + \".rotation\")\n        this.pitchAlignment = this.tr(\"pitchAlignment\", \"canvas\", context + \".pitchAlignment\")\n        this.rotationAlignment = this.tr(\n            \"rotationAlignment\",\n            json.pitchAlignment === \"map\" ? \"map\" : \"canvas\",\n            context + \".rotationAlignment\"\n        )\n    }\n\n    /**\n     * Given a single HTML spec (either a single image path OR \"image_path_to_known_svg:fill-colour\", returns a fixedUIElement containing that\n     * The element will fill 100% and be positioned absolutely with top:0 and left: 0\n     */\n    private static FromHtmlSpec(htmlSpec: string, style: string, isBadge = false): BaseUIElement {\n        if (htmlSpec === undefined) {\n            return undefined\n        }\n        const match = htmlSpec.match(/([a-zA-Z0-9_]*):([^;]*)/)\n        if (match !== null && Svg.All[match[1] + \".svg\"] !== undefined) {\n            const svg = Svg.All[match[1] + \".svg\"] as string\n            const targetColor = match[2]\n            const img = new Img(\n                svg.replace(/(rgb\\(0%,0%,0%\\)|#000000|#000)/g, targetColor),\n                true\n            ).SetStyle(style)\n            if (isBadge) {\n                img.SetClass(\"badge\")\n            }\n            return img\n        } else if (Svg.All[htmlSpec + \".svg\"] !== undefined) {\n            const svg = Svg.All[htmlSpec + \".svg\"] as string\n            const img = new Img(svg, true).SetStyle(style)\n            if (isBadge) {\n                img.SetClass(\"badge\")\n            }\n            return img\n        } else {\n            return new FixedUiElement(`<img src=\"${htmlSpec}\" style=\"${style}\" />`)\n        }\n    }\n\n    private static FromHtmlMulti(\n        multiSpec: string,\n        rotation: string,\n        isBadge: boolean,\n        defaultElement: BaseUIElement = undefined,\n        options?: {\n            noFullWidth?: boolean\n        }\n    ) {\n        if (multiSpec === undefined) {\n            return defaultElement\n        }\n        const style = `width:100%;height:100%;transform: rotate( ${rotation} );display:block;position: absolute; top: 0; left: 0`\n\n        const htmlDefs = multiSpec.trim()?.split(\";\") ?? []\n        const elements = Utils.NoEmpty(htmlDefs).map((def) =>\n            PointRenderingConfig.FromHtmlSpec(def, style, isBadge)\n        )\n        if (elements.length === 0) {\n            return defaultElement\n        } else {\n            const combine = new Combine(elements).SetClass(\"relative block\")\n            if (options?.noFullWidth) {\n                return combine\n            }\n            combine.SetClass(\"w-full h-full\")\n            return combine\n        }\n    }\n\n    public GetBaseIcon(tags?: Record<string, string>): BaseUIElement {\n        return new SvelteUIElement(DynamicMarker, { config: this, tags: new ImmutableStore(tags) })\n    }\n    public RenderIcon(\n        tags: Store<Record<string, string>>,\n        options?: {\n            noSize?: false | boolean\n            includeBadges?: true | boolean\n        }\n    ): {\n        html: BaseUIElement\n        iconAnchor: [number, number]\n    } {\n        function num(str, deflt = 40) {\n            const n = Number(str)\n            if (isNaN(n)) {\n                return deflt\n            }\n            return n\n        }\n\n        function render(tr: TagRenderingConfig, deflt?: string): string {\n            if (tags === undefined) {\n                return deflt\n            }\n            const str = tr?.GetRenderValue(tags.data)?.txt ?? deflt\n            return Utils.SubstituteKeys(str, tags.data).replace(/{.*}/g, \"\")\n        }\n\n        const iconSize = render(this.iconSize, \"40,40\").split(\",\")\n\n        const iconW = num(iconSize[0])\n        let iconH = num(iconSize[1])\n\n        const anchor = render(this.anchor, \"center\")\n        const mode = anchor?.trim()?.toLowerCase() ?? \"center\"\n        // in MapLibre, the offset is relative to the _center_ of the object, with left = [-x, 0] and up = [0,-y]\n        let anchorW = 0\n        let anchorH = 0\n        if (mode === \"left\") {\n            anchorW = -iconW / 2\n        }\n        if (mode === \"right\") {\n            anchorW = iconW / 2\n        }\n\n        if (mode === \"top\") {\n            anchorH = iconH / 2\n        }\n        if (mode === \"bottom\") {\n            anchorH = -iconH / 2\n        }\n\n        const icon = new SvelteUIElement(DynamicMarker, { config: this, tags }).SetClass(\n            \"w-full h-full\"\n        )\n        let badges = undefined\n        if (options?.includeBadges ?? true) {\n            badges = this.GetBadges(tags)\n        }\n        const iconAndBadges = new Combine([icon, badges]).SetClass(\"block relative\")\n\n        if (!options?.noSize) {\n            iconAndBadges.SetStyle(`width: ${iconW}px; height: ${iconH}px`)\n        } else {\n            iconAndBadges.SetClass(\"w-full h-full\")\n        }\n\n        const css = this.cssDef?.GetRenderValue(tags.data)?.txt\n        const cssClasses = this.cssClasses?.GetRenderValue(tags.data)?.txt\n\n        let label = this.GetLabel(tags)\n\n        let htmlEl: BaseUIElement\n        if (icon === undefined && label === undefined) {\n            htmlEl = undefined\n        } else if (icon === undefined) {\n            htmlEl = new Combine([label])\n        } else if (label === undefined) {\n            htmlEl = new Combine([iconAndBadges])\n        } else {\n            htmlEl = new Combine([iconAndBadges, label]).SetStyle(\"flex flex-col\")\n        }\n\n        if (css !== undefined) {\n            htmlEl?.SetStyle(css)\n        }\n\n        if (cssClasses !== undefined) {\n            htmlEl?.SetClass(cssClasses)\n        }\n        return {\n            html: htmlEl,\n            iconAnchor: [anchorW, anchorH],\n        }\n    }\n\n    private GetBadges(tags: Store<Record<string, string>>): BaseUIElement {\n        if (this.iconBadges.length === 0) {\n            return undefined\n        }\n        return new VariableUiElement(\n            tags.map((tags) => {\n                const badgeElements = this.iconBadges.map((badge) => {\n                    if (!badge.if.matchesProperties(tags)) {\n                        // Doesn't match...\n                        return undefined\n                    }\n\n                    const htmlDefs = Utils.SubstituteKeys(\n                        badge.then.GetRenderValue(tags)?.txt,\n                        tags\n                    )\n                    if (htmlDefs.startsWith(\"<\") && htmlDefs.endsWith(\">\")) {\n                        // This is probably an HTML-element\n                        return new FixedUiElement(Utils.SubstituteKeys(htmlDefs, tags))\n                            .SetStyle(\"width: 1.5rem\")\n                            .SetClass(\"block\")\n                    }\n                    const badgeElement = PointRenderingConfig.FromHtmlMulti(\n                        htmlDefs,\n                        \"0\",\n                        true\n                    )?.SetClass(\"block relative\")\n                    if (badgeElement === undefined) {\n                        return undefined\n                    }\n                    return new Combine([badgeElement]).SetStyle(\"width: 1.5rem\").SetClass(\"block\")\n                })\n\n                return new Combine(badgeElements).SetClass(\"inline-flex h-full\")\n            })\n        ).SetClass(\"absolute bottom-0 right-1/3 h-1/2 w-0\")\n    }\n\n    private GetLabel(tags: Store<Record<string, string>>): BaseUIElement {\n        if (this.label === undefined) {\n            return undefined\n        }\n        const cssLabel = this.labelCss?.GetRenderValue(tags.data)?.txt\n        const cssClassesLabel = this.labelCssClasses?.GetRenderValue(tags.data)?.txt\n        const self = this\n        return new VariableUiElement(\n            tags.map((tags) => {\n                const label = self.label\n                    ?.GetRenderValue(tags)\n                    ?.Subs(tags)\n                    ?.SetClass(\"block center absolute text-center \")\n                    ?.SetClass(cssClassesLabel)\n                if (cssLabel) {\n                    label.SetStyle(cssLabel)\n                }\n                return new Combine([label]).SetClass(\"flex flex-col items-center\")\n            })\n        )\n    }\n}\n"],"names":["_Title","BaseUIElement","embedded","level","__publicField","FixedUiElement","text","Utils","_a","_c","_b","el","h","Title","TagsFilter","Tag","key","value","properties","foundValue","linkToWiki","shorten","currentProperties","v","other","f","Or","or","tagsFilter","choices","subChoices","t","selfTag","matchFound","i","otherTag","subkeys","result","knownExpression","newOrs","tag","And","r","optimizedRaw","optimized","containedAnds","tf","dirty","cleanedContainedANds","outer","containedAnd","known","cleaned","commonValues","cv","candidate","newAnds","elements","TagUtils","RegexTag","invert","fromTag","possibleRegex","inv","src","modifier","tags","oper","valuesMatch","and","filter","values","ands","c","allChoices","andElement","andElementFilter","newChoices","choice","x","opt","k","containedOrs","cleanedContainedOrs","containedOr","ca","sub","ComparingTag","predicate","representation","SubstitutingTag","template","dict","expectedValue","_TagUtils","kvs","kv","availableTags","neededTags","neededKey","availableValues","neededValues","neededValue","tagsFilters","allowRegex","keyValues","s","keystr","tagFilters","splitted","splitKey","actualValue","json","context","ctx","e","filters","usePopularity","a","b","toplevel","match","_","j","guard","blacklist","listToFilter","guards","spec","start","end","operator","comparator","split","val","keyRegex","valueRegex","withRegex","rta","rtb","countA","countB","tfs","seperator","joined","mode","doc","key_counts","__viteBrowserExternal","List","uiElements","ordered","Translations","subEl","subHtml","item","Paragraph","html","Validator","name","explanation","inputmode","textArea","tr","getCountry","StringValidator","TextValidator","DateValidator","str","d","month","day","year","IntValidator","n","NatValidator","spr","LengthValidator","DirectionValidator","utils","language","array","obj","encodeCharacter","char","simplifyTextAttributes","multivalue","data","simplified","lang","getValue","singleValue","simplify_text_attributes","wikibase_time_to_date_object","wikibaseTime","sign","yearMonthDay","withinDay","rest","fullDateData","expandedYearDate","date","toDateObject","require$$0","helpers","id","guid","hash","entityId","propertyId","title","namespace","isEntityNamespace","entityNamespaces","isNonNestedEntityId","bestEffort","fn","toEpochTime","toISOString","toSimpleDay","time","precision","filename","width","url","parts","helpers_1","wikibaseTimeToISOString","wikibaseTimeToEpochTime","wikibaseTimeToSimpleDay","simple","datavalue","monolingualtext","options","entity","prefixedId","entityLetter","prefix","quantity","amount","richValue","coordinate","timeValue","getTimeConverter","timezone","before","after","calendarmodel","converter","timeConverters","parsers","parse_claim","datatype","claimId","err","truthyPropertyClaims","propClaims","aggregate","aggregatePerRank","nonDeprecatedPropertyClaims","claim","rank","truthyClaims","claims","truthClaimsOnly","property","parseClaim","uniq","require$$1","require$$2","simplifyClaims","propertyPrefix","parseOptions","simpleClaims","simplifyPropertyClaims","keepNonTruthy","keepNonDeprecated","areSubSnaks","simplifyClaim","defined","keepQualifiers","keepReferences","keepIds","keepHashes","keepTypes","keepSnaktypes","keepRanks","parseKeepOptions","mainsnak","snaktype","isQualifierSnak","isReferenceSnak","valueObj","subSnaksOptions","getSubSnakOptions","simplifyQualifiers","simplifyReferences","entityPrefix","qualifiers","simplifyPropertyQualifiers","propertyQualifiers","references","refRecord","simplifyReferenceRecord","snaks","keepOptions","optionName","simplify_claims","isFormId","simplifyRepresentations","simplifyForm","form","representations","grammaticalFeatures","simplifyForms","forms","simplify_forms","isSenseId","simplifyGlosses","simplifySense","sense","glosses","simplifySenses","senses","simplify_senses","sitelinks_languages","fixedEncodeURIComponent","replaceSpaceByUnderscores","isPlainObject","isPropertyId","wikidataBase","languages","getSitelinkUrl","site","shortSiteKey","specialUrlBuilder","siteUrlBuilders","project","getSitelinkData","wikimediaSite","subdomain","sitelinkUrlPattern","matchData","specialProjectName","specialSites","projectSuffix","projectsBySuffix","isSitelinkKey","sitelinks","simplify_sitelinks","addUrl","aggregateValues","index","simplify_sparql_results","input","vars","results","varName","parseValue","richVars","associatedVars","standaloneVars","identifyVars","getSimplifiedResult","getDatatypesParsers","parseUri","numberParser","datatypesParsers","passValue","uri","convertStatementUriToGuid","isAssociatedVar","richVar","otherRichVar","associatedVarPattern","varNameA","pattern","simplifiedResult","richVarData","associatedVarName","addAssociatedValue","shortAssociatedVarName","specialNames","associatedVarData","labels","descriptions","aliases","lemmas","propertyClaims","qualifier","require$$3","require$$4","sparqlResults","require$$5","simplify","simplifyEntity","type","simplifyIfDefined","attribute","simplifyEntities","entities","simplify_entity","wb","res","parse_responses","isBrowser","stringifyQuery","queryObj","build_url","instanceApiEndpoint","types","search_entities","buildUrl","search","limit","format","uselang","offset","params","namespacePattern","cirrus_search","shortKey","haswbstatement","profile","sort","prop","srsearch","statements","statement","validate","testName","validate_1","forceArray","shortLang","get_entities","ids","props","redirects","query","get_many_entities","getEntities","getIdsGroups","idsGroup","groups","group","get_revisions","uniqueId","getEpochSeconds","user","excludeuser","earliestPointInMs","get_entity_revision","instance","wgScriptPath","revision","get_entities_from_sitelinks","titles","sites","parseSite","sparql_query","sparqlEndpoint","sparql","isItemId","itemsOnly","get_reverse_claims","sparqlQuery","caseInsensitive","keepProperties","valueFn","caseInsensitiveValueQuery","directValueQuery","prefixifyProperty","getValueBlock","getValueString","valStr","parse","sitelinksHelpers","rankHelpers","tip","common","WBK","config","wikibaseApiFunctions","instanceRoot","validateEndpoint","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","missingInstance","wikibaseQueryServiceFunctions","require$$14","require$$15","missingSparqlEndpoint","missingConfig","missingParameter","wikibaseSdk","wikidataSdk","WikidataResponse","wikisites","commons","labelName","descr","claimsJson","wds.simplify","claimsList","WikidataLexeme","previousSenses","_Wikidata","cached","UIEventSource","instanceOf","q","minusPhrases","wds.sparqlQuery","label","description","num","page","maxCount","pageCount","newOptions","searchResults","maybeResponses","identifierPrefix","trimmed","keys","stmt","uncached","firstKey","response","Wikidata","InputElement","TextField","textfield","self","placeholderStore","placeholder","Store","Translation","Locale","inputEl","field","endDistance","newCursorPos","event","Loading","Combine","msg","Svg","ImageProvider","allTags","prefixes","relevantUrls","seenValues","promises","promise","providedImage","LicenseInfo","Wikimedia","categoryName","maxLoad","continueParameter","imageOverview","member","recursive","_WikimediaImageProvider","path","part","backlink","img","Link","hasCommonsPrefix","image","licenseInfo","pageInfo","license","_d","_e","_f","_g","_h","_i","WikimediaImageProvider","_WikidataPreviewBox","VariableUiElement","wikidataId","inited","wikidata","maybeWikidata","link","info","imageUrl","Img","els","extraProperty","hasAllRequirements","requirement","display","elems","WikidataPreviewBox","Table","header","contents","row","headerMarkdownParts","hel","headerSep","table","sortmode","headerElems","elem","thead","headerElem","td","htmlElem","style","sortCol","descending","col","rows","ac","bc","_WikidataSearchBox","searchField","selectedWikidataId","tooShort","ImmutableStore","searchResult","searchText","Stores","previews","searchResultsOrFail","wikidataresponse","selected","WikidataSearchBox","WikidataValidator","out","PNatValidator","FloatValidator","PFloatValidator","tester","email","valid","domainParts","EmailValidator","emailValidatorLibrary.validate","UrlValidator","blacklistedTrackingParams","dontLike","metadata","withMetadataArgument","func","_arguments","args","_typeof","_defineProperties","target","descriptor","_createClass","Constructor","protoProps","staticProps","_classCallCheck","_inherits","subClass","superClass","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","call","_assertThisInitialized","_wrapNativeSuper","Class","_cache","_isNativeFunction","Wrapper","_construct","Parent","o","p","ParseError","_Error","_super","code","_this","MIN_LENGTH_FOR_NSN","MAX_LENGTH_FOR_NSN","MAX_LENGTH_COUNTRY_CODE","VALID_DIGITS","DASHES","SLASHES","DOTS","WHITESPACE","BRACKETS","TILDES","VALID_PUNCTUATION","PLUS_CHARS","compare","pa","pb","na","nb","V3","V4","DEFAULT_EXT_PREFIX","CALLING_CODE_REG_EXP","Metadata","validateMetadata","setVersion","countryCode","country","callingCode","countryCodes","NumberingPlan","_type","globalMetadataObject","formats","Format","_type2","getType","Type","FIRST_GROUP_ONLY_PREFIX_PATTERN","is_object","type_of","getCountryCallingCode","isSupportedCountry","version","RFC3966_EXTN_PREFIX","getExtensionDigitsPattern","maxLength","createExtensionPattern","purpose","extLimitAfterExplicitLabel","extLimitAfterLikelyLabel","extLimitAfterAmbiguousChar","extLimitWhenNotSure","possibleSeparatorsBetweenNumberAndExtLabel","possibleCharsAfterExtLabel","optionalExtnSuffix","explicitExtLabels","ambiguousExtLabels","ambiguousSeparator","possibleSeparatorsNumberExtLabelNoComma","autoDiallingAndExtLabelsFound","rfcExtn","explicitExtn","ambiguousExtn","americanStyleExtnWithSuffix","autoDiallingExtn","onlyCommasExtn","MIN_LENGTH_PHONE_NUMBER_PATTERN","VALID_PHONE_NUMBER","VALID_PHONE_NUMBER_START_REG_EXP","VALID_PHONE_NUMBER_WITH_EXTENSION","VALID_PHONE_NUMBER_PATTERN","isViablePhoneNumber","number","isViablePhoneNumberStart","EXTN_PATTERN","extractExtension","numberWithoutExtension","matches","DIGITS","parseDigit","character","_createForOfIteratorHelperLoose","allowArrayLike","it","_unsupportedIterableToArray","minLen","_arrayLikeToArray","arr","len","arr2","parseIncompletePhoneNumber","string","_iterator","_step","parsePhoneNumberCharacter","prevParsedCharacters","mergeArrays","merged","element","checkNumberLength","nationalNumber","checkNumberLengthForType","type_info","possible_lengths","mobile_type","actual_length","minimum_length","isPossiblePhoneNumber","isPossibleNumber","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arr","_n","_s","parseRFC3966","ext","_part$split","_part$split2","formatRFC3966","_ref","matchesEntirely","regular_expression","NON_FIXED_LINE_PHONE_TYPES","getNumberType","isNumberTypeEqualTo","isValidNumber","national_number","getPossibleCountriesForNumber","_metadata","possibleCountries","couldNationalNumberBelongToCountry","applyInternationalSeparatorStyle","formattedNumber","FIRST_GROUP_PATTERN","formatNationalNumberUsingFormat","useInternationalFormat","withNationalPrefix","SINGLE_IDD_PREFIX_REG_EXP","getIddPrefix","countryMetadata","ownKeys","object","enumerableOnly","symbols","sym","_objectSpread","source","_defineProperty","DEFAULT_OPTIONS","extension","formatNumber","countryCallingCode","formatNationalNumber","addExtension","formatIDD","carrierCode","formatAs","chooseFormatForNumber","availableFormats","nationalNnumber","lastLeadingDigitsPattern","formatExtension","fromCountry","fromCountryCallingCode","iddPrefix","PhoneNumber","isCountryCode","phoneNumber","_format","CAPTURING_DIGIT_PATTERN","stripIddPrefix","IDDPrefixPattern","matchedGroups","extractNationalNumberFromPossiblyIncompleteNumber","prefixPattern","prefixMatch","capturedGroupsCount","hasCapturedGroups","prefixBeforeNationalNumber","nationalPrefix","possiblePositionOfTheFirstCapturedGroup","possibleNationalPrefix","extractNationalNumber","_extractNationalNumbe","shouldHaveExtractedNationalPrefix","isPossibleIncompleteNationalNumber","nationalNumberBefore","nationalNumberAfter","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","possibleShorterNumber","possibleShorterNationalNumber","_extractNationalNumbe2","extractCountryCallingCode","numberWithoutIDD","_extractCountryCallin","shorterNumber","_countryCallingCode","getCountryByNationalNumber","nationalPhoneNumber","USE_NON_GEOGRAPHIC_COUNTRY_CODE","getCountryByCallingCode","MAX_INPUT_STRING_LENGTH","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","_parseInput","parseInput","formattedPhoneNumber","error","_parsePhoneNumber","parsePhoneNumber","extractFormattedPhoneNumber","extract","throwOnError","startsAt","v2","withExtensionStripped","defaultCountry","defaultCallingCode","exactCountry","parseNumber","normalizeArguments","_Array$prototype$slic","_Array$prototype$slic2","arg_1","arg_2","arg_3","arg_4","isObject","parsePhoneNumberFromString","_normalizeArguments","parsePhoneNumberFromString_","_parsePhoneNumberFromString","PhoneValidator","requestCountry","generic","OpeningHoursValidator","ColorValidator","TagKeyValidator","_SimpleTagValidator","keyFeedback","SimpleTagValidator","_ImageUrlValidator","superF","ImageUrlValidator","TranslationValidator","_FediverseValidator","host","FediverseValidator","_IconValidator","sloppy","close","IconValidator","licenses","l","TagValidator","IdValidator","_Validators","explanations","map","validator","Validators","TagRenderingConfig","translationKey","layerId","cl","typeDescription","tg","commonIconSize","m","mapping","usedKeys","expectedKey","allKeys","allHaveIfNot","multiAnswer","isQuestionable","commonSize","hideInAnswer","addExtraTags","icon","iconClass","stripped","prioritySearch","mp","free","freeformKeyDefined","usedFreeformValues","applicableMappings","leftovers","leftover","TypedTranslation","translations","answerMappings","keyset","commonKey","freeformValue","singleSelectedMapping","multiSelectedMapping","selectedMappings","unselectedMappings","someMappingIsShown","useFreeform","withRender","mappings","msgs","condition","WithContextLoader","deflt","translationContext","tagRenderings","renderings","preparedConfig","insert","svg","anchor","append","defs","color","$$props","g","path0","path1","path2","path3","path4","sodipodi_namedview","sodipodi_guide","polygon","div","attr","img_src_value","create_if_block","iconItem","$$invalidate","$tags","each_blocks","if_block","icons","_IconConfig","IconConfig","_PointRenderingConfig","allowed","overlay","htmlSpec","isBadge","targetColor","multiSpec","rotation","defaultElement","htmlDefs","def","combine","SvelteUIElement","DynamicMarker","render","iconSize","iconW","iconH","anchorW","anchorH","badges","iconAndBadges","css","cssClasses","htmlEl","badgeElements","badge","badgeElement","cssLabel","cssClassesLabel","PointRenderingConfig"],"mappings":"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,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC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"}