{"version":3,"file":"Svg-88d0a2ca.js","sources":["../../src/UI/BaseUIElement.ts","../../src/UI/Base/SvelteUIElement.ts","../../node_modules/svelte/internal/index.mjs","../../src/UI/Base/Img.ts","../../src/Svg.ts"],"sourcesContent":["/**\n * A thin wrapper around a html element, which allows to generate a HTML-element.\n *\n * Assumes a read-only configuration, so it has no 'ListenTo'\n */\nimport { Utils } from \"../Utils\"\n\nexport default abstract class BaseUIElement {\n    protected _constructedHtmlElement: HTMLElement\n    protected isDestroyed = false\n    protected readonly clss: Set<string> = new Set<string>()\n    protected style: string\n    private _onClick: () => void | Promise<void>\n\n    public onClick(f: () => void) {\n        this._onClick = f\n        this.SetClass(\"cursor-pointer\")\n        if (this._constructedHtmlElement !== undefined) {\n            this._constructedHtmlElement.onclick = f\n        }\n        return this\n    }\n\n    AttachTo(divId: string) {\n        let element = document.getElementById(divId)\n        if (element === null) {\n            if (Utils.runningFromConsole) {\n                this.ConstructElement()\n                return\n            }\n            throw \"SEVERE: could not attach UIElement to \" + divId\n        }\n\n        let alreadyThere = false\n        const elementToAdd = this.ConstructElement()\n        const childs = Array.from(element.childNodes)\n        for (const child of childs) {\n            if (child === elementToAdd) {\n                alreadyThere = true\n                continue\n            }\n            element.removeChild(child)\n        }\n\n        if (elementToAdd !== undefined && !alreadyThere) {\n            element.appendChild(elementToAdd)\n        }\n\n        return this\n    }\n\n    public ScrollIntoView() {\n        if (this._constructedHtmlElement === undefined) {\n            return\n        }\n        this._constructedHtmlElement?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n        })\n    }\n    /**\n     * Adds all the relevant classes, space separated\n     */\n    public SetClass(clss: string) {\n        if (clss == undefined) {\n            return this\n        }\n        const all = clss.split(\" \").map((clsName) => clsName.trim())\n        let recordedChange = false\n        for (let c of all) {\n            c = c.trim()\n            if (this.clss.has(clss)) {\n                continue\n            }\n            if (c === undefined || c === \"\") {\n                continue\n            }\n            this.clss.add(c)\n            recordedChange = true\n        }\n        if (recordedChange) {\n            this._constructedHtmlElement?.classList.add(...Array.from(this.clss))\n        }\n        return this\n    }\n\n    public RemoveClass(classes: string): BaseUIElement {\n        const all = classes.split(\" \").map((clsName) => clsName.trim())\n        for (let clss of all) {\n            if (this.clss.has(clss)) {\n                this.clss.delete(clss)\n                this._constructedHtmlElement?.classList.remove(clss)\n            }\n        }\n        return this\n    }\n\n    public HasClass(clss: string): boolean {\n        return this.clss.has(clss)\n    }\n\n    public SetStyle(style: string): BaseUIElement {\n        this.style = style\n        if (this._constructedHtmlElement !== undefined) {\n            this._constructedHtmlElement.style.cssText = style\n        }\n        return this\n    }\n\n    /**\n     * The same as 'Render', but creates a HTML element instead of the HTML representation\n     */\n    public ConstructElement(): HTMLElement {\n        if (typeof window === undefined) {\n            return undefined\n        }\n\n        if (this._constructedHtmlElement !== undefined) {\n            return this._constructedHtmlElement\n        }\n\n        try {\n            const el = this.InnerConstructElement()\n\n            if (el === undefined) {\n                return undefined\n            }\n\n            this._constructedHtmlElement = el\n            const style = this.style\n            if (style !== undefined && style !== \"\") {\n                el.style.cssText = style\n            }\n            if (this.clss?.size > 0) {\n                try {\n                    el.classList.add(...Array.from(this.clss))\n                } catch (e) {\n                    console.error(\n                        \"Invalid class name detected in:\",\n                        Array.from(this.clss).join(\" \"),\n                        \"\\nErr msg is \",\n                        e\n                    )\n                }\n            }\n\n            if (this._onClick !== undefined) {\n                const self = this\n                el.onclick = async (e) => {\n                    // @ts-ignore\n                    if (e.consumed) {\n                        return\n                    }\n                    const v = self._onClick()\n                    if (typeof v === \"object\") {\n                        await v\n                    }\n                    // @ts-ignore\n                    e.consumed = true\n                }\n                el.classList.add(\"cursor-pointer\")\n            }\n\n            return el\n        } catch (e) {\n            const domExc = e as DOMException\n            if (domExc) {\n                console.error(\n                    \"An exception occured\",\n                    domExc.code,\n                    domExc.message,\n                    domExc.name,\n                    domExc\n                )\n            }\n            console.error(e)\n        }\n    }\n\n    public AsMarkdown(): string {\n        throw \"AsMarkdown is not implemented; implement it in the subclass\"\n    }\n\n    public Destroy() {\n        this.isDestroyed = true\n    }\n\n    protected abstract InnerConstructElement(): HTMLElement\n}\n","import BaseUIElement from \"../BaseUIElement\"\n\nimport { SvelteComponentTyped } from \"svelte\"\n\n/**\n * The SvelteUIComponent serves as a translating class which which wraps a SvelteElement into the BaseUIElement framework.\n * Also see ToSvelte.svelte for the opposite conversion\n */\nexport default class SvelteUIElement<\n    Props extends Record<string, any> = any,\n    Events extends Record<string, any> = any,\n    Slots extends Record<string, any> = any\n> extends BaseUIElement {\n    private readonly _svelteComponent: {\n        new (args: {\n            target: HTMLElement\n            props: Props\n            events?: Events\n            slots?: Slots\n        }): SvelteComponentTyped<Props, Events, Slots>\n    }\n    private readonly _props: Props\n    private readonly _events: Events\n    private readonly _slots: Slots\n\n    constructor(svelteElement, props?: Props, events?: Events, slots?: Slots) {\n        super()\n        this._svelteComponent = svelteElement\n        this._props = props ?? <Props>{}\n        this._events = events\n        this._slots = slots\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const el = document.createElement(\"div\")\n        new this._svelteComponent({\n            target: el,\n            props: this._props,\n            events: this._events,\n            slots: this._slots,\n        })\n        return el\n    }\n}\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { Utils } from \"../../Utils\"\nimport BaseUIElement from \"../BaseUIElement\"\n\nexport default class Img extends BaseUIElement {\n    private readonly _src: string\n    private readonly _rawSvg: boolean\n    private readonly _options: { readonly fallbackImage?: string }\n\n    constructor(\n        src: string,\n        rawSvg = false,\n        options?: {\n            fallbackImage?: string\n        }\n    ) {\n        super()\n        if (src === undefined || src === \"undefined\") {\n            throw \"Undefined src for image\"\n        }\n        this._src = src\n        this._rawSvg = rawSvg\n        this._options = options\n    }\n\n    static AsData(source: string) {\n        if (Utils.runningFromConsole) {\n            return source\n        }\n        try {\n            return `data:image/svg+xml;base64,${btoa(source)}`\n        } catch (e) {\n            console.error(\"Cannot create an image for\", source.slice(0, 100))\n            console.trace(\"Cannot create an image for the given source string due to \", e)\n            return \"\"\n        }\n    }\n\n    static AsImageElement(source: string, css_class: string = \"\", style = \"\"): string {\n        return `<img class=\"${css_class}\" style=\"${style}\" alt=\"\" src=\"${Img.AsData(source)}\">`\n    }\n\n    AsMarkdown(): string {\n        if (this._rawSvg === true) {\n            console.warn(\"Converting raw svgs to markdown is not supported\")\n            return undefined\n        }\n        let src = this._src\n        if (this._src.startsWith(\"./\")) {\n            src = \"https://mapcomplete.org/\" + src\n        }\n        return \"![](\" + src + \")\"\n    }\n\n    protected InnerConstructElement(): HTMLElement {\n        const self = this\n        if (this._rawSvg) {\n            const e = document.createElement(\"div\")\n            e.innerHTML = this._src\n            return e\n        }\n\n        const el = document.createElement(\"img\")\n        el.src = this._src\n        el.onload = () => {\n            el.style.opacity = \"1\"\n        }\n        el.onerror = () => {\n            if (self._options?.fallbackImage) {\n                if (el.src === self._options.fallbackImage) {\n                    // Sigh... nothing to be done anymore\n                    return\n                }\n                el.src = self._options.fallbackImage\n            }\n        }\n        return el\n    }\n}\n","import Img from \"./UI/Base/Img\";\nimport {FixedUiElement} from \"./UI/Base/FixedUiElement\";\n\n/* @deprecated */\nexport default class Svg {\n\n\n    public static checkmark = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"374px\\\" height=\\\"259px\\\" viewBox=\\\"0 0 374 259\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\"fill: none !important;stroke-width:4;stroke-linecap:butt;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 2.999896 7.285624 L 10.826182 14.99991 L 23.000104 3.00009 \\\" transform=\\\"matrix(14.384615,0,0,14.388889,0,0)\\\"/>   </g> </svg>\"\n    public static checkmark_svg() { return new Img(Svg.checkmark, true);}\n    public static circle = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">     <g id=\\\"surface1\\\">         <path                 style=\\\"fill:#000000;\\\"                 class=\\\"selectable\\\"               d=\\\"M 375 187.5 C 375 291.054688 291.054688 375 187.5 375 C 83.945312 375 0 291.054688 0 187.5 C 0 83.945312 83.945312 0 187.5 0 C 291.054688 0 375 83.945312 375 187.5 Z M 375 187.5 \\\"/>     </g> </svg> \"\n    public static circle_svg() { return new Img(Svg.circle, true);}\n    public static close = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\"fill: none !important;stroke-width:6.012842;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 23.165924 293.603402 L 3.541282 273.978759 \\\" transform=\\\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\\\"/>     <path style=\\\"fill: none !important;stroke-width:6.012921;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 23.195414 273.884226 L 3.571047 293.508593 \\\" transform=\\\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\\\"/>   </g> </svg>\"\n    public static close_svg() { return new Img(Svg.close, true);}\n    public static confirm = \" <svg    width=\\\"157.33984\\\"    height=\\\"157.33984\\\"    viewBox=\\\"0 0 157.33984 157.33984\\\"    version=\\\"1.1\\\"    id=\\\"svg9\\\"    sodipodi:docname=\\\"confirm.svg\\\"    inkscape:version=\\\"1.1.2 (1:1.1+202202050950+0a00cf5339)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs13\\\" />   <sodipodi:namedview      id=\\\"namedview11\\\"      pagecolor=\\\"#505050\\\"      bordercolor=\\\"#eeeeee\\\"      borderopacity=\\\"1\\\"      inkscape:pageshadow=\\\"0\\\"      inkscape:pageopacity=\\\"0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      showgrid=\\\"false\\\"      inkscape:zoom=\\\"2.312\\\"      inkscape:cx=\\\"-18.598616\\\"      inkscape:cy=\\\"57.093426\\\"      inkscape:current-layer=\\\"svg9\\\" />   <path      style=\\\"fill:#35d447;fill-opacity:1;fill-rule:nonzero;stroke:none\\\"      d=\\\"m 157.33984,78.66796 c 0,43.44922 -35.21875,78.67188 -78.66796,78.67188 C 35.22266,157.33984 0,122.11718 0,78.66796 0,35.22265 35.22266,0 78.67188,0 c 43.44921,0 78.66796,35.22265 78.66796,78.66796 z m 0,0\\\"      id=\\\"path4\\\" />   <path      style=\\\"fill: none !important;stroke:#ffffff;stroke-width:19.7495;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1\\\"      d=\\\"m 37.69921,75.49609 35.55078,39.5 47.39844,-63.19922\\\"      id=\\\"path6\\\" /> </svg> \"\n    public static confirm_svg() { return new Img(Svg.confirm, true);}\n    public static crosshair_locked = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\"fill: none !important;stroke-width:2.645833;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(33.333334%,33.333334%,92.54902%);stroke-opacity:0.988235;stroke-miterlimit:4;\\\" d=\\\"M 22.034555 283.770823 C 22.034555 288.670301 18.062773 292.642358 13.16302 292.642358 C 8.263267 292.642358 4.291486 288.670301 4.291486 283.770823 C 4.291486 278.871071 8.263267 274.899289 13.16302 274.899289 C 18.062773 274.899289 22.034555 278.871071 22.034555 283.770823 Z M 22.034555 283.770823 \\\" transform=\\\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\\\"/>     <path style=\\\"fill: none !important;stroke-width:2.097239;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(33.333334%,33.333334%,92.54902%);stroke-opacity:0.988235;stroke-miterlimit:4;\\\" d=\\\"M 3.28414 283.770823 L 1.041796 283.770823 \\\" transform=\\\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\\\"/>     <path style=\\\"fill: none !important;stroke-width:2.116667;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(33.333334%,33.333334%,92.54902%);stroke-opacity:0.988235;stroke-miterlimit:4;\\\" d=\\\"M 25.405787 283.770823 L 23.286365 283.770823 \\\" transform=\\\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\\\"/>     <path style=\\\"fill: none !important;stroke-width:2.116667;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(33.333334%,33.333334%,92.54902%);stroke-opacity:0.988235;stroke-miterlimit:4;\\\" d=\\\"M 13.229166 295.948823 L 13.229166 293.831329 \\\" transform=\\\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\\\"/>     <path style=\\\"fill: none !important;stroke-width:2.116667;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(33.333334%,33.333334%,92.54902%);stroke-opacity:0.988235;stroke-miterlimit:4;\\\" d=\\\"M 13.229166 275.057488 L 13.229166 271.612392 \\\" transform=\\\"matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)\\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(33.333334%,33.333334%,92.54902%);fill-opacity:0.988235;\\\" d=\\\"M 238.824219 161.203125 L 229.523438 161.203125 L 229.523438 134.96875 C 229.523438 134.96875 229.523438 91.246094 186.066406 91.246094 C 142.609375 91.246094 142.609375 134.96875 142.609375 134.96875 L 142.609375 161.203125 L 133.308594 161.203125 C 124.042969 161.203125 116.535156 168.757812 116.535156 178.082031 L 116.535156 249.347656 C 116.582031 258.636719 124.078125 266.136719 133.308594 266.136719 L 238.824219 266.136719 C 248.085938 266.136719 255.597656 258.582031 255.597656 249.261719 L 255.597656 178.082031 C 255.597656 168.757812 248.085938 161.203125 238.824219 161.203125 Z M 186.066406 231.160156 C 176.464844 231.160156 168.683594 223.328125 168.683594 213.671875 C 168.683594 204.011719 176.464844 196.179688 186.066406 196.179688 C 195.664062 196.179688 203.449219 204.011719 203.449219 213.671875 C 203.449219 223.328125 195.664062 231.160156 186.066406 231.160156 Z M 212.140625 161.203125 L 159.992188 161.203125 L 159.992188 139.339844 C 159.992188 126.226562 159.992188 108.734375 186.066406 108.734375 C 212.140625 108.734375 212.140625 126.226562 212.140625 139.339844 Z M 212.140625 161.203125 \\\"/>   </g> </svg>\"\n    public static crosshair_locked_svg() { return new Img(Svg.crosshair_locked, true);}\n    public static crosshair = \" <svg    width=\\\"375px\\\"    height=\\\"375px\\\"    viewBox=\\\"0 0 375 375\\\"    version=\\\"1.1\\\"    id=\\\"svg15\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <path      id=\\\"path2\\\"      style=\\\"color:#000000;fill:#000000;fill-opacity:0.988235;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none\\\"      d=\\\"M 187.5 0.17578125 A 15 15 0 0 0 172.5 15.175781 L 172.5 43.708984 C 104.37541 50.343145 49.843699 104.61884 42.837891 172.63672 L 14.765625 172.63672 A 14.86235 14.86235 0 0 0 -0.09765625 187.5 A 14.86235 14.86235 0 0 0 14.765625 202.36133 L 42.837891 202.36133 C 49.842792 270.37794 104.37427 324.65648 172.5 331.29102 L 172.5 360.10156 A 15 15 0 0 0 187.5 375.10156 A 15 15 0 0 0 202.5 360.10156 L 202.5 331.08594 C 269.70108 323.65092 323.26953 269.82518 330.26953 202.5 L 360.08203 202.5 A 15 15 0 0 0 375.08203 187.5 A 15 15 0 0 0 360.08203 172.5 L 330.26953 172.5 C 323.26946 105.17266 269.70061 51.348735 202.5 43.914062 L 202.5 15.175781 A 15 15 0 0 0 187.5 0.17578125 z M 186.5625 80.511719 C 245.87515 80.511719 293.55078 128.18741 293.55078 187.5 C 293.55078 246.80822 245.87443 294.48828 186.5625 294.48828 C 127.25056 294.48828 79.574219 246.80822 79.574219 187.5 C 79.574219 128.1874 127.24984 80.511719 186.5625 80.511719 z M 187.5 139.21094 C 160.83203 139.21094 139.21094 160.83203 139.21094 187.5 C 139.21094 214.16797 160.83203 235.78906 187.5 235.78906 C 214.16797 235.78906 235.78906 214.16797 235.78906 187.5 C 235.78906 160.83203 214.16797 139.21094 187.5 139.21094 z \\\" /> </svg> \"\n    public static crosshair_svg() { return new Img(Svg.crosshair, true);}\n    public static delete_icon = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,0%,0%);fill-opacity:1;\\\" d=\\\"M 148.457031 148.796875 L 148.457031 269.332031 C 148.457031 271.285156 147.828125 272.890625 146.574219 274.144531 C 145.316406 275.402344 143.714844 276.027344 141.761719 276.027344 L 128.367188 276.027344 C 126.414062 276.027344 124.808594 275.402344 123.554688 274.144531 C 122.296875 272.890625 121.671875 271.285156 121.671875 269.332031 L 121.671875 148.796875 C 121.671875 146.84375 122.296875 145.238281 123.554688 143.984375 C 124.808594 142.726562 126.414062 142.101562 128.367188 142.101562 L 141.761719 142.101562 C 143.714844 142.101562 145.316406 142.726562 146.574219 143.984375 C 147.828125 145.238281 148.457031 146.84375 148.457031 148.796875 Z M 202.027344 148.796875 L 202.027344 269.332031 C 202.027344 271.285156 201.398438 272.890625 200.144531 274.144531 C 198.890625 275.402344 197.285156 276.027344 195.332031 276.027344 L 181.9375 276.027344 C 179.984375 276.027344 178.382812 275.402344 177.125 274.144531 C 175.871094 272.890625 175.242188 271.285156 175.242188 269.332031 L 175.242188 148.796875 C 175.242188 146.84375 175.871094 145.238281 177.125 143.984375 C 178.382812 142.726562 179.984375 142.101562 181.9375 142.101562 L 195.332031 142.101562 C 197.285156 142.101562 198.890625 142.726562 200.144531 143.984375 C 201.398438 145.238281 202.027344 146.84375 202.027344 148.796875 Z M 255.597656 148.796875 L 255.597656 269.332031 C 255.597656 271.285156 254.972656 272.890625 253.714844 274.144531 C 252.460938 275.402344 250.855469 276.027344 248.902344 276.027344 L 235.511719 276.027344 C 233.558594 276.027344 231.953125 275.402344 230.695312 274.144531 C 229.441406 272.890625 228.8125 271.285156 228.8125 269.332031 L 228.8125 148.796875 C 228.8125 146.84375 229.441406 145.238281 230.695312 143.984375 C 231.953125 142.726562 233.558594 142.101562 235.511719 142.101562 L 248.902344 142.101562 C 250.855469 142.101562 252.460938 142.726562 253.714844 143.984375 C 254.972656 145.238281 255.597656 146.84375 255.597656 148.796875 Z M 282.386719 300.304688 L 282.386719 101.921875 L 94.886719 101.921875 L 94.886719 300.304688 C 94.886719 303.371094 95.375 306.199219 96.351562 308.777344 C 97.328125 311.359375 98.335938 313.242188 99.382812 314.429688 C 100.429688 315.613281 101.164062 316.207031 101.582031 316.207031 L 275.6875 316.207031 C 276.105469 316.207031 276.839844 315.613281 277.886719 314.429688 C 278.933594 313.242188 279.945312 311.359375 280.921875 308.777344 C 281.898438 306.199219 282.386719 303.371094 282.386719 300.304688 Z M 141.761719 75.136719 L 235.511719 75.136719 L 225.464844 50.652344 C 224.488281 49.398438 223.304688 48.628906 221.90625 48.351562 L 155.570312 48.351562 C 154.175781 48.628906 152.992188 49.398438 152.015625 50.652344 Z M 335.957031 81.832031 L 335.957031 95.226562 C 335.957031 97.179688 335.328125 98.78125 334.074219 100.039062 C 332.816406 101.292969 331.214844 101.921875 329.261719 101.921875 L 309.171875 101.921875 L 309.171875 300.304688 C 309.171875 311.882812 305.890625 321.894531 299.335938 330.332031 C 292.777344 338.773438 284.894531 342.992188 275.6875 342.992188 L 101.582031 342.992188 C 92.375 342.992188 84.492188 338.914062 77.933594 330.75 C 71.378906 322.589844 68.097656 312.71875 68.097656 301.140625 L 68.097656 101.921875 L 48.011719 101.921875 C 46.058594 101.921875 44.453125 101.292969 43.195312 100.039062 C 41.941406 98.78125 41.3125 97.179688 41.3125 95.226562 L 41.3125 81.832031 C 41.3125 79.878906 41.941406 78.273438 43.195312 77.019531 C 44.453125 75.765625 46.058594 75.136719 48.011719 75.136719 L 112.671875 75.136719 L 127.320312 40.1875 C 129.414062 35.027344 133.179688 30.632812 138.621094 27.003906 C 144.0625 23.378906 149.574219 21.566406 155.152344 21.566406 L 222.117188 21.566406 C 227.699219 21.566406 233.207031 23.378906 238.648438 27.003906 C 244.089844 30.632812 247.855469 35.027344 249.949219 40.1875 L 264.597656 75.136719 L 329.261719 75.136719 C 331.214844 75.136719 332.816406 75.765625 334.074219 77.019531 C 335.328125 78.273438 335.957031 79.878906 335.957031 81.832031 Z M 335.957031 81.832031 \\\"/>   </g> </svg>\"\n    public static delete_icon_svg() { return new Img(Svg.delete_icon, true);}\n    public static download = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path d=\\\"M 280.75 123.625 L 218.375 123.625 L 218.375 27.8125 C 218.375 19.0625 211.375 11.875 202.75 11.875 L 171.5625 11.875 C 163 11.875 155.9375 19.0625 155.9375 27.8125 L 155.9375 123.625 L 93.5625 123.625 L 187.125 251.375 Z M 351 171.5625 C 338.0625 171.5625 327.625 182.3125 327.625 195.5 L 327.625 315.25 L 46.8125 315.25 L 46.8125 195.5 C 46.8125 182.25 36.3125 171.5625 23.4375 171.5625 C 10.5 171.5625 0 182.25 0 195.5 L 0 339.1875 C 0 352.375 10.5 363.125 23.375 363.125 L 350.9375 363.125 C 363.875 363.125 374.3125 352.375 374.3125 339.1875 L 374.3125 195.5 C 374.375 182.25 363.875 171.5625 351 171.5625 Z M 351 171.5625 \\\"/>   </g> </svg> \"\n    public static download_svg() { return new Img(Svg.download, true);}\n    public static envelope = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\"fill: none !important;stroke-width:8.16402;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 9.669812 22.725188 L 42.932875 56.977438 C 42.932875 56.977438 55.27575 71.374687 69.062625 56.977438 C 88.864187 36.300688 103.1225 22.224062 103.1225 22.224062 \\\" transform=\\\"matrix(3.289474,0,0,3.289474,0,0)\\\"/>     <path style=\\\"fill: none !important;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 9.902563 22.944875 L 102.88975 22.461562 L 102.88975 92.383938 \\\" transform=\\\"matrix(3.289474,0,0,3.289474,0,0)\\\"/>     <path style=\\\"fill: none !important;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 102.88975 92.383938 L 9.902563 92.866062 L 9.902563 22.944875 \\\" transform=\\\"matrix(3.289474,0,0,3.289474,0,0)\\\"/>     <path style=\\\"fill: none !important;stroke-width:2.889384;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 15.059875 89.897312 L 52.138375 60.1255 \\\" transform=\\\"matrix(3.289474,0,0,3.289474,0,0)\\\"/>     <path style=\\\"fill: none !important;stroke-width:2.894905;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 59.644562 61.332 L 98.072063 89.495937 \\\" transform=\\\"matrix(3.289474,0,0,3.289474,0,0)\\\"/>   </g> </svg>\"\n    public static envelope_svg() { return new Img(Svg.envelope, true);}\n    public static gender_female = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 273.230469 209.789062 C 320.503906 162.519531 320.503906 85.601562 273.230469 38.328125 C 225.964844 -8.941406 149.039062 -8.941406 101.769531 38.328125 C 54.496094 85.601562 54.496094 162.515625 101.769531 209.789062 C 122.273438 230.300781 148.363281 241.898438 175.191406 244.609375 L 175.191406 294.210938 L 123.847656 294.210938 L 123.847656 318.832031 L 175.191406 318.832031 L 175.191406 372.125 L 199.808594 372.125 L 199.808594 318.835938 L 251.148438 318.835938 L 251.148438 294.214844 L 199.808594 294.214844 L 199.808594 244.609375 C 226.636719 241.898438 252.726562 230.300781 273.230469 209.789062 Z M 119.175781 55.742188 C 138.015625 36.90625 162.757812 27.484375 187.5 27.484375 C 212.242188 27.484375 236.984375 36.902344 255.824219 55.738281 C 293.496094 93.410156 293.496094 154.707031 255.824219 192.382812 C 218.148438 230.054688 156.847656 230.050781 119.179688 192.382812 C 81.503906 154.710938 81.503906 93.410156 119.175781 55.742188 Z M 119.175781 55.742188 \\\"/>   </g> </svg>\"\n    public static gender_female_svg() { return new Img(Svg.gender_female, true);}\n    public static gender_inter = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 244 216.746094 L 364.355469 337.101562 L 364.355469 212.675781 L 339.773438 212.675781 L 339.773438 277.761719 L 257.871094 195.851562 C 267.695312 177.457031 273.289062 156.472656 273.289062 134.199219 C 273.289062 61.789062 214.378906 2.875 141.964844 2.875 C 69.550781 2.875 10.644531 61.789062 10.644531 134.199219 C 10.644531 206.605469 69.554688 265.519531 141.964844 265.519531 C 164.238281 265.519531 185.222656 259.925781 203.621094 250.097656 L 240.511719 286.992188 L 197.96875 329.523438 L 215.347656 346.902344 L 257.886719 304.371094 L 325.640625 372.125 L 343.019531 354.742188 L 224.511719 236.230469 C 231.664062 230.433594 238.199219 223.898438 244 216.746094 Z M 35.226562 134.199219 C 35.226562 75.34375 83.109375 27.460938 141.964844 27.460938 C 200.820312 27.460938 248.703125 75.34375 248.703125 134.199219 C 248.703125 193.050781 200.820312 240.933594 141.964844 240.933594 C 83.105469 240.933594 35.226562 193.054688 35.226562 134.199219 Z M 35.226562 134.199219 \\\"/>   </g> </svg>\"\n    public static gender_inter_svg() { return new Img(Svg.gender_inter, true);}\n    public static gender_male = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 254.679688 2.875 L 254.679688 27.652344 L 329.832031 27.652344 L 240.109375 117.371094 C 214.984375 96.203125 182.582031 83.410156 147.230469 83.410156 C 67.632812 83.414062 2.875 148.171875 2.875 227.769531 C 2.875 307.367188 67.632812 372.125 147.230469 372.125 C 226.828125 372.125 291.585938 307.367188 291.585938 227.769531 C 291.585938 192.417969 278.792969 160.015625 257.625 134.890625 L 347.347656 45.167969 L 347.347656 120.320312 L 372.125 120.320312 L 372.125 2.875 Z M 147.230469 347.347656 C 81.296875 347.347656 27.648438 293.703125 27.648438 227.769531 C 27.648438 161.832031 81.292969 108.1875 147.230469 108.1875 C 213.171875 108.1875 266.8125 161.828125 266.8125 227.769531 C 266.8125 293.703125 213.171875 347.347656 147.230469 347.347656 Z M 147.230469 347.347656 \\\"/>   </g> </svg>\"\n    public static gender_male_svg() { return new Img(Svg.gender_male, true);}\n    public static gender_queer = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 273.230469 165.210938 C 252.726562 144.699219 226.636719 133.105469 199.808594 130.390625 L 199.808594 79.359375 L 234.339844 98.398438 L 246.226562 76.832031 L 213 58.515625 L 246.226562 40.195312 L 234.339844 18.632812 L 199.808594 37.671875 L 199.808594 2.875 L 175.191406 2.875 L 175.191406 37.671875 L 140.660156 18.636719 L 128.773438 40.199219 L 162 58.519531 L 128.773438 76.835938 L 140.660156 98.402344 L 175.191406 79.359375 L 175.191406 130.390625 C 148.367188 133.105469 122.277344 144.699219 101.773438 165.207031 C 78.871094 188.105469 66.261719 218.550781 66.261719 250.9375 C 66.261719 283.324219 78.871094 313.769531 101.773438 336.667969 C 125.40625 360.308594 156.449219 372.125 187.5 372.125 C 218.550781 372.125 249.59375 360.308594 273.230469 336.667969 C 296.132812 313.769531 308.742188 283.324219 308.742188 250.9375 C 308.742188 218.550781 296.132812 188.105469 273.230469 165.210938 Z M 255.824219 319.257812 C 218.152344 356.925781 156.855469 356.929688 119.175781 319.257812 C 100.929688 301.011719 90.875 276.746094 90.875 250.9375 C 90.875 225.128906 100.929688 200.867188 119.175781 182.617188 C 138.015625 163.78125 162.757812 154.367188 187.5 154.367188 C 212.242188 154.367188 236.984375 163.78125 255.824219 182.621094 C 274.070312 200.871094 284.125 225.132812 284.125 250.941406 C 284.121094 276.746094 274.070312 301.011719 255.824219 319.257812 Z M 255.824219 319.257812 \\\"/>   </g> </svg>\"\n    public static gender_queer_svg() { return new Img(Svg.gender_queer, true);}\n    public static gender_trans = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 278.738281 2.875 L 278.738281 27.492188 L 309.691406 27.492188 L 250.769531 86.417969 C 233.425781 73.042969 211.722656 65.0625 188.179688 65.0625 C 164.289062 65.0625 142.296875 73.285156 124.832031 87.015625 L 106.859375 69.046875 L 128.496094 47.414062 L 111.089844 30.007812 L 89.457031 51.640625 L 65.308594 27.492188 L 96.261719 27.492188 L 96.261719 2.875 L 23.289062 2.875 L 23.289062 75.855469 L 47.90625 75.855469 L 47.90625 44.902344 L 72.050781 69.046875 L 50.414062 90.675781 L 67.820312 108.078125 L 89.453125 86.445312 L 107.421875 104.414062 C 93.691406 121.882812 85.46875 143.875 85.46875 167.765625 C 85.46875 220.230469 125.023438 263.605469 175.871094 269.710938 L 175.871094 300.851562 L 145.277344 300.851562 L 145.277344 325.464844 L 175.871094 325.464844 L 175.871094 372.125 L 200.488281 372.125 L 200.488281 325.476562 L 231.078125 325.476562 L 231.078125 300.859375 L 200.488281 300.859375 L 200.488281 269.71875 C 251.339844 263.613281 290.890625 220.234375 290.890625 167.769531 C 290.890625 143.53125 282.429688 121.246094 268.335938 103.65625 L 327.09375 44.898438 L 327.09375 75.851562 L 351.710938 75.851562 L 351.710938 2.875 Z M 188.179688 245.867188 C 145.117188 245.867188 110.085938 210.832031 110.085938 167.773438 C 110.085938 124.710938 145.117188 89.679688 188.179688 89.679688 C 231.238281 89.679688 266.273438 124.710938 266.273438 167.773438 C 266.273438 210.832031 231.238281 245.867188 188.179688 245.867188 Z M 188.179688 245.867188 \\\"/>   </g> </svg>\"\n    public static gender_trans_svg() { return new Img(Svg.gender_trans, true);}\n    public static generic_map = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(26.274511%,69.01961%,36.078432%);fill-opacity:1;\\\" d=\\\"M 127.359375 164.457031 L 15.960938 53.058594 L 0 56.605469 L 0 360.847656 L 14.851562 357.550781 L 127.359375 245.039062 Z M 127.359375 164.457031 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(28.235295%,62.7451%,86.274511%);fill-opacity:1;\\\" d=\\\"M 66.3125 346.109375 L 127.359375 332.546875 L 127.359375 285.0625 Z M 66.3125 346.109375 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(26.274511%,69.01961%,36.078432%);fill-opacity:1;\\\" d=\\\"M 127.359375 28.300781 L 48.707031 45.777344 L 127.359375 124.429688 Z M 127.359375 28.300781 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(26.274511%,69.01961%,36.078432%);fill-opacity:1;\\\" d=\\\"M 349.875 22.527344 L 247.640625 56.605469 L 247.640625 124.753906 Z M 349.875 22.527344 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(28.235295%,62.7451%,86.274511%);fill-opacity:1;\\\" d=\\\"M 247.640625 164.78125 L 247.640625 353.773438 L 375 304.246094 L 375 37.421875 Z M 247.640625 164.78125 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(23.921569%,60.000002%,30.980393%);fill-opacity:1;\\\" d=\\\"M 187.664062 184.734375 L 247.640625 124.753906 L 247.640625 56.605469 L 127.359375 28.300781 L 127.359375 124.429688 Z M 187.664062 184.734375 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(23.921569%,60.000002%,30.980393%);fill-opacity:1;\\\" d=\\\"M 127.359375 164.457031 L 127.359375 245.039062 L 167.652344 204.75 Z M 127.359375 164.457031 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(26.274511%,57.647061%,74.901962%);fill-opacity:1;\\\" d=\\\"M 127.359375 285.0625 L 127.359375 332.546875 L 247.640625 353.773438 L 247.640625 164.78125 Z M 127.359375 285.0625 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(93.725491%,80.784315%,29.019609%);fill-opacity:1;\\\" d=\\\"M 127.359375 124.429688 L 48.707031 45.777344 L 15.960938 53.058594 L 127.359375 164.457031 Z M 127.359375 124.429688 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(93.725491%,80.784315%,29.019609%);fill-opacity:1;\\\" d=\\\"M 127.359375 245.039062 L 14.851562 357.550781 L 66.3125 346.109375 L 127.359375 285.0625 Z M 127.359375 245.039062 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(93.725491%,80.784315%,29.019609%);fill-opacity:1;\\\" d=\\\"M 247.640625 164.78125 L 375 37.421875 L 375 14.152344 L 349.875 22.527344 L 247.640625 124.753906 Z M 247.640625 164.78125 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(83.92157%,70.588237%,27.058825%);fill-opacity:1;\\\" d=\\\"M 187.664062 184.734375 L 127.359375 124.429688 L 127.359375 164.457031 L 167.652344 204.75 L 127.359375 245.039062 L 127.359375 285.0625 L 247.640625 164.78125 L 247.640625 124.753906 Z M 187.664062 184.734375 \\\"/>   </g> </svg>\"\n    public static generic_map_svg() { return new Img(Svg.generic_map, true);}\n    public static gps_arrow = \" <svg    width=\\\"375px\\\"    height=\\\"375px\\\"    viewBox=\\\"0 0 375 375\\\"    version=\\\"1.1\\\"    id=\\\"svg5\\\"    sodipodi:docname=\\\"gps_arrow.svg\\\"    inkscape:version=\\\"1.1.2 (0a00cf5339, 2022-02-04)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs9\\\" />   <sodipodi:namedview      id=\\\"namedview7\\\"      pagecolor=\\\"#ffffff\\\"      bordercolor=\\\"#666666\\\"      borderopacity=\\\"1.0\\\"      inkscape:pageshadow=\\\"2\\\"      inkscape:pageopacity=\\\"0.0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      showgrid=\\\"false\\\"      inkscape:zoom=\\\"1.7173333\\\"      inkscape:cx=\\\"187.79115\\\"      inkscape:cy=\\\"187.5\\\"      inkscape:window-width=\\\"1920\\\"      inkscape:window-height=\\\"1007\\\"      inkscape:window-x=\\\"0\\\"      inkscape:window-y=\\\"0\\\"      inkscape:window-maximized=\\\"1\\\"      inkscape:current-layer=\\\"svg5\\\" />   <g      id=\\\"surface1\\\"      transform=\\\"matrix(0.63906155,0,0,0.98221939,67.675844,3.3354774)\\\"      style=\\\"stroke:#ffffff;stroke-opacity:1;stroke-width:3.78656711;stroke-miterlimit:4;stroke-dasharray:none;stroke-linecap:round;stroke-linejoin:bevel;fill:#5454eb;fill-opacity:0.98823529\\\">     <path        style=\\\"fill:#5454eb;fill-opacity:0.98823529;fill-rule:nonzero;stroke:#ffffff;stroke-opacity:1;stroke-width:3.78656711;stroke-miterlimit:4;stroke-dasharray:none;stroke-linecap:round;stroke-linejoin:bevel\\\"        d=\\\"M 0,374.61719 C 0,373.62109 187.49609,-0.375 187.80469,0 188.84766,1.261719 375.34375,374.71094 375,374.85156 c -0.22266,0.0899 -42.48047,-18.05078 -93.90234,-40.3125 l -93.4961,-40.47265 -93.343748,40.46875 C 42.917969,356.78906 0.707031,375 0.457031,375 0.207031,375 0,374.82812 0,374.61719 Z m 0,0\\\"        id=\\\"path2\\\" />   </g> </svg> \"\n    public static gps_arrow_svg() { return new Img(Svg.gps_arrow, true);}\n    public static invalid = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 36 36\\\"><path fill=\\\"#DD2E44\\\" d=\\\"M18 0C8.059 0 0 8.059 0 18s8.059 18 18 18 18-8.059 18-18S27.941 0 18 0zm13 18c0 2.565-.753 4.95-2.035 6.965L11.036 7.036C13.05 5.753 15.435 5 18 5c7.18 0 13 5.821 13 13zM5 18c0-2.565.753-4.95 2.036-6.964l17.929 17.929C22.95 30.247 20.565 31 18 31c-7.179 0-13-5.82-13-13z\\\"/></svg>\"\n    public static invalid_svg() { return new Img(Svg.invalid, true);}\n    public static layers = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(1.176471%,0%,0%);fill-opacity:1;\\\" d=\\\"M 371.707031 112.410156 C 370.386719 115.515625 367.917969 117.234375 365.007812 118.78125 C 307.3125 149.324219 249.660156 179.914062 192.054688 210.617188 C 188.816406 212.335938 186.484375 212.261719 183.273438 210.546875 C 125.675781 179.835938 68.011719 149.253906 10.359375 118.648438 C 2.105469 114.269531 1.507812 103.796875 9.210938 98.316406 C 10.472656 97.417969 11.863281 96.691406 13.230469 95.945312 C 68.351562 66.171875 123.507812 36.453125 178.558594 6.550781 C 185.027344 3.03125 190.667969 3.136719 197.097656 6.636719 C 251.9375 36.433594 306.863281 66.074219 361.816406 95.648438 C 366.335938 98.085938 369.945312 101.015625 371.707031 105.925781 C 371.707031 108.089844 371.707031 110.246094 371.707031 112.410156 Z M 371.707031 112.410156 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(1.176471%,0%,0%);fill-opacity:1;\\\" d=\\\"M 184.140625 372.59375 C 167.671875 363.679688 151.207031 354.757812 134.730469 345.851562 C 94.003906 323.847656 53.28125 301.863281 12.558594 279.851562 C 5 275.769531 1.757812 269.359375 4.652344 262.824219 C 5.921875 259.953125 8.363281 257.074219 11.035156 255.457031 C 18.792969 250.75 26.894531 246.574219 35 242.472656 C 36.214844 241.855469 38.425781 242.300781 39.773438 243.015625 C 86.078125 267.503906 132.367188 292.023438 178.546875 316.734375 C 184.882812 320.117188 190.425781 320.203125 196.769531 316.808594 C 242.855469 292.167969 289.0625 267.746094 335.167969 243.140625 C 337.847656 241.710938 339.757812 241.769531 342.300781 243.246094 C 348.394531 246.796875 354.605469 250.171875 360.917969 253.324219 C 365.671875 255.699219 369.558594 258.773438 371.699219 263.761719 C 371.699219 265.929688 371.699219 268.085938 371.699219 270.25 C 369.855469 275.277344 366.097656 278.226562 361.488281 280.699219 C 321.488281 302.171875 281.5625 323.78125 241.621094 345.359375 C 224.84375 354.417969 208.085938 363.515625 191.332031 372.59375 C 188.929688 372.59375 186.53125 372.59375 184.140625 372.59375 Z M 184.140625 372.59375 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(1.176471%,0%,0%);fill-opacity:1;\\\" d=\\\"M 369.769531 191.6875 C 368.304688 194.867188 365.566406 196.492188 362.589844 198.066406 C 304.789062 228.683594 247.019531 259.34375 189.296875 290.105469 C 186.609375 291.535156 184.738281 291.359375 182.175781 289.996094 C 124.230469 259.136719 66.25 228.375 8.269531 197.582031 C 0.816406 193.628906 -0.484375 184.949219 5.578125 178.914062 C 6.910156 177.589844 8.585938 176.546875 10.246094 175.628906 C 17.359375 171.703125 24.609375 167.992188 31.65625 163.941406 C 34.058594 162.558594 35.8125 162.710938 38.183594 163.980469 C 84.191406 188.496094 130.285156 212.847656 176.234375 237.472656 C 182.964844 241.078125 188.703125 241.050781 195.421875 237.445312 C 241.371094 212.820312 287.472656 188.476562 333.480469 163.949219 C 335.863281 162.683594 337.628906 162.566406 340.007812 163.9375 C 346.207031 167.542969 352.503906 171.015625 358.933594 174.1875 C 363.6875 176.527344 367.554688 179.550781 369.78125 184.464844 C 369.769531 186.882812 369.769531 189.289062 369.769531 191.6875 Z M 369.769531 191.6875 \\\"/>   </g> </svg>\"\n    public static layers_svg() { return new Img(Svg.layers, true);}\n    public static length_crosshair = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"374px\\\" height=\\\"374px\\\" viewBox=\\\"0 0 374 374\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\"fill: none !important;stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-dasharray:72,72;stroke-miterlimit:4;\\\" d=\\\"M 3.104683 433.716893 C 3.102167 669.950341 -188.62198 861.481439 -425.155198 861.533522 C -661.679447 861.585522 -853.488633 670.150458 -853.602794 433.909107 C -853.707985 197.667673 -662.074269 6.056609 -425.542044 5.896802 \\\" transform=\\\"matrix(0.00400976,-0.435505,0.4351,0.0040135,0,0.0566956)\\\"/>     <path style=\\\"fill: none !important;stroke-width:4.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 429.768036 430.089764 L 429.768036 0.892297 \\\" transform=\\\"matrix(0.435118,0,0,0.435524,0,0.0566956)\\\"/>     <path style=\\\"fill: none !important;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-dasharray:36,36;stroke-miterlimit:4;\\\" d=\\\"M 857.587967 429.237701 L 1.948105 429.237701 \\\" transform=\\\"matrix(0.435118,0,0,0.435524,0,0.0566956)\\\"/>     <path style=\\\"fill: none !important;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-dasharray:36,36;stroke-miterlimit:4;\\\" d=\\\"M 429.768036 857.305064 L 429.768036 428.789247 \\\" transform=\\\"matrix(0.435118,0,0,0.435524,0,0.0566956)\\\"/>     <path style=\\\"fill: none !important;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-dasharray:18,18;stroke-miterlimit:4;\\\" d=\\\"M 857.318644 1.035803 L 1.687759 1.035803 \\\" transform=\\\"matrix(0.435118,0,0,0.435524,0,0.0566956)\\\"/>     <path style=\\\"fill: none !important;stroke-width:1.5;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-dasharray:9,9;stroke-miterlimit:4;\\\" d=\\\"M 857.587967 858.237848 L 1.948105 858.237848 \\\" transform=\\\"matrix(0.435118,0,0,0.435524,0,0.0566956)\\\"/>     <path style=\\\"fill: none !important;stroke-width:4.5;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M -5.359608 -424.721804 C -5.359685 -189.95509 -194.791961 0.956658 -429.838638 3.086938 C -664.885397 5.208249 -857.741855 -182.252133 -861.996904 -416.979633 \\\" transform=\\\"matrix(-0.4351,-0.00401356,0.00400982,-0.435505,0,0.0566956)\\\"/>   </g> </svg>\"\n    public static length_crosshair_svg() { return new Img(Svg.length_crosshair, true);}\n    public static loading = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\"fill: none !important;stroke-width:3.262002;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:0.266355;stroke-miterlimit:4;\\\" d=\\\"M 22.390901 12.010996 C 22.390901 17.743283 17.744366 22.390319 12.012079 22.391069 C 6.279792 22.39157 1.632005 17.745285 1.631004 12.012998 C 1.630003 6.280711 6.275788 1.632674 12.008075 1.630922 C 17.740362 1.629421 22.388899 6.274705 22.390901 12.006992 \\\" transform=\\\"matrix(15.610589,0,0,15.610589,0,0.00128032)\\\"/>     <path style=\\\"fill: none !important;stroke-width:3.262002;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 22.390901 12.010996 C 22.390901 14.870133 21.211564 17.602903 19.130895 19.564212 C 17.050476 21.525521 14.252896 22.541458 11.398763 22.372803 \\\" transform=\\\"matrix(15.610589,0,0,15.610589,0,0.00128032)\\\"/>   </g> </svg>\"\n    public static loading_svg() { return new Img(Svg.loading, true);}\n    public static location_refused = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 372.8125 175.78125 L 312.5 175.78125 C 306.570312 115.964844 259.332031 68.597656 199.53125 62.5 L 199.53125 1.71875 L 175.46875 1.71875 L 175.46875 62.5 C 115.511719 68.765625 68.269531 116.398438 62.5 176.40625 L 2.1875 176.40625 L 2.1875 201.09375 L 62.5 201.09375 C 68.292969 261.152344 115.871094 308.664062 175.9375 314.375 L 175.9375 375 L 200 375 L 200 314.21875 C 259.703125 308.089844 306.78125 260.679688 312.5 200.9375 L 372.34375 200.9375 L 372.34375 175.78125 Z M 187.5 289.84375 C 167.40625 289.867188 147.761719 283.878906 131.09375 272.65625 C 96.832031 249.789062 79.742188 208.519531 87.8125 168.125 C 91.808594 148.441406 101.476562 130.351562 115.625 116.09375 C 144.636719 86.929688 188.359375 78.113281 226.40625 93.75 C 264.28125 109.484375 288.949219 146.488281 288.90625 187.5 C 288.988281 214.550781 278.304688 240.519531 259.21875 259.6875 C 249.785156 269.242188 238.519531 276.789062 226.09375 281.875 C 213.71875 287.035156 200.441406 289.691406 187.03125 289.6875 Z M 187.5 289.84375 \\\"/>     <path style=\\\"fill-rule:nonzero;fill:rgb(74.117649%,5.882353%,0%);fill-opacity:1;stroke-width:0.426333;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%,100%,100%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 3.18875 2.36425 C 2.9815 2.379 2.80175 2.51325 2.72825 2.70775 C 2.655 2.90225 2.7015 3.1215 2.84725 3.26975 L 19.9735 21.26175 C 20.10475 21.4 20.29975 21.45775 20.485 21.413 C 20.67025 21.3685 20.81775 21.22825 20.8715 21.0455 C 20.92525 20.8625 20.87725 20.665 20.74575 20.527 L 3.61975 2.53475 C 3.5095 2.41525 3.35075 2.35225 3.18875 2.36425 Z M 3.18875 2.36425 \\\" transform=\\\"matrix(15.625,0,0,15.625,0,0)\\\"/>   </g> </svg>\"\n    public static location_refused_svg() { return new Img(Svg.location_refused, true);}\n    public static location = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 370.789062 174.078125 L 310.925781 174.078125 C 308.027344 144.964844 295.136719 117.75 274.449219 97.058594 C 253.757812 76.371094 226.542969 63.480469 197.425781 60.582031 L 197.425781 0 L 173.484375 0 L 173.484375 61.179688 C 144.359375 64.054688 117.128906 76.9375 96.4375 97.632812 C 75.742188 118.328125 62.859375 145.554688 59.984375 174.679688 L 0.121094 174.679688 L 0.121094 199.34375 L 59.984375 199.34375 C 62.84375 228.460938 75.722656 255.6875 96.421875 276.367188 C 117.121094 297.042969 144.359375 309.890625 173.484375 312.71875 L 173.484375 372.460938 L 197.425781 372.460938 L 197.425781 312.601562 C 226.539062 309.75 253.765625 296.894531 274.460938 276.21875 C 295.160156 255.542969 308.046875 228.335938 310.925781 199.222656 L 370.789062 199.222656 Z M 185.335938 288.175781 C 165.210938 288.152344 145.550781 282.164062 128.828125 270.96875 C 112.109375 259.773438 99.085938 243.867188 91.402344 225.273438 C 83.71875 206.675781 81.71875 186.21875 85.660156 166.484375 C 89.597656 146.753906 99.300781 128.628906 113.539062 114.410156 C 127.773438 100.191406 145.90625 90.507812 165.644531 86.59375 C 185.382812 82.675781 205.835938 84.699219 224.425781 92.402344 C 243.015625 100.109375 258.898438 113.15625 270.078125 129.886719 C 281.253906 146.621094 287.21875 166.289062 287.21875 186.410156 C 287.265625 199.820312 284.667969 213.109375 279.566406 225.511719 C 274.46875 237.914062 266.96875 249.1875 257.503906 258.6875 C 248.039062 268.1875 236.792969 275.722656 224.40625 280.867188 C 212.023438 286.007812 198.746094 288.65625 185.335938 288.65625 Z M 185.335938 288.175781 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 185.332031 128.542969 C 196.777344 128.542969 207.964844 131.933594 217.484375 138.292969 C 227 144.652344 234.417969 153.691406 238.796875 164.265625 C 243.179688 174.839844 244.324219 186.476562 242.089844 197.699219 C 239.859375 208.925781 234.34375 219.238281 226.253906 227.332031 C 218.160156 235.425781 207.847656 240.9375 196.621094 243.171875 C 185.398438 245.402344 173.757812 244.257812 163.1875 239.875 C 152.609375 235.496094 143.574219 228.078125 137.214844 218.5625 C 130.855469 209.046875 127.460938 197.855469 127.460938 186.410156 C 127.488281 171.070312 133.59375 156.367188 144.441406 145.519531 C 155.289062 134.671875 169.992188 128.566406 185.332031 128.542969 Z M 185.332031 128.542969 \\\"/>   </g> </svg>\"\n    public static location_svg() { return new Img(Svg.location, true);}\n    public static location_empty = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 372.8125 175.78125 L 312.5 175.78125 C 306.570312 115.964844 259.332031 68.597656 199.53125 62.5 L 199.53125 1.71875 L 175.46875 1.71875 L 175.46875 62.5 C 115.511719 68.765625 68.269531 116.398438 62.5 176.40625 L 2.1875 176.40625 L 2.1875 201.09375 L 62.5 201.09375 C 68.292969 261.152344 115.871094 308.664062 175.9375 314.375 L 175.9375 375 L 200 375 L 200 314.21875 C 259.703125 308.089844 306.78125 260.679688 312.5 200.9375 L 372.34375 200.9375 L 372.34375 175.78125 Z M 187.5 289.84375 C 167.40625 289.867188 147.761719 283.878906 131.09375 272.65625 C 96.832031 249.789062 79.742188 208.519531 87.8125 168.125 C 91.808594 148.441406 101.476562 130.351562 115.625 116.09375 C 144.636719 86.929688 188.359375 78.113281 226.40625 93.75 C 264.28125 109.484375 288.949219 146.488281 288.90625 187.5 C 288.988281 214.550781 278.304688 240.519531 259.21875 259.6875 C 249.785156 269.242188 238.519531 276.789062 226.09375 281.875 C 213.71875 287.035156 200.441406 289.691406 187.03125 289.6875 Z M 187.5 289.84375 \\\"/>   </g> </svg>\"\n    public static location_empty_svg() { return new Img(Svg.location_empty, true);}\n    public static location_locked = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 370.789062 174.078125 L 310.925781 174.078125 C 308.027344 144.964844 295.136719 117.75 274.449219 97.058594 C 253.757812 76.371094 226.542969 63.480469 197.425781 60.582031 L 197.425781 0 L 173.484375 0 L 173.484375 61.179688 C 144.359375 64.054688 117.128906 76.9375 96.4375 97.632812 C 75.742188 118.328125 62.859375 145.554688 59.984375 174.679688 L 0.121094 174.679688 L 0.121094 199.34375 L 59.984375 199.34375 C 62.84375 228.460938 75.722656 255.6875 96.421875 276.367188 C 117.121094 297.042969 144.359375 309.890625 173.484375 312.71875 L 173.484375 372.460938 L 197.425781 372.460938 L 197.425781 312.601562 C 226.539062 309.75 253.765625 296.894531 274.460938 276.21875 C 295.160156 255.542969 308.046875 228.335938 310.925781 199.222656 L 370.789062 199.222656 Z M 185.335938 288.175781 C 165.210938 288.152344 145.550781 282.164062 128.828125 270.96875 C 112.109375 259.773438 99.085938 243.867188 91.402344 225.273438 C 83.71875 206.675781 81.71875 186.21875 85.660156 166.484375 C 89.597656 146.753906 99.300781 128.628906 113.539062 114.410156 C 127.773438 100.191406 145.90625 90.507812 165.644531 86.59375 C 185.382812 82.675781 205.835938 84.699219 224.425781 92.402344 C 243.015625 100.109375 258.898438 113.15625 270.078125 129.886719 C 281.253906 146.621094 287.21875 166.289062 287.21875 186.410156 C 287.265625 199.820312 284.667969 213.109375 279.566406 225.511719 C 274.46875 237.914062 266.96875 249.1875 257.503906 258.6875 C 248.039062 268.1875 236.792969 275.722656 224.40625 280.867188 C 212.023438 286.007812 198.746094 288.65625 185.335938 288.65625 Z M 185.335938 288.175781 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:0.988235;\\\" d=\\\"M 233.257812 166.777344 L 224.351562 166.777344 L 224.351562 137.683594 C 224.351562 137.683594 224.351562 95.8125 182.734375 95.8125 C 141.113281 95.8125 141.113281 137.683594 141.113281 137.683594 L 141.113281 166.777344 L 132.207031 166.777344 C 123.335938 166.777344 116.144531 174.015625 116.144531 182.941406 L 116.144531 247.21875 C 116.191406 256.113281 123.367188 263.300781 132.207031 263.300781 L 233.257812 263.300781 C 242.128906 263.300781 249.320312 256.0625 249.320312 247.136719 L 249.320312 182.941406 C 249.320312 174.015625 242.128906 166.777344 233.257812 166.777344 Z M 182.734375 229.800781 C 167.902344 229.800781 160.476562 211.761719 170.960938 201.210938 C 181.449219 190.660156 199.378906 198.128906 199.378906 213.054688 C 199.378906 222.304688 191.925781 229.800781 182.734375 229.800781 Z M 207.703125 166.777344 L 157.761719 166.777344 L 157.761719 141.871094 C 157.761719 129.308594 157.761719 112.558594 182.734375 112.558594 C 207.703125 112.558594 207.703125 129.308594 207.703125 141.871094 Z M 207.703125 166.777344 \\\"/>   </g> </svg>\"\n    public static location_locked_svg() { return new Img(Svg.location_locked, true);}\n    public static location_unlocked = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 370.789062 174.078125 L 310.925781 174.078125 C 308.027344 144.964844 295.136719 117.75 274.449219 97.058594 C 253.757812 76.371094 226.542969 63.480469 197.425781 60.582031 L 197.425781 0 L 173.484375 0 L 173.484375 61.179688 C 144.359375 64.054688 117.128906 76.9375 96.4375 97.632812 C 75.742188 118.328125 62.859375 145.554688 59.984375 174.679688 L 0.121094 174.679688 L 0.121094 199.34375 L 59.984375 199.34375 C 62.84375 228.460938 75.722656 255.6875 96.421875 276.367188 C 117.121094 297.042969 144.359375 309.890625 173.484375 312.71875 L 173.484375 372.460938 L 197.425781 372.460938 L 197.425781 312.601562 C 226.539062 309.75 253.765625 296.894531 274.460938 276.21875 C 295.160156 255.542969 308.046875 228.335938 310.925781 199.222656 L 370.789062 199.222656 Z M 185.335938 288.175781 C 165.210938 288.152344 145.550781 282.164062 128.828125 270.96875 C 112.109375 259.773438 99.085938 243.867188 91.402344 225.273438 C 83.71875 206.675781 81.71875 186.21875 85.660156 166.484375 C 89.597656 146.753906 99.300781 128.628906 113.539062 114.410156 C 127.773438 100.191406 145.90625 90.507812 165.644531 86.59375 C 185.382812 82.675781 205.835938 84.699219 224.425781 92.402344 C 243.015625 100.109375 258.898438 113.15625 270.078125 129.886719 C 281.253906 146.621094 287.21875 166.289062 287.21875 186.410156 C 287.265625 199.820312 284.667969 213.109375 279.566406 225.511719 C 274.46875 237.914062 266.96875 249.1875 257.503906 258.6875 C 248.039062 268.1875 236.792969 275.722656 224.40625 280.867188 C 212.023438 286.007812 198.746094 288.65625 185.335938 288.65625 Z M 185.335938 288.175781 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:0.988235;\\\" d=\\\"M 182.738281 95.824219 C 141.121094 95.824219 141.113281 137.695312 141.113281 137.695312 L 141.113281 166.777344 L 132.203125 166.777344 C 123.328125 166.777344 116.148438 174.027344 116.148438 182.953125 L 116.148438 247.222656 C 116.195312 256.117188 123.363281 263.304688 132.203125 263.304688 L 233.246094 263.304688 C 242.117188 263.304688 249.328125 256.058594 249.328125 247.132812 L 249.328125 182.953125 C 249.328125 174.027344 242.117188 166.777344 233.246094 166.777344 L 224.367188 166.777344 L 224.367188 166.566406 L 207.703125 166.566406 L 207.703125 166.777344 L 157.777344 166.777344 L 157.777344 141.875 C 157.777344 129.316406 157.769531 112.546875 182.738281 112.546875 C 198.078125 112.546875 203.953125 118.894531 206.238281 126.679688 L 222.6875 126.679688 C 219.609375 114.273438 210.5 95.824219 182.738281 95.824219 Z M 184.570312 196.378906 C 192.382812 197.304688 199.371094 203.714844 199.371094 213.042969 C 199.371094 222.292969 191.933594 229.796875 182.738281 229.796875 C 167.90625 229.796875 160.472656 211.753906 170.960938 201.203125 C 174.890625 197.246094 179.882812 195.824219 184.570312 196.378906 Z M 184.570312 196.378906 \\\"/>   </g> </svg>\"\n    public static location_unlocked_svg() { return new Img(Svg.location_unlocked, true);}\n    public static login = \" <svg    width=\\\"375px\\\"    height=\\\"375px\\\"    viewBox=\\\"0 0 375 375\\\"    version=\\\"1.1\\\"    id=\\\"svg11\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs15\\\" />   <path      id=\\\"path2\\\"      style=\\\"color:#000000;fill:#000000;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none\\\"      d=\\\"M 53.929688 27.095703 C 32.119816 27.095703 16.970068 40.812733 11.746094 53.177734 C 7.106544 64.159419 7.5344948 73.99011 7.6914062 76.158203 L 8.4628906 188.625 L 7.6914062 301.08984 C 7.5344948 303.25794 7.106544 313.08863 11.746094 324.07031 C 16.970068 336.43531 32.119816 350.1543 53.929688 350.1543 C 87.406 350.1543 140.12695 349.40625 140.12695 349.40625 A 15.663316 15.663316 0 0 0 140.16602 349.40625 C 140.16602 349.40625 151.12665 349.32365 161.72266 342.59961 C 172.31866 335.87554 182.41602 320.93277 182.41602 300.11719 L 182.41602 294.41016 A 15.66175 15.66175 0 0 0 166.75391 278.74805 A 15.66175 15.66175 0 0 0 151.0918 294.41016 L 151.0918 300.11719 C 151.0918 312.48521 147.76532 314.35785 144.9375 316.15234 C 142.10968 317.94684 139.64648 318.08594 139.64648 318.08594 C 139.59848 318.08661 86.922647 318.83008 53.929688 318.83008 C 42.493509 318.83008 42.353165 316.03148 40.599609 311.88086 C 38.846054 307.73024 38.962891 302.7207 38.962891 302.7207 A 15.663316 15.663316 0 0 0 39.013672 301.56836 L 39.787109 188.73242 A 15.66175 15.66175 0 0 0 39.78125 188.625 A 15.66175 15.66175 0 0 0 39.787109 188.51758 L 39.013672 75.681641 A 15.663316 15.663316 0 0 0 38.962891 74.527344 C 38.962891 74.527344 38.846054 69.517805 40.599609 65.367188 C 42.353165 61.216571 42.493508 58.419922 53.929688 58.419922 C 86.922646 58.419922 139.59847 59.161432 139.64648 59.162109 C 139.64648 59.162109 142.10968 59.303163 144.9375 61.097656 C 147.76532 62.892149 151.0918 64.762835 151.0918 77.130859 L 151.0918 82.839844 A 15.66175 15.66175 0 0 0 166.75391 98.5 A 15.66175 15.66175 0 0 0 182.41602 82.839844 L 182.41602 77.130859 C 182.41602 56.315277 172.31866 41.374459 161.72266 34.650391 C 151.12665 27.926322 140.16602 27.84375 140.16602 27.84375 A 15.663316 15.663316 0 0 0 140.12695 27.841797 C 140.12695 27.841797 87.406001 27.095703 53.929688 27.095703 z M 234.94336 74.408203 A 19.8664 19.8664 0 0 0 225.36719 78.158203 C 225.36719 78.158203 201.76359 95.524722 177.85938 116.39258 C 165.90727 126.82651 153.84111 138.11038 144.11523 149.23828 C 134.38936 160.36618 124.82118 169.15316 124.58594 187.41211 A 19.868386 19.868386 0 0 0 124.58594 187.41406 C 124.34949 205.98477 134.08341 214.90837 143.80273 226.0918 C 153.52206 237.27522 165.61857 248.59181 177.61914 259.06055 C 201.62029 279.99802 225.39648 297.42578 225.39648 297.42578 A 19.8664 19.8664 0 0 0 253.16602 293.16406 A 19.8664 19.8664 0 0 0 248.9043 265.39453 C 248.9043 265.39453 226.16776 248.68556 203.73828 229.11914 C 194.28077 220.86885 185.03853 212.15104 177.75586 204.33594 L 359.47461 204.33594 A 16.875 16.875 0 0 0 376.34961 187.46094 A 16.875 16.875 0 0 0 359.47461 170.58594 L 178.46289 170.58594 C 185.70519 162.89528 194.75718 154.38471 203.98828 146.32617 C 226.3516 126.80349 248.93359 110.14648 248.93359 110.14648 A 19.8664 19.8664 0 0 0 253.14453 82.369141 A 19.8664 19.8664 0 0 0 234.94336 74.408203 z \\\" /> </svg> \"\n    public static login_svg() { return new Img(Svg.login, true);}\n    public static mapillary = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:evenodd;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 375 187.5 C 375 291.058594 291.058594 375 187.5 375 C 83.941406 375 0 291.058594 0 187.5 C 0 83.941406 83.941406 0 187.5 0 C 291.058594 0 375 83.941406 375 187.5 Z M 88.59375 176.085938 C 84.246094 173.730469 85.042969 167.589844 90.539062 166.019531 C 95.203125 164.695312 133.042969 152.003906 144.503906 148.160156 C 146.558594 147.480469 148.175781 145.882812 148.875 143.835938 L 167.273438 89.894531 C 168.984375 84.855469 175.21875 84.832031 177.75 89.71875 C 178.03125 90.257812 181.558594 96.667969 186.316406 105.316406 L 186.316406 105.328125 C 196.816406 124.417969 213.292969 154.371094 214.113281 156.1875 C 215.378906 158.820312 214.382812 161.984375 211.839844 163.417969 C 210.28125 164.390625 208.160156 165.644531 206.34375 166.699219 L 203.191406 168.574219 C 200.414062 170.308594 197.753906 169.101562 196.476562 166.429688 C 195.714844 164.824219 191.90625 158.003906 188.121094 151.207031 C 185.578125 146.648438 183.046875 142.113281 181.441406 139.171875 C 179.449219 135.503906 173.449219 134.097656 171.433594 140.015625 L 164.800781 159.46875 C 164.070312 161.519531 162.449219 163.125 160.394531 163.839844 L 140.4375 170.449219 C 136.5 171.75 134.578125 177.785156 139.898438 180.328125 C 140.34375 180.539062 144.386719 182.695312 149.25 185.285156 L 149.261719 185.285156 C 156.65625 189.234375 165.960938 194.191406 167.449219 194.894531 C 169.910156 196.066406 171.292969 199.464844 169.839844 201.867188 C 167.871094 205.148438 165.339844 209.308594 164.425781 210.65625 C 162.789062 213.035156 159.621094 213.789062 157.089844 212.402344 C 154.476562 211.007812 90.164062 176.929688 88.605469 176.085938 Z M 175.054688 221.789062 C 178.429688 223.511719 260.320312 266.835938 262.898438 268.230469 C 268.066406 271.019531 273.527344 265.628906 270.726562 260.589844 C 270.246094 259.734375 264.785156 249.703125 257.753906 236.753906 L 257.730469 236.707031 C 244.066406 211.582031 224.449219 175.488281 223.453125 173.835938 C 221.953125 171.328125 218.273438 170.0625 215.507812 171.75 C 212.789062 173.390625 209.671875 175.242188 207.914062 176.132812 C 204.398438 177.925781 203.953125 180.621094 205.535156 183.621094 C 209.015625 190.207031 219.972656 210.1875 221.238281 212.285156 C 223.851562 216.667969 218.003906 221.671875 214.03125 219.492188 C 213.398438 219.140625 209.25 216.949219 204.257812 214.3125 C 196.089844 210 185.660156 204.480469 184.523438 203.8125 C 182.683594 202.757812 179.425781 202.757812 177.1875 206.367188 C 175.570312 208.992188 173.578125 212.25 172.664062 213.890625 C 170.847656 217.101562 171.679688 220.066406 175.054688 221.789062 Z M 175.054688 221.789062 \\\"/>   </g> </svg>\"\n    public static mapillary_svg() { return new Img(Svg.mapillary, true);}\n    public static move = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 356.25 187.5 L 281.25 131.25 L 281.25 168.75 L 206.25 168.75 L 206.25 93.75 L 243.75 93.75 L 187.5 18.75 L 131.25 93.75 L 168.75 93.75 L 168.75 168.75 L 93.75 168.75 L 93.75 131.25 L 18.75 187.5 L 93.75 243.75 L 93.75 206.25 L 168.75 206.25 L 168.75 281.25 L 131.25 281.25 L 187.5 356.25 L 243.75 281.25 L 206.25 281.25 L 206.25 206.25 L 281.25 206.25 L 281.25 243.75 Z M 356.25 187.5 \\\"/>   </g> </svg>\"\n    public static move_svg() { return new Img(Svg.move, true);}\n    public static move_confirm = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 356.25 187.5 L 281.25 131.25 L 281.25 168.75 L 206.25 168.75 L 206.25 93.75 L 243.75 93.75 L 187.5 18.75 L 131.25 93.75 L 168.75 93.75 L 168.75 168.75 L 93.75 168.75 L 93.75 131.25 L 18.75 187.5 L 93.75 243.75 L 93.75 206.25 L 168.75 206.25 L 168.75 281.25 L 131.25 281.25 L 187.5 356.25 L 243.75 281.25 L 206.25 281.25 L 206.25 206.25 L 281.25 206.25 L 281.25 243.75 Z M 356.25 187.5 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(21.568628%,83.92157%,28.627452%);fill-opacity:1;\\\" d=\\\"M 363.390625 284.421875 C 363.390625 327.871094 328.171875 363.09375 284.722656 363.09375 C 241.273438 363.09375 206.050781 327.871094 206.050781 284.421875 C 206.050781 240.976562 241.273438 205.753906 284.722656 205.753906 C 328.171875 205.753906 363.390625 240.976562 363.390625 284.421875 Z M 363.390625 284.421875 \\\"/>     <path style=\\\"fill: none !important;stroke-width:2.5;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%,100%,100%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 11.000001 15.000002 L 15.500205 20.000119 L 21.500148 12.00003 \\\" transform=\\\"matrix(7.899815,0,0,7.899815,156.852025,162.752759)\\\"/>   </g> </svg>\"\n    public static move_confirm_svg() { return new Img(Svg.move_confirm, true);}\n    public static move_not_allowed = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 356.25 187.5 L 281.25 131.25 L 281.25 168.75 L 206.25 168.75 L 206.25 93.75 L 243.75 93.75 L 187.5 18.75 L 131.25 93.75 L 168.75 93.75 L 168.75 168.75 L 93.75 168.75 L 93.75 131.25 L 18.75 187.5 L 93.75 243.75 L 93.75 206.25 L 168.75 206.25 L 168.75 281.25 L 131.25 281.25 L 187.5 356.25 L 243.75 281.25 L 206.25 281.25 L 206.25 206.25 L 281.25 206.25 L 281.25 243.75 Z M 356.25 187.5 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(90.588236%,17.254902%,26.666668%);fill-opacity:1;\\\" d=\\\"M 363.390625 276.476562 C 363.390625 324.316406 324.613281 363.09375 276.777344 363.09375 C 228.941406 363.09375 190.164062 324.316406 190.164062 276.476562 C 190.164062 228.640625 228.941406 189.863281 276.777344 189.863281 C 324.613281 189.863281 363.390625 228.640625 363.390625 276.476562 Z M 363.390625 276.476562 \\\"/>     <path style=\\\"fill: none !important;stroke-width:6.012842;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(100%,100%,100%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 22.551733 293.603472 L 2.927657 273.978357 \\\" transform=\\\"matrix(3.759333,0,0,3.759333,228.247869,-791.737604)\\\"/>     <path style=\\\"fill: none !important;stroke-width:6.012842;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(98.823529%,100%,100%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 22.581866 273.883801 L 2.956751 293.508916 \\\" transform=\\\"matrix(3.759333,0,0,3.759333,228.247869,-791.737604)\\\"/>   </g> </svg>\"\n    public static move_not_allowed_svg() { return new Img(Svg.move_not_allowed, true);}\n    public static note = \" <svg    width=\\\"275px\\\"    height=\\\"374px\\\"    viewBox=\\\"0 0 275 374\\\"    version=\\\"1.1\\\"    id=\\\"svg7\\\"    sodipodi:docname=\\\"note.svg\\\"    inkscape:version=\\\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs11\\\" />   <path      id=\\\"path2\\\"      class=\\\"selectable\\\"      style=\\\"fill:#c60000;fill-opacity:1;fill-rule:nonzero;stroke:#950000;stroke-width:5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"      d=\\\"M 135.55664,1.9765625 C 74.593645,2.1922681 20.084472,43.910648 7.2773438,104.37109 4.936895,115.41704 4.1435422,126.42334 4.7265625,137.18555 2.5821353,205.89923 56.815085,269.30423 107.08203,335.96094 c 12.32031,15.26562 30.35156,34.07422 30.35156,34.07422 l 27.64453,-32.61328 C 227.98632,255.40992 319.84389,135.74148 238.04492,49.080078 219.42005,26.853995 193.07863,10.556457 161.97656,4.4921875 153.10693,2.7626953 144.26564,1.9457474 135.55664,1.9765625 Z\\\"/>   <path      id=\\\"path5936\\\"      style=\\\"color:#000000;fill:#fffffd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"      d=\\\"m 202.54602,49.933374 a 19.846225,19.846225 0 0 0 -14.03347,5.812789 L 137.36365,106.89506 86.838795,56.370195 a 19.845967,19.845967 0 0 0 -14.033473,-5.812787 19.845967,19.845967 0 0 0 -14.033471,5.812787 19.845967,19.845967 0 0 0 0,28.066944 l 50.524859,50.524871 -50.328371,50.32837 a 19.846225,19.846225 0 0 0 0,28.06695 19.846225,19.846225 0 0 0 28.066944,0 l 50.328367,-50.32838 50.95423,50.95424 a 19.845967,19.845967 0 0 0 28.06694,0 19.845967,19.845967 0 0 0 0,-28.06695 L 165.4306,134.96201 216.57949,83.813106 a 19.846225,19.846225 0 0 0 0,-28.066943 19.846225,19.846225 0 0 0 -14.03347,-5.812789 z\\\" /> </svg> \"\n    public static note_svg() { return new Img(Svg.note, true);}\n    public static osm_logo_us = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(49.411765%,73.725492%,43.529412%);fill-opacity:1;\\\" d=\\\"M 0 5.683594 L 31.621094 88.6875 L 0 171.6875 L 31.621094 254.691406 L 0 337.699219 L 19.414062 345.109375 L 124.898438 239.675781 L 143.824219 242.589844 L 166.796875 219.613281 C 153.238281 203.910156 143.089844 185.171875 137.546875 164.476562 L 148.316406 155.628906 C 146.464844 147.039062 145.453125 138.140625 145.453125 129 C 145.453125 83.351562 169.800781 43.246094 206.175781 21 L 166.003906 5.683594 L 83 37.300781 Z M 0 5.683594 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(49.411765%,73.725492%,43.529412%);fill-opacity:1;\\\" d=\\\"M 271.9375 26.234375 C 270.210938 26.234375 268.5 26.300781 266.796875 26.378906 C 265.175781 26.460938 263.550781 26.574219 261.953125 26.726562 C 260.664062 26.851562 259.375 27.003906 258.101562 27.175781 C 256.761719 27.351562 255.464844 27.539062 254.148438 27.765625 C 253.734375 27.839844 253.324219 27.9375 252.914062 28.011719 C 252.085938 28.171875 251.265625 28.335938 250.441406 28.503906 C 249.789062 28.648438 249.121094 28.75 248.464844 28.902344 C 247.6875 29.085938 246.921875 29.296875 246.140625 29.496094 C 244.851562 29.828125 243.5625 30.199219 242.289062 30.585938 C 241.328125 30.871094 240.375 31.160156 239.425781 31.472656 C 238.464844 31.789062 237.503906 32.113281 236.558594 32.460938 C 236.511719 32.476562 236.460938 32.496094 236.410156 32.511719 C 198.691406 46.351562 171.4375 81.640625 169.316406 123.714844 C 169.226562 125.472656 169.164062 127.222656 169.164062 129 C 169.164062 130.761719 169.214844 132.503906 169.316406 134.238281 C 169.316406 134.253906 169.3125 134.273438 169.316406 134.289062 C 169.390625 135.578125 169.5 136.863281 169.613281 138.140625 C 173.960938 187.710938 213.226562 226.976562 262.796875 231.324219 C 264.074219 231.4375 265.359375 231.558594 266.648438 231.621094 C 266.664062 231.621094 266.683594 231.621094 266.699219 231.621094 C 268.433594 231.722656 270.171875 231.765625 271.933594 231.765625 C 299.941406 231.765625 325.265625 220.640625 343.773438 202.566406 C 344.789062 201.574219 345.8125 200.589844 346.785156 199.558594 C 346.953125 199.375 347.113281 199.191406 347.277344 199.011719 C 347.335938 198.949219 347.375 198.875 347.425781 198.8125 C 348.199219 197.984375 348.960938 197.148438 349.699219 196.296875 C 350 195.949219 350.296875 195.601562 350.589844 195.253906 C 350.824219 194.976562 351.050781 194.699219 351.285156 194.414062 C 352.113281 193.410156 352.910156 192.390625 353.703125 191.351562 C 354.714844 190.023438 355.722656 188.628906 356.664062 187.25 C 358.5625 184.496094 360.328125 181.648438 361.953125 178.703125 C 362.566406 177.597656 363.113281 176.476562 363.683594 175.347656 C 363.871094 174.976562 364.097656 174.628906 364.277344 174.261719 C 364.378906 174.050781 364.472656 173.828125 364.574219 173.613281 C 365.203125 172.296875 365.824219 170.964844 366.402344 169.613281 C 366.476562 169.433594 366.566406 169.253906 366.648438 169.066406 C 367.222656 167.710938 367.761719 166.3125 368.277344 164.921875 C 368.347656 164.738281 368.410156 164.558594 368.476562 164.375 C 368.996094 162.949219 369.5 161.535156 369.960938 160.078125 C 370.003906 159.933594 370.0625 159.785156 370.109375 159.636719 C 370.566406 158.136719 370.996094 156.613281 371.390625 155.089844 C 371.421875 154.972656 371.460938 154.859375 371.488281 154.746094 C 371.886719 153.191406 372.25 151.625 372.578125 150.050781 C 372.597656 149.949219 372.609375 149.851562 372.625 149.75 C 372.703125 149.378906 372.75 148.996094 372.824219 148.613281 C 373.078125 147.300781 373.3125 145.996094 373.515625 144.664062 C 373.765625 143.003906 373.988281 141.351562 374.160156 139.675781 C 374.160156 139.625 374.160156 139.574219 374.160156 139.523438 C 374.328125 137.828125 374.464844 136.109375 374.550781 134.386719 C 374.550781 134.351562 374.550781 134.324219 374.550781 134.289062 C 374.640625 132.535156 374.703125 130.777344 374.703125 129 C 374.703125 72.101562 328.828125 26.234375 271.9375 26.234375 Z M 271.9375 26.234375 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(49.411765%,73.725492%,43.529412%);fill-opacity:1;\\\" d=\\\"M 352.765625 226.1875 C 330.824219 244.476562 302.648438 255.484375 271.9375 255.484375 C 262.796875 255.484375 253.898438 254.472656 245.308594 252.621094 L 236.460938 263.390625 C 216.808594 258.125 198.898438 248.753906 183.691406 236.214844 L 159.925781 260.027344 L 162.847656 277.621094 L 74.453125 366.058594 L 83 369.316406 L 166.003906 337.699219 L 249.011719 369.316406 L 332.011719 337.699219 L 363.636719 254.691406 Z M 352.765625 226.1875 \\\"/>   </g> </svg>\"\n    public static osm_logo_us_svg() { return new Img(Svg.osm_logo_us, true);}\n    public static pencil = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"328px\\\" height=\\\"374px\\\" viewBox=\\\"0 0 328 374\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 257.714844 23.375 L 210.855469 70.125 L 281.144531 140.25 L 328 93.5 Z M 0 280.5 L 0.25 350.832031 L 70.285156 350.625 L 257.714844 163.625 L 187.429688 93.5 Z M 70.285156 327.25 L 23.429688 327.25 L 23.429688 280.5 L 46.855469 280.5 L 46.855469 303.875 L 70.285156 303.875 Z M 70.285156 327.25 \\\"/>   </g> </svg>\"\n    public static pencil_svg() { return new Img(Svg.pencil, true);}\n    public static person = \" <!-- Created with Inkscape (http://www.inkscape.org/) -->  <svg    width=\\\"100\\\"    height=\\\"100\\\"    viewBox=\\\"0 0 26.458333 26.458333\\\"    version=\\\"1.1\\\"    id=\\\"svg5\\\"    inkscape:version=\\\"1.1.2 (0a00cf5339, 2022-02-04)\\\"    sodipodi:docname=\\\"person.svg\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <sodipodi:namedview      id=\\\"namedview7\\\"      pagecolor=\\\"#505050\\\"      bordercolor=\\\"#eeeeee\\\"      borderopacity=\\\"1\\\"      inkscape:pageshadow=\\\"0\\\"      inkscape:pageopacity=\\\"0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      inkscape:document-units=\\\"mm\\\"      showgrid=\\\"false\\\"      inkscape:snap-global=\\\"false\\\"      units=\\\"px\\\"      inkscape:zoom=\\\"3.629\\\"      inkscape:cx=\\\"65.858363\\\"      inkscape:cy=\\\"51.11601\\\"      inkscape:window-width=\\\"1920\\\"      inkscape:window-height=\\\"995\\\"      inkscape:window-x=\\\"0\\\"      inkscape:window-y=\\\"0\\\"      inkscape:window-maximized=\\\"1\\\"      inkscape:current-layer=\\\"layer1\\\" />   <defs      id=\\\"defs2\\\" />   <g      inkscape:label=\\\"Layer 1\\\"      inkscape:groupmode=\\\"layer\\\"      id=\\\"layer1\\\"      transform=\\\"translate(-36.012339,-111.57266)\\\">     <path        style=\\\"fill:#000000;stroke-width:0.264583\\\"        id=\\\"path928\\\"        d=\\\"\\\" />     <path        style=\\\"fill:#000000;stroke-width:0.264583\\\"        id=\\\"path890\\\"        d=\\\"\\\" />     <path        id=\\\"path3123\\\"        style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.12697;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"        d=\\\"m 45.80331,124.75744 0.05184,1.66724 c -10.853713,0.85314 -8.811666,5.58744 -9.743599,11.32685 8.722476,-0.064 17.444809,-0.0283 26.167302,-2e-5 -0.931933,-5.73941 1.110115,-10.47371 -9.743599,-11.32685 l 0.05184,-1.66724 c 1.828852,-2.39569 4.204525,-13.02917 -3.49306,-12.94766 -7.697588,0.0815 -5.10528,10.57071 -3.290715,12.94768 z\\\"        sodipodi:nodetypes=\\\"cccccccc\\\" />   </g> </svg> \"\n    public static person_svg() { return new Img(Svg.person, true);}\n    public static pop_out = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 181.875 142.3125 L 230.851562 191.289062 L 323.023438 99.113281 L 370.613281 146.699219 L 370.6875 4.574219 L 227.664062 3.75 L 274.085938 50.136719 Z M 369.898438 204.863281 L 334.613281 169.085938 L 335.25 334.574219 L 40.988281 334.726562 L 41.289062 41.210938 L 205.875 40.460938 L 169.125 3.710938 L 40.5 3.710938 C 20.210938 3.75 3.75 20.25 3.75 40.5 L 3.75 334.5 C 3.75 354.789062 20.210938 371.25 40.5 371.25 L 334.5 371.25 C 354.789062 371.25 371.25 354.789062 371.25 334.5 Z M 369.898438 204.863281 \\\"/>   </g> </svg>\"\n    public static pop_out_svg() { return new Img(Svg.pop_out, true);}\n    public static relocation = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 374.261719 222.558594 L 351.363281 199.675781 L 351.363281 143.605469 C 351.363281 134.917969 344.257812 127.8125 335.574219 127.8125 L 319.78125 127.8125 C 311.097656 127.8125 303.992188 134.917969 303.992188 143.605469 L 303.992188 152.335938 L 272.410156 120.785156 C 268.101562 116.714844 264.152344 112.023438 256.621094 112.023438 C 249.089844 112.023438 245.140625 116.714844 240.832031 120.785156 L 138.980469 222.558594 C 134.054688 227.6875 130.296875 231.429688 130.296875 238.347656 C 130.296875 247.238281 137.117188 254.136719 146.085938 254.136719 L 161.878906 254.136719 L 161.878906 348.882812 C 161.878906 357.566406 168.984375 364.671875 177.667969 364.671875 L 225.039062 364.671875 L 225.039062 285.71875 C 225.039062 277.035156 232.144531 269.929688 240.832031 269.929688 L 272.410156 269.929688 C 281.097656 269.929688 288.203125 277.035156 288.203125 285.71875 L 288.203125 364.671875 L 335.574219 364.671875 C 344.257812 364.671875 351.363281 357.566406 351.363281 348.882812 L 351.363281 254.136719 L 367.15625 254.136719 C 376.125 254.136719 382.945312 247.238281 382.945312 238.347656 C 382.945312 231.429688 379.1875 227.6875 374.261719 222.558594 Z M 374.261719 222.558594 \\\"/>     <path style=\\\"fill: none !important;stroke-width:0.439681;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(50.196081%,50.196081%,50.196081%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 7.546833 3.865333 L 6.909333 3.228333 L 6.909333 1.667 C 6.909333 1.425167 6.7115 1.227333 6.469667 1.227333 L 6.029833 1.227333 C 5.788167 1.227333 5.590167 1.425167 5.590167 1.667 L 5.590167 1.910167 L 4.710833 1.031667 C 4.590833 0.918167 4.480833 0.787667 4.271167 0.787667 C 4.0615 0.787667 3.9515 0.918167 3.8315 1.031667 L 0.9955 3.865333 C 0.858333 4.008333 0.753667 4.1125 0.753667 4.305167 C 0.753667 4.552667 0.943667 4.744833 1.1935 4.744833 L 1.633167 4.744833 L 1.633167 7.382833 C 1.633167 7.624667 1.831 7.8225 2.072833 7.8225 L 3.391833 7.8225 L 3.391833 5.624167 C 3.391833 5.382333 3.589667 5.1845 3.8315 5.1845 L 4.710833 5.1845 C 4.952667 5.1845 5.1505 5.382333 5.1505 5.624167 L 5.1505 7.8225 L 6.469667 7.8225 C 6.7115 7.8225 6.909333 7.624667 6.909333 7.382833 L 6.909333 4.744833 L 7.349 4.744833 C 7.598667 4.744833 7.788667 4.552667 7.788667 4.305167 C 7.788667 4.1125 7.684 4.008333 7.546833 3.865333 Z M 7.546833 3.865333 \\\" transform=\\\"matrix(23.4375,0,0,23.4375,0,0)\\\"/>     <path style=\\\"fill: none !important;stroke-width:0.861163;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 4.263667 11.093667 L 6.041667 12.602833 L 4.263667 14.1075 \\\" transform=\\\"matrix(23.4375,0,0,23.4375,0,0)\\\"/>     <path style=\\\"fill: none !important;stroke-width:0.797562;stroke-linecap:round;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 5.544667 12.650833 C 4.720667 12.633333 2.1675 13.155333 2.360833 10.176167 \\\" transform=\\\"matrix(23.4375,0,0,23.4375,0,0)\\\"/>   </g> </svg>\"\n    public static relocation_svg() { return new Img(Svg.relocation, true);}\n    public static resolved = \" <svg    width=\\\"275px\\\"    height=\\\"374px\\\"    viewBox=\\\"0 0 275 374\\\"    version=\\\"1.1\\\"    id=\\\"svg7\\\"    sodipodi:docname=\\\"resolved.svg\\\"    inkscape:version=\\\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs11\\\" />   <path      id=\\\"path2\\\"      class=\\\"selectable\\\"      style=\\\"fill:#00c82e;fill-opacity:1;fill-rule:nonzero;stroke:#40ff00;stroke-width:5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"      d=\\\"M 135.55664,1.9765625 C 74.593645,2.1922681 20.084472,43.910648 7.2773438,104.37109 4.936895,115.41704 4.1435422,126.42334 4.7265625,137.18555 2.5821353,205.89923 56.815085,269.30423 107.08203,335.96094 c 12.32031,15.26562 30.35156,34.07422 30.35156,34.07422 l 27.64453,-32.61328 C 227.98632,255.40992 319.84389,135.74148 238.04492,49.080078 219.42005,26.853995 193.07863,10.556457 161.97656,4.4921875 153.10693,2.7626953 144.26564,1.9457474 135.55664,1.9765625 Z\\\"      sodipodi:nodetypes=\\\"scccccccs\\\" />   <path      style=\\\"color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.52437;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"      d=\\\"m 216.35763,81.457377 c -6.31364,-1.014444 -12.65279,1.657101 -16.62944,7.00824 L 117.3564,199.32492 69.393978,152.33285 c -7.532586,-9.1813 -20.4662,-9.07329 -27.311559,-1.91781 -7.087039,7.56459 -8.507731,17.24412 -0.648456,25.76692 l 61.942427,65.80658 c 7.15464,9.62634 20.80539,9.62634 27.96003,0 l 96.3518,-129.67383 c 6.14683,-8.27231 4.87072,-20.317183 -2.85026,-26.902908 -2.45389,-2.092661 -5.37864,-3.456485 -8.48033,-3.954425 z\\\"      id=\\\"path3639\\\"      sodipodi:nodetypes=\\\"ccccccccccc\\\" /> </svg> \"\n    public static resolved_svg() { return new Img(Svg.resolved, true);}\n    public static ring = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\"fill: none !important;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M 95 50 C 95 74.853125 74.853125 95 50 95 C 25.146875 95 5 74.853125 5 50 C 5 25.146875 25.146875 5 50 5 C 74.853125 5 95 25.146875 95 50 Z M 95 50 \\\" transform=\\\"matrix(3.75,0,0,3.75,0,0)\\\"/>   </g> </svg>\"\n    public static ring_svg() { return new Img(Svg.ring, true);}\n    public static robot = \" <svg    width=\\\"375\\\"    height=\\\"375\\\"    viewBox=\\\"0 0 375 375\\\"    version=\\\"1.1\\\"    id=\\\"svg5\\\"    sodipodi:docname=\\\"robot.svg\\\"    inkscape:version=\\\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs9\\\" />   <sodipodi:namedview      id=\\\"namedview7\\\"      pagecolor=\\\"#505050\\\"      bordercolor=\\\"#eeeeee\\\"      borderopacity=\\\"1\\\"      inkscape:pageshadow=\\\"0\\\"      inkscape:pageopacity=\\\"0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      showgrid=\\\"false\\\"      height=\\\"375px\\\"      inkscape:zoom=\\\"0.85925783\\\"      inkscape:cx=\\\"153.62094\\\"      inkscape:cy=\\\"67.500112\\\"      inkscape:current-layer=\\\"svg5\\\" />   <g      id=\\\"surface1\\\"      transform=\\\"translate(0,34)\\\">     <path        style=\\\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\\\"        d=\\\"m 0,150 v 75 c 0,10.37109 8.378906,18.75 18.75,18.75 H 37.5 V 131.25 H 18.75 C 8.378906,131.25 0,139.62891 0,150 Z M 271.875,56.25 H 206.25 V 18.75 C 206.25,8.378906 197.87109,0 187.5,0 177.12891,0 168.75,8.378906 168.75,18.75 v 37.5 H 103.125 C 77.226562,56.25 56.25,77.226562 56.25,103.125 V 262.5 c 0,20.68359 16.816406,37.5 37.5,37.5 h 187.5 c 20.68359,0 37.5,-16.81641 37.5,-37.5 V 103.125 C 318.75,77.226562 297.77344,56.25 271.875,56.25 Z M 150,243.75 H 112.5 V 225 H 150 Z m -18.75,-70.3125 c -12.94922,0 -23.4375,-10.48828 -23.4375,-23.4375 0,-12.94922 10.48828,-23.4375 23.4375,-23.4375 12.94922,0 23.4375,10.48828 23.4375,23.4375 0,12.94922 -10.48828,23.4375 -23.4375,23.4375 z m 75,70.3125 h -37.5 V 225 h 37.5 z m 56.25,0 H 225 V 225 h 37.5 z m -18.75,-70.3125 c -12.94922,0 -23.4375,-10.48828 -23.4375,-23.4375 0,-12.94922 10.48828,-23.4375 23.4375,-23.4375 12.94922,0 23.4375,10.48828 23.4375,23.4375 0,12.94922 -10.48828,23.4375 -23.4375,23.4375 z M 356.25,131.25 H 337.5 v 112.5 h 18.75 c 10.37109,0 18.75,-8.37891 18.75,-18.75 v -75 c 0,-10.37109 -8.37891,-18.75 -18.75,-18.75 z m 0,0\\\"        id=\\\"path2\\\" />   </g> </svg> \"\n    public static robot_svg() { return new Img(Svg.robot, true);}\n    public static satellite = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 94.136719 118.066406 L 102.421875 126.351562 L 127.28125 101.492188 L 118.996094 93.207031 Z M 94.136719 118.066406 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(53.333336%,52.549022%,57.647061%);fill-opacity:1;\\\" d=\\\"M 102.421875 84.917969 L 94.136719 93.207031 L 106.566406 105.636719 L 123.140625 89.0625 C 127.707031 84.496094 127.710938 77.058594 123.140625 72.488281 L 98.28125 47.628906 C 93.710938 43.058594 86.273438 43.0625 81.707031 47.628906 L 77.5625 51.773438 L 102.421875 76.632812 C 104.710938 78.921875 104.710938 82.632812 102.421875 84.917969 Z M 102.421875 84.917969 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(71.372551%,72.156864%,74.509805%);fill-opacity:1;\\\" d=\\\"M 94.136719 93.207031 L 85.851562 101.492188 C 83.5625 103.78125 79.851562 103.78125 77.5625 101.492188 L 52.703125 76.632812 L 48.5625 80.777344 C 43.992188 85.34375 43.992188 92.777344 48.5625 97.347656 L 73.421875 122.207031 C 77.992188 126.777344 85.425781 126.777344 89.992188 122.207031 L 94.136719 118.066406 L 106.566406 105.636719 Z M 94.136719 93.207031 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 272.292969 97.347656 L 235.003906 134.636719 L 210.144531 109.777344 L 247.433594 72.488281 Z M 272.292969 97.347656 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 214.289062 39.34375 L 189.429688 64.203125 C 182.578125 71.058594 182.578125 82.207031 189.429688 89.0625 L 201.859375 101.492188 L 239.148438 64.203125 Z M 214.289062 39.34375 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 317.871094 51.773438 L 280.582031 89.0625 L 255.722656 64.203125 L 293.011719 26.914062 Z M 317.871094 51.773438 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 284.722656 18.628906 L 272.292969 6.199219 C 265.441406 -0.65625 254.289062 -0.65625 247.433594 6.199219 L 222.574219 31.058594 L 247.433594 55.917969 Z M 284.722656 18.628906 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 351.015625 84.917969 L 313.726562 122.207031 L 288.867188 97.347656 L 326.15625 60.058594 Z M 351.015625 84.917969 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 305.441406 130.496094 L 268.152344 167.78125 L 243.292969 142.925781 L 280.582031 105.636719 Z M 305.441406 130.496094 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 346.871094 155.355469 L 371.730469 130.496094 C 378.585938 123.640625 378.585938 112.488281 371.730469 105.636719 L 359.300781 93.207031 L 322.011719 130.496094 Z M 346.871094 155.355469 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 276.4375 176.070312 L 288.867188 188.5 C 295.722656 195.351562 306.871094 195.351562 313.726562 188.5 L 338.585938 163.640625 L 313.726562 138.78125 Z M 276.4375 176.070312 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(53.333336%,52.549022%,57.647061%);fill-opacity:1;\\\" d=\\\"M 359.300781 93.207031 L 351.015625 84.917969 L 313.726562 122.207031 L 288.867188 97.347656 L 326.15625 60.058594 L 317.871094 51.773438 L 280.582031 89.0625 L 255.722656 64.203125 L 293.011719 26.914062 L 284.722656 18.628906 L 247.433594 55.917969 L 222.574219 31.058594 L 214.289062 39.34375 L 239.148438 64.203125 L 201.859375 101.492188 L 210.144531 109.777344 L 247.433594 72.488281 L 272.292969 97.347656 L 235.003906 134.636719 L 226.71875 142.925781 L 235.003906 151.210938 L 243.292969 142.925781 L 280.582031 105.636719 L 305.441406 130.496094 L 268.152344 167.78125 L 276.4375 176.070312 L 313.726562 138.78125 L 338.585938 163.640625 L 346.871094 155.355469 L 322.011719 130.496094 Z M 359.300781 93.207031 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 89.992188 279.648438 L 52.703125 316.9375 L 27.84375 292.078125 L 65.132812 254.789062 Z M 89.992188 279.648438 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 102.421875 200.929688 L 89.992188 188.5 C 83.140625 181.644531 71.988281 181.644531 65.132812 188.5 L 40.273438 213.359375 L 65.132812 238.21875 Z M 102.421875 200.929688 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 31.988281 221.644531 L 7.128906 246.503906 C 0.277344 253.359375 0.277344 264.507812 7.128906 271.363281 L 19.558594 283.792969 L 56.847656 246.503906 Z M 31.988281 221.644531 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 135.570312 234.074219 L 98.28125 271.363281 L 73.421875 246.503906 L 110.710938 209.214844 Z M 135.570312 234.074219 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 164.570312 337.65625 L 189.429688 312.796875 C 196.285156 305.941406 196.285156 294.789062 189.429688 287.9375 L 177 275.507812 L 139.710938 312.796875 Z M 164.570312 337.65625 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 123.140625 312.796875 L 85.851562 350.085938 L 60.992188 325.226562 L 98.28125 287.9375 Z M 123.140625 312.796875 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 131.425781 370.800781 L 156.285156 345.941406 L 131.425781 321.082031 L 94.136719 358.371094 L 106.566406 370.800781 C 113.421875 377.652344 124.570312 377.652344 131.425781 370.800781 Z M 131.425781 370.800781 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 168.714844 267.21875 L 131.425781 304.507812 L 106.566406 279.648438 L 143.855469 242.359375 Z M 168.714844 267.21875 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(53.333336%,52.549022%,57.647061%);fill-opacity:1;\\\" d=\\\"M 143.855469 225.789062 L 98.28125 271.363281 L 73.421875 246.503906 L 110.710938 209.214844 L 102.421875 200.929688 L 65.132812 238.21875 L 40.273438 213.359375 L 31.988281 221.644531 L 56.847656 246.503906 L 19.558594 283.792969 L 27.84375 292.078125 L 65.132812 254.789062 L 89.992188 279.648438 L 52.703125 316.9375 L 60.992188 325.226562 L 98.28125 287.9375 L 123.140625 312.796875 L 85.851562 350.085938 L 94.136719 358.371094 L 131.425781 321.082031 L 156.285156 345.941406 L 164.570312 337.65625 L 139.710938 312.796875 L 177 275.507812 L 168.714844 267.21875 L 131.425781 304.507812 L 106.566406 279.648438 L 152.140625 234.074219 Z M 143.855469 225.789062 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 218.433594 234.074219 L 227.34375 242.988281 C 229.636719 239.875 232.1875 236.890625 235.003906 234.074219 C 237.824219 231.257812 240.804688 228.707031 243.917969 226.414062 L 235.003906 217.5 L 226.71875 225.789062 Z M 218.433594 234.074219 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,81.176472%,0%);fill-opacity:1;\\\" d=\\\"M 177 258.933594 C 181.570312 263.503906 189.003906 263.5 193.574219 258.933594 L 226.71875 225.789062 L 206.003906 205.070312 L 197.71875 213.359375 C 190.851562 220.222656 179.722656 220.222656 172.859375 213.359375 L 94.136719 134.636719 L 85.851562 142.925781 C 78.996094 149.777344 78.996094 160.929688 85.851562 167.78125 L 143.855469 225.789062 Z M 177 258.933594 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,57.647061%,0%);fill-opacity:1;\\\" d=\\\"M 214.289062 196.785156 L 206.003906 205.070312 L 226.71875 225.789062 L 235.003906 217.5 L 259.863281 192.640625 C 264.433594 188.074219 264.433594 180.640625 259.863281 176.070312 L 226.71875 142.925781 L 168.714844 84.917969 C 161.859375 78.066406 150.710938 78.066406 143.855469 84.917969 L 135.570312 93.207031 L 214.289062 171.925781 C 221.15625 178.792969 221.15625 189.921875 214.289062 196.785156 Z M 214.289062 196.785156 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 299.582031 298.648438 L 286.441406 298.648438 L 274.722656 310.367188 L 303.011719 310.367188 L 306 313.355469 C 306.257812 312.390625 306.757812 311.480469 307.511719 310.722656 L 311.65625 306.582031 C 312.410156 305.824219 313.320312 305.324219 314.285156 305.066406 L 311.296875 302.082031 L 311.300781 273.789062 L 299.582031 285.507812 Z M 299.582031 298.648438 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(53.333336%,52.549022%,57.647061%);fill-opacity:1;\\\" d=\\\"M 293.011719 292.078125 L 338.375 246.714844 C 340.699219 244.390625 341.945312 241.171875 341.792969 237.882812 C 341.648438 234.578125 340.101562 231.46875 337.5625 229.351562 C 310.191406 206.554688 271.773438 205.910156 243.917969 226.414062 C 240.804688 228.707031 237.824219 231.257812 235.003906 234.074219 Z M 293.011719 292.078125 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,81.176472%,0%);fill-opacity:1;\\\" d=\\\"M 307.511719 310.722656 C 306.757812 311.480469 306.257812 312.390625 306 313.355469 C 305.476562 315.308594 305.980469 317.476562 307.511719 319.011719 L 319.941406 331.441406 C 322.230469 333.726562 325.941406 333.726562 328.226562 331.441406 L 332.371094 327.296875 C 334.660156 325.007812 334.660156 321.296875 332.371094 319.011719 L 319.941406 306.582031 C 318.410156 305.046875 316.238281 304.546875 314.285156 305.066406 C 313.320312 305.324219 312.410156 305.824219 311.65625 306.582031 Z M 307.511719 310.722656 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,45.490196%,0%);fill-opacity:1;\\\" d=\\\"M 206.003906 205.070312 L 214.289062 196.785156 C 221.15625 189.921875 221.15625 178.792969 214.289062 171.925781 L 135.570312 93.207031 L 127.28125 101.492188 L 114.851562 113.921875 Z M 206.003906 205.070312 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(71.372551%,72.156864%,74.509805%);fill-opacity:1;\\\" d=\\\"M 293.011719 292.078125 L 235.003906 234.074219 C 232.1875 236.890625 229.636719 239.875 227.34375 242.988281 C 206.839844 270.839844 207.484375 309.261719 230.285156 336.628906 C 232.402344 339.167969 235.507812 340.714844 238.8125 340.863281 C 242.101562 341.011719 245.324219 339.765625 247.644531 337.445312 Z M 293.011719 292.078125 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,57.647061%,0%);fill-opacity:1;\\\" d=\\\"M 197.71875 213.359375 L 206.003906 205.070312 L 114.851562 113.921875 L 94.136719 134.636719 L 172.859375 213.359375 C 179.722656 220.222656 190.851562 220.222656 197.71875 213.359375 Z M 197.71875 213.359375 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(36.078432%,32.941177%,41.568628%);fill-opacity:1;\\\" d=\\\"M 102.421875 84.917969 C 104.710938 82.632812 104.710938 78.921875 102.421875 76.632812 L 77.5625 51.773438 L 65.132812 64.203125 L 94.136719 93.207031 Z M 102.421875 84.917969 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(53.333336%,52.549022%,57.647061%);fill-opacity:1;\\\" d=\\\"M 85.851562 101.492188 L 94.136719 93.207031 L 65.132812 64.203125 L 52.703125 76.632812 L 77.5625 101.492188 C 79.851562 103.78125 83.5625 103.78125 85.851562 101.492188 Z M 85.851562 101.492188 \\\"/>   </g> </svg>\"\n    public static satellite_svg() { return new Img(Svg.satellite, true);}\n    public static scissors = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 101.5625 46.875 C 71.875 46.875 46.875 71.875 46.875 101.5625 C 46.875 131.25 71.875 156.25 101.5625 156.25 C 131.25 156.25 156.25 131.25 156.25 101.5625 C 156.25 71.875 131.25 46.875 101.5625 46.875 Z M 101.5625 125 C 89.0625 125 78.125 114.0625 78.125 101.5625 C 78.125 89.0625 89.0625 78.125 101.5625 78.125 C 114.0625 78.125 125 89.0625 125 101.5625 C 125 114.0625 114.0625 125 101.5625 125 Z M 101.5625 125 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 101.5625 218.75 C 71.875 218.75 46.875 243.75 46.875 273.4375 C 46.875 303.125 71.875 328.125 101.5625 328.125 C 131.25 328.125 156.25 303.125 156.25 273.4375 C 156.25 243.75 131.25 218.75 101.5625 218.75 Z M 101.5625 296.875 C 89.0625 296.875 78.125 285.9375 78.125 273.4375 C 78.125 260.9375 89.0625 250 101.5625 250 C 114.0625 250 125 260.9375 125 273.4375 C 125 285.9375 114.0625 296.875 101.5625 296.875 Z M 101.5625 296.875 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 210.9375 148.4375 L 242.1875 179.6875 L 343.75 78.125 L 281.25 78.125 Z M 210.9375 148.4375 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 168.75 190.625 L 200 221.875 L 151.5625 270.3125 L 125 234.375 Z M 168.75 190.625 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 142.1875 110.9375 L 109.375 140.625 L 281.25 312.5 L 343.75 312.5 Z M 195.3125 203.125 C 190.625 203.125 187.5 200 187.5 195.3125 C 187.5 190.625 190.625 187.5 195.3125 187.5 C 200 187.5 203.125 190.625 203.125 195.3125 C 203.125 200 200 203.125 195.3125 203.125 Z M 195.3125 203.125 \\\"/>   </g> </svg>\"\n    public static scissors_svg() { return new Img(Svg.scissors, true);}\n    public static search = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 50.9375 296.0625 L 125.1875 221.875 L 130.5 218.75 C 117.394531 200.429688 110.355469 178.464844 110.375 155.9375 C 110.410156 95.917969 159.085938 47.289062 219.105469 47.3125 C 279.121094 47.335938 327.761719 96.003906 327.75 156.019531 C 327.738281 216.039062 279.082031 264.6875 219.0625 264.6875 C 196.515625 264.710938 174.535156 257.625 156.25 244.4375 L 153.1875 249.75 L 78.96875 323.90625 C 73.03125 329.78125 62 328.34375 54.28125 320.625 C 46.5625 312.90625 45.125 301.875 51.03125 295.9375 Z M 219 225.125 C 257.148438 225.160156 288.101562 194.253906 288.125 156.105469 C 288.148438 117.953125 257.234375 87.011719 219.082031 87 C 180.933594 86.988281 150 117.914062 150 156.0625 C 149.949219 174.410156 157.203125 192.027344 170.160156 205.019531 C 183.117188 218.011719 200.714844 225.3125 219.0625 225.3125 Z M 219 225.125 \\\"/>   </g> </svg>\"\n    public static search_svg() { return new Img(Svg.search, true);}\n    public static search_disable = \" <svg    width=\\\"375px\\\"    height=\\\"375px\\\"    viewBox=\\\"0 0 375 375\\\"    version=\\\"1.1\\\"    id=\\\"svg5\\\"    sodipodi:docname=\\\"search_disable.svg\\\"    inkscape:version=\\\"1.1.2 (1:1.1+202202050950+0a00cf5339)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs9\\\" />   <sodipodi:namedview      id=\\\"namedview7\\\"      pagecolor=\\\"#505050\\\"      bordercolor=\\\"#eeeeee\\\"      borderopacity=\\\"1\\\"      inkscape:pageshadow=\\\"0\\\"      inkscape:pageopacity=\\\"0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      showgrid=\\\"false\\\"      inkscape:zoom=\\\"1.6000736\\\"      inkscape:cx=\\\"196.86595\\\"      inkscape:cy=\\\"179.99172\\\"      inkscape:current-layer=\\\"svg5\\\" />   <g      id=\\\"surface1\\\"      transform=\\\"matrix(1.1985554,0,0,1.1985554,-33.672544,-42.708466)\\\">     <path        style=\\\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\\\"        d=\\\"m 50.9375,296.0625 74.25,-74.1875 5.3125,-3.125 C 117.39453,200.42969 110.35547,178.46484 110.375,155.9375 110.4102,95.917969 159.08594,47.289062 219.10547,47.3125 279.12109,47.33594 327.76172,96.003906 327.75,156.01953 327.7383,216.03906 279.08203,264.6875 219.0625,264.6875 c -22.54688,0.0234 -44.52734,-7.0625 -62.8125,-20.25 l -3.0625,5.3125 -74.21875,74.15625 c -5.9375,5.875 -16.96875,4.4375 -24.6875,-3.28125 -7.71875,-7.71875 -9.15625,-18.75 -3.25,-24.6875 z M 219,225.125 c 38.14844,0.0352 69.10156,-30.87109 69.125,-69.01953 C 288.14844,117.95313 257.23437,87.011719 219.08203,87 180.93359,86.988281 150,117.91406 150,156.0625 c -0.0508,18.34766 7.20312,35.96484 20.16016,48.95703 12.95703,12.99219 30.55468,20.29297 48.90234,20.29297 z m 0,0\\\"        id=\\\"path2\\\" />   </g>   <g      id=\\\"surface1-3\\\"      transform=\\\"matrix(1.2223339,0,0,1.2223339,-109.30534,-253.2447)\\\"      style=\\\"fill:#ff0000;fill-opacity:1\\\">     <path        style=\\\"fill:#ff0000;fill-opacity:1;stroke:#b40000;stroke-width:34.2679;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1\\\"        d=\\\"M 364.47831,491.73933 252.63509,379.89612\\\"        id=\\\"path826\\\" />     <path        style=\\\"fill:#ff0000;fill-opacity:1;stroke:#b40000;stroke-width:34.2684;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1\\\"        d=\\\"M 364.64638,379.35739 252.80473,491.199\\\"        id=\\\"path828\\\" />   </g> </svg> \"\n    public static search_disable_svg() { return new Img(Svg.search_disable, true);}\n    public static share = \" <svg    width=\\\"374px\\\"    height=\\\"365px\\\"    viewBox=\\\"0 0 374 365\\\"    version=\\\"1.1\\\"    id=\\\"svg11\\\"    sodipodi:docname=\\\"share.svg\\\"    inkscape:version=\\\"1.1.2 (0a00cf5339, 2022-02-04)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs15\\\" />   <sodipodi:namedview      id=\\\"namedview13\\\"      pagecolor=\\\"#505050\\\"      bordercolor=\\\"#eeeeee\\\"      borderopacity=\\\"1\\\"      inkscape:pageshadow=\\\"0\\\"      inkscape:pageopacity=\\\"0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      showgrid=\\\"false\\\"      inkscape:zoom=\\\"2.0958904\\\"      inkscape:cx=\\\"187.03268\\\"      inkscape:cy=\\\"182.5\\\"      inkscape:window-width=\\\"1920\\\"      inkscape:window-height=\\\"995\\\"      inkscape:window-x=\\\"0\\\"      inkscape:window-y=\\\"0\\\"      inkscape:window-maximized=\\\"1\\\"      inkscape:current-layer=\\\"svg11\\\" />   <path      id=\\\"path2\\\"      style=\\\"color:#000000;fill:#000000;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none\\\"      d=\\\"M 301.09766 0.47265625 C 260.83203 0.47265625 228.19141 33.1875 228.19141 73.546875 C 228.19141 79.329826 228.8815 84.948384 230.14844 90.34375 L 126.28711 138.35938 C 112.97544 124.01509 93.990177 115.03125 72.902344 115.03125 C 32.640625 115.03125 0 147.74609 0 188.10156 C -9.4739031e-15 228.46094 32.640625 261.17578 72.902344 261.17578 C 93.990661 261.17578 112.97735 252.19308 126.28906 237.84766 L 228.48438 285.09375 C 228.30377 287.19139 228.19141 289.30857 228.19141 291.45312 C 228.19141 331.8125 260.83203 364.52734 301.09766 364.52734 C 341.35937 364.52734 374 331.8125 374 291.45312 C 374 251.09766 341.35937 218.38281 301.09766 218.38281 C 279.27697 218.38281 259.71055 228.00393 246.34961 243.22852 L 145.3125 196.51562 C 145.62871 193.75286 145.80859 190.94925 145.80859 188.10156 C 145.80859 185.2553 145.62846 182.45285 145.3125 179.69141 L 254.10547 129.39648 C 266.79684 140.13431 283.18811 146.61719 301.09766 146.61719 C 341.35937 146.61719 374 113.90234 374 73.546875 C 374 33.1875 341.35937 0.47265625 301.09766 0.47265625 z \\\" /> </svg> \"\n    public static share_svg() { return new Img(Svg.share, true);}\n    public static speech_bubble = \" <svg    viewBox=\\\"0 0 36 36\\\"    version=\\\"1.1\\\"    id=\\\"svg4\\\"    sodipodi:docname=\\\"speech_bubble.svg\\\"    inkscape:version=\\\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs8\\\" />   <sodipodi:namedview      id=\\\"namedview6\\\"      pagecolor=\\\"#505050\\\"      bordercolor=\\\"#eeeeee\\\"      borderopacity=\\\"1\\\"      inkscape:pageshadow=\\\"0\\\"      inkscape:pageopacity=\\\"0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      showgrid=\\\"false\\\"      inkscape:zoom=\\\"24.083333\\\"      inkscape:cx=\\\"18.020761\\\"      inkscape:cy=\\\"18.020761\\\"      inkscape:current-layer=\\\"svg4\\\" />   <path      fill=\\\"#8CCAF7\\\"      d=\\\"M18 1c9.941 0 18 6.268 18 14 0 4.368-2.574 8.268-6.604 10.835C29.92 28.144 31.141 31.569 34 35c-5.758-.96-9.44-3.761-11.716-6.416-1.376.262-2.805.416-4.284.416-9.941 0-18-6.268-18-14S8.059 1 18 1z\\\"      id=\\\"path2\\\"      style=\\\"stroke:none;stroke-opacity:1\\\" /> </svg> \"\n    public static speech_bubble_svg() { return new Img(Svg.speech_bubble, true);}\n    public static statistics = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 95.625 212.773438 L 95.625 329.925781 L 150.75 329.925781 L 150.75 212.773438 L 123.1875 189.789062 Z M 3.75 329.925781 L 58.875 329.925781 L 58.875 240.335938 L 3.75 283.988281 Z M 279.375 185.210938 L 279.375 329.925781 L 334.5 329.925781 L 334.5 139.273438 Z M 187.5 242.625 L 187.5 329.925781 L 242.625 329.925781 L 242.625 215.0625 L 198.976562 251.8125 Z M 371.25 45.113281 L 265.613281 45.113281 L 309.261719 86.4375 L 196.726562 178.3125 L 123.226562 116.289062 L 3.75 210.488281 L 3.75 251.8125 L 123.1875 157.648438 L 198.976562 219.675781 L 334.5 109.425781 L 371.25 143.886719 Z M 371.25 45.113281 \\\"/>   </g> </svg>\"\n    public static statistics_svg() { return new Img(Svg.statistics, true);}\n    public static teardrop = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"275px\\\" height=\\\"374px\\\" viewBox=\\\"0 0 275 374\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:#000000;fill-opacity:0.988235;\\\" class=\\\"selectable\\\" d=\\\"M 137.433594 370.035156 C 136.605469 368.027344 119.402344 351.226562 107.082031 335.960938 C 34.097656 239.179688 -47.273438 149.257812 47.746094 39.980469 C 89.816406 -0.617188 141.691406 -2.933594 195.023438 15.992188 C 345.191406 102.777344 236.46875 244.351562 165.078125 337.421875 Z M 182.605469 221.6875 C 282.765625 150.148438 205.328125 12.386719 95.28125 58.183594 C 63.148438 75.296875 47.203125 105.070312 46.644531 140.195312 C 45.109375 174.359375 63.277344 202.929688 92.066406 220.429688 C 112.707031 231.652344 121.78125 233.675781 145.152344 232.285156 C 160.300781 231.386719 169.027344 228.914062 182.605469 221.6875 Z M 182.605469 221.6875 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:0.988235;\\\" d=\\\"M 108.722656 255.84375 C 37.953125 241.132812 -7.363281 173.46875 7.277344 104.371094 C 21.914062 35.273438 91.019531 -9.34375 161.976562 4.492188 C 232.9375 18.328125 279.128906 85.421875 265.390625 154.699219 C 251.65625 223.972656 183.136719 269.4375 112.003906 256.484375 \\\"/>   </g> </svg> \"\n    public static teardrop_svg() { return new Img(Svg.teardrop, true);}\n    public static teardrop_with_hole_green = \" <svg    width=\\\"400\\\"    height=\\\"400\\\"    viewBox=\\\"0 0 400 400\\\"    version=\\\"1.1\\\"    id=\\\"svg11\\\"    sodipodi:docname=\\\"teardrop_with_hole_green.svg\\\"    inkscape:version=\\\"1.1.1 (1:1.1+202109281949+c3084ef5ed)\\\"    xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"    xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"    xmlns=\\\"http://www.w3.org/2000/svg\\\"    xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">   <defs      id=\\\"defs15\\\" />   <sodipodi:namedview      id=\\\"namedview13\\\"      pagecolor=\\\"#505050\\\"      bordercolor=\\\"#eeeeee\\\"      borderopacity=\\\"1\\\"      inkscape:pageshadow=\\\"0\\\"      inkscape:pageopacity=\\\"0\\\"      inkscape:pagecheckerboard=\\\"0\\\"      showgrid=\\\"false\\\"      width=\\\"400px\\\"      showguides=\\\"true\\\"      inkscape:guide-bbox=\\\"true\\\"      inkscape:zoom=\\\"1.8002433\\\"      inkscape:cx=\\\"161.08934\\\"      inkscape:cy=\\\"210.5271\\\"      inkscape:current-layer=\\\"svg11\\\">     <sodipodi:guide        position=\\\"199.99891,418.65297\\\"        orientation=\\\"1,0\\\"        id=\\\"guide832\\\" />   </sodipodi:namedview>   <g      id=\\\"surface1\\\"      transform=\\\"matrix(1.0785793,0,0,1.0785793,51.765885,-0.40531133)\\\">     <path        style=\\\"fill:#007f00;fill-opacity:0.988235;fill-rule:nonzero;stroke:none\\\"        d=\\\"m 137.43359,370.03516 c -0.82812,-2.00782 -18.03125,-18.8086 -30.35156,-34.07422 C 34.097656,239.17969 -47.273438,149.25781 47.746094,39.980469 89.816406,-0.617188 141.69141,-2.933594 195.02344,15.992188 345.19141,102.77734 236.46875,244.35156 165.07812,337.42187 Z M 182.60547,221.6875 C 282.76562,150.14844 205.32812,12.386719 95.28125,58.183594 63.148438,75.296875 47.203125,105.07031 46.644531,140.19531 c -1.535156,34.16406 16.632813,62.73438 45.421875,80.23438 20.640624,11.22265 29.714844,13.24609 53.085934,11.85547 15.14844,-0.89844 23.875,-3.3711 37.45313,-10.59766 z m 0,0\\\"        id=\\\"path2\\\" />     <path        style=\\\"fill:#007f00;fill-opacity:0.988235;fill-rule:nonzero;stroke:none\\\"        d=\\\"M 108.72266,255.84375 C 37.953125,241.13281 -7.363281,173.46875 7.277344,104.37109 21.914062,35.273438 91.019531,-9.34375 161.97656,4.492188 232.9375,18.328125 279.12891,85.421875 265.39062,154.69922 251.65625,223.97266 183.13672,269.4375 112.00391,256.48437\\\"        id=\\\"path4\\\" />     <path        style=\\\"fill:#009400;fill-opacity:1;fill-rule:nonzero;stroke:none\\\"        d=\\\"M 117.33203,237.78516 C 64.75,226.24609 31.078125,173.16797 41.957031,118.96875 52.835938,64.765625 104.17969,29.769531 156.89844,40.621094 c 52.72265,10.851562 87.04297,63.484376 76.83593,117.824216 -10.20703,54.33985 -61.11328,90.00391 -113.96484,79.84375\\\"        id=\\\"path6\\\" />     <path        style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:none\\\"        d=\\\"M 122.92188,202.85156 C 88.144531,195.28125 65.878906,160.48437 73.074219,124.94531 80.265625,89.40625 114.22266,66.457031 149.08594,73.574219 c 34.86718,7.117187 57.5664,41.625001 50.8164,77.253901 -6.75,35.62891 -40.41797,59.01563 -75.37109,52.35157\\\"        id=\\\"path8\\\" />   </g> </svg> \"\n    public static teardrop_with_hole_green_svg() { return new Img(Svg.teardrop_with_hole_green, true);}\n    public static translate = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 178.269531 214.039062 C 154.039062 190.382812 132.691406 169.617188 120.578125 121.730469 L 205.382812 121.730469 L 205.382812 85.960938 L 121.152344 85.960938 L 121.152344 38.652344 L 84.808594 38.652344 L 84.808594 86.539062 L 0 86.539062 L 0 122.308594 L 86.539062 122.308594 C 86.539062 122.308594 85.960938 129.230469 84.808594 134.421875 C 72.691406 181.730469 58.269531 211.730469 0 241.152344 L 12.117188 276.921875 C 67.5 247.5 96.347656 210.578125 109.039062 169.617188 C 121.152344 200.769531 141.921875 226.152344 165.578125 249.230469 Z M 178.269531 214.039062 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;\\\" d=\\\"M 290.191406 98.078125 L 241.730469 98.078125 L 156.921875 336.347656 L 193.269531 336.347656 L 217.5 264.808594 L 314.421875 264.808594 L 338.652344 336.347656 L 375 336.347656 Z M 229.617188 229.039062 L 265.960938 133.847656 L 302.308594 229.617188 Z M 229.617188 229.039062 \\\"/>   </g> </svg>\"\n    public static translate_svg() { return new Img(Svg.translate, true);}\n    public static triangle = \" <svg         style=\\\"fill:none\\\"         version=\\\"1.1\\\"         viewBox=\\\"0 0 100 100\\\"         height=\\\"100\\\"         width=\\\"100\\\">         <polygon style=\\\"fill:#000000;fill-opacity:1\\\" points=\\\"50,0 0,100 100,100\\\" /> </svg> \"\n    public static triangle_svg() { return new Img(Svg.triangle, true);}\n    public static up = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"375px\\\" height=\\\"375px\\\" viewBox=\\\"0 0 375 375\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,100%,0%);fill-opacity:1;\\\" d=\\\"M 0 374.617188 C 0 373.621094 187.496094 -0.375 187.804688 0 C 188.847656 1.261719 375.34375 374.710938 375 374.851562 C 374.777344 374.941406 332.519531 356.800781 281.097656 334.539062 L 187.601562 294.066406 L 94.257812 334.535156 C 42.917969 356.789062 0.707031 375 0.457031 375 C 0.207031 375 0 374.828125 0 374.617188 Z M 0 374.617188 \\\"/>   </g> </svg>\"\n    public static up_svg() { return new Img(Svg.up, true);}\n    public static wikidata = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"373px\\\" height=\\\"210px\\\" viewBox=\\\"0 0 373 210\\\" version=\\\"1.1\\\">   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(60.000002%,0%,0%);fill-opacity:1;\\\" d=\\\"M 42.628906 193.984375 L 53.285156 193.984375 L 53.285156 16.015625 L 42.628906 16.015625 Z M 63.941406 193.984375 L 95.914062 193.984375 L 95.914062 16.015625 L 63.941406 16.015625 Z M 106.570312 16.015625 L 106.570312 193.984375 L 138.542969 193.984375 L 138.542969 16.015625 Z M 106.570312 16.015625 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(20%,60.000002%,40.000001%);fill-opacity:1;\\\" d=\\\"M 298.398438 193.984375 L 309.058594 193.984375 L 309.058594 16.015625 L 298.398438 16.015625 Z M 319.714844 16.015625 L 319.714844 193.984375 L 330.371094 193.984375 L 330.371094 16.015625 Z M 149.199219 193.984375 L 159.855469 193.984375 L 159.855469 16.015625 L 149.199219 16.015625 Z M 170.515625 16.015625 L 170.515625 193.984375 L 181.171875 193.984375 L 181.171875 16.015625 Z M 170.515625 16.015625 \\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(0%,40.000001%,60.000002%);fill-opacity:1;\\\" d=\\\"M 191.828125 193.984375 L 223.800781 193.984375 L 223.800781 16.015625 L 191.828125 16.015625 Z M 234.457031 193.984375 L 245.113281 193.984375 L 245.113281 16.015625 L 234.457031 16.015625 Z M 255.769531 16.015625 L 255.769531 193.984375 L 287.742188 193.984375 L 287.742188 16.015625 Z M 255.769531 16.015625 \\\"/>   </g> </svg>\"\n    public static wikidata_svg() { return new Img(Svg.wikidata, true);}\n    public static wikimedia_commons_white = \" <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"279px\\\" height=\\\"374px\\\" viewBox=\\\"0 0 279 374\\\" version=\\\"1.1\\\">   <defs>     <clipPath id=\\\"clip1\\\">       <path d=\\\"M 134 317 L 145 317 L 145 372 L 134 372 Z M 134 317 \\\"/>     </clipPath>     <clipPath id=\\\"clip2\\\">       <path d=\\\"M 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 Z M 275.746094 235.347656 \\\"/>     </clipPath>     <clipPath id=\\\"clip3\\\">       <path d=\\\"M 119 285 L 160 285 L 160 320 L 119 320 Z M 119 285 \\\"/>     </clipPath>     <clipPath id=\\\"clip4\\\">       <path d=\\\"M 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 Z M 275.746094 235.347656 \\\"/>     </clipPath>     <clipPath id=\\\"clip5\\\">       <path d=\\\"M 39 289 L 85 289 L 85 335 L 39 335 Z M 39 289 \\\"/>     </clipPath>     <clipPath id=\\\"clip6\\\">       <path d=\\\"M 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 Z M 235.839844 331.453125 \\\"/>     </clipPath>     <clipPath id=\\\"clip7\\\">       <path d=\\\"M 65 270 L 104 270 L 104 309 L 65 309 Z M 65 270 \\\"/>     </clipPath>     <clipPath id=\\\"clip8\\\">       <path d=\\\"M 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 Z M 235.839844 331.453125 \\\"/>     </clipPath>     <clipPath id=\\\"clip9\\\">       <path d=\\\"M 3 230 L 58 230 L 58 241 L 3 241 Z M 3 230 \\\"/>     </clipPath>     <clipPath id=\\\"clip10\\\">       <path d=\\\"M 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 Z M 139.5 371.261719 \\\"/>     </clipPath>     <clipPath id=\\\"clip11\\\">       <path d=\\\"M 54 215 L 90 215 L 90 255 L 54 255 Z M 54 215 \\\"/>     </clipPath>     <clipPath id=\\\"clip12\\\">       <path d=\\\"M 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 Z M 139.5 371.261719 \\\"/>     </clipPath>     <clipPath id=\\\"clip13\\\">       <path d=\\\"M 39 135 L 85 135 L 85 181 L 39 181 Z M 39 135 \\\"/>     </clipPath>     <clipPath id=\\\"clip14\\\">       <path d=\\\"M 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 Z M 43.160156 331.453125 \\\"/>     </clipPath>     <clipPath id=\\\"clip15\\\">       <path d=\\\"M 65 161 L 104 161 L 104 200 L 65 200 Z M 65 161 \\\"/>     </clipPath>     <clipPath id=\\\"clip16\\\">       <path d=\\\"M 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 Z M 43.160156 331.453125 \\\"/>     </clipPath>     <clipPath id=\\\"clip17\\\">       <path d=\\\"M 194 289 L 240 289 L 240 335 L 194 335 Z M 194 289 \\\"/>     </clipPath>     <clipPath id=\\\"clip18\\\">       <path d=\\\"M 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 Z M 43.160156 331.453125 \\\"/>     </clipPath>     <clipPath id=\\\"clip19\\\">       <path d=\\\"M 175 270 L 214 270 L 214 309 L 175 309 Z M 175 270 \\\"/>     </clipPath>     <clipPath id=\\\"clip20\\\">       <path d=\\\"M 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 Z M 43.160156 331.453125 \\\"/>     </clipPath>     <clipPath id=\\\"clip21\\\">       <path d=\\\"M 221 230 L 276 230 L 276 241 L 221 241 Z M 221 230 \\\"/>     </clipPath>     <clipPath id=\\\"clip22\\\">       <path d=\\\"M 139.5 371.261719 C 214.746094 371.261719 275.746094 310.410156 275.746094 235.347656 C 275.746094 160.28125 214.746094 99.429688 139.5 99.429688 C 64.253906 99.429688 3.253906 160.28125 3.253906 235.347656 C 3.253906 310.410156 64.253906 371.261719 139.5 371.261719 Z M 139.5 371.261719 \\\"/>     </clipPath>     <clipPath id=\\\"clip23\\\">       <path d=\\\"M 189 215 L 225 215 L 225 255 L 189 255 Z M 189 215 \\\"/>     </clipPath>     <clipPath id=\\\"clip24\\\">       <path d=\\\"M 139.5 371.261719 C 214.746094 371.261719 275.746094 310.410156 275.746094 235.347656 C 275.746094 160.28125 214.746094 99.429688 139.5 99.429688 C 64.253906 99.429688 3.253906 160.28125 3.253906 235.347656 C 3.253906 310.410156 64.253906 371.261719 139.5 371.261719 Z M 139.5 371.261719 \\\"/>     </clipPath>     <clipPath id=\\\"clip25\\\">       <path d=\\\"M 194 135 L 240 135 L 240 181 L 194 181 Z M 194 135 \\\"/>     </clipPath>     <clipPath id=\\\"clip26\\\">       <path d=\\\"M 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 Z M 235.839844 331.453125 \\\"/>     </clipPath>     <clipPath id=\\\"clip27\\\">       <path d=\\\"M 175 161 L 214 161 L 214 200 L 175 200 Z M 175 161 \\\"/>     </clipPath>     <clipPath id=\\\"clip28\\\">       <path d=\\\"M 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 Z M 235.839844 331.453125 \\\"/>     </clipPath>   </defs>   <g id=\\\"surface1\\\">     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 185.21875 235.347656 C 185.21875 260.535156 164.75 280.957031 139.5 280.957031 C 114.25 280.957031 93.78125 260.535156 93.78125 235.347656 C 93.78125 210.15625 114.25 189.738281 139.5 189.738281 C 164.75 189.738281 185.21875 210.15625 185.21875 235.347656 Z M 185.21875 235.347656 \\\"/>     <path style=\\\"fill: none !important;stroke-width:84;stroke-linecap:butt;stroke-linejoin:miter;stroke:rgb(100%,100%,100%);stroke-opacity:1;stroke-miterlimit:4;\\\" d=\\\"M -0.000738017 -255.996731 C -141.388895 -256.001049 -256.005126 -141.384818 -256.000807 0.00333872 C -256.00253 141.385454 -141.385454 256.00253 -0.00333872 256.000807 C 141.384818 256.005126 256.001049 141.388895 255.996731 0.000738017 C 256.002819 -100.002285 155.001784 -149.999521 250.002579 -275.001813 \\\" transform=\\\"matrix(0.323291,-0.32251,0.323291,0.32251,139.5,235.346341)\\\"/>     <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 128.984375 0.457031 C 128.984375 0.457031 112.523438 62.027344 92.40625 84.835938 C 72.292969 107.640625 145.445312 56.554688 170.132812 82.554688 C 194.820312 108.550781 128.984375 0.457031 128.984375 0.457031 Z M 128.984375 0.457031 \\\"/>     <g clip-path=\\\"url(#clip1)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip2)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 134.472656 317.445312 L 134.472656 371.261719 L 144.527344 371.261719 L 144.527344 317.445312 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip3)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip4)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 119.839844 319.722656 L 139.5 285.515625 L 159.160156 319.722656 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip5)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip6)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 77.75 289.851562 L 39.601562 327.90625 L 46.714844 335 L 84.863281 296.945312 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip7)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip8)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 65.789062 281.144531 L 103.9375 270.824219 L 93.59375 308.878906 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip9)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip10)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 57.203125 230.328125 L 3.253906 230.328125 L 3.253906 240.363281 L 57.203125 240.363281 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip11)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip12)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 54.917969 215.734375 L 89.207031 235.347656 L 54.917969 254.957031 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip13)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip14)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 84.863281 173.746094 L 46.714844 135.691406 L 39.601562 142.785156 L 77.75 180.84375 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip15)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip16)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 93.59375 161.8125 L 103.9375 199.871094 L 65.789062 189.550781 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip17)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip18)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 201.25 289.851562 L 239.398438 327.90625 L 232.285156 335 L 194.136719 296.945312 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip19)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip20)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 213.210938 281.144531 L 175.0625 270.824219 L 185.40625 308.878906 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip21)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip22)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 221.796875 230.328125 L 275.746094 230.328125 L 275.746094 240.363281 L 221.796875 240.363281 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip23)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip24)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 224.082031 215.734375 L 189.792969 235.347656 L 224.082031 254.957031 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip25)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip26)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 194.136719 173.746094 L 232.285156 135.691406 L 239.398438 142.785156 L 201.25 180.84375 \\\"/>       </g>     </g>     <g clip-path=\\\"url(#clip27)\\\" clip-rule=\\\"nonzero\\\">       <g clip-path=\\\"url(#clip28)\\\" clip-rule=\\\"nonzero\\\">         <path style=\\\" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;\\\" d=\\\"M 185.40625 161.8125 L 175.0625 199.871094 L 213.210938 189.550781 \\\"/>       </g>     </g>   </g> </svg>\"\n    public static wikimedia_commons_white_svg() { return new Img(Svg.wikimedia_commons_white, true);}\n}\n"],"names":["BaseUIElement","__publicField","f","divId","element","Utils","alreadyThere","elementToAdd","childs","child","_a","clss","all","clsName","recordedChange","classes","style","el","e","self","v","domExc","SvelteUIElement","svelteElement","props","events","slots","noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","is_empty","obj","subscribe","store","callbacks","unsub","get_store_value","value","_","component_subscribe","component","callback","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","exclude_internal_props","result","compute_rest_props","keys","rest","compute_slots","key","null_to_empty","set_store_value","ret","action_destroyer","action_result","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","name","svg_element","text","data","space","empty","listen","event","handler","options","prevent_default","stop_propagation","attr","attribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","set_svg_attributes","xlink_attr","init_binding_group","group","_inputs","inputs","input","children","set_data","set_input_value","set_style","important","select_option","select","mounting","option","select_value","selected_option","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","HtmlTag","is_svg","html","construct_svelte_component","current_component","set_current_component","get_current_component","onMount","onDestroy","createEventDispatcher","setContext","context","getContext","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","n","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","will_move","did_move","new_block","old_block","new_key","old_key","get_spread_update","levels","to_null_out","accounted_for","get_spread_object","spread_props","bind","index","create_component","mount_component","customElement","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","append_styles","parent_component","ready","nodes","SvelteComponent","$$props","Img","rawSvg","source","css_class","_Svg","Svg"],"mappings":"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"}