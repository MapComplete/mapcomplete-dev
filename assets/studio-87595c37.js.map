{"version":3,"mappings":"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","names":["ctx","insert","target","svg","anchor","append","path","i","div","each_blocks","dirty","icon_changes","if_block","create_if_block","icons","$$props","create_if_block_1","t1_value","set_data","t1","show_if","b","current","info","category","osmConnection","dispatch","createEventDispatcher","displayName","UIEventSource","response","selfId","ud","fetchIconDescription","layerId","AllKnownLayouts","_a","AllSharedLayers","EditJsonState","schema","server","options","__publicField","LocalStorageSource","config","id","enabled","entry","breadcrumb","key","store","v","value","noInitialSync","unsync","sch","part","origConfig","schemas","isUndefined","lastBreadcrumb","msgs","msg","pth","layers","questions","sharedQuestions","question","state","prepare","context","ConversionContext","e","ContextRewritingStep","Conversion","step","getTagRenderings","json","converted","originalIds","tr","newTagRenderings","PrepareLayer","newPath","idToSearch","oldIndex","EditLayerState","_","LayerConfig","cleanArray","data","lBefore","cleaned","Utils","layer","changed","qtr","Pipe","ValidateLayer","t","trs","_b","_d","_c","_e","_f","TagUtils","EditThemeState","PrepareTheme","ValidateTheme","ConfigMetaUtils","configMeta","div1","div0","message","create_if_block_2","if_block1","span","span1","span0","t3","t3_value","t5","t5_value","mightBeBoolean","type","startInEditModeIfUnset","isTranslation","rendervalue","helperArgs","inline","inlineValue","configJson","nmd","err","messages","TagRenderingConfig","startValue","startInEditMode","tags","onDestroy","tgs","t_value","create_if_block_4","ImmutableStore","tagrenderingeditable_changes","fromhtml_changes","create_if_block_5","create_if_block_3","div2","h3","each_blocks_1","perId","tagRendering","questions.tagRenderings","label","configs","x","c","description","click_handler","t2_value","t0","t0_value","t2","if_block0","create_if_block_6","if_block2","expertMode","defaultOption","hasBooleanOption","types","lastIsString","opt","chosenOption","existingValue","hasOverride","possibleTypes","outer","optionalMatches","numberOfMatches","requiredAttribute","a","directValue","subSchemas","subpath","$$invalidate","oldOption","o","cleanPath","p","crumble","button","button0","button1","create_if_block_7","create_if_block_9","create_if_block_10","title","singular","article","isTagRenderingBlock","subparts","currentValue","createItem","valueToSet","fusePath","subpartPath","toAdd","schemaForMultitype","del","swap","j","moveTo","source","$currentValue","values","schemabasedinput_changes","configsNoHidden","configsFiltered","$expertMode","firstPaths","messagesCount","parsedTag","exampleTags","pt","keys","thenText","thenTextEn","translation","editMode","$thenText","mappingConfigs","schemabasedfield0_changes","schemabasedfield1_changes","schemabasedfield2_changes","schemabasedfield_changes","hasSeenIntro","onMount","allowQuestions","mappingsBuiltin","perLabel","labels","labelMapping","configBuiltin","mappings","topLevelItems","item","questionableTagRenderingSchemaRaw","initMappings","items","ignored","freeformSchemaAll","$allowQuestions","freeformSchema","missing","click_handler_2","t4_value","t6_value","li","t4","t6","_defineProperty","obj","ownKeys","object","enumerableOnly","symbols","sym","_objectSpread2","_objectWithoutPropertiesLoose","excluded","sourceKeys","_objectWithoutProperties","sourceSymbolKeys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arr","_n","_i","_s","minLen","_arrayLikeToArray","n","len","arr2","compose","_len","fns","_key","y","f","curry","fn","curried","_this","_len2","args","_key2","_len3","nextArgs","_key3","isObject","isEmpty","isFunction","hasOwnProperty","property","validateChanges","initial","changes","errorHandler","field","validateSelector","selector","validateHandler","handler","_handler","validateInitial","throwError","errorMessages","validators","create","didUpdate","didStateUpdate","update","updateState","validate","getChanges","extractChanges","getState","setState","causedChanges","_handler$field","index","validateConfig","informAboutDeprecation","merge","CANCELATION_MESSAGE","makeCancelable","promise","hasCanceled_","wrappedPromise","resolve","reject","val","_state$create","config$1","_state$create2","globalConfig","_validators$config","monaco","init","_ref","isInitialized","wrapperPromise","storeMonacoInstance","injectScripts","getMonacoLoaderScript","configureLoader","script","createScript","src","_ref2","loaderScript","_ref3","require","error","__getMonacoInstance","_ref4","loader","container","editor","model","save","newConfig","monacoEditor","schemaUri","layerSchemaJSON","layoutSchemaJSON","modelUri","timeout","$$value","a0","a1","region_changes","region0_changes","region1_changes","div5","div4","div3","alltagspanel_changes","tagrenderinginput_changes","layerSchema","layerSchemaRaw","backToStudio","hasErrors","m","configuration","allNames","meta","perRegion","region","wl","baseUrl","firstPathsFor","regionNames","pathNames","regionName","configForRequiredField","requiredFields","currentlyMissing","requiredField","highlightedItem","deleteLayer","StudioServer","url","userId","allFiles","layerOverview","file","parts","owner","Constants","uid","uidStr","layerIds","islast","isFirst","pageNumber","totalPages","click_handler_1","walkthroughstep_changes","pages","currentPage","incr","back_handler","next_handler","schemaElement","ul","h2","h30","h31","Translations","attr","h1","intro","intro_tagrenderings","studioUrl","oauth_token","QueryParameters","OsmConnection","expert","createdBy","studio","layersWithErr","l","selfLayers","ls","otherLayers","officialLayers","themes","selfThemes","otherThemes","officialThemes","editLayerState","showIntro","layoutSchema","layoutSchemaRaw","editThemeState","version","meta.version","editLayer","event","editTheme","layout","createNewLayer","initialLayerConfig","click_handler_3","func_1","d","StudioGui","SvelteUIElement","StudioGUI"],"sources":["../../node_modules/@rgossiaux/svelte-heroicons/solid/InformationCircle/InformationCircle.svelte","../../node_modules/@rgossiaux/svelte-heroicons/solid/QuestionMarkCircle/QuestionMarkCircle.svelte","../../node_modules/@babeard/svelte-heroicons/mini/QuestionMarkCircle/QuestionMarkCircle.svelte","../../src/UI/Map/Marker.svelte","../../src/UI/Studio/EditItemButton.svelte","../../node_modules/@rgossiaux/svelte-heroicons/outline/Pencil/Pencil.svelte","../../node_modules/@rgossiaux/svelte-heroicons/outline/Trash/Trash.svelte","../../src/UI/Studio/EditLayerState.ts","../../src/UI/Studio/configMeta.ts","../../src/UI/Studio/ShowConversionMessage.svelte","../../src/UI/Studio/SchemaBasedField.svelte","../../src/UI/Studio/QuestionPreview.svelte","../../src/UI/Studio/SchemaBasedMultiType.svelte","../../src/UI/Studio/SchemaBasedArray.svelte","../../src/UI/Studio/ArrayMultiAnswer.svelte","../../src/UI/Studio/SchemaBasedInput.svelte","../../src/UI/Studio/Region.svelte","../../src/UI/Studio/ErrorIndicatorForRegion.svelte","../../src/UI/Studio/MappingInput.svelte","../../src/UI/Studio/TagRenderingInput.svelte","../../src/UI/Studio/ShowConversionMessages.svelte","../../node_modules/@monaco-editor/loader/lib/es/_virtual/_rollupPluginBabelHelpers.js","../../node_modules/state-local/lib/es/state-local.js","../../node_modules/@monaco-editor/loader/lib/es/config/index.js","../../node_modules/@monaco-editor/loader/lib/es/utils/curry.js","../../node_modules/@monaco-editor/loader/lib/es/utils/isObject.js","../../node_modules/@monaco-editor/loader/lib/es/validators/index.js","../../node_modules/@monaco-editor/loader/lib/es/utils/compose.js","../../node_modules/@monaco-editor/loader/lib/es/utils/deepMerge.js","../../node_modules/@monaco-editor/loader/lib/es/utils/makeCancelable.js","../../node_modules/@monaco-editor/loader/lib/es/loader/index.js","../../src/UI/Studio/RawEditor.svelte","../../src/UI/Studio/EditLayer.svelte","../../src/UI/Studio/StudioServer.ts","../../src/UI/Studio/ChooseLayerToEdit.svelte","../../src/UI/Walkthrough/WalkthroughStep.svelte","../../src/UI/Walkthrough/Walkthrough.svelte","../../src/UI/Studio/EditTheme.svelte","../../src/UI/StudioGUI.svelte","../../src/UI/StudioGui.ts"],"sourcesContent":["<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zM8.94 6.94a.75.75 0 11-1.061-1.061 3 3 0 112.871 5.026v.345a.75.75 0 01-1.5 0v-.5c0-.72.57-1.172 1.081-1.287A1.5 1.5 0 108.94 6.94zM10 15a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\"/>\n</svg>","<script lang=\"ts\">\n  import Icon from \"./Icon.svelte\"\n\n  /**\n   * Renders a 'marker', which consists of multiple 'icons'\n   */\n  export let icons: { icon: string; color: string }[]\n</script>\n\n{#if icons !== undefined && icons.length > 0}\n  <div class=\"relative h-full w-full\">\n    {#each icons as icon}\n      <div class=\"absolute top-0 left-0 h-full w-full\">\n        <Icon icon={icon.icon} color={icon.color} />\n      </div>\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\n  import Marker from \"../Map/Marker.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import { AllKnownLayouts } from \"../../Customizations/AllKnownLayouts\"\n  import { AllSharedLayers } from \"../../Customizations/AllSharedLayers\"\n  import { createEventDispatcher } from \"svelte\"\n\n  export let info: { id: string; owner: number }\n  export let category: \"layers\" | \"themes\"\n  export let osmConnection: OsmConnection\n  const dispatch = createEventDispatcher<{ layerSelected: string }>()\n\n  let displayName = UIEventSource.FromPromise(\n    osmConnection.getInformationAboutUser(info.owner)\n  ).mapD((response) => response.display_name)\n  let selfId = osmConnection.userDetails.mapD((ud) => ud.uid)\n\n  function fetchIconDescription(layerId): any {\n    if (category === \"themes\") {\n      return AllKnownLayouts.allKnownLayouts.get(layerId).icon\n    }\n    return AllSharedLayers.getSharedLayersConfigs().get(layerId)?._layerIcon\n  }\n</script>\n\n<NextButton clss=\"small\" on:click={() => dispatch(\"layerSelected\", info)}>\n  <div class=\"mr-1 h-4 w-4\">\n    <Marker icons={fetchIconDescription(info.id)} />\n  </div>\n  <b class=\"px-1\">{info.id}</b>\n  {#if info.owner && info.owner !== $selfId}\n    {#if $displayName}\n      (made by {$displayName}\n      {#if window.location.host.startsWith(\"127.0.0.1\")}\n        - {info.owner}\n      {/if}\n      )\n    {:else}\n      ({info.owner})\n    {/if}\n  {/if}\n</NextButton>\n","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\n</svg>","import { ConfigMeta } from \"./configMeta\"\nimport { Store, UIEventSource } from \"../../Logic/UIEventSource\"\nimport { LayerConfigJson } from \"../../Models/ThemeConfig/Json/LayerConfigJson\"\nimport {\n    Conversion,\n    ConversionMessage,\n    DesugaringContext,\n    Pipe,\n} from \"../../Models/ThemeConfig/Conversion/Conversion\"\nimport { PrepareLayer } from \"../../Models/ThemeConfig/Conversion/PrepareLayer\"\nimport { ValidateLayer, ValidateTheme } from \"../../Models/ThemeConfig/Conversion/Validation\"\nimport { AllSharedLayers } from \"../../Customizations/AllSharedLayers\"\nimport { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\nimport { TagUtils } from \"../../Logic/Tags/TagUtils\"\nimport StudioServer from \"./StudioServer\"\nimport { Utils } from \"../../Utils\"\nimport { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\nimport { OsmTags } from \"../../Models/OsmFeature\"\nimport { Feature, Point } from \"geojson\"\nimport LayerConfig from \"../../Models/ThemeConfig/LayerConfig\"\nimport { LayoutConfigJson } from \"../../Models/ThemeConfig/Json/LayoutConfigJson\"\nimport { PrepareTheme } from \"../../Models/ThemeConfig/Conversion/PrepareTheme\"\nimport { ConversionContext } from \"../../Models/ThemeConfig/Conversion/ConversionContext\"\nimport { LocalStorageSource } from \"../../Logic/Web/LocalStorageSource\"\nimport { TagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/TagRenderingConfigJson\"\n\nexport interface HighlightedTagRendering {\n    path: ReadonlyArray<string | number>\n    schema: ConfigMeta\n}\n\nexport abstract class EditJsonState<T> {\n    public readonly schema: ConfigMeta[]\n    public readonly category: \"layers\" | \"themes\"\n    public readonly server: StudioServer\n    public readonly showIntro: UIEventSource<\"no\" | \"intro\" | \"tagrenderings\"> = <any>(\n        LocalStorageSource.Get(\"studio-show-intro\", \"intro\")\n    )\n\n    public readonly expertMode: UIEventSource<boolean>\n\n    public readonly configuration: UIEventSource<Partial<T>> = new UIEventSource<Partial<T>>({})\n    public readonly messages: Store<ConversionMessage[]>\n\n    /**\n     * The EditLayerUI shows a 'schemaBasedInput' for this path to pop advanced questions out\n     */\n    public readonly highlightedItem: UIEventSource<HighlightedTagRendering> = new UIEventSource(\n        undefined\n    )\n    private sendingUpdates = false\n    private readonly _stores = new Map<string, UIEventSource<any>>()\n\n    constructor(\n        schema: ConfigMeta[],\n        server: StudioServer,\n        category: \"layers\" | \"themes\",\n        options?: {\n            expertMode?: UIEventSource<boolean>\n        }\n    ) {\n        this.schema = schema\n        this.server = server\n        this.category = category\n        this.expertMode = options?.expertMode ?? new UIEventSource<boolean>(false)\n\n        this.messages = this.setupErrorsForLayers()\n\n        const layerId = this.getId()\n        this.configuration\n            .mapD((config) => {\n                if (!this.sendingUpdates) {\n                    console.log(\"Not sending updates yet! Trigger 'startSendingUpdates' first\")\n                    return undefined\n                }\n                return JSON.stringify(config, null, \"  \")\n            })\n            .stabilized(100)\n            .addCallbackD(async (config) => {\n                const id = layerId.data\n                if (id === undefined) {\n                    console.warn(\"No id found in layer, not updating\")\n                    return\n                }\n                await this.server.update(id, config, this.category)\n            })\n    }\n\n    public startSavingUpdates(enabled = true) {\n        this.sendingUpdates = enabled\n        if (enabled) {\n            this.configuration.ping()\n        }\n    }\n\n    public getCurrentValueFor(path: ReadonlyArray<string | number>): any | undefined {\n        // Walk the path down to see if we find something\n        let entry = this.configuration.data\n        for (let i = 0; i < path.length; i++) {\n            if (entry === undefined) {\n                // We reached a dead end - no old vlaue\n                return undefined\n            }\n            const breadcrumb = path[i]\n            entry = entry[breadcrumb]\n        }\n        return entry\n    }\n\n    public async delete() {\n        await this.server.delete(this.getId().data, this.category)\n    }\n\n    public getStoreFor<T>(path: ReadonlyArray<string | number>): UIEventSource<T | undefined> {\n        const key = path.join(\".\")\n\n        const store = new UIEventSource<any>(this.getCurrentValueFor(path))\n        store.addCallback((v) => {\n            this.setValueAt(path, v)\n        })\n        this._stores.set(key, store)\n        this.configuration.addCallbackD(() => {\n            store.setData(this.getCurrentValueFor(path))\n        })\n        return store\n    }\n\n    public register(\n        path: ReadonlyArray<string | number>,\n        value: Store<any>,\n        noInitialSync: boolean = true\n    ): () => void {\n        const unsync = value.addCallback((v) => {\n            this.setValueAt(path, v)\n        })\n        if (!noInitialSync) {\n            this.setValueAt(path, value.data)\n        }\n        return unsync\n    }\n\n    public getSchemaStartingWith(path: string[]) {\n        return this.schema.filter(\n            (sch) =>\n                !path.some((part, i) => !(sch.path.length > path.length && sch.path[i] === part))\n        )\n    }\n\n    public getTranslationAt(path: string[]): ConfigMeta {\n        const origConfig = this.getSchema(path)[0]\n        return {\n            path,\n            type: \"translation\",\n            hints: {\n                typehint: \"translation\",\n            },\n            required: origConfig.required ?? false,\n            description: origConfig.description ?? \"A translatable object\",\n        }\n    }\n\n    public getSchema(path: string[]): ConfigMeta[] {\n        const schemas = this.schema.filter(\n            (sch) =>\n                sch !== undefined &&\n                !path.some((part, i) => !(sch.path.length == path.length && sch.path[i] === part))\n        )\n        if (schemas.length == 0) {\n            console.warn(\"No schemas found for path\", path.join(\".\"))\n        }\n        return schemas\n    }\n\n    public setValueAt(path: ReadonlyArray<string | number>, v: any) {\n        let entry = this.configuration.data\n        const isUndefined =\n            v === undefined ||\n            v === null ||\n            v === \"\" ||\n            (typeof v === \"object\" && Object.keys(v).length === 0)\n\n        for (let i = 0; i < path.length - 1; i++) {\n            const breadcrumb = path[i]\n            if (entry[breadcrumb] === undefined) {\n                if (isUndefined) {\n                    // we have a dead end _and_ we do not need to set a value - we do an early return\n                    return\n                }\n                entry[breadcrumb] = typeof path[i + 1] === \"number\" ? [] : {}\n            }\n            entry = entry[breadcrumb]\n        }\n\n        const lastBreadcrumb = path.at(-1)\n        if (isUndefined) {\n            if (entry && entry[lastBreadcrumb]) {\n                delete entry[lastBreadcrumb]\n                this.configuration.ping()\n            }\n        } else if (entry[lastBreadcrumb] !== v) {\n            entry[lastBreadcrumb] = v\n            this.configuration.ping()\n        }\n    }\n\n    public messagesFor(path: ReadonlyArray<string | number>): Store<ConversionMessage[]> {\n        return this.messages.map((msgs) => {\n            if (!msgs) {\n                return []\n            }\n            return msgs.filter((msg) => {\n                if (msg.level === \"debug\" || msg.level === \"information\") {\n                    return false\n                }\n                const pth = msg.context.path\n                for (let i = 0; i < Math.min(pth.length, path.length); i++) {\n                    if (pth[i] !== path[i]) {\n                        return false\n                    }\n                }\n                return true\n            })\n        })\n    }\n\n    protected abstract buildValidation(state: DesugaringContext): Conversion<T, any>\n\n    protected abstract getId(): Store<string>\n\n    private setupErrorsForLayers(): Store<ConversionMessage[]> {\n        const layers = AllSharedLayers.getSharedLayersConfigs()\n        const questions = layers.get(\"questions\")\n        const sharedQuestions = new Map<string, QuestionableTagRenderingConfigJson>()\n        for (const question of questions.tagRenderings) {\n            sharedQuestions.set(question[\"id\"], <QuestionableTagRenderingConfigJson>question)\n        }\n        let state: DesugaringContext = {\n            tagRenderings: sharedQuestions,\n            sharedLayers: layers,\n        }\n        const prepare = this.buildValidation(state)\n        return this.configuration.mapD((config) => {\n            const context = ConversionContext.construct([], [\"prepare\"])\n            try {\n                prepare.convert(<T>config, context)\n            } catch (e) {\n                console.error(e)\n                context.err(e)\n            }\n            return context.messages\n        })\n    }\n}\n\nclass ContextRewritingStep<T> extends Conversion<LayerConfigJson, T> {\n    private readonly _step: Conversion<LayerConfigJson, T>\n    private readonly _state: DesugaringContext\n    private readonly _getTagRenderings: (t: T) => TagRenderingConfigJson[]\n\n    constructor(\n        state: DesugaringContext,\n        step: Conversion<LayerConfigJson, T>,\n        getTagRenderings: (t: T) => TagRenderingConfigJson[]\n    ) {\n        super(\n            \"When validating a layer, the tagRenderings are first expanded. Some builtin tagRendering-calls (e.g. `contact`) will introduce _multiple_ tagRenderings, causing the count to be off. This class rewrites the error messages to fix this\",\n            [],\n            \"ContextRewritingStep\"\n        )\n        this._state = state\n        this._step = step\n        this._getTagRenderings = getTagRenderings\n    }\n\n    convert(json: LayerConfigJson, context: ConversionContext): T {\n        const converted = this._step.convert(json, context)\n        const originalIds = json.tagRenderings?.map(\n            (tr) => (<QuestionableTagRenderingConfigJson>tr)[\"id\"]\n        )\n        if (!originalIds) {\n            return converted\n        }\n\n        let newTagRenderings: TagRenderingConfigJson[]\n        if (converted === undefined) {\n            const prepared = new PrepareLayer(this._state)\n            newTagRenderings = <TagRenderingConfigJson[]>(\n                prepared.convert(json, context).tagRenderings\n            )\n        } else {\n            newTagRenderings = this._getTagRenderings(converted)\n        }\n        context.rewriteMessages((path) => {\n            if (path[0] !== \"tagRenderings\") {\n                return undefined\n            }\n            const newPath = [...path]\n            const idToSearch = newTagRenderings[newPath[1]].id\n            const oldIndex = originalIds.indexOf(idToSearch)\n            if (oldIndex < 0) {\n                console.warn(\"Original ID was not found: \", idToSearch)\n                return undefined // We don't modify the message\n            }\n            newPath[1] = oldIndex\n            return newPath\n        })\n        return converted\n    }\n}\n\nexport default class EditLayerState extends EditJsonState<LayerConfigJson> {\n    // Needed for the special visualisations\n    public readonly osmConnection: OsmConnection\n    public readonly imageUploadManager = {\n        getCountsFor() {\n            return 0\n        },\n    }\n    public readonly layout: { getMatchingLayer: (key: any) => LayerConfig }\n    public readonly featureSwitches: {\n        featureSwitchIsDebugging: UIEventSource<boolean>\n    }\n\n    /**\n     * Used to preview and interact with the questions\n     */\n    public readonly testTags = new UIEventSource<OsmTags>({ id: \"node/-12345\" })\n    public readonly exampleFeature: Feature<Point> = {\n        type: \"Feature\",\n        properties: this.testTags.data,\n        geometry: {\n            type: \"Point\",\n            coordinates: [3.21, 51.2],\n        },\n    }\n\n    constructor(\n        schema: ConfigMeta[],\n        server: StudioServer,\n        osmConnection: OsmConnection,\n        options: { expertMode: UIEventSource<boolean> }\n    ) {\n        super(schema, server, \"layers\", options)\n        this.osmConnection = osmConnection\n        this.layout = {\n            getMatchingLayer: (_) => {\n                try {\n                    return new LayerConfig(<LayerConfigJson>this.configuration.data, \"dynamic\")\n                } catch (e) {\n                    return undefined\n                }\n            },\n        }\n        this.featureSwitches = {\n            featureSwitchIsDebugging: new UIEventSource<boolean>(true),\n        }\n\n        this.addMissingTagRenderingIds()\n\n        function cleanArray(data: object, key: string): boolean {\n            if (!data) {\n                return false\n            }\n            if (data[key]) {\n                // A bit of cleanup\n                const lBefore = data[key].length\n                const cleaned = Utils.NoNull(data[key])\n                if (cleaned.length != lBefore) {\n                    data[key] = cleaned\n                    return true\n                }\n            }\n            return false\n        }\n\n        this.configuration.addCallbackAndRunD((layer) => {\n            let changed = cleanArray(layer, \"tagRenderings\") || cleanArray(layer, \"pointRenderings\")\n            for (const tr of layer.tagRenderings ?? []) {\n                if (typeof tr === \"string\") {\n                    continue\n                }\n\n                const qtr = <QuestionableTagRenderingConfigJson>tr\n                if (qtr.freeform && Object.keys(qtr.freeform).length === 0) {\n                    delete qtr.freeform\n                    changed = true\n                }\n            }\n            if (changed) {\n                this.configuration.ping()\n            }\n        })\n    }\n\n    protected buildValidation(state: DesugaringContext) {\n        return new ContextRewritingStep(\n            state,\n            new Pipe(new PrepareLayer(state), new ValidateLayer(\"dynamic\", false, undefined, true)),\n            (t) => <TagRenderingConfigJson[]>t.raw.tagRenderings\n        )\n    }\n\n    protected getId(): Store<string> {\n        return this.configuration.mapD((config) => config.id)\n    }\n\n    private addMissingTagRenderingIds() {\n        this.configuration.addCallbackD((config) => {\n            const trs = Utils.NoNull(config.tagRenderings ?? [])\n            for (let i = 0; i < trs.length; i++) {\n                const tr = trs[i]\n                if (typeof tr === \"string\") {\n                    continue\n                }\n                if (!tr[\"id\"] && !tr[\"override\"]) {\n                    const qtr = <QuestionableTagRenderingConfigJson>tr\n                    let id = \"\" + i + \"_\" + Utils.randomString(5)\n                    if (qtr?.freeform?.key) {\n                        id = qtr?.freeform?.key\n                    } else if (qtr.mappings?.[0]?.if) {\n                        id =\n                            qtr.freeform?.key ??\n                            TagUtils.Tag(qtr.mappings[0].if).usedKeys()?.[0] ??\n                            \"\" + i\n                    }\n                    qtr[\"id\"] = id\n                }\n            }\n        })\n    }\n}\n\nexport class EditThemeState extends EditJsonState<LayoutConfigJson> {\n    constructor(\n        schema: ConfigMeta[],\n        server: StudioServer,\n        options: { expertMode: UIEventSource<boolean> }\n    ) {\n        super(schema, server, \"themes\", options)\n    }\n\n    protected buildValidation(state: DesugaringContext): Conversion<LayoutConfigJson, any> {\n        return new Pipe(\n            new PrepareTheme(state),\n            new ValidateTheme(undefined, \"\", false, new Set(state.tagRenderings.keys()))\n        )\n    }\n\n    protected getId(): Store<string> {\n        return this.configuration.mapD((config) => config.id)\n    }\n}\n","import { JsonSchema, JsonSchemaType } from \"./jsonSchema\"\n\nexport interface ConfigMeta {\n    path: string[]\n    type: JsonSchemaType | JsonSchema[]\n    /**\n     * All fields are lowercase, as they should be case-insensitive\n     */\n    hints: {\n        group?: string\n        typehint?: string\n        typehelper?: string\n        /**\n         * If multiple subcategories can be chosen\n         */\n        types?: string\n        question?: string\n        iftrue?: string\n        iffalse?: string\n        ifunset?: string\n        inline?: string\n        default?: string\n        typesdefault?: string\n        suggestions?: []\n        title?: string\n        multianswer?: \"true\" | string\n    }\n    required: boolean\n    description: string\n}\n\nexport class ConfigMetaUtils {\n    static isTranslation(configMeta: ConfigMeta) {\n        /*      {\n    \"$ref\": \"#/definitions/Record<string,string>\"\n  },\n  {\n    \"type\": \"string\"\n  }*/\n        if (!configMeta.type) {\n            return false\n        }\n        if (Array.isArray(configMeta.type)) {\n            return configMeta.type.some((t) => t[\"$ref\"] === \"#/definitions/Record<string,string>\")\n        } else {\n            return configMeta.type[\"$ref\"] === \"#/definitions/Record<string,string>\"\n        }\n    }\n}\n","<script lang=\"ts\">\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n  import { ExclamationIcon, InformationCircleIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n\n  /**\n   * Single conversion message, styled depending on the type\n   */\n  export let message: ConversionMessage\n</script>\n\n{#if message.level === \"error\"}\n  <div class=\"alert flex items-center justify-between\">\n    <ExclamationIcon class=\"mx-1 h-6 w-6 shrink-0\" />\n    {message.message}\n    <div />\n  </div>\n{:else if message.level === \"warning\"}\n  <div class=\"warning flex items-center justify-between\">\n    <ExclamationIcon class=\"mx-1 h-6 w-6 shrink-0\" />\n    {message.message}\n    <div />\n  </div>\n{:else if message.level === \"information\"}\n  <div class=\"information flex items-center justify-between\">\n    <InformationCircleIcon class=\"mx-1 h-6 w-6 shrink-0\" />\n    {message.message}\n    <div />\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import nmd from \"nano-markdown\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import EditLayerState from \"./EditLayerState\"\n  import { onDestroy } from \"svelte\"\n  import type { JsonSchemaType } from \"./jsonSchema\"\n  import { ConfigMetaUtils } from \"./configMeta\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n  export let schema: ConfigMeta\n  export let startInEditModeIfUnset: boolean = schema.hints && !schema.hints.ifunset\n\n  function mightBeBoolean(type: undefined | JsonSchemaType): boolean {\n    if (type === undefined) {\n      return false\n    }\n    if (type[\"type\"]) {\n      type = type[\"type\"]\n    }\n    if (type === \"boolean\") {\n      return true\n    }\n    if (!Array.isArray(type)) {\n      return false\n    }\n\n    return type.some((t) => mightBeBoolean(t))\n  }\n\n  const isTranslation =\n    schema.hints?.typehint === \"translation\" ||\n    schema.hints?.typehint === \"rendered\" ||\n    ConfigMetaUtils.isTranslation(schema)\n  let type = schema.hints.typehint ?? \"string\"\n\n  let rendervalue =\n    (schema.hints.inline ?? schema.path.join(\".\")) +\n    (isTranslation ? \" <b>{translated(value)}</b>\" : \" <b>{value}</b>\")\n\n  if (schema.type === \"boolean\") {\n    rendervalue = undefined\n  }\n  if (schema.hints.typehint === \"tag\" || schema.hints.typehint === \"simple_tag\") {\n    rendervalue = \"{tags()}\"\n  }\n\n  let helperArgs = schema.hints.typehelper?.split(\",\")\n  let inline = schema.hints.inline !== undefined\n  if (isTranslation) {\n    type = \"translation\"\n    if (schema.hints.inline) {\n      const inlineValue = schema.hints.inline\n      rendervalue = inlineValue\n      inline = false\n      helperArgs = [\n        inlineValue.substring(0, inlineValue.indexOf(\"{\")),\n        inlineValue.substring(inlineValue.indexOf(\"}\") + 1),\n      ]\n    }\n  }\n  if (type.endsWith(\"[]\")) {\n    type = type.substring(0, type.length - 2)\n  }\n\n  const configJson: QuestionableTagRenderingConfigJson = {\n    id: path.join(\"_\"),\n    render: rendervalue,\n    question: schema.hints.question,\n    questionHint: nmd(schema.description),\n    freeform:\n      schema.type === \"boolean\"\n        ? undefined\n        : {\n            key: \"value\",\n            type,\n            inline,\n            helperArgs,\n          },\n  }\n\n  if (schema.hints.default) {\n    configJson.mappings = [\n      {\n        if: \"value=\", // We leave this blank\n        then:\n          path.at(-1) +\n          \" is not set. The default value <b>\" +\n          schema.hints.default +\n          \"</b> will be used. \" +\n          (schema.hints.ifunset ?? \"\"),\n        hideInAnswer: mightBeBoolean(schema.type),\n      },\n    ]\n  } else if (!schema.required) {\n    configJson.mappings = [\n      {\n        if: \"value=\",\n        then: path.at(-1) + \" is not set. \" + (schema.hints.ifunset ?? \"\"),\n      },\n    ]\n  }\n\n  if (mightBeBoolean(schema.type)) {\n    configJson.mappings = configJson.mappings ?? []\n    configJson.mappings.push(\n      {\n        if: \"value=true\",\n        then: schema.hints?.iftrue ?? \"Yes\",\n      },\n      {\n        if: \"value=false\",\n        then: schema.hints?.iffalse ?? \"No\",\n      }\n    )\n  }\n\n  if (schema.hints.suggestions) {\n    if (!configJson.mappings) {\n      configJson.mappings = []\n    }\n    configJson.mappings.push(...schema.hints.suggestions)\n  }\n  let config: TagRenderingConfig\n  let err: string = undefined\n  let messages = state.messagesFor(path)\n  try {\n    config = new TagRenderingConfig(configJson, \"config based on \" + schema.path.join(\".\"))\n  } catch (e) {\n    console.error(e, config)\n    err = path.join(\".\") + \" \" + e\n  }\n  let startValue = state.getCurrentValueFor(path)\n  let startInEditMode = startValue === undefined && startInEditModeIfUnset\n  const tags = new UIEventSource<Record<string, string>>({ value: startValue })\n  try {\n    onDestroy(\n      state.register(\n        path,\n        tags.map((tgs) => {\n          const v = tgs[\"value\"]\n          if (typeof v === \"object\") {\n            return { ...(<object>v) }\n          }\n          if (schema.type === \"boolean\") {\n            if (v === null || v === undefined) {\n              return v\n            }\n            return v === \"true\" || v === \"yes\" || v === \"1\"\n          }\n          if (mightBeBoolean(schema.type)) {\n            if (v === \"true\" || v === \"yes\" || v === \"1\") {\n              return true\n            }\n            if (v === \"false\" || v === \"no\" || v === \"0\" || <any>v === false) {\n              return false\n            }\n          }\n          if (schema.type === \"number\") {\n            if (v === \"\" || v === null || isNaN(Number(v))) {\n              return undefined\n            }\n            return Number(v)\n          }\n          if (isTranslation && typeof v === \"string\") {\n            if (v === \"\") {\n              return {}\n            }\n            return JSON.parse(v)\n          }\n          return v\n        }),\n        isTranslation\n      )\n    )\n  } catch (e) {\n    console.error(\"Could not register\", path, \"due to\", e)\n  }\n</script>\n\n{#if err !== undefined}\n  <span class=\"alert\">{err}</span>\n{:else}\n  <div class=\"flex w-full flex-col\">\n    <TagRenderingEditable\n      editMode={startInEditMode}\n      {config}\n      selectedElement={undefined}\n      {state}\n      {tags}\n    />\n    {#if $messages.length > 0}\n      {#each $messages as message}\n        <ShowConversionMessage {message} />\n      {/each}\n    {/if}\n    {#if window.location.hostname === \"127.0.0.1\"}\n      <span class=\"subtle\" on:click={() => console.log(schema)}>\n        SchemaBasedField <b>{path.join(\".\")}</b>\n        <span class=\"cursor-pointer\" on:click={() => console.log(schema)}>\n          {schema.hints.typehint}\n        </span>\n        Group: {schema.hints.group}\n      </span>\n    {/if}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import type { ConfigMeta } from \"./configMeta\"\n  import EditLayerState from \"./EditLayerState\"\n  import * as questions from \"../../assets/generated/layers/questions.json\"\n  import { ImmutableStore, Store } from \"../../Logic/UIEventSource\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import nmd from \"nano-markdown\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson.js\"\n  import type { TagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/TagRenderingConfigJson\"\n  import FromHtml from \"../Base/FromHtml.svelte\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n\n  export let state: EditLayerState\n  export let path: ReadonlyArray<string | number>\n  export let schema: ConfigMeta\n  let value = state.getStoreFor(path)\n\n  let perId: Record<string, TagRenderingConfigJson[]> = {}\n  for (let tagRendering of questions.tagRenderings) {\n    if (tagRendering.labels) {\n      for (let label of tagRendering.labels) {\n        perId[label] = (perId[label] ?? []).concat(tagRendering)\n      }\n    }\n    perId[tagRendering.id] = [tagRendering]\n  }\n\n  let configJson: Store<QuestionableTagRenderingConfigJson[]> = value.map((x) => {\n    if (typeof x === \"string\") {\n      return perId[x]\n    } else {\n      return [x]\n    }\n  })\n  let configs: Store<TagRenderingConfig[]> = configJson.map((configs) => {\n    if (!configs) {\n      return [{ error: \"No configuartions found\" }]\n    }\n    console.log(\"Regenerating configs\")\n    return configs.map((config) => {\n      try {\n        return new TagRenderingConfig(config)\n      } catch (e) {\n        return { error: e }\n      }\n    })\n  })\n  let id: Store<string> = value.mapD((c) => {\n    if (c?.id) {\n      return c.id\n    }\n    if (typeof c === \"string\") {\n      return c\n    }\n    return undefined\n  })\n\n  let tags = state.testTags\n\n  let messages = state.messagesFor(path)\n\n  let description = schema.description\n  if (description) {\n    try {\n      description = nmd(description)\n    } catch (e) {\n      console.error(\"Could not convert description to markdown\", { description })\n    }\n  }\n</script>\n\n<div class=\"flex\">\n  <div class=\"interactive border-interactive m-4 flex w-full flex-col\">\n    {#if $id}\n      TagRendering {$id}\n    {/if}\n    <NextButton clss=\"primary\" on:click={() => state.highlightedItem.setData({ path, schema })}>\n      {#if schema.hints.question}\n        {schema.hints.question}\n      {/if}\n    </NextButton>\n    {#if description}\n      <FromHtml src={description} />\n    {/if}\n    {#each $messages as message}\n      <ShowConversionMessage {message} />\n    {/each}\n\n    <slot class=\"my-4 self-end\" />\n  </div>\n\n  <div class=\"m-4 flex w-full flex-col\">\n    <h3>Preview of this question</h3>\n    {#each $configs as config}\n      {#if config.error !== undefined}\n        <div class=\"alert\">Could not create a preview of this tagRendering: {config.error}</div>\n      {:else if config.condition && !config.condition.matchesProperties($tags)}\n        This tagRendering is currently not shown. It will appear if the feature matches the\n        condition\n        <b>\n          <FromHtml src={config.condition.asHumanString(true, false, {})} />\n        </b>\n\n        Try to answer the relevant question above\n      {:else if config.metacondition && !config.metacondition.matchesProperties($tags)}\n        This tagRendering is currently not shown. It will appear if the feature matches the\n        metacondition\n        <b>\n          <FromHtml src={config.metacondition.asHumanString(true, false, {})} />\n        </b>\n        For a breakdown of usable meta conditions, go to a mapcomplete theme > settings and enable debug-data.\n        The meta-tags will appear at the bottom\n      {:else}\n        <TagRenderingEditable\n          selectedElement={state.exampleFeature}\n          {config}\n          editingEnabled={new ImmutableStore(true)}\n          {state}\n          {tags}\n        />\n      {/if}\n    {/each}\n  </div>\n</div>\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import { onDestroy } from \"svelte\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n  import type { JsonSchemaType } from \"./jsonSchema\"\n  // @ts-ignore\n  import nmd from \"nano-markdown\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n\n  /**\n   * If 'types' is defined: allow the user to pick one of the types to input.\n   */\n\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n  export let schema: ConfigMeta\n  let expertMode = state.expertMode\n  const defaultOption = schema.hints.typesdefault ? Number(schema.hints.typesdefault) : undefined\n\n  const hasBooleanOption = (<JsonSchemaType[]>schema.type)?.findIndex(\n    (t) => t[\"type\"] === \"boolean\"\n  )\n  const types = schema.hints.types.split(\";\")\n  if (hasBooleanOption >= 0) {\n    types.splice(hasBooleanOption)\n  }\n\n  let lastIsString = false\n  {\n    const types: string | string[] = Array.isArray(schema.type)\n      ? schema.type[schema.type.length - 1].type\n      : []\n    lastIsString = types === \"string\" || (Array.isArray(types) && types.some((i) => i === \"string\"))\n  }\n\n  if (lastIsString) {\n    types.splice(types.length - 1, 1)\n  }\n  const configJson: QuestionableTagRenderingConfigJson = {\n    id: \"TYPE_OF:\" + path.join(\"_\"),\n    question: \"Which subcategory is needed for \" + schema.path.at(-1) + \"?\",\n    questionHint: nmd(schema.description),\n    mappings: types\n      .map((opt) => opt.trim())\n      .filter((opt) => opt.length > 0)\n      .map((opt, i) => ({\n        if: \"chosen_type_index=\" + i,\n        addExtraTags: [\"value=\"],\n        then: opt + (i === defaultOption ? \" (Default)\" : \"\"),\n      })),\n    render: !lastIsString\n      ? undefined\n      : schema.hints.inline ?? \"Use a hardcoded value: <b>{value}</b>\",\n    freeform: !lastIsString\n      ? undefined\n      : {\n          key: \"value\",\n          inline: true,\n          type: schema.hints.typehint,\n          addExtraTags: [\"chosen_type_index=\"],\n        },\n  }\n  let tags = new UIEventSource<Record<string, string>>({})\n\n  if (schema.hints.ifunset) {\n    configJson.mappings.push({\n      if: { and: [\"value=\", \"chosen_type_index=\"] },\n      then: schema.hints.ifunset,\n    })\n  }\n  if (schema.hints.suggestions) {\n    configJson.mappings.push(...schema.hints.suggestions)\n  }\n\n  if (hasBooleanOption >= 0) {\n    configJson.mappings.unshift(\n      {\n        if: \"value=true\",\n        then: schema.hints.iftrue ?? \"Yes\",\n        addExtraTags: [\"chosen_type_index=\"],\n      },\n      {\n        if: \"value=false\",\n        then: schema.hints.iffalse ?? \"No\",\n        addExtraTags: [\"chosen_type_index=\"],\n      }\n    )\n  }\n  const config = new TagRenderingConfig(configJson, \"config based on \" + schema.path.join(\".\"))\n  let chosenOption: number = defaultOption\n\n  const existingValue = state.getCurrentValueFor(path)\n  let hasOverride = existingValue?.override !== undefined\n  if (hasBooleanOption >= 0 && (existingValue === true || existingValue === false)) {\n    tags.setData({ value: \"\" + existingValue })\n  } else if (lastIsString && typeof existingValue === \"string\") {\n    tags.setData({ value: existingValue })\n    chosenOption = undefined\n  } else if (existingValue) {\n    // We found an existing value. Let's figure out what type it matches and select that one\n    // We run over all possibilities and check what is required\n    const possibleTypes: {\n      index: number\n      matchingPropertiesCount: number\n      optionalMatches: number\n    }[] = []\n    outer: for (let i = 0; i < (<[]>schema.type).length; i++) {\n      const type = schema.type[i]\n      let optionalMatches = 0\n      for (const key of Object.keys(type.properties ?? {})) {\n        if (!!existingValue[key]) {\n          optionalMatches++\n        }\n      }\n      if (type.required) {\n        let numberOfMatches = 0\n\n        for (const requiredAttribute of type.required) {\n          if (existingValue[requiredAttribute] === undefined) {\n            // The 'existingValue' does _not_ have this required attribute, so it cannot be of this type\n            continue outer\n          }\n          numberOfMatches++\n        }\n        possibleTypes.push({ index: i, matchingPropertiesCount: numberOfMatches, optionalMatches })\n      } else {\n        possibleTypes.push({ index: i, matchingPropertiesCount: 0, optionalMatches })\n      }\n    }\n    possibleTypes.sort((a, b) => b.optionalMatches - a.optionalMatches)\n    possibleTypes.sort((a, b) => b.matchingPropertiesCount - a.matchingPropertiesCount)\n    if (possibleTypes.length > 0) {\n      chosenOption = possibleTypes[0].index\n      tags.setData({ chosen_type_index: \"\" + chosenOption })\n    }\n  } else if (defaultOption !== undefined) {\n    tags.setData({ chosen_type_index: \"\" + defaultOption })\n  } else {\n    chosenOption = defaultOption\n  }\n\n  if (hasBooleanOption >= 0 || lastIsString) {\n    const directValue = tags.mapD((tags) => {\n      if (tags[\"chosen_type_index\"]) {\n        return \"\"\n      }\n      if (lastIsString) {\n        return tags[\"value\"]\n      }\n      return tags[\"value\"] === \"true\"\n    })\n    onDestroy(state.register(path, directValue))\n  }\n\n  let subSchemas: ConfigMeta[] = []\n\n  let subpath = path\n  const store = state.getStoreFor(path)\n  onDestroy(\n    tags.addCallbackAndRun((tags) => {\n      if (tags[\"value\"] !== undefined && tags[\"value\"] !== \"\") {\n        chosenOption = undefined\n        return\n      }\n      const oldOption = chosenOption\n      chosenOption = tags[\"chosen_type_index\"] ? Number(tags[\"chosen_type_index\"]) : defaultOption\n      const type = schema.type[chosenOption]\n      if (chosenOption !== oldOption) {\n        // Reset the values beneath\n        subSchemas = []\n        const o = state.getCurrentValueFor(path) ?? {}\n        for (const key of type?.required ?? []) {\n          o[key] ??= {}\n        }\n        store.setData(o)\n      }\n      if (!type) {\n        return\n      }\n      subpath = path\n      const cleanPath = <string[]>path.filter((p) => typeof p === \"string\")\n      if (type[\"$ref\"] === \"#/definitions/Record<string,string>\") {\n        // The subtype is a translation object\n        const schema = state.getTranslationAt(cleanPath)\n        subSchemas.push(schema)\n        subpath = path.slice(0, path.length - 2)\n        return\n      }\n      if (!type.properties) {\n        return\n      }\n      for (const crumble of Object.keys(type.properties)) {\n        subSchemas.push(...state.getSchema([...cleanPath, crumble]))\n      }\n    })\n  )\n  let messages = state.messagesFor(path)\n</script>\n\n<div class=\"m-1 flex flex-col gap-y-2 border-2 border-dashed border-gray-300 p-2\">\n  {#if schema.hints.title !== undefined}\n    <h3>{schema.hints.title}</h3>\n    <div>{schema.description}</div>\n  {/if}\n  {#if hasOverride}\n    This object refers to {existingValue.builtin} and overrides some properties. This cannot be edited\n    with MapComplete Studio\n  {:else}\n    <div>\n      <TagRenderingEditable {config} selectedElement={undefined} {state} {tags} />\n    </div>\n\n    {#if chosenOption !== undefined}\n      {#each subSchemas as subschema}\n        {#if $expertMode || subschema.hints?.group !== \"expert\"}\n          <SchemaBasedInput\n            {state}\n            schema={subschema}\n            path={[...subpath, subschema?.path?.at(-1) ?? \"???\"]}\n          />\n        {:else if window.location.hostname === \"127.0.0.1\"}\n          <span class=\"subtle\">Omitted expert question {subschema.path.join(\".\")}</span>\n        {/if}\n      {/each}\n    {:else if $messages.length > 0}\n      {#each $messages as message}\n        <ShowConversionMessage {message} />\n      {/each}\n    {/if}\n  {/if}\n  {#if window.location.hostname === \"127.0.0.1\"}\n    <span class=\"subtle\">\n      SchemaBasedMultiType <b>{path.join(\".\")}</b>\n      <span class=\"cursor-pointer\" on:click={() => console.log(schema)}>\n        {schema.hints.typehint}\n      </span>\n    </span>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n  import SchemaBasedField from \"./SchemaBasedField.svelte\"\n  import { TrashIcon } from \"@babeard/svelte-heroicons/mini\"\n  import QuestionPreview from \"./QuestionPreview.svelte\"\n  import SchemaBasedMultiType from \"./SchemaBasedMultiType.svelte\"\n  import ShowConversionMessage from \"./ShowConversionMessage.svelte\"\n\n  export let state: EditLayerState\n  export let schema: ConfigMeta\n\n  let title = schema.path.at(-1)\n  let singular = title\n  if (title?.endsWith(\"s\")) {\n    singular = title.slice(0, title.length - 1)\n  }\n  let article = \"a\"\n  if (singular?.match(/^[aeoui]/)) {\n    article = \"an\"\n  }\n  export let path: (string | number)[] = []\n\n  const isTagRenderingBlock = path.length === 1 && path[0] === \"tagRenderings\"\n\n  if (isTagRenderingBlock) {\n    schema = { ...schema }\n    schema.description = undefined\n  }\n\n  const subparts: ConfigMeta = state\n    .getSchemaStartingWith(schema.path)\n    .filter((part) => part.path.length - 1 === schema.path.length)\n\n  let messages = state.messagesFor(path)\n\n  const currentValue: UIEventSource<any[]> = state.getStoreFor(path)\n  if (currentValue.data === undefined) {\n    currentValue.setData([])\n  }\n\n  function createItem(valueToSet?: any) {\n    if (currentValue.data === undefined) {\n      currentValue.setData([])\n    }\n    currentValue.data.push(valueToSet)\n    currentValue.ping()\n\n    if (isTagRenderingBlock) {\n      state.highlightedItem.setData({ path: [...path, currentValue.data.length - 1], schema })\n    }\n  }\n\n  function fusePath(i: number, subpartPath: string[]): (string | number)[] {\n    const newPath = [...path, i]\n    const toAdd = [...subpartPath]\n    for (const part of path) {\n      if (toAdd[0] === part) {\n        toAdd.splice(0, 1)\n      } else {\n        break\n      }\n    }\n    newPath.push(...toAdd)\n    console.log(\n      \"Fused path \",\n      path.join(\".\"),\n      \"+\",\n      i,\n      \"+\",\n      subpartPath.join(\".\"),\n      \"into\",\n      newPath.join(\".\")\n    )\n    return newPath\n  }\n\n  function schemaForMultitype() {\n    const sch = { ...schema }\n    sch.hints.typehint = undefined\n    return sch\n  }\n\n  function del(i: number) {\n    currentValue.data.splice(i, 1)\n    currentValue.ping()\n  }\n\n  function swap(i: number, j: number) {\n    const x = currentValue.data[i]\n    currentValue.data[i] = currentValue.data[j]\n    currentValue.data[j] = x\n    currentValue.ping()\n  }\n\n  function moveTo(source: number, target: number) {\n    const x = currentValue.data[source]\n    currentValue.data.splice(source, 1)\n    currentValue.data.splice(target, 0, x)\n    currentValue.ping()\n  }\n</script>\n\n<div class=\"pl-2\">\n  <h3>{schema.path.at(-1)}</h3>\n\n  {#if subparts.length > 0}\n    <span class=\"subtle\">\n      {schema.description}\n    </span>\n  {/if}\n  {#if $currentValue === undefined}\n    No array defined\n  {:else if $currentValue.length === 0}\n    No values are defined\n    {#if $messages.length > 0}\n      {#each $messages as message}\n        <ShowConversionMessage {message} />\n      {/each}\n    {/if}\n  {:else if subparts.length === 0}\n    <!-- We need an array of values, so we use the typehint of the _parent_ element as field -->\n    {#each $currentValue as value, i}\n      <div class=\"flex w-full\">\n        <SchemaBasedField {state} {schema} path={fusePath(i, [])} />\n        <button\n          class=\"h-fit w-fit rounded-full border border-black p-1\"\n          on:click={() => {\n            del(i)\n          }}\n        >\n          <TrashIcon class=\"h-4 w-4\" />\n        </button>\n      </div>\n    {/each}\n  {:else}\n    {#each $currentValue as value, i}\n      {#if !isTagRenderingBlock}\n        <div class=\"flex items-center justify-between\">\n          <h3 class=\"m-0\">{singular} {i}</h3>\n          <button\n            class=\"h-fit w-fit rounded-full border border-black p-1\"\n            on:click={() => {\n              del(i)\n            }}\n          >\n            <TrashIcon class=\"h-4 w-4\" />\n          </button>\n        </div>\n      {/if}\n      <div class=\"border border-black\">\n        {#if isTagRenderingBlock}\n          <QuestionPreview {state} path={fusePath(i, [])} {schema}>\n            <button\n              on:click={() => {\n                del(i)\n              }}\n            >\n              <TrashIcon class=\"h-4 w-4\" />\n              Delete this question\n            </button>\n\n            {#if i > 0}\n              <button\n                on:click={() => {\n                  moveTo(i, 0)\n                }}\n              >\n                Move to front\n              </button>\n\n              <button\n                on:click={() => {\n                  swap(i, i - 1)\n                }}\n              >\n                Move up\n              </button>\n            {/if}\n            {#if i + 1 < $currentValue.length}\n              <button\n                on:click={() => {\n                  swap(i, i + 1)\n                }}\n              >\n                Move down\n              </button>\n              <button\n                on:click={() => {\n                  moveTo(i, $currentValue.length - 1)\n                }}\n              >\n                Move to back\n              </button>\n            {/if}\n          </QuestionPreview>\n        {:else if schema.hints.types}\n          <SchemaBasedMultiType {state} path={fusePath(i, [])} schema={schemaForMultitype()} />\n        {:else}\n          {#each subparts as subpart}\n            <SchemaBasedInput {state} path={fusePath(i, [subpart.path.at(-1)])} schema={subpart} />\n          {/each}\n        {/if}\n      </div>\n    {/each}\n  {/if}\n  <div class=\"flex\">\n    <button on:click={() => createItem()}>Add {article} {singular}</button>\n    {#if path.length === 1 && path[0] === \"tagRenderings\"}\n      <button\n        on:click={() => {\n          createItem(\"images\")\n        }}\n      >\n        Add a builtin tagRendering\n      </button>\n    {/if}\n    <slot name=\"extra-button\" />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { ConfigMeta } from \"./configMeta\"\n  import EditLayerState from \"./EditLayerState\"\n  import type { QuestionableTagRenderingConfigJson } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n\n  export let schema: ConfigMeta\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n\n  const configJson: QuestionableTagRenderingConfigJson = {\n    mappings: schema.hints.suggestions,\n    multiAnswer: true,\n    id: \"multi_anwser_\" + path.join(\"_\"),\n    question: schema.hints.question,\n  }\n  const tags = new UIEventSource({})\n\n  {\n    // Setting the initial value\n    const v = <string[]>state.getCurrentValueFor(path)\n    if (v && v.length > 0) {\n      tags.setData({ value: v.join(\";\") })\n    }\n  }\n\n  tags.addCallbackD((tags) => {\n    const values = tags[\"value\"]?.split(\";\")\n    if (!values) {\n      return\n    }\n    state.setValueAt(path, values)\n  })\n\n  const config = new TagRenderingConfig(configJson)\n</script>\n\n<div>\n  <TagRenderingEditable {config} selectedElement={undefined} {state} {tags} />\n</div>\n","<script lang=\"ts\">\n  import type { ConfigMeta } from \"./configMeta\"\n  import SchemaBasedField from \"./SchemaBasedField.svelte\"\n  import EditLayerState from \"./EditLayerState\"\n  import SchemaBasedArray from \"./SchemaBasedArray.svelte\"\n  import SchemaBasedMultiType from \"./SchemaBasedMultiType.svelte\"\n  import ArrayMultiAnswer from \"./ArrayMultiAnswer.svelte\"\n\n  export let schema: ConfigMeta\n  export let state: EditLayerState\n  export let path: (string | number)[] = []\n  let expertMode = state.expertMode\n</script>\n\n{#if (schema.hints?.group !== \"expert\" || $expertMode) && schema.hints.group !== \"hidden\"}\n  {#if schema.hints?.typehint?.endsWith(\"[]\")}\n    <!-- We cheat a bit here by matching this 'magical' type... -->\n    <SchemaBasedArray {path} {state} {schema} />\n  {:else if schema.type === \"array\" && schema.hints.multianswer === \"true\"}\n    <ArrayMultiAnswer {path} {state} {schema} />\n  {:else if schema.type === \"array\"}\n    <SchemaBasedArray {path} {state} {schema} />\n  {:else if schema.hints?.types}\n    <SchemaBasedMultiType {path} {state} {schema} />\n  {:else}\n    <SchemaBasedField {path} {state} {schema} />\n  {/if}\n{:else if window.location.hostname === \"127.0.0.1\"}\n  <div class=\"subtle\">\n    Not showing SBI {schema.path.join(\".\")} due to group {schema.hints.group}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  /***\n   * A 'region' is a collection of properties that can be edited which are somewhat related.\n   * They will typically be a subset of some properties\n   */\n  import type { ConfigMeta } from \"./configMeta\"\n  import EditLayerState from \"./EditLayerState\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n\n  export let state: EditLayerState\n  export let configs: ConfigMeta[]\n  export let title: string | undefined = undefined\n\n  export let path: (string | number)[] = []\n\n  let expertMode = state.expertMode\n  let configsNoHidden = configs.filter((schema) => schema.hints?.group !== \"hidden\")\n  let configsFiltered = $expertMode\n    ? configsNoHidden\n    : configsNoHidden.filter((schema) => schema.hints?.group !== \"expert\")\n</script>\n\n{#if configs === undefined}\n  Bug: 'Region' received 'undefined'\n{:else if configs.length === 0}\n  Bug: Region received empty list as configuration\n{:else if title}\n  <div class=\"flex w-full flex-col\">\n    <h3>{title}</h3>\n    <div class=\"flex w-full flex-col gap-y-1 border border-black pl-2\">\n      <slot name=\"description\" />\n      {#each configsFiltered as config}\n        <SchemaBasedInput {state} path={config.path} schema={config} />\n      {/each}\n    </div>\n  </div>\n{:else}\n  <div class=\"flex w-full flex-col gap-y-1 pl-2\">\n    {#each configsFiltered as config}\n      <SchemaBasedInput {state} path={path.concat(config.path)} schema={config} />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import { ExclamationIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n\n  export let firstPaths: Set<string | number>\n  export let state: EditLayerState\n  let messagesCount = state.messages.map(\n    (msgs) =>\n      msgs.filter((msg) => {\n        const pth = msg.context.path\n        return firstPaths.has(pth[0]) || (pth.length > 1 && firstPaths.has(pth[1]))\n      }).length\n  )\n</script>\n\n{#if $messagesCount > 0}\n  <span class=\"alert flex w-min\">\n    <ExclamationIcon class=\"h-6 w-6\" />\n    {$messagesCount}\n  </span>\n{/if}\n","<script lang=\"ts\">\n  import EditLayerState from \"./EditLayerState\"\n  import { UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { TagConfigJson } from \"../../Models/ThemeConfig/Json/TagConfigJson\"\n  import { TagUtils } from \"../../Logic/Tags/TagUtils\"\n  import FromHtml from \"../Base/FromHtml.svelte\"\n  import { PencilIcon } from \"@rgossiaux/svelte-heroicons/outline\"\n  import Region from \"./Region.svelte\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import configs from \"../../assets/schemas/questionabletagrenderingconfigmeta.json\"\n  import { Utils } from \"../../Utils\"\n  import { ExclamationTriangle } from \"@babeard/svelte-heroicons/solid/ExclamationTriangle\"\n\n  export let state: EditLayerState\n  export let path: (string | number)[]\n  let messages = state.messagesFor(path)\n  let tag: UIEventSource<TagConfigJson> = state.getStoreFor([...path, \"if\"])\n  let parsedTag = tag.map((t) => (t ? TagUtils.Tag(t) : undefined))\n  let exampleTags = parsedTag.map((pt) => {\n    if (!pt) {\n      return {}\n    }\n    const keys = pt.usedKeys()\n    const o = {}\n    for (const key of keys) {\n      o[key] = \"value\"\n    }\n    return o\n  })\n\n  let thenText: UIEventSource<Record<string, string>> = state.getStoreFor([...path, \"then\"])\n  let thenTextEn = thenText.mapD((translation) =>\n    typeof translation === \"string\" ? translation : translation[\"en\"]\n  )\n  let editMode = Object.keys($thenText ?? {})?.length === 0\n\n  let mappingConfigs: ConfigMeta[] = configs\n    .filter((c) => c.path[0] === \"mappings\")\n    .map((c) => <ConfigMeta>Utils.Clone(c))\n    .map((c) => {\n      c.path.splice(0, 1)\n      return c\n    })\n    .filter((c) => c.path.length == 1 && c.hints.group !== \"hidden\")\n</script>\n\n<button\n  on:click={() => {\n    editMode = !editMode\n  }}\n>\n  <PencilIcon class=\"h-6 w-6\" />\n</button>\n\n{#if editMode}\n  <div class=\"flex w-full items-start justify-between\">\n    <div class=\"flex w-full flex-col\">\n      <Region {state} configs={mappingConfigs} {path} />\n    </div>\n\n    <slot name=\"delete\" />\n  </div>\n{:else}\n  <div>\n    {#if Object.keys($thenText).length > 0}\n      <b>\n        {$thenTextEn}\n      </b>\n    {:else}\n      <i>No then is set</i>\n    {/if}\n    <FromHtml src={$parsedTag?.asHumanString(false, false, $exampleTags)} />\n    {#if $messages.length > 0}\n      <div class=\"alert m-2 flex\">\n        <ExclamationTriangle class=\"h-6 w-6\" />\n        {$messages.length} errors\n      </div>\n    {/if}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  /**\n   * Little helper class to deal with choosing a builtin tagRendering or defining one yourself.\n   * Breaks the ideology that everything should be schema based\n   */\n  import EditLayerState from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import type {\n    MappingConfigJson,\n    QuestionableTagRenderingConfigJson,\n  } from \"../../Models/ThemeConfig/Json/QuestionableTagRenderingConfigJson\"\n  import TagRenderingConfig from \"../../Models/ThemeConfig/TagRenderingConfig\"\n  import TagRenderingEditable from \"../Popup/TagRendering/TagRenderingEditable.svelte\"\n  import { Store, UIEventSource } from \"../../Logic/UIEventSource\"\n  import * as questions from \"../../assets/generated/layers/questions.json\"\n  import MappingInput from \"./MappingInput.svelte\"\n  import { TrashIcon } from \"@rgossiaux/svelte-heroicons/outline\"\n  import questionableTagRenderingSchemaRaw from \"../../assets/schemas/questionabletagrenderingconfigmeta.json\"\n  import SchemaBasedField from \"./SchemaBasedField.svelte\"\n  import Region from \"./Region.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import { QuestionMarkCircleIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import { LocalStorageSource } from \"../../Logic/Web/LocalStorageSource\"\n  import { onMount } from \"svelte\"\n\n  export let state: EditLayerState\n  export let path: ReadonlyArray<string | number>\n  let expertMode = state.expertMode\n  const store = state.getStoreFor(path)\n  let value = store.data\n  let hasSeenIntro = UIEventSource.asBoolean(\n    LocalStorageSource.Get(\"studio-seen-tagrendering-tutorial\", \"false\")\n  )\n  onMount(() => {\n    if (!hasSeenIntro.data) {\n      state.showIntro.setData(\"tagrenderings\")\n      hasSeenIntro.setData(true)\n    }\n  })\n  /**\n   * Allows the theme builder to create 'writable' themes.\n   * Should only be enabled for 'tagrenderings' in the theme, if the source is OSM\n   */\n  let allowQuestions: Store<boolean> = state.configuration.mapD(\n    (config) => path.at(0) === \"tagRenderings\" && config.source?.[\"geoJson\"] === undefined\n  )\n\n  let mappingsBuiltin: MappingConfigJson[] = []\n  let perLabel: Record<string, MappingConfigJson> = {}\n  for (const tr of questions.tagRenderings) {\n    let description = tr[\"description\"] ?? tr[\"question\"] ?? \"No description available\"\n    description = description[\"en\"] ?? description\n    if (tr[\"labels\"]) {\n      const labels: string[] = tr[\"labels\"]\n      for (const label of labels) {\n        let labelMapping: MappingConfigJson = perLabel[label]\n\n        if (!labelMapping) {\n          labelMapping = {\n            if: \"value=\" + label,\n            then: {\n              en: \"Builtin collection <b>\" + label + \"</b>:\",\n            },\n          }\n          perLabel[label] = labelMapping\n          mappingsBuiltin.push(labelMapping)\n        }\n        labelMapping.then.en = labelMapping.then.en + \"<div>\" + description + \"</div>\"\n      }\n    }\n\n    mappingsBuiltin.push({\n      if: \"value=\" + tr[\"id\"],\n      then: {\n        en: \"Builtin <b>\" + tr[\"id\"] + \"</b> <div class='subtle'>\" + description + \"</div>\",\n      },\n    })\n  }\n\n  const configBuiltin = new TagRenderingConfig(<QuestionableTagRenderingConfigJson>{\n    question: \"Which builtin element should be shown?\",\n    mappings: mappingsBuiltin,\n  })\n\n  const tags = new UIEventSource({ value })\n\n  tags.addCallbackAndRunD((tgs) => {\n    store.setData(tgs[\"value\"])\n  })\n\n  let mappings: UIEventSource<MappingConfigJson[]> = state.getStoreFor([...path, \"mappings\"])\n\n  const topLevelItems: Record<string, ConfigMeta> = {}\n  for (const item of questionableTagRenderingSchemaRaw) {\n    if (item.path.length === 1) {\n      topLevelItems[item.path[0]] = <ConfigMeta>item\n    }\n  }\n\n  function initMappings() {\n    if (mappings.data === undefined) {\n      mappings.setData([])\n    }\n  }\n\n  const items = new Set([\n    \"question\",\n    \"questionHint\",\n    \"multiAnswer\",\n    \"freeform\",\n    \"render\",\n    \"condition\",\n    \"metacondition\",\n    \"mappings\",\n    \"icon\",\n  ])\n  const ignored = new Set([\"labels\", \"description\", \"classes\"])\n\n  const freeformSchemaAll = <ConfigMeta[]>(\n    questionableTagRenderingSchemaRaw.filter(\n      (schema) => schema.path.length == 2 && schema.path[0] === \"freeform\" && $allowQuestions\n    )\n  )\n  let freeformSchema = $expertMode\n    ? freeformSchemaAll\n    : freeformSchemaAll.filter((schema) => schema.hints?.group !== \"expert\")\n  const missing: string[] = questionableTagRenderingSchemaRaw\n    .filter(\n      (schema) =>\n        schema.path.length >= 1 && !items.has(schema.path[0]) && !ignored.has(schema.path[0])\n    )\n    .map((schema) => schema.path.join(\".\"))\n  console.log({ state })\n</script>\n\n{#if typeof $store === \"string\"}\n  <div class=\"low-interaction flex\">\n    <TagRenderingEditable config={configBuiltin} selectedElement={undefined} {state} {tags} />\n    <slot name=\"upper-right\" />\n  </div>\n{:else}\n  <div class=\"flex w-full flex-col gap-y-1 p-1 pr-12\">\n    <div class=\"flex justify-end\">\n      <slot name=\"upper-right\" />\n    </div>\n    {#if $allowQuestions}\n      <SchemaBasedField\n        startInEditModeIfUnset={true}\n        {state}\n        path={[...path, \"question\"]}\n        schema={topLevelItems[\"question\"]}\n      />\n      <SchemaBasedField\n        {state}\n        path={[...path, \"questionHint\"]}\n        schema={topLevelItems[\"questionHint\"]}\n      />\n    {/if}\n    {#each $mappings ?? [] as mapping, i (mapping)}\n      <div class=\"interactive flex w-full\">\n        <MappingInput {state} path={[...path, \"mappings\", i]}>\n          <button\n            slot=\"delete\"\n            class=\"no-image-background rounded-full\"\n            on:click={() => {\n              initMappings()\n              mappings.data.splice(i, 1)\n              mappings.ping()\n            }}\n          >\n            <TrashIcon class=\"h-4 w-4\" />\n          </button>\n        </MappingInput>\n      </div>\n    {/each}\n\n    <button\n      class=\"primary\"\n      on:click={() => {\n        initMappings()\n        mappings.data.push({ if: undefined, then: {} })\n        mappings.ping()\n      }}\n    >\n      Add a predefined option\n    </button>\n\n    {#if $allowQuestions}\n      <SchemaBasedField\n        {state}\n        path={[...path, \"multiAnswer\"]}\n        schema={topLevelItems[\"multiAnswer\"]}\n      />\n    {/if}\n\n    <h3>Text field and input element configuration</h3>\n    <div class=\"border-l border-dashed border-gray-800 pl-2\">\n      <SchemaBasedField {state} path={[...path, \"render\"]} schema={topLevelItems[\"render\"]} />\n      <Region {state} {path} configs={freeformSchema} />\n      <SchemaBasedField {state} path={[...path, \"icon\"]} schema={topLevelItems[\"icon\"]} />\n    </div>\n\n    <SchemaBasedField {state} path={[...path, \"condition\"]} schema={topLevelItems[\"condition\"]} />\n    {#if $expertMode}\n      <SchemaBasedField\n        {state}\n        path={[...path, \"metacondition\"]}\n        schema={topLevelItems[\"metacondition\"]}\n      />\n    {/if}\n    {#each missing as field}\n      <SchemaBasedField {state} path={[...path, field]} schema={topLevelItems[field]} />\n    {/each}\n\n    <NextButton clss=\"small mt-8\" on:click={() => state.showIntro.setData(\"tagrenderings\")}>\n      <QuestionMarkCircleIcon class=\"h-6 w-6\" />\n      Show the introduction again\n    </NextButton>\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n\n  export let messages: ConversionMessage[]\n</script>\n\n{#if messages.length === 0}\n  <div class=\"thanks\">No errors, warnings or messages</div>\n{/if}\n\n{#each messages as message}\n  <li>\n    {message.level}\n    <span class=\"literal-code\">{message.context.path.join(\".\")}</span>\n    {message.message}\n    <span class=\"literal-code\">\n      {message.context.operation.join(\".\")}\n    </span>\n  </li>\n{/each}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _arrayWithHoles as arrayWithHoles, _defineProperty as defineProperty, _iterableToArrayLimit as iterableToArrayLimit, _nonIterableRest as nonIterableRest, _objectSpread2 as objectSpread2, _objectWithoutProperties as objectWithoutProperties, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _slicedToArray as slicedToArray, _unsupportedIterableToArray as unsupportedIterableToArray };\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n}\n\nfunction curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len3 = arguments.length, nextArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        nextArgs[_key3] = arguments[_key3];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nfunction isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nfunction isEmpty(obj) {\n  return !Object.keys(obj).length;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\nfunction validateChanges(initial, changes) {\n  if (!isObject(changes)) errorHandler('changeType');\n  if (Object.keys(changes).some(function (field) {\n    return !hasOwnProperty(initial, field);\n  })) errorHandler('changeField');\n  return changes;\n}\n\nfunction validateSelector(selector) {\n  if (!isFunction(selector)) errorHandler('selectorType');\n}\n\nfunction validateHandler(handler) {\n  if (!(isFunction(handler) || isObject(handler))) errorHandler('handlerType');\n  if (isObject(handler) && Object.values(handler).some(function (_handler) {\n    return !isFunction(_handler);\n  })) errorHandler('handlersType');\n}\n\nfunction validateInitial(initial) {\n  if (!initial) errorHandler('initialIsRequired');\n  if (!isObject(initial)) errorHandler('initialType');\n  if (isEmpty(initial)) errorHandler('initialContent');\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  initialIsRequired: 'initial state is required',\n  initialType: 'initial state should be an object',\n  initialContent: 'initial state shouldn\\'t be an empty object',\n  handlerType: 'handler should be an object or a function',\n  handlersType: 'all handlers should be a functions',\n  selectorType: 'selector should be a function',\n  changeType: 'provided value of changes should be an object',\n  changeField: 'it seams you want to change a field in the state which is not specified in the \"initial\" state',\n  \"default\": 'an unknown error accured in `state-local` package'\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  changes: validateChanges,\n  selector: validateSelector,\n  handler: validateHandler,\n  initial: validateInitial\n};\n\nfunction create(initial) {\n  var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  validators.initial(initial);\n  validators.handler(handler);\n  var state = {\n    current: initial\n  };\n  var didUpdate = curry(didStateUpdate)(state, handler);\n  var update = curry(updateState)(state);\n  var validate = curry(validators.changes)(initial);\n  var getChanges = curry(extractChanges)(state);\n\n  function getState() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (state) {\n      return state;\n    };\n    validators.selector(selector);\n    return selector(state.current);\n  }\n\n  function setState(causedChanges) {\n    compose(didUpdate, update, validate, getChanges)(causedChanges);\n  }\n\n  return [getState, setState];\n}\n\nfunction extractChanges(state, causedChanges) {\n  return isFunction(causedChanges) ? causedChanges(state.current) : causedChanges;\n}\n\nfunction updateState(state, changes) {\n  state.current = _objectSpread2(_objectSpread2({}, state.current), changes);\n  return changes;\n}\n\nfunction didStateUpdate(state, handler, changes) {\n  isFunction(handler) ? handler(state.current) : Object.keys(changes).forEach(function (field) {\n    var _handler$field;\n\n    return (_handler$field = handler[field]) === null || _handler$field === void 0 ? void 0 : _handler$field.call(handler, state.current[field]);\n  });\n  return changes;\n}\n\nvar index = {\n  create: create\n};\n\nexport default index;\n","var config = {\n  paths: {\n    vs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs'\n  }\n};\n\nexport default config;\n","function curry(fn) {\n  return function curried() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args.length >= fn.length ? fn.apply(this, args) : function () {\n      for (var _len2 = arguments.length, nextArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        nextArgs[_key2] = arguments[_key2];\n      }\n\n      return curried.apply(_this, [].concat(args, nextArgs));\n    };\n  };\n}\n\nexport default curry;\n","function isObject(value) {\n  return {}.toString.call(value).includes('Object');\n}\n\nexport default isObject;\n","import curry from '../utils/curry.js';\nimport isObject from '../utils/isObject.js';\n\n/**\n * validates the configuration object and informs about deprecation\n * @param {Object} config - the configuration object \n * @return {Object} config - the validated configuration object\n */\n\nfunction validateConfig(config) {\n  if (!config) errorHandler('configIsRequired');\n  if (!isObject(config)) errorHandler('configType');\n\n  if (config.urls) {\n    informAboutDeprecation();\n    return {\n      paths: {\n        vs: config.urls.monacoBase\n      }\n    };\n  }\n\n  return config;\n}\n/**\n * logs deprecation message\n */\n\n\nfunction informAboutDeprecation() {\n  console.warn(errorMessages.deprecation);\n}\n\nfunction throwError(errorMessages, type) {\n  throw new Error(errorMessages[type] || errorMessages[\"default\"]);\n}\n\nvar errorMessages = {\n  configIsRequired: 'the configuration object is required',\n  configType: 'the configuration object should be an object',\n  \"default\": 'an unknown error accured in `@monaco-editor/loader` package',\n  deprecation: \"Deprecation warning!\\n    You are using deprecated way of configuration.\\n\\n    Instead of using\\n      monaco.config({ urls: { monacoBase: '...' } })\\n    use\\n      monaco.config({ paths: { vs: '...' } })\\n\\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\\n  \"\n};\nvar errorHandler = curry(throwError)(errorMessages);\nvar validators = {\n  config: validateConfig\n};\n\nexport default validators;\nexport { errorHandler, errorMessages };\n","var compose = function compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (x) {\n    return fns.reduceRight(function (y, f) {\n      return f(y);\n    }, x);\n  };\n};\n\nexport default compose;\n","import { objectSpread2 as _objectSpread2 } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nfunction merge(target, source) {\n  Object.keys(source).forEach(function (key) {\n    if (source[key] instanceof Object) {\n      if (target[key]) {\n        Object.assign(source[key], merge(target[key], source[key]));\n      }\n    }\n  });\n  return _objectSpread2(_objectSpread2({}, target), source);\n}\n\nexport default merge;\n","// The source (has been changed) is https://github.com/facebook/react/issues/5465#issuecomment-157888325\nvar CANCELATION_MESSAGE = {\n  type: 'cancelation',\n  msg: 'operation is manually canceled'\n};\n\nfunction makeCancelable(promise) {\n  var hasCanceled_ = false;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(function (val) {\n      return hasCanceled_ ? reject(CANCELATION_MESSAGE) : resolve(val);\n    });\n    promise[\"catch\"](reject);\n  });\n  return wrappedPromise.cancel = function () {\n    return hasCanceled_ = true;\n  }, wrappedPromise;\n}\n\nexport default makeCancelable;\nexport { CANCELATION_MESSAGE };\n","import { slicedToArray as _slicedToArray, objectWithoutProperties as _objectWithoutProperties } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\n * set the loader configuration\n * @param {Object} config - the configuration object\n */\n\n\nfunction config(globalConfig) {\n  var _validators$config = validators.config(globalConfig),\n      monaco = _validators$config.monaco,\n      config = _objectWithoutProperties(_validators$config, [\"monaco\"]);\n\n  setState(function (state) {\n    return {\n      config: merge(state.config, config),\n      monaco: monaco\n    };\n  });\n}\n/**\n * handles the initialization of the monaco-editor\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var monaco = _ref.monaco,\n        isInitialized = _ref.isInitialized,\n        resolve = _ref.resolve;\n    return {\n      monaco: monaco,\n      isInitialized: isInitialized,\n      resolve: resolve\n    };\n  });\n\n  if (!state.isInitialized) {\n    setState({\n      isInitialized: true\n    });\n\n    if (state.monaco) {\n      state.resolve(state.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      state.resolve(window.monaco);\n      return makeCancelable(wrapperPromise);\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\n * injects provided scripts into the document.body\n * @param {Object} script - an HTML script element\n * @return {Object} - the injected HTML script element\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\n * creates an HTML script element with/without provided src\n * @param {string} [src] - the source path of the script\n * @return {Object} - the created HTML script element\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\n * creates an HTML script element with the monaco loader src\n * @return {Object} - the created HTML script element\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\n * configures the monaco loader\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\n * store monaco instance in local state\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\n * internal helper function\n * extracts stored monaco instance\n * @return {Object|null} - the monaco instance\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\n\nexport default loader;\n","<script lang=\"ts\">\n  import { onDestroy, onMount } from \"svelte\"\n  import EditLayerState, { EditThemeState } from \"./EditLayerState\"\n  import loader from \"@monaco-editor/loader\"\n  import type * as Monaco from \"monaco-editor/esm/vs/editor/editor.api\"\n  import layerSchemaJSON from \"../../../Docs/Schemas/LayerConfigJson.schema.json\"\n  import layoutSchemaJSON from \"../../../Docs/Schemas/LayoutConfigJson.schema.json\"\n\n  export let state: EditLayerState | EditThemeState\n\n  let container: HTMLDivElement\n  let monaco: typeof Monaco\n  let editor: Monaco.editor.IStandaloneCodeEditor\n  let model: Monaco.editor.ITextModel\n\n  function save() {\n    try {\n      const newConfig = JSON.parse(editor.getValue())\n      state.configuration.setData(newConfig)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  // Catch keyboard shortcuts\n  onMount(() => {\n    const handler = (e: KeyboardEvent) => {\n      if (e.key === \"s\" && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault()\n        save()\n      }\n    }\n    window.addEventListener(\"keydown\", handler)\n    return () => window.removeEventListener(\"keydown\", handler)\n  })\n\n  onMount(async () => {\n    const monacoEditor = await import(\"monaco-editor\")\n    loader.config({\n      monaco: monacoEditor.default,\n    })\n\n    monaco = await loader.init()\n\n    // Determine schema based on the state\n    let schemaUri: string\n    if (state instanceof EditLayerState) {\n      schemaUri = \"https://mapcomplete.org/schemas/layerconfig.json\"\n    } else {\n      schemaUri = \"https://mapcomplete.org/schemas/layoutconfig.json\"\n    }\n\n    monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      schemas: [\n        {\n          uri: schemaUri,\n          fileMatch: [\"file.json\"],\n          schema:\n            schemaUri === \"https://mapcomplete.org/schemas/layerconfig.json\"\n              ? layerSchemaJSON\n              : layoutSchemaJSON,\n        },\n      ],\n    })\n\n    let modelUri = monaco.Uri.parse(\"inmemory://inmemory/file.json\")\n\n    // Create a new model\n    model = monaco.editor.createModel(\n      JSON.stringify(state.configuration.data, null, \"  \"),\n      \"json\",\n      modelUri\n    )\n\n    editor = monaco.editor.create(container, {\n      model,\n      automaticLayout: true,\n    })\n\n    // When the editor is changed, update the configuration, but only if the user hasn't typed for 500ms and the JSON is valid\n    let timeout: number\n    editor.onDidChangeModelContent(() => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        save()\n      }, 500)\n    })\n  })\n\n  onDestroy(() => {\n    if (editor) {\n      editor.dispose()\n    }\n    if (model) {\n      model.dispose()\n    }\n  })\n</script>\n\n<div bind:this={container} class=\"h-full w-full\" />\n","<script lang=\"ts\">\n  import type { HighlightedTagRendering } from \"./EditLayerState\"\n  import EditLayerState from \"./EditLayerState\"\n  import layerSchemaRaw from \"../../assets/schemas/layerconfigmeta.json\"\n  import Region from \"./Region.svelte\"\n  import TabbedGroup from \"../Base/TabbedGroup.svelte\"\n  import { Store, UIEventSource } from \"../../Logic/UIEventSource\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { Utils } from \"../../Utils\"\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n  import ErrorIndicatorForRegion from \"./ErrorIndicatorForRegion.svelte\"\n  import { ChevronRightIcon, TrashIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import SchemaBasedInput from \"./SchemaBasedInput.svelte\"\n  import FloatOver from \"../Base/FloatOver.svelte\"\n  import TagRenderingInput from \"./TagRenderingInput.svelte\"\n  import AllTagsPanel from \"../Popup/AllTagsPanel.svelte\"\n  import QuestionPreview from \"./QuestionPreview.svelte\"\n  import ShowConversionMessages from \"./ShowConversionMessages.svelte\"\n  import RawEditor from \"./RawEditor.svelte\"\n\n  const layerSchema: ConfigMeta[] = <any>layerSchemaRaw\n\n  export let state: EditLayerState\n\n  export let backToStudio: () => void\n  let messages = state.messages\n  let hasErrors = messages.mapD(\n    (m: ConversionMessage[]) => m.filter((m) => m.level === \"error\").length\n  )\n  const configuration = state.configuration\n\n  const allNames = Utils.Dedup(layerSchema.map((meta) => meta.hints.group))\n\n  const perRegion: Record<string, ConfigMeta[]> = {}\n  for (const region of allNames) {\n    perRegion[region] = layerSchema.filter((meta) => meta.hints.group === region)\n  }\n\n  let title: Store<string> = state.getStoreFor([\"id\"])\n  const wl = window.location\n  const baseUrl = wl.protocol + \"//\" + wl.host + \"/theme.html?userlayout=\"\n\n  function firstPathsFor(...regionNames: string[]): Set<string> {\n    const pathNames = new Set<string>()\n    for (const regionName of regionNames) {\n      const region: ConfigMeta[] = perRegion[regionName]\n      for (const configMeta of region) {\n        pathNames.add(configMeta.path[0])\n      }\n    }\n    return pathNames\n  }\n\n  function configForRequiredField(id: string): ConfigMeta {\n    let config = layerSchema.find((config) => config.path.length === 1 && config.path[0] === id)\n    config = Utils.Clone(config)\n    config.required = true\n    config.hints.ifunset = undefined\n    return config\n  }\n\n  let requiredFields = [\"id\", \"name\", \"description\", \"source\"]\n  let currentlyMissing = configuration.map((config) => {\n    if (!config) {\n      return []\n    }\n    const missing = []\n    for (const requiredField of requiredFields) {\n      if (!config[requiredField]) {\n        missing.push(requiredField)\n      }\n    }\n    return missing\n  })\n\n  let highlightedItem: UIEventSource<HighlightedTagRendering> = state.highlightedItem\n\n  function deleteLayer() {\n    state.delete()\n    backToStudio()\n  }\n</script>\n\n<div class=\"flex h-screen flex-col\">\n  <div class=\"my-2 flex w-full justify-between\">\n    <slot />\n    {#if $title === undefined}\n      <h3>Creating a new layer</h3>\n    {:else}\n      <h3>Editing layer {$title}</h3>\n    {/if}\n    {#if $currentlyMissing.length > 0}\n      <div class=\"w-16\" />\n      <!-- Empty div, simply hide this -->\n    {:else if $hasErrors > 0}\n      <div class=\"alert\">{$hasErrors} errors detected</div>\n    {:else}\n      <div class=\"flex\">\n        <a\n          class=\"button small\"\n          href={baseUrl + state.server.layerUrl(title.data) + \"&test=true\"}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          <div class=\"flex flex-col\">\n            <b>Test in safe mode</b>\n            <div>No changes are recoded to OSM</div>\n          </div>\n          <ChevronRightIcon class=\"h-6 w-6 shrink-0\" />\n        </a>\n        <a\n          class=\"primary button\"\n          href={baseUrl + state.server.layerUrl(title.data)}\n          target=\"_blank\"\n          rel=\"noopener\"\n        >\n          Try it out\n          <ChevronRightIcon class=\"h-6 w-6 shrink-0\" />\n        </a>\n      </div>\n    {/if}\n  </div>\n\n  {#if $currentlyMissing.length > 0}\n    {#each requiredFields as required}\n      <SchemaBasedInput {state} schema={configForRequiredField(required)} path={[required]} />\n    {/each}\n  {:else}\n    <div class=\"m4 h-full overflow-y-auto\">\n      <TabbedGroup>\n        <div slot=\"title0\" class=\"flex\">\n          General properties\n          <ErrorIndicatorForRegion firstPaths={firstPathsFor(\"Basic\")} {state} />\n        </div>\n        <div class=\"flex flex-col\" slot=\"content0\">\n          <Region {state} configs={perRegion[\"Basic\"]} />\n          <div class=\"mt-12\">\n            <button on:click={() => deleteLayer()} class=\"small\">\n              <TrashIcon class=\"h-6 w-6\" />\n              Delete this layer\n            </button>\n          </div>\n        </div>\n\n        <div slot=\"title1\" class=\"flex\">\n          Information panel (questions and answers)\n          <ErrorIndicatorForRegion\n            firstPaths={firstPathsFor(\"title\", \"tagrenderings\", \"editing\")}\n            {state}\n          />\n        </div>\n        <div slot=\"content1\">\n          <QuestionPreview path={[\"title\"]} {state} schema={perRegion[\"title\"][0]} />\n          <Region configs={perRegion[\"tagrenderings\"]} {state} title=\"Popup contents\" />\n          <Region configs={perRegion[\"editing\"]} {state} title=\"Other editing elements\" />\n        </div>\n\n        <div slot=\"title2\">\n          Creating a new point\n          <ErrorIndicatorForRegion firstPaths={firstPathsFor(\"presets\")} {state} />\n        </div>\n\n        <div slot=\"content2\">\n          <Region {state} configs={perRegion[\"presets\"]} />\n        </div>\n\n        <div slot=\"title3\" class=\"flex\">\n          Rendering on the map\n          <ErrorIndicatorForRegion\n            firstPaths={firstPathsFor(\"linerendering\", \"pointrendering\")}\n            {state}\n          />\n        </div>\n        <div slot=\"content3\">\n          <Region configs={perRegion[\"linerendering\"]} {state} />\n          <Region configs={perRegion[\"pointrendering\"]} {state} />\n        </div>\n\n        <div slot=\"title4\" class=\"flex\">\n          Advanced functionality\n          <ErrorIndicatorForRegion firstPaths={firstPathsFor(\"advanced\")} {state} />\n        </div>\n        <div slot=\"content4\">\n          <Region configs={perRegion[\"advanced\"]} {state} />\n          <Region configs={perRegion[\"expert\"]} {state} />\n        </div>\n        <div slot=\"title5\">Configuration file</div>\n        <div slot=\"content5\" class=\"flex h-full flex-col\">\n          <div>\n            Below, you'll find the raw configuration file in `.json`-format. This is mostly for\n            debugging purposes, but you can also edit the file directly if you want.\n          </div>\n          <ShowConversionMessages messages={$messages} />\n          <div class=\"flex h-full w-full flex-row justify-between overflow-y-auto\">\n            <div class=\"literal-code h-full w-5/6 overflow-y-auto\">\n              <RawEditor {state} />\n            </div>\n            <div class=\"h-full w-1/6\">\n              <div>\n                The testobject (which is used to render the questions in the 'information panel'\n                item has the following tags:\n              </div>\n\n              <AllTagsPanel tags={state.testTags} />\n            </div>\n          </div>\n        </div>\n      </TabbedGroup>\n    </div>\n    {#if $highlightedItem !== undefined}\n      <FloatOver on:close={() => highlightedItem.setData(undefined)}>\n        <div>\n          <TagRenderingInput path={$highlightedItem.path} {state} />\n          <!-- \n            schema={$highlightedItem.schema} -->\n        </div>\n      </FloatOver>\n    {/if}\n  {/if}\n</div>\n","import { Utils } from \"../../Utils\"\nimport Constants from \"../../Models/Constants\"\nimport { LayerConfigJson } from \"../../Models/ThemeConfig/Json/LayerConfigJson\"\nimport { Store } from \"../../Logic/UIEventSource\"\nimport { LayoutConfigJson } from \"../../Models/ThemeConfig/Json/LayoutConfigJson\"\n\nexport default class StudioServer {\n    private readonly url: string\n    private readonly _userId: Store<number>\n\n    constructor(url: string, userId: Store<number>) {\n        this.url = url\n        this._userId = userId\n    }\n\n    public async fetchOverview(): Promise<\n        {\n            id: string\n            owner: number\n            category: \"layers\" | \"themes\"\n        }[]\n    > {\n        const { allFiles } = <{ allFiles: string[] }>(\n            await Utils.downloadJson(this.url + \"/overview\")\n        )\n        const layerOverview: {\n            id: string\n            owner: number | undefined\n            category: \"layers\" | \"themes\"\n        }[] = []\n        for (let file of allFiles) {\n            let parts = file.split(\"/\")\n            let owner = Number(parts[0])\n            if (!isNaN(owner)) {\n                parts.splice(0, 1)\n                file = file.substring(file.indexOf(\"/\") + 1)\n            } else {\n                owner = undefined\n            }\n            const category = <\"layers\" | \"themes\">parts[0]\n            const id = file.substring(file.lastIndexOf(\"/\") + 1, file.length - \".json\".length)\n            if (Constants.priviliged_layers.indexOf(<any>id) > 0) {\n                continue\n            }\n            layerOverview.push({ id, owner, category })\n        }\n        return layerOverview\n    }\n\n    async fetch(layerId: string, category: \"layers\", uid?: number): Promise<LayerConfigJson>\n    async fetch(layerId: string, category: \"themes\", uid?: number): Promise<LayoutConfigJson>\n    async fetch(\n        layerId: string,\n        category: \"layers\" | \"themes\",\n        uid?: number\n    ): Promise<LayerConfigJson | LayoutConfigJson> {\n        try {\n            return await Utils.downloadJson(this.urlFor(layerId, category, uid))\n        } catch (e) {\n            return undefined\n        }\n    }\n    async delete(id: string, category: \"layers\" | \"themes\") {\n        if (id === undefined || id === \"\") {\n            return\n        }\n        await fetch(this.urlFor(id, category), {\n            method: \"DELETE\",\n        })\n    }\n    async update(id: string, config: string, category: \"layers\" | \"themes\") {\n        if (id === undefined || id === \"\") {\n            return\n        }\n        await fetch(this.urlFor(id, category), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json;charset=utf-8\",\n            },\n            body: config,\n        })\n    }\n\n    public layerUrl(id: string) {\n        return this.urlFor(id, \"layers\")\n    }\n\n    public urlFor(id: string, category: \"layers\" | \"themes\", uid?: number) {\n        uid ??= this._userId.data\n        const uidStr = uid !== undefined ? \"/\" + uid : \"\"\n        return `${this.url}${uidStr}/${category}/${id}/${id}.json`\n    }\n}\n","<script lang=\"ts\">\n  import { OsmConnection } from \"../../Logic/Osm/OsmConnection\"\n  import EditItemButton from \"./EditItemButton.svelte\"\n\n  export let layerIds: { id: string; owner: number }[]\n  export let category: \"layers\" | \"themes\" = \"layers\"\n  export let osmConnection: OsmConnection\n</script>\n\n{#if layerIds.length > 0}\n  <slot name=\"title\" />\n  <div class=\"flex flex-wrap\">\n    {#each Array.from(layerIds) as layer}\n      <EditItemButton info={layer} {category} {osmConnection} on:layerSelected />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import BackButton from \"../Base/BackButton.svelte\"\n  import NextButton from \"../Base/NextButton.svelte\"\n  import { createEventDispatcher } from \"svelte\"\n\n  const dispatch = createEventDispatcher<{ back; next }>()\n  export let islast = false\n  export let isFirst = false\n  export let pageNumber: number = undefined\n  export let totalPages: number = undefined\n</script>\n\n<div class=\"link-underline flex h-full w-full flex-col justify-between\">\n  <div class=\"overflow-y-auto\">\n    <slot />\n  </div>\n\n  <div class=\"flex flex-col\">\n    {#if pageNumber !== undefined && totalPages !== undefined}\n      <div class=\"flex justify-end\">\n        <div class=\"subtle\">{pageNumber + 1}/{totalPages}</div>\n      </div>\n    {/if}\n    <div class=\"flex w-full\">\n      {#if !isFirst}\n        <BackButton clss=\"w-full\" on:click={() => dispatch(\"back\")}>Back</BackButton>\n      {:else}\n        <div class=\"w-full\" />\n      {/if}\n      <NextButton clss=\"primary w-full\" on:click={() => dispatch(\"next\")}>\n        {#if islast}\n          Finish\n        {:else}\n          Next\n        {/if}\n      </NextButton>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import nmd from \"nano-markdown\"\n  import { createEventDispatcher } from \"svelte\"\n  import WalkthroughStep from \"./WalkthroughStep.svelte\"\n  import FromHtml from \"../Base/FromHtml.svelte\"\n\n  /**\n   * Markdown\n   */\n  export let pages: string[]\n\n  let currentPage: number = 0\n\n  const dispatch = createEventDispatcher<{ done }>()\n\n  function step(incr: number) {\n    if (incr > 0 && currentPage + 1 === pages.length) {\n      dispatch(\"done\")\n      currentPage = 0\n      return\n    }\n    currentPage = Math.min(Math.max(0, currentPage + incr), pages.length)\n  }\n</script>\n\n<WalkthroughStep\n  on:back={() => step(-1)}\n  on:next={() => step(1)}\n  isFirst={currentPage === 0}\n  islast={currentPage + 1 === pages.length}\n  totalPages={pages.length}\n  pageNumber={currentPage}\n>\n  <FromHtml src={nmd(pages[currentPage])} />\n</WalkthroughStep>\n","<script lang=\"ts\">\n  import { EditThemeState } from \"./EditLayerState\"\n  import type { ConfigMeta } from \"./configMeta\"\n  import { ChevronRightIcon } from \"@rgossiaux/svelte-heroicons/solid\"\n  import type { ConversionMessage } from \"../../Models/ThemeConfig/Conversion/Conversion\"\n  import TabbedGroup from \"../Base/TabbedGroup.svelte\"\n  import ShowConversionMessages from \"./ShowConversionMessages.svelte\"\n  import Region from \"./Region.svelte\"\n  import RawEditor from \"./RawEditor.svelte\"\n\n  export let state: EditThemeState\n  let schema: ConfigMeta[] = state.schema.filter((schema) => schema.path.length > 0)\n  let config = state.configuration\n  let messages = state.messages\n  let hasErrors = messages.map(\n    (m: ConversionMessage[]) => m.filter((m) => m.level === \"error\").length\n  )\n  let title = state.getStoreFor([\"id\"])\n  const wl = window.location\n  const baseUrl = wl.protocol + \"//\" + wl.host + \"/theme.html?userlayout=\"\n\n  const perRegion: Record<string, ConfigMeta[]> = {}\n  for (const schemaElement of schema) {\n    if (schemaElement.path.length > 1 && schemaElement.path[0] === \"layers\") {\n      continue\n    }\n    const key = schemaElement.hints.group ?? \"no-group\"\n    const list = perRegion[key] ?? (perRegion[key] = [])\n    list.push(schemaElement)\n  }\n  console.log({ perRegion, schema })\n</script>\n\n<div class=\"flex h-screen flex-col\">\n  <div class=\"my-2 flex w-full justify-between\">\n    <slot />\n    <h3>Editing theme {$title}</h3>\n    {#if $hasErrors > 0}\n      <div class=\"alert\">{$hasErrors} errors detected</div>\n    {:else}\n      <a\n        class=\"primary button\"\n        href={baseUrl + state.server.urlFor($title, \"themes\")}\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Try it out\n        <ChevronRightIcon class=\"h-6 w-6 shrink-0\" />\n      </a>\n    {/if}\n  </div>\n\n  <div class=\"m4 h-full overflow-y-auto\">\n    <!-- {Object.keys(perRegion).join(\";\")} -->\n    <TabbedGroup>\n      <div slot=\"title0\">Basic properties</div>\n      <div slot=\"content0\">\n        <Region configs={perRegion[\"basic\"]} path={[]} {state} title=\"Basic properties\" />\n        <Region configs={perRegion[\"start_location\"]} path={[]} {state} title=\"Start location\" />\n      </div>\n\n      <div slot=\"title1\">Layers</div>\n      <div slot=\"content1\">\n        <Region configs={perRegion[\"layers\"]} path={[]} {state} />\n      </div>\n      <div slot=\"title2\">Feature switches</div>\n      <div slot=\"content2\">\n        <Region configs={perRegion[\"feature_switches\"]} path={[]} {state} />\n      </div>\n\n      <div slot=\"title3\">Advanced options</div>\n      <div slot=\"content3\">\n        <Region configs={perRegion[\"advanced\"]} path={[]} {state} />\n      </div>\n\n      <div slot=\"title4\">Configuration file</div>\n      <div slot=\"content4\" class=\"flex h-full flex-col\">\n        <div>\n          Below, you'll find the raw configuration file in `.json`-format. This is mostly for\n          debugging purposes, but you can also edit the file directly if you want.\n        </div>\n        <ShowConversionMessages messages={$messages} />\n        <div class=\"literal-code h-full w-full\">\n          <RawEditor {state} />\n        </div>\n      </div>\n    </TabbedGroup>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import NextButton from \"./Base/NextButton.svelte\"\n  import { Store, UIEventSource } from \"../Logic/UIEventSource\"\n  import EditLayerState, { EditThemeState } from \"./Studio/EditLayerState\"\n  import EditLayer from \"./Studio/EditLayer.svelte\"\n  import Loading from \"../assets/svg/Loading.svelte\"\n  import StudioServer from \"./Studio/StudioServer\"\n  import LoginToggle from \"./Base/LoginToggle.svelte\"\n  import { OsmConnection } from \"../Logic/Osm/OsmConnection\"\n  import { QueryParameters } from \"../Logic/Web/QueryParameters\"\n\n  import layerSchemaRaw from \"../../src/assets/schemas/layerconfigmeta.json\"\n  import layoutSchemaRaw from \"../../src/assets/schemas/layoutconfigmeta.json\"\n\n  import If from \"./Base/If.svelte\"\n  import BackButton from \"./Base/BackButton.svelte\"\n  import ChooseLayerToEdit from \"./Studio/ChooseLayerToEdit.svelte\"\n  import FloatOver from \"./Base/FloatOver.svelte\"\n  import Walkthrough from \"./Walkthrough/Walkthrough.svelte\"\n  import * as intro from \"../assets/studio_introduction.json\"\n  import * as intro_tagrenderings from \"../assets/studio_tagrenderings_intro.json\"\n\n  import { QuestionMarkCircleIcon } from \"@babeard/svelte-heroicons/mini\"\n  import type { ConfigMeta } from \"./Studio/configMeta\"\n  import EditTheme from \"./Studio/EditTheme.svelte\"\n  import * as meta from \"../../package.json\"\n  import Checkbox from \"./Base/Checkbox.svelte\"\n  import { Utils } from \"../Utils\"\n  import Translations from \"./i18n/Translations\"\n  import Tr from \"./Base/Tr.svelte\"\n  import Add from \"../assets/svg/Add.svelte\"\n\n  export let studioUrl =\n    window.location.hostname === \"127.0.0.2\"\n      ? \"http://127.0.0.1:1235\"\n      : \"https://studio.mapcomplete.org\"\n\n  const oauth_token = QueryParameters.GetQueryParameter(\n    \"oauth_token\",\n    undefined,\n    \"Used to complete the login\"\n  )\n  let osmConnection = new OsmConnection({\n    oauth_token,\n  })\n  const expertMode = UIEventSource.asBoolean(\n    osmConnection.GetPreference(\"studio-expert-mode\", \"false\", {\n      documentation: \"Indicates if more options are shown in mapcomplete studio\",\n    })\n  )\n  expertMode.addCallbackAndRunD((expert) => console.log(\"Expert mode is\", expert))\n  const createdBy = osmConnection.userDetails.data.name\n  const uid = osmConnection.userDetails.map((ud) => ud?.uid)\n  const studio = new StudioServer(studioUrl, uid)\n\n  let layersWithErr = UIEventSource.FromPromiseWithErr(studio.fetchOverview())\n  let layers: Store<{ owner: number; id: string }[]> = layersWithErr.mapD((l) =>\n    l[\"success\"]?.filter((l) => l.category === \"layers\")\n  )\n  let selfLayers = layers.mapD((ls) => ls.filter((l) => l.owner === uid.data), [uid])\n  let otherLayers = layers.mapD(\n    (ls) => ls.filter((l) => l.owner !== undefined && l.owner !== uid.data),\n    [uid]\n  )\n  let officialLayers = layers.mapD((ls) => ls.filter((l) => l.owner === undefined), [uid])\n\n  let themes: Store<{ owner: number; id: string }[]> = layersWithErr.mapD((l) =>\n    l[\"success\"]?.filter((l) => l.category === \"themes\")\n  )\n  let selfThemes = themes.mapD((ls) => ls.filter((l) => l.owner === uid.data), [uid])\n  let otherThemes = themes.mapD(\n    (ls) => ls.filter((l) => l.owner !== undefined && l.owner !== uid.data),\n    [uid]\n  )\n  let officialThemes = themes.mapD((ls) => ls.filter((l) => l.owner === undefined), [uid])\n\n  let state:\n    | undefined\n    | \"edit_layer\"\n    | \"edit_theme\"\n    | \"editing_layer\"\n    | \"editing_theme\"\n    | \"loading\" = undefined\n\n  const layerSchema: ConfigMeta[] = <any>layerSchemaRaw\n  let editLayerState = new EditLayerState(layerSchema, studio, osmConnection, { expertMode })\n  let showIntro = editLayerState.showIntro\n\n  const layoutSchema: ConfigMeta[] = <any>layoutSchemaRaw\n  let editThemeState = new EditThemeState(layoutSchema, studio, { expertMode })\n\n  const version = meta.version\n\n  async function editLayer(event: Event) {\n    const layerId: { owner: number; id: string } = event[\"detail\"]\n    state = \"loading\"\n    editLayerState.startSavingUpdates(false)\n    editLayerState.configuration.setData(await studio.fetch(layerId.id, \"layers\", layerId.owner))\n    editLayerState.startSavingUpdates()\n    state = \"editing_layer\"\n  }\n\n  async function editTheme(event: Event) {\n    const id: { id: string; owner: number } = event[\"detail\"]\n    state = \"loading\"\n    editThemeState.startSavingUpdates(false)\n    const layout = await studio.fetch(id.id, \"themes\", id.owner)\n    editThemeState.configuration.setData(layout)\n    editThemeState.startSavingUpdates()\n    state = \"editing_theme\"\n  }\n\n  async function createNewLayer() {\n    state = \"loading\"\n    const initialLayerConfig = {\n      credits: createdBy,\n      minzoom: 15,\n      pointRendering: [\n        {\n          location: [\"point\", \"centroid\"],\n          marker: [\n            {\n              icon: \"circle\",\n              color: \"white\",\n            },\n          ],\n        },\n      ],\n      tagRenderings: [\"images\"],\n      lineRendering: [\n        {\n          width: 1,\n          color: \"blue\",\n        },\n      ],\n    }\n    editLayerState.configuration.setData(initialLayerConfig)\n    editLayerState.startSavingUpdates()\n    state = \"editing_layer\"\n  }\n</script>\n\n<If condition={layersWithErr.map((d) => d?.[\"error\"] !== undefined)}>\n  <div>\n    <div class=\"alert\">\n      Something went wrong while contacting the MapComplete Studio Server: {$layersWithErr[\"error\"]}\n    </div>\n    The server might be offline. Please:\n    <ul>\n      <li>Try again in a few minutes</li>\n      <li>\n        Contact <a href=\"https://app.element.io/#/room/#MapComplete:matrix.org\">\n          the MapComplete community via the chat.\n        </a>\n        Someone might be able to help you\n      </li>\n      <li>\n        File <a href=\"https://github.com/pietervdvn/MapComplete/issues\">an issue</a>\n      </li>\n      <li>\n        Contact the devs via <a href=\"mailto:info@posteo.net\">email</a>\n      </li>\n    </ul>\n  </div>\n  <LoginToggle ignoreLoading={true} slot=\"else\" state={{ osmConnection }}>\n    <div slot=\"not-logged-in\">\n      <NextButton clss=\"primary\" on:click={() => osmConnection.AttemptLogin()}>\n        Please log in to use MapComplete Studio\n      </NextButton>\n    </div>\n    {#if state === undefined}\n      <div class=\"flex h-full flex-col justify-between p-4\">\n        <div class=\"flex w-full flex-col\">\n          <h1>MapComplete Studio</h1>\n\n          <NextButton on:click={() => (state = \"edit_layer\")}>\n            <div class=\"flex flex-col items-start\">\n              <div>Edit an existing layer</div>\n              <div class=\"font-normal\">\n                Edit layers you created, others created or from the official MapComplete\n              </div>\n            </div>\n          </NextButton>\n          <NextButton on:click={() => createNewLayer()}>Create a new layer</NextButton>\n          <NextButton on:click={() => (state = \"edit_theme\")}>Edit a theme</NextButton>\n          <NextButton\n            on:click={() => {\n              editThemeState.configuration.setData({})\n              editThemeState.startSavingUpdates()\n              state = \"editing_theme\"\n            }}\n          >\n            Create a new theme\n          </NextButton>\n          <button\n            class=\"small\"\n            on:click={() => {\n              showIntro.setData(\"intro\")\n            }}\n          >\n            <QuestionMarkCircleIcon class=\"h-6 w-6\" />\n            Show the introduction again\n          </button>\n          <a class=\"button flex\" href={Utils.HomepageLink()}>\n            <Add class=\"h-6 w-6\" />\n            <Tr t={Translations.t.general.backToIndex} />\n          </a>\n        </div>\n        <div>\n          <Checkbox selected={expertMode}>Enable more options (expert mode)</Checkbox>\n          <span class=\"subtle\">MapComplete version {version}</span>\n        </div>\n      </div>\n    {:else if state === \"edit_layer\"}\n      <div class=\"m-4 flex flex-col\">\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => {\n            state = undefined\n          }}\n        >\n          MapComplete Studio\n        </BackButton>\n        <h2>Choose a layer to edit</h2>\n        <ChooseLayerToEdit {osmConnection} layerIds={$selfLayers} on:layerSelected={editLayer}>\n          <h3 slot=\"title\">Your layers</h3>\n        </ChooseLayerToEdit>\n        <h3>Layers by other contributors</h3>\n        <div>\n          Selecting a layer will create a copy in your account that you edit. You will not change\n          the version of the other contributor\n        </div>\n        <ChooseLayerToEdit {osmConnection} layerIds={$otherLayers} on:layerSelected={editLayer} />\n\n        <h3>Official layers by MapComplete</h3>\n        <div>\n          Selecting a layer will create a copy in your account. You will not change the version that\n          is in MapComplete\n        </div>\n        <ChooseLayerToEdit\n          {osmConnection}\n          layerIds={$officialLayers}\n          on:layerSelected={editLayer}\n        />\n      </div>\n    {:else if state === \"edit_theme\"}\n      <div class=\"m-4 flex flex-col\">\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => {\n            state = undefined\n          }}\n        >\n          MapComplete Studio\n        </BackButton>\n        <h2>Choose a theme to edit</h2>\n        <ChooseLayerToEdit {osmConnection} layerIds={$selfThemes} on:layerSelected={editTheme}>\n          <h3 slot=\"title\">Your themes</h3>\n        </ChooseLayerToEdit>\n        <h3>Themes by other contributors</h3>\n        <ChooseLayerToEdit {osmConnection} layerIds={$otherThemes} on:layerSelected={editTheme} />\n        <h3>Official themes by MapComplete</h3>\n        <ChooseLayerToEdit\n          {osmConnection}\n          layerIds={$officialThemes}\n          on:layerSelected={editTheme}\n        />\n      </div>\n    {:else if state === \"loading\"}\n      <div class=\"h-8 w-8\">\n        <Loading />\n      </div>\n    {:else if state === \"editing_layer\"}\n      <EditLayer\n        state={editLayerState}\n        backToStudio={() => {\n          state = undefined\n        }}\n      >\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => {\n            state = undefined\n          }}\n        >\n          MapComplete Studio\n        </BackButton>\n      </EditLayer>\n    {:else if state === \"editing_theme\"}\n      <EditTheme state={editThemeState}>\n        <BackButton\n          clss=\"small p-1\"\n          imageClass=\"w-8 h-8\"\n          on:click={() => {\n            state = undefined\n          }}\n        >\n          MapComplete Studio\n        </BackButton>\n      </EditTheme>\n    {/if}\n\n    {#if { intro, tagrenderings: intro_tagrenderings }[$showIntro]?.sections}\n      <FloatOver\n        on:close={() => {\n          showIntro.setData(\"no\")\n        }}\n      >\n        <div class=\"flex h-full p-4 pr-12\">\n          <Walkthrough\n            pages={{ intro, tagrenderings: intro_tagrenderings }[$showIntro]?.sections}\n            on:done={() => {\n              showIntro.setData(\"no\")\n            }}\n          />\n        </div>\n      </FloatOver>\n    {/if}\n  </LoginToggle>\n</If>\n","import SvelteUIElement from \"./Base/SvelteUIElement\"\nimport StudioGUI from \"./StudioGUI.svelte\"\n\nexport default class StudioGui {\n    public setup() {\n        new SvelteUIElement(StudioGUI, {}).SetClass(\"h-full\").AttachTo(\"main\")\n    }\n}\n\nnew StudioGui().setup()\n"],"file":"assets/studio-87595c37.js"}