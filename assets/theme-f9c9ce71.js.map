{"version":3,"file":"theme-f9c9ce71.js","sources":["../../node_modules/lz-string/libs/lz-string.js","../../src/Models/ThemeConfig/Conversion/LegacyJsonConvert.ts","../../src/Models/ThemeConfig/Conversion/AddContextToTranslations.ts","../../src/Models/ThemeConfig/Conversion/ValidationUtils.ts","../../src/Models/ThemeConfig/Conversion/PrepareLayer.ts","../../src/Models/ThemeConfig/Conversion/CreateNoteImportLayer.ts","../../src/Models/ThemeConfig/DependencyCalculator.ts","../../src/Models/ThemeConfig/Conversion/PrepareTheme.ts","../../src/Models/ThemeConfig/Conversion/Validation.ts","../../src/Logic/DetermineLayout.ts","../../src/index.ts"],"sourcesContent":["// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","import { LayoutConfigJson } from \"../Json/LayoutConfigJson\"\nimport { Utils } from \"../../../Utils\"\nimport LineRenderingConfigJson from \"../Json/LineRenderingConfigJson\"\nimport { LayerConfigJson } from \"../Json/LayerConfigJson\"\nimport { DesugaringStep, Each, Fuse, On } from \"./Conversion\"\nimport PointRenderingConfigJson from \"../Json/PointRenderingConfigJson\"\n\nexport class UpdateLegacyLayer extends DesugaringStep<\n    LayerConfigJson | string | { builtin; override }\n> {\n    constructor() {\n        super(\n            \"Updates various attributes from the old data format to the new to provide backwards compatibility with the formats\",\n            [\"overpassTags\", \"source.osmtags\", \"tagRenderings[*].id\", \"mapRendering\"],\n            \"UpdateLegacyLayer\"\n        )\n    }\n\n    convert(\n        json: LayerConfigJson,\n        context: string\n    ): { result: LayerConfigJson; errors: string[]; warnings: string[] } {\n        const warnings = []\n        if (typeof json === \"string\" || json[\"builtin\"] !== undefined) {\n            // Reuse of an already existing layer; return as-is\n            return { result: json, errors: [], warnings: [] }\n        }\n        let config = { ...json }\n\n        if (config[\"overpassTags\"]) {\n            config.source = config.source ?? {\n                osmTags: config[\"overpassTags\"],\n            }\n            config.source[\"osmTags\"] = config[\"overpassTags\"]\n            delete config[\"overpassTags\"]\n        }\n\n        for (const preset of config.presets ?? []) {\n            const preciseInput = preset[\"preciseInput\"]\n            if (typeof preciseInput === \"boolean\") {\n                delete preset[\"preciseInput\"]\n            } else if (preciseInput !== undefined) {\n                delete preciseInput[\"preferredBackground\"]\n                console.log(\"Precise input:\", preciseInput)\n                preset.snapToLayer = preciseInput.snapToLayer\n                delete preciseInput.snapToLayer\n                if (preciseInput.maxSnapDistance) {\n                    preset.maxSnapDistance = preciseInput.maxSnapDistance\n                    delete preciseInput.maxSnapDistance\n                }\n                if (Object.keys(preciseInput).length == 0) {\n                    delete preset[\"preciseInput\"]\n                }\n            }\n        }\n\n        if (config.tagRenderings !== undefined) {\n            let i = 0\n            for (const tagRendering of config.tagRenderings) {\n                i++\n                if (\n                    typeof tagRendering === \"string\" ||\n                    tagRendering[\"builtin\"] !== undefined ||\n                    tagRendering[\"rewrite\"] !== undefined\n                ) {\n                    continue\n                }\n                if (tagRendering[\"id\"] === undefined) {\n                    if (tagRendering[\"#\"] !== undefined) {\n                        tagRendering[\"id\"] = tagRendering[\"#\"]\n                        delete tagRendering[\"#\"]\n                    } else if (tagRendering[\"freeform\"]?.key !== undefined) {\n                        tagRendering[\"id\"] = config.id + \"-\" + tagRendering[\"freeform\"][\"key\"]\n                    } else {\n                        tagRendering[\"id\"] = \"tr-\" + i\n                    }\n                }\n            }\n        }\n\n        if (config.mapRendering === undefined) {\n            config.mapRendering = []\n            // This is a legacy format, lets create a pointRendering\n            let location: (\"point\" | \"centroid\")[] = [\"point\"]\n            let wayHandling: number = config[\"wayHandling\"] ?? 0\n            if (wayHandling !== 0) {\n                location = [\"point\", \"centroid\"]\n            }\n            if (config[\"icon\"] ?? config[\"label\"] !== undefined) {\n                const pointConfig = {\n                    icon: config[\"icon\"],\n                    iconBadges: config[\"iconOverlays\"],\n                    label: config[\"label\"],\n                    iconSize: config[\"iconSize\"],\n                    location,\n                    rotation: config[\"rotation\"],\n                }\n                config.mapRendering.push(pointConfig)\n            }\n\n            if (wayHandling !== 1) {\n                const lineRenderConfig = <LineRenderingConfigJson>{\n                    color: config[\"color\"],\n                    width: config[\"width\"],\n                    dashArray: config[\"dashArray\"],\n                }\n                if (Object.keys(lineRenderConfig).length > 0) {\n                    config.mapRendering.push(lineRenderConfig)\n                }\n            }\n            if (config.mapRendering.length === 0) {\n                throw (\n                    \"Could not convert the legacy theme into a new theme: no renderings defined for layer \" +\n                    config.id\n                )\n            }\n        }\n\n        delete config[\"color\"]\n        delete config[\"width\"]\n        delete config[\"dashArray\"]\n\n        delete config[\"icon\"]\n        delete config[\"iconOverlays\"]\n        delete config[\"label\"]\n        delete config[\"iconSize\"]\n        delete config[\"rotation\"]\n        delete config[\"wayHandling\"]\n        delete config[\"hideUnderlayingFeaturesMinPercentage\"]\n\n        for (const mapRenderingElement of config.mapRendering ?? []) {\n            if (mapRenderingElement[\"iconOverlays\"] !== undefined) {\n                mapRenderingElement[\"iconBadges\"] = mapRenderingElement[\"iconOverlays\"]\n            }\n            for (const overlay of mapRenderingElement[\"iconBadges\"] ?? []) {\n                if (overlay[\"badge\"] !== true) {\n                    warnings.push(\"Warning: non-overlay element for \", config.id)\n                }\n                delete overlay[\"badge\"]\n            }\n        }\n\n        for (const rendering of config.mapRendering ?? []) {\n            if (!rendering[\"iconSize\"]) {\n                continue\n            }\n            const pr = <PointRenderingConfigJson>rendering\n            let iconSize = pr.iconSize\n            console.log(\"Iconsize is\", iconSize)\n\n            if (Object.keys(pr.iconSize).length === 1 && pr.iconSize[\"render\"] !== undefined) {\n                iconSize = pr.iconSize[\"render\"]\n            }\n\n            if (typeof iconSize === \"string\")\n                if ([\"bottom\", \"center\", \"top\"].some((a) => (<string>iconSize).endsWith(a))) {\n                    const parts = iconSize.split(\",\").map((parts) => parts.toLowerCase().trim())\n                    pr.anchor = parts.pop()\n                    pr.iconSize = parts.join(\",\")\n                }\n        }\n\n        for (const rendering of config.mapRendering) {\n            for (const key in rendering) {\n                if (!rendering[key]) {\n                    continue\n                }\n                if (\n                    typeof rendering[key][\"render\"] === \"string\" &&\n                    Object.keys(rendering[key]).length === 1\n                ) {\n                    console.log(\"Rewrite: \", rendering[key])\n                    rendering[key] = rendering[key][\"render\"]\n                }\n            }\n        }\n\n        return {\n            result: config,\n            errors: [],\n            warnings,\n        }\n    }\n}\n\nclass UpdateLegacyTheme extends DesugaringStep<LayoutConfigJson> {\n    constructor() {\n        super(\"Small fixes in the theme config\", [\"roamingRenderings\"], \"UpdateLegacyTheme\")\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): { result: LayoutConfigJson; errors: string[]; warnings: string[] } {\n        const oldThemeConfig = { ...json }\n\n        if (oldThemeConfig.socialImage === \"\") {\n            delete oldThemeConfig.socialImage\n        }\n\n        if (oldThemeConfig[\"roamingRenderings\"] !== undefined) {\n            if (oldThemeConfig[\"roamingRenderings\"].length == 0) {\n                delete oldThemeConfig[\"roamingRenderings\"]\n            } else {\n                return {\n                    result: null,\n                    errors: [\n                        context +\n                            \": The theme contains roamingRenderings. These are not supported anymore\",\n                    ],\n                    warnings: [],\n                }\n            }\n        }\n\n        oldThemeConfig.layers = Utils.NoNull(oldThemeConfig.layers)\n        delete oldThemeConfig[\"language\"]\n        delete oldThemeConfig[\"version\"]\n\n        if (oldThemeConfig[\"maintainer\"] !== undefined) {\n            console.log(\n                \"Maintainer: \",\n                oldThemeConfig[\"maintainer\"],\n                \"credits: \",\n                oldThemeConfig[\"credits\"]\n            )\n            if (oldThemeConfig.credits === undefined) {\n                oldThemeConfig[\"credits\"] = oldThemeConfig[\"maintainer\"]\n                delete oldThemeConfig[\"maintainer\"]\n            } else if (oldThemeConfig[\"maintainer\"].toLowerCase().trim() === \"mapcomplete\") {\n                delete oldThemeConfig[\"maintainer\"]\n            } else if (oldThemeConfig[\"maintainer\"].toLowerCase().trim() === \"\") {\n                delete oldThemeConfig[\"maintainer\"]\n            }\n        }\n\n        return {\n            errors: [],\n            warnings: [],\n            result: oldThemeConfig,\n        }\n    }\n}\n\nexport class FixLegacyTheme extends Fuse<LayoutConfigJson> {\n    constructor() {\n        super(\n            \"Fixes a legacy theme to the modern JSON format geared to humans. Syntactic sugars are kept (i.e. no tagRenderings are expandend, no dependencies are automatically gathered)\",\n            new UpdateLegacyTheme(),\n            new On(\"layers\", new Each(new UpdateLegacyLayer()))\n        )\n    }\n}\n","import { DesugaringStep } from \"./Conversion\"\nimport { Utils } from \"../../../Utils\"\nimport Translations from \"../../../UI/i18n/Translations\"\n\nexport class AddContextToTranslations<T> extends DesugaringStep<T> {\n    private readonly _prefix: string\n\n    constructor(prefix = \"\") {\n        super(\n            \"Adds a '_context' to every object that is probably a translation\",\n            [\"_context\"],\n            \"AddContextToTranslation\"\n        )\n        this._prefix = prefix\n    }\n\n    /**\n     * const theme = {\n     *   layers: [\n     *       {\n     *           builtin: [\"abc\"],\n     *           override: {\n     *               title:{\n     *                   en: \"Some title\"\n     *               }\n     *           }\n     *       }\n     *   ]\n     * }\n     * const rewritten = new AddContextToTranslations<any>(\"prefix:\").convert(theme, \"context\").result\n     * const expected = {\n     *   layers: [\n     *       {\n     *           builtin: [\"abc\"],\n     *           override: {\n     *               title:{\n     *                  _context: \"prefix:context.layers.0.override.title\"\n     *                   en: \"Some title\"\n     *               }\n     *           }\n     *       }\n     *   ]\n     * }\n     * rewritten // => expected\n     *\n     * // should use the ID if one is present instead of the index\n     * const theme = {\n     *   layers: [\n     *       {\n     *           tagRenderings:[\n     *               {id: \"some-tr\",\n     *               question:{\n     *                   en:\"Question?\"\n     *               }\n     *               }\n     *           ]\n     *       }\n     *   ]\n     * }\n     * const rewritten = new AddContextToTranslations<any>(\"prefix:\").convert(theme, \"context\").result\n     * const expected = {\n     *   layers: [\n     *       {\n     *           tagRenderings:[\n     *               {id: \"some-tr\",\n     *               question:{\n     *                  _context: \"prefix:context.layers.0.tagRenderings.some-tr.question\"\n     *                   en:\"Question?\"\n     *               }\n     *               }\n     *           ]\n     *       }\n     *   ]\n     * }\n     * rewritten // => expected\n     *\n     * // should preserve nulls\n     * const theme = {\n     *   layers: [\n     *       {\n     *           builtin: [\"abc\"],\n     *           override: {\n     *               name:null\n     *           }\n     *       }\n     *   ]\n     * }\n     * const rewritten = new AddContextToTranslations<any>(\"prefix:\").convert(theme, \"context\").result\n     * const expected = {\n     *   layers: [\n     *       {\n     *           builtin: [\"abc\"],\n     *           override: {\n     *               name: null\n     *           }\n     *       }\n     *   ]\n     * }\n     * rewritten // => expected\n     *\n     *\n     * // Should ignore all if '#dont-translate' is set\n     * const theme = {\n     *  \"#dont-translate\": \"*\",\n     *   layers: [\n     *       {\n     *           builtin: [\"abc\"],\n     *           override: {\n     *               title:{\n     *                   en: \"Some title\"\n     *               }\n     *           }\n     *       }\n     *   ]\n     * }\n     * const rewritten = new AddContextToTranslations<any>(\"prefix:\").convert(theme, \"context\").result\n     * rewritten // => theme\n     *\n     */\n    convert(\n        json: T,\n        context: string\n    ): { result: T; errors?: string[]; warnings?: string[]; information?: string[] } {\n        if (json[\"#dont-translate\"] === \"*\") {\n            return { result: json }\n        }\n\n        const result = Utils.WalkJson(\n            json,\n            (leaf, path) => {\n                if (leaf === undefined || leaf === null) {\n                    return leaf\n                }\n                if (typeof leaf === \"object\") {\n                    // follow the path. If we encounter a number, check that there is no ID we can use instead\n                    let breadcrumb = json\n                    for (let i = 0; i < path.length; i++) {\n                        const pointer = path[i]\n                        breadcrumb = breadcrumb[pointer]\n                        if (pointer.match(\"[0-9]+\") && breadcrumb[\"id\"] !== undefined) {\n                            path[i] = breadcrumb[\"id\"]\n                        }\n                    }\n\n                    return { ...leaf, _context: this._prefix + context + \".\" + path.join(\".\") }\n                } else {\n                    return leaf\n                }\n            },\n            (obj) => obj === undefined || obj === null || Translations.isProbablyATranslation(obj)\n        )\n\n        return {\n            result,\n        }\n    }\n}\n","import { TagRenderingConfigJson } from \"../Json/TagRenderingConfigJson\"\nimport { Utils } from \"../../../Utils\"\nimport SpecialVisualizations from \"../../../UI/SpecialVisualizations\"\nimport { RenderingSpecification, SpecialVisualization } from \"../../../UI/SpecialVisualization\"\nimport { LayerConfigJson } from \"../Json/LayerConfigJson\"\n\nexport default class ValidationUtils {\n    public static hasSpecialVisualisation(\n        layer: LayerConfigJson,\n        specialVisualisation: string\n    ): boolean {\n        return (\n            layer.tagRenderings?.some((tagRendering) => {\n                if (tagRendering === undefined) {\n                    return false\n                }\n\n                const spec = ValidationUtils.getSpecialVisualisations(\n                    <TagRenderingConfigJson>tagRendering\n                )\n                return spec.some((vis) => vis.funcName === specialVisualisation)\n            }) ?? false\n        )\n    }\n\n    /**\n     * Gives all the (function names of) used special visualisations\n     * @param renderingConfig\n     */\n    public static getSpecialVisualisations(\n        renderingConfig: TagRenderingConfigJson\n    ): SpecialVisualization[] {\n        return ValidationUtils.getSpecialVisualsationsWithArgs(renderingConfig).map(\n            (spec) => spec[\"func\"]\n        )\n    }\n\n    public static getSpecialVisualsationsWithArgs(\n        renderingConfig: TagRenderingConfigJson\n    ): RenderingSpecification[] {\n        const translations: any[] = Utils.NoNull([\n            renderingConfig.render,\n            ...(renderingConfig.mappings ?? []).map((m) => m.then),\n        ])\n        const all: RenderingSpecification[] = []\n        for (let translation of translations) {\n            if (typeof translation == \"string\") {\n                translation = { \"*\": translation }\n            }\n\n            for (const key in translation) {\n                if (!translation.hasOwnProperty(key)) {\n                    continue\n                }\n\n                const template = translation[key]\n                const parts = SpecialVisualizations.constructSpecification(template)\n                const specials = parts.filter((p) => typeof p !== \"string\")\n                all.push(...specials)\n            }\n        }\n        return all\n    }\n}\n","import {\n    Concat,\n    Conversion,\n    DesugaringContext,\n    DesugaringStep,\n    Each,\n    FirstOf,\n    Fuse,\n    On,\n    SetDefault,\n} from \"./Conversion\"\nimport { LayerConfigJson } from \"../Json/LayerConfigJson\"\nimport { TagRenderingConfigJson } from \"../Json/TagRenderingConfigJson\"\nimport { Utils } from \"../../../Utils\"\nimport RewritableConfigJson from \"../Json/RewritableConfigJson\"\nimport SpecialVisualizations from \"../../../UI/SpecialVisualizations\"\nimport Translations from \"../../../UI/i18n/Translations\"\nimport { Translation } from \"../../../UI/i18n/Translation\"\nimport tagrenderingconfigmeta from \"../../../../src/assets/schemas/tagrenderingconfigmeta.json\"\nimport { AddContextToTranslations } from \"./AddContextToTranslations\"\nimport FilterConfigJson from \"../Json/FilterConfigJson\"\nimport predifined_filters from \"../../../../assets/layers/filters/filters.json\"\nimport { TagConfigJson } from \"../Json/TagConfigJson\"\nimport PointRenderingConfigJson from \"../Json/PointRenderingConfigJson\"\nimport LineRenderingConfigJson from \"../Json/LineRenderingConfigJson\"\nimport ValidationUtils from \"./ValidationUtils\"\nimport { RenderingSpecification } from \"../../../UI/SpecialVisualization\"\nimport { QuestionableTagRenderingConfigJson } from \"../Json/QuestionableTagRenderingConfigJson\"\n\nclass ExpandFilter extends DesugaringStep<LayerConfigJson> {\n    private static readonly predefinedFilters = ExpandFilter.load_filters()\n    private _state: DesugaringContext\n\n    constructor(state: DesugaringContext) {\n        super(\n            \"Expands filters: replaces a shorthand by the value found in 'filters.json'. If the string is formatted 'layername.filtername, it will be looked up into that layer instead\",\n            [\"filter\"],\n            \"ExpandFilter\"\n        )\n        this._state = state\n    }\n\n    private static load_filters(): Map<string, FilterConfigJson> {\n        let filters = new Map<string, FilterConfigJson>()\n        for (const filter of <FilterConfigJson[]>predifined_filters.filter) {\n            filters.set(filter.id, filter)\n        }\n        return filters\n    }\n\n    convert(\n        json: LayerConfigJson,\n        context: string\n    ): { result: LayerConfigJson; errors?: string[]; warnings?: string[]; information?: string[] } {\n        if (json.filter === undefined || json.filter === null) {\n            return { result: json } // Nothing to change here\n        }\n\n        if (json.filter[\"sameAs\"] !== undefined) {\n            return { result: json } // Nothing to change here\n        }\n\n        const newFilters: FilterConfigJson[] = []\n        const errors: string[] = []\n        for (const filter of <(FilterConfigJson | string)[]>json.filter) {\n            if (typeof filter !== \"string\") {\n                newFilters.push(filter)\n                continue\n            }\n            if (filter.indexOf(\".\") > 0) {\n                if (this._state.sharedLayers.size > 0) {\n                    const split = filter.split(\".\")\n                    if (split.length > 2) {\n                        errors.push(\n                            context +\n                                \": invalid filter name: \" +\n                                filter +\n                                \", expected `layername.filterid`\"\n                        )\n                    }\n                    const layer = this._state.sharedLayers.get(split[0])\n                    if (layer === undefined) {\n                        errors.push(context + \": layer '\" + split[0] + \"' not found\")\n                    }\n                    const expectedId = split[1]\n                    const expandedFilter = (<(FilterConfigJson | string)[]>layer.filter).find(\n                        (f) => typeof f !== \"string\" && f.id === expectedId\n                    )\n                    newFilters.push(<FilterConfigJson>expandedFilter)\n                } else {\n                    // This is a bootstrapping-run, we can safely ignore this\n                }\n                continue\n            }\n            // Search for the filter:\n            const found = ExpandFilter.predefinedFilters.get(filter)\n            if (found === undefined) {\n                const suggestions = Utils.sortedByLevenshteinDistance(\n                    filter,\n                    Array.from(ExpandFilter.predefinedFilters.keys()),\n                    (t) => t\n                )\n                const err =\n                    context +\n                    \".filter: while searching for predifined filter \" +\n                    filter +\n                    \": this filter is not found. Perhaps you meant one of: \" +\n                    suggestions\n                errors.push(err)\n            }\n            newFilters.push(found)\n        }\n        return {\n            result: {\n                ...json,\n                filter: newFilters,\n            },\n            errors,\n        }\n    }\n}\n\nclass ExpandTagRendering extends Conversion<\n    string | TagRenderingConfigJson | { builtin: string | string[]; override: any },\n    TagRenderingConfigJson[]\n> {\n    private readonly _state: DesugaringContext\n    private readonly _tagRenderingsByLabel: Map<string, TagRenderingConfigJson[]>\n    private readonly _self: LayerConfigJson\n    private readonly _options: {\n        /* If true, will copy the 'osmSource'-tags into the condition */\n        applyCondition?: true | boolean\n        noHardcodedStrings?: false | boolean\n    }\n\n    constructor(\n        state: DesugaringContext,\n        self: LayerConfigJson,\n        options?: { applyCondition?: true | boolean; noHardcodedStrings?: false | boolean }\n    ) {\n        super(\n            \"Converts a tagRenderingSpec into the full tagRendering, e.g. by substituting the tagRendering by the shared-question\",\n            [],\n            \"ExpandTagRendering\"\n        )\n        this._state = state\n        this._self = self\n        this._options = options\n        this._tagRenderingsByLabel = new Map<string, TagRenderingConfigJson[]>()\n        for (const trconfig of state.tagRenderings?.values() ?? []) {\n            for (const label of trconfig.labels ?? []) {\n                let withLabel = this._tagRenderingsByLabel.get(label)\n                if (withLabel === undefined) {\n                    withLabel = []\n                    this._tagRenderingsByLabel.set(label, withLabel)\n                }\n                withLabel.push(trconfig)\n            }\n        }\n    }\n\n    convert(\n        json: string | TagRenderingConfigJson | { builtin: string | string[]; override: any },\n        context: string\n    ): { result: TagRenderingConfigJson[]; errors: string[]; warnings: string[] } {\n        const errors = []\n        const warnings = []\n\n        return {\n            result: this.convertUntilStable(json, warnings, errors, context),\n            errors,\n            warnings,\n        }\n    }\n\n    private lookup(name: string): TagRenderingConfigJson[] | undefined {\n        const direct = this.directLookup(name)\n\n        if (direct === undefined) {\n            return undefined\n        }\n        const result: TagRenderingConfigJson[] = []\n        for (const tagRenderingConfigJson of direct) {\n            let nm: string | string[] | undefined = tagRenderingConfigJson[\"builtin\"]\n            if (nm !== undefined) {\n                let indirect: TagRenderingConfigJson[]\n                if (typeof nm === \"string\") {\n                    indirect = this.lookup(nm)\n                } else {\n                    indirect = [].concat(...nm.map((n) => this.lookup(n)))\n                }\n                for (let foundTr of indirect) {\n                    foundTr = Utils.Clone<any>(foundTr)\n                    Utils.Merge(tagRenderingConfigJson[\"override\"] ?? {}, foundTr)\n                    foundTr.id = tagRenderingConfigJson.id ?? foundTr.id\n                    result.push(foundTr)\n                }\n            } else {\n                result.push(tagRenderingConfigJson)\n            }\n        }\n        return result\n    }\n\n    /**\n     * Looks up a tagRendering or group of tagRenderings based on the name.\n     */\n    private directLookup(name: string): TagRenderingConfigJson[] | undefined {\n        const state = this._state\n        if (state.tagRenderings.has(name)) {\n            return [state.tagRenderings.get(name)]\n        }\n        if (this._tagRenderingsByLabel.has(name)) {\n            return this._tagRenderingsByLabel.get(name)\n        }\n\n        if (name.indexOf(\".\") < 0) {\n            return undefined\n        }\n\n        const spl = name.split(\".\")\n        let layer = state.sharedLayers?.get(spl[0])\n        if (spl[0] === this._self.id) {\n            layer = this._self\n        }\n\n        if (spl.length !== 2 || !layer) {\n            return undefined\n        }\n\n        const id = spl[1]\n\n        const layerTrs = <TagRenderingConfigJson[]>(\n            layer.tagRenderings.filter((tr) => tr[\"id\"] !== undefined)\n        )\n        let matchingTrs: TagRenderingConfigJson[]\n        if (id === \"*\") {\n            matchingTrs = layerTrs\n        } else if (id.startsWith(\"*\")) {\n            const id_ = id.substring(1)\n            matchingTrs = layerTrs.filter((tr) => tr.labels?.indexOf(id_) >= 0)\n        } else {\n            matchingTrs = layerTrs.filter((tr) => tr.id === id || tr.labels?.indexOf(id) >= 0)\n        }\n\n        const contextWriter = new AddContextToTranslations<TagRenderingConfigJson>(\"layers:\")\n        for (let i = 0; i < matchingTrs.length; i++) {\n            let found: TagRenderingConfigJson = Utils.Clone(matchingTrs[i])\n            if (this._options?.applyCondition) {\n                // The matched tagRenderings are 'stolen' from another layer. This means that they must match the layer condition before being shown\n                if (typeof layer.source !== \"string\") {\n                    if (found.condition === undefined) {\n                        found.condition = layer.source[\"osmTags\"]\n                    } else {\n                        found.condition = { and: [found.condition, layer.source[\"osmTags\"]] }\n                    }\n                }\n            }\n\n            found = contextWriter.convertStrict(found, layer.id + \".tagRenderings.\" + found[\"id\"])\n            matchingTrs[i] = found\n        }\n\n        if (matchingTrs.length !== 0) {\n            return matchingTrs\n        }\n        return undefined\n    }\n\n    private convertOnce(\n        tr: string | any,\n        warnings: string[],\n        errors: string[],\n        ctx: string\n    ): TagRenderingConfigJson[] {\n        const state = this._state\n\n        if (typeof tr === \"string\") {\n            let lookup\n            if (this._state.tagRenderings !== null) {\n                lookup = this.lookup(tr)\n            }\n            if (lookup === undefined) {\n                const isTagRendering = ctx.indexOf(\"On(mapRendering\") < 0\n                if (isTagRendering && this._state.sharedLayers?.size > 0) {\n                    warnings.push(\n                        `${ctx}: A literal rendering was detected: ${tr}\n    Did you perhaps forgot to add a layer name as 'layername.${tr}'? ` +\n                            Array.from(state.sharedLayers.keys()).join(\", \")\n                    )\n                }\n\n                if (this._options?.noHardcodedStrings && this._state?.sharedLayers?.size > 0) {\n                    errors.push(\n                        ctx +\n                            \"Detected an invocation to a builtin tagRendering, but this tagrendering was not found: \" +\n                            tr +\n                            \" \\n    Did you perhaps forget to add the layer as prefix, such as `icons.\" +\n                            tr +\n                            \"`? \"\n                    )\n                }\n\n                return [\n                    {\n                        render: tr,\n                        id: tr.replace(/[^a-zA-Z0-9]/g, \"\"),\n                    },\n                ]\n            }\n            return lookup\n        }\n\n        if (tr[\"builtin\"] !== undefined) {\n            let names: string | string[] = tr[\"builtin\"]\n            if (typeof names === \"string\") {\n                names = [names]\n            }\n\n            if (this._state.tagRenderings === null) {\n                return []\n            }\n\n            for (const key of Object.keys(tr)) {\n                if (\n                    key === \"builtin\" ||\n                    key === \"override\" ||\n                    key === \"id\" ||\n                    key.startsWith(\"#\")\n                ) {\n                    continue\n                }\n                errors.push(\n                    \"At \" +\n                        ctx +\n                        \": an object calling a builtin can only have keys `builtin` or `override`, but a key with name `\" +\n                        key +\n                        \"` was found. This won't be picked up! The full object is: \" +\n                        JSON.stringify(tr)\n                )\n            }\n\n            const trs: TagRenderingConfigJson[] = []\n            for (const name of names) {\n                const lookup = this.lookup(name)\n                if (lookup === undefined) {\n                    let candidates = Array.from(state.tagRenderings.keys())\n                    if (name.indexOf(\".\") > 0) {\n                        const [layerName] = name.split(\".\")\n                        let layer = state.sharedLayers.get(layerName)\n                        if (layerName === this._self.id) {\n                            layer = this._self\n                        }\n                        if (layer === undefined) {\n                            const candidates = Utils.sortedByLevenshteinDistance(\n                                layerName,\n                                Array.from(state.sharedLayers.keys()),\n                                (s) => s\n                            )\n                            if (state.sharedLayers.size === 0) {\n                                warnings.push(\n                                    ctx +\n                                        \": BOOTSTRAPPING. Rerun generate layeroverview. While reusing tagrendering: \" +\n                                        name +\n                                        \": layer \" +\n                                        layerName +\n                                        \" not found. Maybe you meant on of \" +\n                                        candidates.slice(0, 3).join(\", \")\n                                )\n                            } else {\n                                errors.push(\n                                    ctx +\n                                        \": While reusing tagrendering: \" +\n                                        name +\n                                        \": layer \" +\n                                        layerName +\n                                        \" not found. Maybe you meant on of \" +\n                                        candidates.slice(0, 3).join(\", \")\n                                )\n                            }\n                            continue\n                        }\n                        candidates = Utils.NoNull(layer.tagRenderings.map((tr) => tr[\"id\"])).map(\n                            (id) => layerName + \".\" + id\n                        )\n                    }\n                    candidates = Utils.sortedByLevenshteinDistance(name, candidates, (i) => i)\n                    errors.push(\n                        ctx +\n                            \": The tagRendering with identifier \" +\n                            name +\n                            \" was not found.\\n\\tDid you mean one of \" +\n                            candidates.join(\", \") +\n                            \"?\\n(Hint: did you add a new label and are you trying to use this label at the same time? Run 'reset:layeroverview' first\"\n                    )\n                    continue\n                }\n                for (let foundTr of lookup) {\n                    foundTr = Utils.Clone<any>(foundTr)\n                    Utils.Merge(tr[\"override\"] ?? {}, foundTr)\n                    if (names.length == 1) {\n                        foundTr[\"id\"] = tr[\"id\"] ?? foundTr[\"id\"]\n                    }\n                    trs.push(foundTr)\n                }\n            }\n            return trs\n        }\n\n        return [tr]\n    }\n\n    private convertUntilStable(\n        spec: string | any,\n        warnings: string[],\n        errors: string[],\n        ctx: string\n    ): TagRenderingConfigJson[] {\n        const trs = this.convertOnce(spec, warnings, errors, ctx)\n\n        const result = []\n        for (const tr of trs) {\n            if (typeof tr === \"string\" || tr[\"builtin\"] !== undefined) {\n                const stable = this.convertUntilStable(\n                    tr,\n                    warnings,\n                    errors,\n                    ctx + \"(RECURSIVE RESOLVE)\"\n                )\n                result.push(...stable)\n            } else {\n                result.push(tr)\n            }\n        }\n\n        return result\n    }\n}\n\nclass DetectInline extends DesugaringStep<QuestionableTagRenderingConfigJson> {\n    constructor() {\n        super(\n            \"If no 'inline' is set on the freeform key, it will be automatically added. If no special renderings are used, it'll be set to true\",\n            [\"freeform.inline\"],\n            \"DetectInline\"\n        )\n    }\n\n    convert(\n        json: QuestionableTagRenderingConfigJson,\n        context: string\n    ): {\n        result: QuestionableTagRenderingConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        if (json.freeform === undefined) {\n            return { result: json }\n        }\n        let spec: Record<string, string>\n        if (typeof json.render === \"string\") {\n            spec = { \"*\": json.render }\n        } else {\n            spec = <Record<string, string>>json.render\n        }\n        const errors: string[] = []\n        for (const key in spec) {\n            if (spec[key].indexOf(\"<a \") >= 0) {\n                // We have a link element, it probably contains something that needs to be substituted...\n                // Let's play this safe and not inline it\n                return { result: json }\n            }\n            const fullSpecification = SpecialVisualizations.constructSpecification(spec[key])\n            if (fullSpecification.length > 1) {\n                // We found a special rendering!\n                if (json.freeform.inline === true) {\n                    errors.push(\n                        \"At \" +\n                            context +\n                            \": 'inline' is set, but the rendering contains a special visualisation...\\n    \" +\n                            spec[key]\n                    )\n                }\n                json = JSON.parse(JSON.stringify(json))\n                json.freeform.inline = false\n                return { result: json, errors }\n            }\n        }\n        json = JSON.parse(JSON.stringify(json))\n        json.freeform.inline ??= true\n        return { result: json, errors }\n    }\n}\n\nexport class AddQuestionBox extends DesugaringStep<LayerConfigJson> {\n    constructor() {\n        super(\n            \"Adds a 'questions'-object if no question element is added yet\",\n            [\"tagRenderings\"],\n            \"AddQuestionBox\"\n        )\n    }\n\n    convert(\n        json: LayerConfigJson,\n        context: string\n    ): { result: LayerConfigJson; errors?: string[]; warnings?: string[]; information?: string[] } {\n        if (\n            json.tagRenderings === undefined ||\n            json.tagRenderings.some((tr) => tr[\"id\"] === \"leftover-questions\")\n        ) {\n            return { result: json }\n        }\n        json = JSON.parse(JSON.stringify(json))\n        const allSpecials: Exclude<RenderingSpecification, string>[] = []\n            .concat(\n                ...json.tagRenderings.map((tr) =>\n                    ValidationUtils.getSpecialVisualsationsWithArgs(<TagRenderingConfigJson>tr)\n                )\n            )\n            .filter((spec) => typeof spec !== \"string\")\n\n        const questionSpecials = allSpecials.filter((sp) => sp.func.funcName === \"questions\")\n        const noLabels = questionSpecials.filter(\n            (sp) => sp.args.length === 0 || sp.args[0].trim() === \"\"\n        )\n\n        const errors: string[] = []\n        const warnings: string[] = []\n        if (noLabels.length > 1) {\n            errors.push(\n                \"At \" +\n                    context +\n                    \": multiple 'questions'-visualisations found which would show _all_ questions. Don't do this\"\n            )\n        }\n\n        // ALl labels that are used in this layer\n        const allLabels = new Set(\n            [].concat(...json.tagRenderings.map((tr) => (<TagRenderingConfigJson>tr).labels ?? []))\n        )\n        const seen = new Set()\n        for (const questionSpecial of questionSpecials) {\n            if (typeof questionSpecial === \"string\") {\n                continue\n            }\n            const used = questionSpecial.args[0]\n                ?.split(\";\")\n                ?.map((a) => a.trim())\n                ?.filter((s) => s != \"\")\n            const blacklisted = questionSpecial.args[1]\n                ?.split(\";\")\n                ?.map((a) => a.trim())\n                ?.filter((s) => s != \"\")\n            if (blacklisted?.length > 0 && used?.length > 0) {\n                errors.push(\n                    \"At \" +\n                        context +\n                        \": the {questions()}-special rendering only supports either a blacklist OR a whitelist, but not both.\" +\n                        \"\\n    Whitelisted: \" +\n                        used.join(\", \") +\n                        \"\\n    Blacklisted: \" +\n                        blacklisted.join(\", \")\n                )\n            }\n            for (const usedLabel of used) {\n                if (!allLabels.has(usedLabel)) {\n                    errors.push(\n                        \"At \" +\n                            context +\n                            \": this layers specifies a special question element for label `\" +\n                            usedLabel +\n                            \"`, but this label doesn't exist.\\n\" +\n                            \"    Available labels are \" +\n                            Array.from(allLabels).join(\", \")\n                    )\n                }\n                seen.add(usedLabel)\n            }\n        }\n\n        if (noLabels.length == 0) {\n            /* At this point, we know which question labels are not yet handled and which already are handled, and we\n             * know there is no previous catch-all questions\n             */\n            const question: TagRenderingConfigJson = {\n                id: \"leftover-questions\",\n                render: {\n                    \"*\": `{questions( ,${Array.from(seen).join(\";\")})}`,\n                },\n            }\n            json.tagRenderings.push(question)\n        }\n        return {\n            result: json,\n            errors,\n            warnings,\n        }\n    }\n}\n\nexport class AddEditingElements extends DesugaringStep<LayerConfigJson> {\n    private readonly _desugaring: DesugaringContext\n\n    constructor(desugaring: DesugaringContext) {\n        super(\n            \"Add some editing elements, such as the delete button or the move button if they are configured. These used to be handled by the feature info box, but this has been replaced by special visualisation elements\",\n            [],\n            \"AddEditingElements\"\n        )\n        this._desugaring = desugaring\n    }\n\n    convert(\n        json: LayerConfigJson,\n        context: string\n    ): { result: LayerConfigJson; errors?: string[]; warnings?: string[]; information?: string[] } {\n        if (this._desugaring.tagRenderings === null) {\n            return { result: json }\n        }\n        json = JSON.parse(JSON.stringify(json))\n\n        if (\n            json.tagRenderings &&\n            this._desugaring.tagRenderings.has(\"just_created\") &&\n            !json.tagRenderings.some((tr) => tr === \"just_created\" || tr[\"id\"] === \"just_created\")\n        ) {\n            json.tagRenderings.unshift(this._desugaring.tagRenderings.get(\"just_created\"))\n        }\n\n        if (json.allowSplit && !ValidationUtils.hasSpecialVisualisation(json, \"split_button\")) {\n            json.tagRenderings.push({\n                id: \"split-button\",\n                render: { \"*\": \"{split_button()}\" },\n            })\n            delete json.allowSplit\n        }\n\n        if (json.allowMove && !ValidationUtils.hasSpecialVisualisation(json, \"move_button\")) {\n            json.tagRenderings.push({\n                id: \"move-button\",\n                render: { \"*\": \"{move_button()}\" },\n            })\n        }\n        if (json.deletion && !ValidationUtils.hasSpecialVisualisation(json, \"delete_button\")) {\n            json.tagRenderings.push({\n                id: \"delete-button\",\n                render: { \"*\": \"{delete_button()}\" },\n            })\n        }\n\n        if (\n            json.source !== \"special\" &&\n            json.source !== \"special:library\" &&\n            json.tagRenderings &&\n            this._desugaring.tagRenderings.has(\"last_edit\") &&\n            !json.tagRenderings.some((tr) => tr[\"id\"] === \"last_edit\")\n        ) {\n            json.tagRenderings.push(this._desugaring.tagRenderings.get(\"last_edit\"))\n        }\n\n        if (!ValidationUtils.hasSpecialVisualisation(json, \"all_tags\")) {\n            const trc: TagRenderingConfigJson = {\n                id: \"all-tags\",\n                render: { \"*\": \"{all_tags()}\" },\n\n                metacondition: {\n                    or: [\n                        \"__featureSwitchIsDebugging=true\",\n                        \"mapcomplete-show_tags=full\",\n                        \"mapcomplete-show_debug=yes\",\n                    ],\n                },\n            }\n            json.tagRenderings?.push(trc)\n        }\n\n        return { result: json }\n    }\n}\n\nexport class ExpandRewrite<T> extends Conversion<T | RewritableConfigJson<T>, T[]> {\n    constructor() {\n        super(\"Applies a rewrite\", [], \"ExpandRewrite\")\n    }\n\n    /**\n     * Used for left|right group creation and replacement.\n     * Every 'keyToRewrite' will be replaced with 'target' recursively. This substitution will happen in place in the object 'tr'\n     *\n     * // should substitute strings\n     * const spec = {\n     *   \"someKey\": \"somevalue {xyz}\"\n     * }\n     * ExpandRewrite.RewriteParts(\"{xyz}\", \"rewritten\", spec) // => {\"someKey\": \"somevalue rewritten\"}\n     *\n     * // should substitute all occurances in strings\n     * const spec = {\n     *   \"someKey\": \"The left|right side has {key:left|right}\"\n     * }\n     * ExpandRewrite.RewriteParts(\"left|right\", \"left\", spec) // => {\"someKey\": \"The left side has {key:left}\"}\n     *\n     */\n    public static RewriteParts<T>(keyToRewrite: string, target: string | any, tr: T): T {\n        const targetIsTranslation = Translations.isProbablyATranslation(target)\n\n        function replaceRecursive(obj: string | any, target) {\n            if (obj === keyToRewrite) {\n                return target\n            }\n\n            if (typeof obj === \"string\") {\n                // This is a simple string - we do a simple replace\n                while (obj.indexOf(keyToRewrite) >= 0) {\n                    obj = obj.replace(keyToRewrite, target)\n                }\n                return obj\n            }\n            if (Array.isArray(obj)) {\n                // This is a list of items\n                return obj.map((o) => replaceRecursive(o, target))\n            }\n\n            if (typeof obj === \"object\") {\n                obj = { ...obj }\n\n                const isTr = targetIsTranslation && Translations.isProbablyATranslation(obj)\n\n                for (const key in obj) {\n                    let subtarget = target\n                    if (isTr && target[key] !== undefined) {\n                        // The target is a translation AND the current object is a translation\n                        // This means we should recursively replace with the translated value\n                        subtarget = target[key]\n                    }\n\n                    obj[key] = replaceRecursive(obj[key], subtarget)\n                }\n                return obj\n            }\n            return obj\n        }\n\n        return replaceRecursive(tr, target)\n    }\n\n    /**\n     * // should convert simple strings\n     * const spec = <RewritableConfigJson<string>>{\n     *     rewrite: {\n     *         sourceString: [\"xyz\",\"abc\"],\n     *         into: [\n     *             [\"X\", \"A\"],\n     *             [\"Y\", \"B\"],\n     *             [\"Z\", \"C\"]],\n     *     },\n     *     renderings: \"The value of xyz is abc\"\n     * }\n     * new ExpandRewrite().convertStrict(spec, \"test\") // => [\"The value of X is A\", \"The value of Y is B\", \"The value of Z is C\"]\n     *\n     * // should rewrite with translations\n     * const spec = <RewritableConfigJson<any>>{\n     *     rewrite: {\n     *         sourceString: [\"xyz\",\"abc\"],\n     *         into: [\n     *             [\"X\", {en: \"value\", nl: \"waarde\"}],\n     *             [\"Y\", {en: \"some other value\", nl: \"een andere waarde\"}],\n     *     },\n     *     renderings: {en: \"The value of xyz is abc\", nl: \"De waarde van xyz is abc\"}\n     * }\n     * const expected = [\n     *  {\n     *      en: \"The value of X is value\",\n     *      nl: \"De waarde van X is waarde\"\n     *  },\n     *  {\n     *      en: \"The value of Y is some other value\",\n     *      nl: \"De waarde van Y is een andere waarde\"\n     *  }\n     * ]\n     * new ExpandRewrite().convertStrict(spec, \"test\") // => expected\n     */\n    convert(\n        json: T | RewritableConfigJson<T>,\n        context: string\n    ): { result: T[]; errors?: string[]; warnings?: string[]; information?: string[] } {\n        if (json === null || json === undefined) {\n            return { result: [] }\n        }\n\n        if (json[\"rewrite\"] === undefined) {\n            // not a rewrite\n            return { result: [<T>json] }\n        }\n\n        const rewrite = <RewritableConfigJson<T>>json\n        const keysToRewrite = rewrite.rewrite\n        const ts: T[] = []\n\n        {\n            // sanity check: rewrite: [\"xyz\", \"longer_xyz\"] is not allowed as \"longer_xyz\" will never be triggered\n            for (let i = 0; i < keysToRewrite.sourceString.length; i++) {\n                const guard = keysToRewrite.sourceString[i]\n                for (let j = i + 1; j < keysToRewrite.sourceString.length; j++) {\n                    const toRewrite = keysToRewrite.sourceString[j]\n                    if (toRewrite.indexOf(guard) >= 0) {\n                        throw `${context} Error in rewrite: sourcestring[${i}] is a substring of sourcestring[${j}]: ${guard} will be substituted away before ${toRewrite} is reached.`\n                    }\n                }\n            }\n        }\n\n        {\n            // sanity check: {rewrite: [\"a\", \"b\"] should have the right amount of 'intos' in every case\n            for (let i = 0; i < rewrite.rewrite.into.length; i++) {\n                const into = keysToRewrite.into[i]\n                if (into.length !== rewrite.rewrite.sourceString.length) {\n                    throw `${context}.into.${i} Error in rewrite: there are ${rewrite.rewrite.sourceString.length} keys to rewrite, but entry ${i} has only ${into.length} values`\n                }\n            }\n        }\n\n        for (let i = 0; i < keysToRewrite.into.length; i++) {\n            let t = Utils.Clone(rewrite.renderings)\n            for (let j = 0; j < keysToRewrite.sourceString.length; j++) {\n                const key = keysToRewrite.sourceString[j]\n                const target = keysToRewrite.into[i][j]\n                t = ExpandRewrite.RewriteParts(key, target, t)\n            }\n            ts.push(t)\n        }\n\n        return { result: ts }\n    }\n}\n\n/**\n * Converts a 'special' translation into a regular translation which uses parameters\n */\nexport class RewriteSpecial extends DesugaringStep<TagRenderingConfigJson> {\n    constructor() {\n        super(\n            \"Converts a 'special' translation into a regular translation which uses parameters\",\n            [\"special\"],\n            \"RewriteSpecial\"\n        )\n    }\n\n    /**\n     * Does the heavy lifting and conversion\n     *\n     * // should not do anything if no 'special'-key is present\n     * RewriteSpecial.convertIfNeeded({\"en\": \"xyz\", \"nl\": \"abc\"}, [], \"test\") // => {\"en\": \"xyz\", \"nl\": \"abc\"}\n     *\n     * // should handle a simple special case\n     * RewriteSpecial.convertIfNeeded({\"special\": {\"type\":\"image_carousel\"}}, [], \"test\") // => {'*': \"{image_carousel()}\"}\n     *\n     * // should handle special case with a parameter\n     * RewriteSpecial.convertIfNeeded({\"special\": {\"type\":\"image_carousel\", \"image_key\": \"some_image_key\"}}, [], \"test\") // =>  {'*': \"{image_carousel(some_image_key)}\"}\n     *\n     * // should handle special case with a translated parameter\n     * const spec = {\"special\": {\"type\":\"image_upload\", \"label\": {\"en\": \"Add a picture to this object\", \"nl\": \"Voeg een afbeelding toe\"}}}\n     * const r = RewriteSpecial.convertIfNeeded(spec, [], \"test\")\n     * r // => {\"en\": \"{image_upload(,Add a picture to this object)}\", \"nl\": \"{image_upload(,Voeg een afbeelding toe)}\" }\n     *\n     * // should handle special case with a prefix and postfix\n     * const spec = {\"special\": {\"type\":\"image_upload\" }, before: {\"en\": \"PREFIX \"}, after: {\"en\": \" POSTFIX\", nl: \" Achtervoegsel\"} }\n     * const r = RewriteSpecial.convertIfNeeded(spec, [], \"test\")\n     * r // => {\"en\": \"PREFIX {image_upload(,)} POSTFIX\", \"nl\": \"PREFIX {image_upload(,)} Achtervoegsel\" }\n     *\n     * // should warn for unexpected keys\n     * const errors = []\n     * RewriteSpecial.convertIfNeeded({\"special\": {type: \"image_carousel\"}, \"en\": \"xyz\"}, errors, \"test\") // =>  {'*': \"{image_carousel()}\"}\n     * errors // => [\"At test: The only keys allowed next to a 'special'-block are 'before' and 'after'. Perhaps you meant to put 'en' into the special block?\"]\n     *\n     * // should give an error on unknown visualisations\n     * const errors = []\n     * RewriteSpecial.convertIfNeeded({\"special\": {type: \"qsdf\"}}, errors, \"test\") // => undefined\n     * errors.length // => 1\n     * errors[0].indexOf(\"Special visualisation 'qsdf' not found\") >= 0 // => true\n     *\n     * // should give an error is 'type' is missing\n     * const errors = []\n     * RewriteSpecial.convertIfNeeded({\"special\": {}}, errors, \"test\") // => undefined\n     * errors // => [\"A 'special'-block should define 'type' to indicate which visualisation should be used\"]\n     *\n     *\n     * // an actual test\n     * const special = {\n     *     \"before\": {\n     *             \"en\": \"<h3>Entrances</h3>This building has {_entrances_count} entrances:\"\n     *           },\n     *     \"after\": {\n     *             \"en\": \"{_entrances_count_without_width_count} entrances don't have width information yet\"\n     *           },\n     *     \"special\": {\n     *           \"type\": \"multi\",\n     *           \"key\": \"_entrance_properties_with_width\",\n     *           \"tagrendering\": {\n     *             \"en\": \"An <a href='#{id}'>entrance</a> of {canonical(width)}\"\n     *           }\n     *         }}\n     * const errors = []\n     * RewriteSpecial.convertIfNeeded(special, errors, \"test\") // => {\"en\": \"<h3>Entrances</h3>This building has {_entrances_count} entrances:{multi(_entrance_properties_with_width,An <a href='#&LBRACEid&RBRACE'>entrance</a> of &LBRACEcanonical&LPARENSwidth&RPARENS&RBRACE)}{_entrances_count_without_width_count} entrances don't have width information yet\"}\n     * errors // => []\n     */\n    private static convertIfNeeded(\n        input: (object & { special: { type: string } }) | any,\n        errors: string[],\n        context: string\n    ): any {\n        const special = input[\"special\"]\n        if (special === undefined) {\n            return input\n        }\n\n        const type = special[\"type\"]\n        if (type === undefined) {\n            errors.push(\n                \"A 'special'-block should define 'type' to indicate which visualisation should be used\"\n            )\n            return undefined\n        }\n\n        const vis = SpecialVisualizations.specialVisualizations.find((sp) => sp.funcName === type)\n        if (vis === undefined) {\n            const options = Utils.sortedByLevenshteinDistance(\n                type,\n                SpecialVisualizations.specialVisualizations,\n                (sp) => sp.funcName\n            )\n            errors.push(\n                `Special visualisation '${type}' not found. Did you perhaps mean ${options[0].funcName}, ${options[1].funcName} or ${options[2].funcName}?\\n\\tFor all known special visualisations, please see https://github.com/pietervdvn/MapComplete/blob/develop/Docs/SpecialRenderings.md`\n            )\n            return undefined\n        }\n        errors.push(\n            ...Array.from(Object.keys(input))\n                .filter((k) => k !== \"special\" && k !== \"before\" && k !== \"after\")\n                .map((k) => {\n                    return `At ${context}: The only keys allowed next to a 'special'-block are 'before' and 'after'. Perhaps you meant to put '${k}' into the special block?`\n                })\n        )\n\n        const argNamesList = vis.args.map((a) => a.name)\n        const argNames = new Set<string>(argNamesList)\n        // Check for obsolete and misspelled arguments\n        errors.push(\n            ...Object.keys(special)\n                .filter((k) => !argNames.has(k))\n                .filter((k) => k !== \"type\" && k !== \"before\" && k !== \"after\")\n                .map((wrongArg) => {\n                    const byDistance = Utils.sortedByLevenshteinDistance(\n                        wrongArg,\n                        argNamesList,\n                        (x) => x\n                    )\n                    return `At ${context}: Unexpected argument in special block at ${context} with name '${wrongArg}'. Did you mean ${\n                        byDistance[0]\n                    }?\\n\\tAll known arguments are ${argNamesList.join(\", \")}`\n                })\n        )\n\n        // Check that all obligated arguments are present. They are obligated if they don't have a preset value\n        for (const arg of vis.args) {\n            if (arg.required !== true) {\n                continue\n            }\n            const param = special[arg.name]\n            if (param === undefined) {\n                errors.push(\n                    `At ${context}: Obligated parameter '${\n                        arg.name\n                    }' in special rendering of type ${\n                        vis.funcName\n                    } not found.\\n    The full special rendering specification is: '${JSON.stringify(\n                        input\n                    )}'\\n    ${arg.name}: ${arg.doc}`\n                )\n            }\n        }\n\n        const foundLanguages = new Set<string>()\n        const translatedArgs = argNamesList\n            .map((nm) => special[nm])\n            .filter((v) => v !== undefined)\n            .filter((v) => Translations.isProbablyATranslation(v))\n        for (const translatedArg of translatedArgs) {\n            for (const ln of Object.keys(translatedArg)) {\n                foundLanguages.add(ln)\n            }\n        }\n\n        const before = Translations.T(input.before)\n        const after = Translations.T(input.after)\n\n        for (const ln of Object.keys(before?.translations ?? {})) {\n            foundLanguages.add(ln)\n        }\n        for (const ln of Object.keys(after?.translations ?? {})) {\n            foundLanguages.add(ln)\n        }\n\n        if (foundLanguages.size === 0) {\n            const args = argNamesList.map((nm) => special[nm] ?? \"\").join(\",\")\n            return {\n                \"*\": `{${type}(${args})}`,\n            }\n        }\n\n        const result = {}\n        const languages = Array.from(foundLanguages)\n        languages.sort()\n        for (const ln of languages) {\n            const args = []\n            for (const argName of argNamesList) {\n                let v = special[argName] ?? \"\"\n                if (Translations.isProbablyATranslation(v)) {\n                    v = new Translation(v).textFor(ln)\n                }\n\n                if (typeof v === \"string\") {\n                    const txt = v\n                        .replace(/,/g, \"&COMMA\")\n                        .replace(/\\{/g, \"&LBRACE\")\n                        .replace(/}/g, \"&RBRACE\")\n                        .replace(/\\(/g, \"&LPARENS\")\n                        .replace(/\\)/g, \"&RPARENS\")\n                    args.push(txt)\n                } else if (typeof v === \"object\") {\n                    args.push(JSON.stringify(v))\n                } else {\n                    args.push(v)\n                }\n            }\n            const beforeText = before?.textFor(ln) ?? \"\"\n            const afterText = after?.textFor(ln) ?? \"\"\n            result[ln] = `${beforeText}{${type}(${args.map((a) => a).join(\",\")})}${afterText}`\n        }\n        return result\n    }\n\n    /**\n     * const tr = {\n     *     render: {special: {type: \"image_carousel\", image_key: \"image\" }},\n     *     mappings: [\n     *         {\n     *             if: \"other_image_key\",\n     *             then: {special: {type: \"image_carousel\", image_key: \"other_image_key\"}}\n     *         }\n     *     ]\n     * }\n     * const result = new RewriteSpecial().convert(tr,\"test\").result\n     * const expected = {render:  {'*': \"{image_carousel(image)}\"}, mappings: [{if: \"other_image_key\", then:  {'*': \"{image_carousel(other_image_key)}\"}} ]}\n     * result // => expected\n     *\n     * // Should put text before if specified\n     * const tr = {\n     *     render: {special: {type: \"image_carousel\", image_key: \"image\"}, before: {en: \"Some introduction\"} },\n     * }\n     * const result = new RewriteSpecial().convert(tr,\"test\").result\n     * const expected = {render:  {'en': \"Some introduction{image_carousel(image)}\"}}\n     * result // => expected\n     *\n     * // Should put text after if specified\n     * const tr = {\n     *     render: {special: {type: \"image_carousel\", image_key: \"image\"}, after: {en: \"Some footer\"} },\n     * }\n     * const result = new RewriteSpecial().convert(tr,\"test\").result\n     * const expected = {render:  {'en': \"{image_carousel(image)}Some footer\"}}\n     * result // => expected\n     */\n    convert(\n        json: TagRenderingConfigJson,\n        context: string\n    ): {\n        result: TagRenderingConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        const errors = []\n        json = Utils.Clone(json)\n        const paths: { path: string[]; type?: any; typeHint?: string }[] = tagrenderingconfigmeta\n        for (const path of paths) {\n            if (path.typeHint !== \"rendered\") {\n                continue\n            }\n            Utils.WalkPath(path.path, json, (leaf, travelled) =>\n                RewriteSpecial.convertIfNeeded(leaf, errors, context + \":\" + travelled.join(\".\"))\n            )\n        }\n\n        return {\n            result: json,\n            errors,\n        }\n    }\n}\n\nclass ExpandIconBadges extends DesugaringStep<PointRenderingConfigJson | LineRenderingConfigJson> {\n    private _state: DesugaringContext\n    private _layer: LayerConfigJson\n    private _expand: ExpandTagRendering\n\n    constructor(state: DesugaringContext, layer: LayerConfigJson) {\n        super(\"Expands shorthand properties on iconBadges\", [\"iconBadges\"], \"ExpandIconBadges\")\n        this._state = state\n        this._layer = layer\n        this._expand = new ExpandTagRendering(state, layer)\n    }\n\n    convert(\n        json: PointRenderingConfigJson | LineRenderingConfigJson,\n        context: string\n    ): {\n        result: PointRenderingConfigJson | LineRenderingConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        if (!json[\"iconBadges\"]) {\n            return { result: json }\n        }\n        const badgesJson = (<PointRenderingConfigJson>json).iconBadges\n\n        const iconBadges: { if: TagConfigJson; then: string | TagRenderingConfigJson }[] = []\n\n        const errs: string[] = []\n        const warns: string[] = []\n        for (let i = 0; i < badgesJson.length; i++) {\n            const iconBadge: { if: TagConfigJson; then: string | TagRenderingConfigJson } =\n                badgesJson[i]\n            const { errors, result, warnings } = this._expand.convert(\n                iconBadge.then,\n                context + \".iconBadges[\" + i + \"]\"\n            )\n            errs.push(...errors)\n            warns.push(...warnings)\n            if (result === undefined) {\n                iconBadges.push(iconBadge)\n                continue\n            }\n\n            iconBadges.push(\n                ...result.map((resolved) => ({\n                    if: iconBadge.if,\n                    then: resolved,\n                }))\n            )\n        }\n\n        return {\n            result: { ...json, iconBadges },\n            errors: errs,\n            warnings: warns,\n        }\n    }\n}\n\nclass PreparePointRendering extends Fuse<PointRenderingConfigJson | LineRenderingConfigJson> {\n    constructor(state: DesugaringContext, layer: LayerConfigJson) {\n        super(\n            \"Prepares point renderings by expanding 'icon' and 'iconBadges'\",\n            new On(\n                \"icon\",\n                new FirstOf(new ExpandTagRendering(state, layer, { applyCondition: false }))\n            ),\n            new ExpandIconBadges(state, layer)\n        )\n    }\n}\n\nclass SetFullNodeDatabase extends DesugaringStep<LayerConfigJson> {\n    constructor() {\n        super(\n            \"sets the fullNodeDatabase-bit if needed\",\n            [\"fullNodeDatabase\"],\n            \"SetFullNodeDatabase\"\n        )\n    }\n\n    convert(\n        json: LayerConfigJson,\n        context: string\n    ): {\n        result: LayerConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        const needsSpecial =\n            json.tagRenderings?.some((tr) => {\n                if (typeof tr === \"string\") {\n                    return false\n                }\n                const specs = ValidationUtils.getSpecialVisualisations(<TagRenderingConfigJson>tr)\n                return specs?.some((sp) => sp.needsNodeDatabase)\n            }) ?? false\n        if (!needsSpecial) {\n            return { result: json }\n        }\n        return {\n            result: { ...json, fullNodeDatabase: true },\n            information: [\"Layer \" + json.id + \" needs the fullNodeDatabase\"],\n        }\n    }\n}\n\nexport class AddMiniMap extends DesugaringStep<LayerConfigJson> {\n    private readonly _state: DesugaringContext\n\n    constructor(state: DesugaringContext) {\n        super(\n            \"Adds a default 'minimap'-element to the tagrenderings if none of the elements define such a minimap\",\n            [\"tagRenderings\"],\n            \"AddMiniMap\"\n        )\n        this._state = state\n    }\n\n    convert(layerConfig: LayerConfigJson, context: string): { result: LayerConfigJson } {\n        if (!layerConfig.tagRenderings || layerConfig.source === \"special\") {\n            return { result: layerConfig }\n        }\n        const state = this._state\n        const hasMinimap = ValidationUtils.hasSpecialVisualisation(layerConfig, \"minimap\")\n        if (!hasMinimap) {\n            layerConfig = { ...layerConfig }\n            layerConfig.tagRenderings = [...layerConfig.tagRenderings]\n            const minimap = state.tagRenderings.get(\"minimap\")\n            if (minimap === undefined) {\n                if (state.tagRenderings.size > 0) {\n                    throw \"The 'minimap'-builtin tagrendering is not defined. As such, it cannot be added automatically\"\n                }\n            } else {\n                layerConfig.tagRenderings.push(minimap)\n            }\n        }\n\n        return {\n            result: layerConfig,\n        }\n    }\n}\n\nexport class PrepareLayer extends Fuse<LayerConfigJson> {\n    constructor(state: DesugaringContext) {\n        super(\n            \"Fully prepares and expands a layer for the LayerConfig.\",\n            new On(\"tagRenderings\", new Each(new RewriteSpecial())),\n            new On(\"tagRenderings\", new Concat(new ExpandRewrite()).andThenF(Utils.Flatten)),\n            new On(\"tagRenderings\", (layer) => new Concat(new ExpandTagRendering(state, layer))),\n            new On(\"tagRenderings\", new Each(new DetectInline())),\n            new AddQuestionBox(),\n            new AddMiniMap(state),\n            new AddEditingElements(state),\n            new SetFullNodeDatabase(),\n            new On(\"mapRendering\", new Concat(new ExpandRewrite()).andThenF(Utils.Flatten)),\n            new On<(PointRenderingConfigJson | LineRenderingConfigJson)[], LayerConfigJson>(\n                \"mapRendering\",\n                (layer) => new Each(new PreparePointRendering(state, layer))\n            ),\n            new SetDefault(\"titleIcons\", [\"icons.defaults\"]),\n            new On(\n                \"titleIcons\",\n                (layer) =>\n                    new Concat(new ExpandTagRendering(state, layer, { noHardcodedStrings: true }))\n            ),\n            new ExpandFilter(state)\n        )\n    }\n}\n","import { Conversion } from \"./Conversion\"\nimport LayerConfig from \"../LayerConfig\"\nimport { LayerConfigJson } from \"../Json/LayerConfigJson\"\nimport Translations from \"../../../UI/i18n/Translations\"\nimport PointRenderingConfigJson from \"../Json/PointRenderingConfigJson\"\nimport { Translation, TypedTranslation } from \"../../../UI/i18n/Translation\"\n\nexport default class CreateNoteImportLayer extends Conversion<LayerConfigJson, LayerConfigJson> {\n    /**\n     * A closed note is included if it is less then 'n'-days closed\n     * @private\n     */\n    private readonly _includeClosedNotesDays: number\n\n    constructor(includeClosedNotesDays = 0) {\n        super(\n            [\n                \"Advanced conversion which deducts a layer showing all notes that are 'importable' (i.e. a note that contains a link to some MapComplete theme, with hash '#import').\",\n                \"The import buttons and matches will be based on the presets of the given theme\",\n            ].join(\"\\n\\n\"),\n            [],\n            \"CreateNoteImportLayer\"\n        )\n        this._includeClosedNotesDays = includeClosedNotesDays\n    }\n\n    convert(layerJson: LayerConfigJson, context: string): { result: LayerConfigJson } {\n        const t = Translations.t.importLayer\n\n        /**\n         * The note itself will contain `tags=k=v;k=v;k=v;...\n         * This must be matched with a regex.\n         * This is a simple JSON-object as how it'll be put into the layerConfigJson directly\n         */\n        const isShownIfAny: any[] = []\n        const layer = new LayerConfig(layerJson, \"while constructing a note-import layer\")\n        for (const preset of layer.presets) {\n            const mustMatchAll = []\n            for (const tag of preset.tags) {\n                const key = tag.key\n                const value = tag.value\n                const condition = \"_tags~(^|.*;)\" + key + \"=\" + value + \"($|;.*)\"\n                mustMatchAll.push(condition)\n            }\n            isShownIfAny.push({ and: mustMatchAll })\n        }\n\n        const pointRenderings = (layerJson.mapRendering ?? []).filter(\n            (r) => r !== null && r[\"location\"] !== undefined\n        )\n        const firstRender = <PointRenderingConfigJson>pointRenderings[0]\n        if (firstRender === undefined) {\n            throw `Layer ${layerJson.id} does not have a pointRendering: ` + context\n        }\n        const title = layer.presets[0].title\n\n        const importButton = {}\n        {\n            const translations = trs(t.importButton, {\n                layerId: layer.id,\n                title: layer.presets[0].title,\n            })\n            for (const key in translations) {\n                if (key !== \"_context\") {\n                    importButton[key] = \"{\" + translations[key] + \"}\"\n                } else {\n                    importButton[key] = translations[key]\n                }\n            }\n        }\n\n        function embed(prefix, translation: Translation, postfix) {\n            const result = {}\n            for (const language in translation.translations) {\n                result[language] = prefix + translation.translations[language] + postfix\n            }\n            result[\"_context\"] = translation.context\n            return result\n        }\n\n        function tr(translation: Translation) {\n            return { ...translation.translations, _context: translation.context }\n        }\n\n        function trs<T>(translation: TypedTranslation<T>, subs: T): Record<string, string> {\n            return { ...translation.Subs(subs).translations, _context: translation.context }\n        }\n\n        const result: LayerConfigJson = {\n            id: \"note_import_\" + layer.id,\n            // By disabling the name, the import-layers won't pollute the filter view \"name\": t.layerName.Subs({title: layer.title.render}).translations,\n            description: trs(t.description, { title: layer.title.render }),\n            source: {\n                osmTags: {\n                    and: [\"id~*\"],\n                },\n                geoJson:\n                    \"https://api.openstreetmap.org/api/0.6/notes.json?limit=10000&closed=\" +\n                    this._includeClosedNotesDays +\n                    \"&bbox={x_min},{y_min},{x_max},{y_max}\",\n                geoJsonZoomLevel: 10,\n                maxCacheAge: 0,\n            },\n            /* We need to set 'pass_all_features'\n             There are probably many note_import-layers, and we don't want the first one to gobble up all notes and then discard them...\n             */\n            passAllFeatures: true,\n            minzoom: Math.min(12, layerJson.minzoom - 2),\n            title: {\n                render: trs(t.popupTitle, { title }),\n            },\n            calculatedTags: [\n                \"_first_comment=get(feat)('comments')[0].text.toLowerCase()\",\n                \"_trigger_index=(() => {const lines = feat.properties['_first_comment'].split('\\\\n'); const matchesMapCompleteURL = lines.map(l => l.match(\\\".*https://mapcomplete.\\\\(org|osm.be\\\\)/\\\\([a-zA-Z_-]+\\\\)\\\\(.html\\\\)?.*#import\\\")); const matchedIndexes = matchesMapCompleteURL.map((doesMatch, i) => [doesMatch !== null, i]).filter(v => v[0]).map(v => v[1]); return matchedIndexes[0] })()\",\n                \"_comments_count=get(feat)('comments').length\",\n                \"_intro=(() => {const lines = get(feat)('comments')[0].text.split('\\\\n'); lines.splice(get(feat)('_trigger_index')-1, lines.length); return lines.filter(l => l !== '').join('<br/>');})()\",\n                \"_tags=(() => {let lines = get(feat)('comments')[0].text.split('\\\\n').map(l => l.trim()); lines.splice(0, get(feat)('_trigger_index') + 1); lines = lines.filter(l => l != ''); return lines.join(';');})()\",\n            ],\n            isShown: {\n                and: [\"_trigger_index~*\", { or: isShownIfAny }],\n            },\n            titleIcons: [\n                {\n                    render: \"<a href='https://openstreetmap.org/note/{id}' target='_blank'><img src='./assets/svg/osm-logo-us.svg'></a>\",\n                },\n            ],\n            tagRenderings: [\n                {\n                    id: \"Intro\",\n                    render: \"{_intro}\",\n                },\n                {\n                    id: \"conversation\",\n                    render: \"{visualize_note_comments(comments,1)}\",\n                    condition: \"_comments_count>1\",\n                },\n                {\n                    id: \"import\",\n                    render: importButton,\n                    condition: \"closed_at=\",\n                },\n                {\n                    id: \"close_note_\",\n                    render: embed(\n                        \"{close_note(\",\n                        t.notFound.Subs({ title }),\n                        \", ./assets/svg/close.svg, id, This feature does not exist, 18)}\"\n                    ),\n                    condition: \"closed_at=\",\n                },\n                {\n                    id: \"close_note_mapped\",\n                    render: embed(\n                        \"{close_note(\",\n                        t.alreadyMapped.Subs({ title }),\n                        \", ./assets/svg/duplicate.svg, id, Already mapped, 18)}\"\n                    ),\n                    condition: \"closed_at=\",\n                },\n                {\n                    id: \"handled\",\n                    render: tr(t.importHandled),\n                    condition: \"closed_at~*\",\n                },\n                {\n                    id: \"comment\",\n                    render: \"{add_note_comment()}\",\n                },\n                {\n                    id: \"add_image\",\n                    render: \"{add_image_to_note()}\",\n                },\n                {\n                    id: \"nearby_images\",\n                    render: tr(t.nearbyImagesIntro),\n                },\n                {\n                    id: \"all_tags\",\n                    render: \"{all_tags()}\",\n                    metacondition: {\n                        or: [\n                            \"__featureSwitchIsDebugging=true\",\n                            \"mapcomplete-show_tags=full\",\n                            \"mapcomplete-show_debug=yes\",\n                        ],\n                    },\n                },\n            ],\n            mapRendering: [\n                {\n                    location: [\"point\"],\n                    icon: {\n                        render: \"circle:white;help:black\",\n                        mappings: [\n                            {\n                                if: { or: [\"closed_at~*\", \"_imported=yes\"] },\n                                then: \"circle:white;checkmark:black\",\n                            },\n                        ],\n                    },\n                    iconSize: \"40,40\",\n                    anchor: \"center\",\n                },\n            ],\n        }\n\n        return {\n            result,\n        }\n    }\n}\n","import TagRenderingConfig from \"./TagRenderingConfig\"\nimport { ExtraFuncParams, ExtraFunctions } from \"../../Logic/ExtraFunctions\"\nimport LayerConfig from \"./LayerConfig\"\nimport { SpecialVisualization } from \"../../UI/SpecialVisualization\"\nimport SpecialVisualizations from \"../../UI/SpecialVisualizations\"\n\nexport default class DependencyCalculator {\n    public static GetTagRenderingDependencies(tr: TagRenderingConfig): string[] {\n        if (tr === undefined) {\n            throw \"Got undefined tag rendering in getTagRenderingDependencies\"\n        }\n        const deps: string[] = []\n\n        // All translated snippets\n        const parts: string[] = [].concat(...tr.EnumerateTranslations().map((tr) => tr.AllValues()))\n\n        for (const part of parts) {\n            const specialVizs: { func: SpecialVisualization; args: string[] }[] =\n                SpecialVisualizations.constructSpecification(part)\n                    .filter((p) => typeof p !== \"string\")\n                    .map((p) => <{ func: SpecialVisualization; args: string[] }>p)\n                    .filter((o) => o?.func?.getLayerDependencies !== undefined)\n            for (const specialViz of specialVizs) {\n                deps.push(...specialViz.func.getLayerDependencies(specialViz.args))\n            }\n        }\n        return deps\n    }\n\n    /**\n     * Returns a set of all other layer-ids that this layer needs to function.\n     * E.g. if this layers does snap to another layer in the preset, this other layer id will be mentioned\n     */\n    public static getLayerDependencies(\n        layer: LayerConfig\n    ): { neededLayer: string; reason: string; context?: string; neededBy: string }[] {\n        const deps: { neededLayer: string; reason: string; context?: string; neededBy: string }[] =\n            []\n\n        for (let i = 0; layer.presets !== undefined && i < layer.presets.length; i++) {\n            const preset = layer.presets[i]\n            preset.preciseInput?.snapToLayers?.forEach((id) => {\n                deps.push({\n                    neededLayer: id,\n                    reason: \"a preset snaps to this layer\",\n                    context: \"presets[\" + i + \"]\",\n                    neededBy: layer.id,\n                })\n            })\n        }\n\n        for (const tr of layer.AllTagRenderings()) {\n            for (const dep of DependencyCalculator.GetTagRenderingDependencies(tr)) {\n                deps.push({\n                    neededLayer: dep,\n                    reason: \"a tagrendering needs this layer\",\n                    context: tr.id,\n                    neededBy: layer.id,\n                })\n            }\n        }\n\n        if (layer.calculatedTags?.length > 0) {\n            const obj = {\n                type: \"Feature\",\n                geometry: {\n                    type: \"Point\",\n                    coordinates: [0, 0],\n                },\n                properties: {\n                    id: \"node/1\",\n                },\n            }\n            let currentKey = undefined\n            let currentLine = undefined\n            const params: ExtraFuncParams = {\n                getFeatureById: (_) => undefined,\n                getFeaturesWithin: (layerId, _) => {\n                    if (layerId === \"*\") {\n                        // This is a wildcard\n                        return []\n                    }\n\n                    // The important line: steal the dependencies!\n                    deps.push({\n                        neededLayer: layerId,\n                        reason: \"a calculated tag loads features from this layer\",\n                        context:\n                            \"calculatedTag[\" +\n                            currentLine +\n                            \"] which calculates the value for \" +\n                            currentKey,\n                        neededBy: layer.id,\n                    })\n\n                    return []\n                },\n            }\n            const helpers = ExtraFunctions.constructHelpers(params)\n            // ... Run the calculated tag code, which will trigger the getFeaturesWithin above...\n            for (let i = 0; i < layer.calculatedTags.length; i++) {\n                const [key, code] = layer.calculatedTags[i]\n                currentLine = i // Leak the state...\n                currentKey = key\n                try {\n                    const func = new Function(\n                        \"feat\",\n                        \"{\" + ExtraFunctions.types.join(\",\") + \"}\",\n                        \"return \" + code + \";\"\n                    )\n                    const result = func(obj, helpers)\n                    obj.properties[key] = JSON.stringify(result)\n                } catch (e) {}\n            }\n        }\n\n        return deps\n    }\n}\n","import {\n    Concat,\n    Conversion,\n    DesugaringContext,\n    DesugaringStep,\n    Each,\n    Fuse,\n    On,\n    Pass,\n    SetDefault,\n} from \"./Conversion\"\nimport { LayoutConfigJson } from \"../Json/LayoutConfigJson\"\nimport { PrepareLayer } from \"./PrepareLayer\"\nimport { LayerConfigJson } from \"../Json/LayerConfigJson\"\nimport { Utils } from \"../../../Utils\"\nimport Constants from \"../../Constants\"\nimport CreateNoteImportLayer from \"./CreateNoteImportLayer\"\nimport LayerConfig from \"../LayerConfig\"\nimport { TagRenderingConfigJson } from \"../Json/TagRenderingConfigJson\"\nimport DependencyCalculator from \"../DependencyCalculator\"\nimport { AddContextToTranslations } from \"./AddContextToTranslations\"\nimport ValidationUtils from \"./ValidationUtils\"\n\nclass SubstituteLayer extends Conversion<string | LayerConfigJson, LayerConfigJson[]> {\n    private readonly _state: DesugaringContext\n\n    constructor(state: DesugaringContext) {\n        super(\n            \"Converts the identifier of a builtin layer into the actual layer, or converts a 'builtin' syntax with override in the fully expanded form\",\n            [],\n            \"SubstituteLayer\"\n        )\n        this._state = state\n    }\n\n    convert(\n        json: string | LayerConfigJson,\n        context: string\n    ): { result: LayerConfigJson[]; errors: string[]; information?: string[] } {\n        const errors = []\n        const information = []\n        const state = this._state\n\n        function reportNotFound(name: string) {\n            const knownLayers = Array.from(state.sharedLayers.keys())\n            const withDistance = knownLayers.map((lname) => [\n                lname,\n                Utils.levenshteinDistance(name, lname),\n            ])\n            withDistance.sort((a, b) => a[1] - b[1])\n            const ids = withDistance.map((n) => n[0])\n            // Known builtin layers are \"+.join(\",\")+\"\\n    For more information, see \"\n            errors.push(`${context}: The layer with name ${name} was not found as a builtin layer. Perhaps you meant ${ids[0]}, ${ids[1]} or ${ids[2]}?\n For an overview of all available layers, refer to https://github.com/pietervdvn/MapComplete/blob/develop/Docs/BuiltinLayers.md`)\n        }\n\n        if (typeof json === \"string\") {\n            const found = state.sharedLayers.get(json)\n            if (found === undefined) {\n                reportNotFound(json)\n                return {\n                    result: null,\n                    errors,\n                }\n            }\n            return {\n                result: [found],\n                errors,\n            }\n        }\n\n        if (json[\"builtin\"] !== undefined) {\n            let names = json[\"builtin\"]\n            if (typeof names === \"string\") {\n                names = [names]\n            }\n            const layers = []\n\n            for (const name of names) {\n                const found = Utils.Clone(state.sharedLayers.get(name))\n                if (found === undefined) {\n                    reportNotFound(name)\n                    continue\n                }\n                if (\n                    json[\"override\"][\"tagRenderings\"] !== undefined &&\n                    (found[\"tagRenderings\"] ?? []).length > 0\n                ) {\n                    errors.push(\n                        `At ${context}: when overriding a layer, an override is not allowed to override into tagRenderings. Use \"+tagRenderings\" or \"tagRenderings+\" instead to prepend or append some questions.`\n                    )\n                }\n                try {\n                    Utils.Merge(json[\"override\"], found)\n                    layers.push(found)\n                } catch (e) {\n                    errors.push(\n                        `At ${context}: could not apply an override due to: ${e}.\\nThe override is: ${JSON.stringify(\n                            json[\"override\"]\n                        )}`\n                    )\n                }\n\n                if (json[\"hideTagRenderingsWithLabels\"]) {\n                    const hideLabels: Set<string> = new Set(json[\"hideTagRenderingsWithLabels\"])\n                    // These labels caused at least one deletion\n                    const usedLabels: Set<string> = new Set<string>()\n                    const filtered = []\n                    for (const tr of found.tagRenderings) {\n                        const labels = tr[\"labels\"]\n                        if (labels !== undefined) {\n                            const forbiddenLabel = labels.findIndex((l) => hideLabels.has(l))\n                            if (forbiddenLabel >= 0) {\n                                usedLabels.add(labels[forbiddenLabel])\n                                information.push(\n                                    context +\n                                        \": Dropping tagRendering \" +\n                                        tr[\"id\"] +\n                                        \" as it has a forbidden label: \" +\n                                        labels[forbiddenLabel]\n                                )\n                                continue\n                            }\n                        }\n\n                        if (hideLabels.has(tr[\"id\"])) {\n                            usedLabels.add(tr[\"id\"])\n                            information.push(\n                                context +\n                                    \": Dropping tagRendering \" +\n                                    tr[\"id\"] +\n                                    \" as its id is a forbidden label\"\n                            )\n                            continue\n                        }\n\n                        if (hideLabels.has(tr[\"group\"])) {\n                            usedLabels.add(tr[\"group\"])\n                            information.push(\n                                context +\n                                    \": Dropping tagRendering \" +\n                                    tr[\"id\"] +\n                                    \" as its group `\" +\n                                    tr[\"group\"] +\n                                    \"` is a forbidden label\"\n                            )\n                            continue\n                        }\n\n                        filtered.push(tr)\n                    }\n                    const unused = Array.from(hideLabels).filter((l) => !usedLabels.has(l))\n                    if (unused.length > 0) {\n                        errors.push(\n                            \"This theme specifies that certain tagrenderings have to be removed based on forbidden layers. One or more of these layers did not match any tagRenderings and caused no deletions: \" +\n                                unused.join(\", \") +\n                                \"\\n   This means that this label can be removed or that the original tagRendering that should be deleted does not have this label anymore\"\n                        )\n                    }\n                    found.tagRenderings = filtered\n                }\n            }\n            return {\n                result: layers,\n                errors,\n                information,\n            }\n        }\n\n        return {\n            result: [json],\n            errors,\n        }\n    }\n}\n\nclass AddDefaultLayers extends DesugaringStep<LayoutConfigJson> {\n    private readonly _state: DesugaringContext\n\n    constructor(state: DesugaringContext) {\n        super(\n            \"Adds the default layers, namely: \" + Constants.added_by_default.join(\", \"),\n            [\"layers\"],\n            \"AddDefaultLayers\"\n        )\n        this._state = state\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): { result: LayoutConfigJson; errors: string[]; warnings: string[] } {\n        const errors = []\n        const warnings = []\n        const state = this._state\n        json.layers = [...json.layers]\n        const alreadyLoaded = new Set(json.layers.map((l) => l[\"id\"]))\n\n        for (const layerName of Constants.added_by_default) {\n            const v = state.sharedLayers.get(layerName)\n            if (v === undefined) {\n                errors.push(\"Default layer \" + layerName + \" not found\")\n                continue\n            }\n            if (alreadyLoaded.has(v.id)) {\n                warnings.push(\n                    \"Layout \" +\n                        context +\n                        \" already has a layer with name \" +\n                        v.id +\n                        \"; skipping inclusion of this builtin layer\"\n                )\n                continue\n            }\n            json.layers.push(v)\n        }\n\n        return {\n            result: json,\n            errors,\n            warnings,\n        }\n    }\n}\n\nclass AddImportLayers extends DesugaringStep<LayoutConfigJson> {\n    constructor() {\n        super(\n            \"For every layer in the 'layers'-list, create a new layer which'll import notes. (Note that priviliged layers and layers which have a geojson-source set are ignored)\",\n            [\"layers\"],\n            \"AddImportLayers\"\n        )\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): { result: LayoutConfigJson; errors?: string[]; warnings?: string[] } {\n        if (!(json.enableNoteImports ?? true)) {\n            return {\n                warnings: [\n                    \"Not creating a note import layers for theme \" +\n                        json.id +\n                        \" as they are disabled\",\n                ],\n                result: json,\n            }\n        }\n        const errors = []\n\n        json = { ...json }\n        const allLayers: LayerConfigJson[] = <LayerConfigJson[]>json.layers\n        json.layers = [...json.layers]\n\n        const creator = new CreateNoteImportLayer()\n        for (let i1 = 0; i1 < allLayers.length; i1++) {\n            const layer = allLayers[i1]\n            if (layer.source === undefined) {\n                // Priviliged layers are skipped\n                continue\n            }\n\n            if (layer.source[\"geoJson\"] !== undefined) {\n                // Layer which don't get their data from OSM are skipped\n                continue\n            }\n\n            if (layer.title === undefined || layer.name === undefined) {\n                // Anonymous layers and layers without popup are skipped\n                continue\n            }\n\n            if (layer.presets === undefined || layer.presets.length == 0) {\n                // A preset is needed to be able to generate a new point\n                continue\n            }\n\n            try {\n                const importLayerResult = creator.convert(\n                    layer,\n                    context + \".(noteimportlayer)[\" + i1 + \"]\"\n                )\n                if (importLayerResult.result !== undefined) {\n                    json.layers.push(importLayerResult.result)\n                }\n            } catch (e) {\n                errors.push(\"Could not generate an import-layer for \" + layer.id + \" due to \" + e)\n            }\n        }\n\n        return {\n            errors,\n            result: json,\n        }\n    }\n}\n\nclass AddContextToTranslationsInLayout extends DesugaringStep<LayoutConfigJson> {\n    constructor() {\n        super(\n            \"Adds context to translations, including the prefix 'themes:json.id'; this is to make sure terms in an 'overrides' or inline layer are linkable too\",\n            [\"_context\"],\n            \"AddContextToTranlationsInLayout\"\n        )\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): {\n        result: LayoutConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        const conversion = new AddContextToTranslations<LayoutConfigJson>(\"themes:\")\n        return conversion.convert(json, json.id)\n    }\n}\n\nclass ApplyOverrideAll extends DesugaringStep<LayoutConfigJson> {\n    constructor() {\n        super(\n            \"Applies 'overrideAll' onto every 'layer'. The 'overrideAll'-field is removed afterwards\",\n            [\"overrideAll\", \"layers\"],\n            \"ApplyOverrideAll\"\n        )\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): { result: LayoutConfigJson; errors: string[]; warnings: string[] } {\n        const overrideAll = json.overrideAll\n        if (overrideAll === undefined) {\n            return { result: json, warnings: [], errors: [] }\n        }\n\n        json = { ...json }\n\n        delete json.overrideAll\n        const newLayers = []\n        for (let layer of json.layers) {\n            layer = Utils.Clone(<LayerConfigJson>layer)\n            Utils.Merge(overrideAll, layer)\n            newLayers.push(layer)\n        }\n        json.layers = newLayers\n\n        return { result: json, warnings: [], errors: [] }\n    }\n}\n\nclass AddDependencyLayersToTheme extends DesugaringStep<LayoutConfigJson> {\n    private readonly _state: DesugaringContext\n\n    constructor(state: DesugaringContext) {\n        super(\n            `If a layer has a dependency on another layer, these layers are added automatically on the theme. (For example: defibrillator depends on 'walls_and_buildings' to snap onto. This layer is added automatically)\n\n            Note that these layers are added _at the start_ of the layer list, meaning that they will see _every_ feature.\n            Furthermore, \\`passAllFeatures\\` will be set, so that they won't steal away features from further layers.\n            Some layers (e.g. \\`all_buildings_and_walls\\' or \\'streets_with_a_name\\') are invisible, so by default, \\'force_load\\' is set too.\n            `,\n            [\"layers\"],\n            \"AddDependencyLayersToTheme\"\n        )\n        this._state = state\n    }\n\n    private static CalculateDependencies(\n        alreadyLoaded: LayerConfigJson[],\n        allKnownLayers: Map<string, LayerConfigJson>,\n        themeId: string\n    ): { config: LayerConfigJson; reason: string }[] {\n        const dependenciesToAdd: { config: LayerConfigJson; reason: string }[] = []\n        const loadedLayerIds: Set<string> = new Set<string>(alreadyLoaded.map((l) => l.id))\n\n        // Verify cross-dependencies\n        let unmetDependencies: {\n            neededLayer: string\n            neededBy: string\n            reason: string\n            context?: string\n        }[] = []\n        do {\n            const dependencies: {\n                neededLayer: string\n                reason: string\n                context?: string\n                neededBy: string\n            }[] = []\n\n            for (const layerConfig of alreadyLoaded) {\n                try {\n                    const layerDeps = DependencyCalculator.getLayerDependencies(\n                        new LayerConfig(layerConfig, themeId + \"(dependencies)\")\n                    )\n                    dependencies.push(...layerDeps)\n                } catch (e) {\n                    console.error(e)\n                    throw (\n                        \"Detecting layer dependencies for \" + layerConfig.id + \" failed due to \" + e\n                    )\n                }\n            }\n\n            for (const dependency of dependencies) {\n                if (loadedLayerIds.has(dependency.neededLayer)) {\n                    // We mark the needed layer as 'mustLoad'\n                    alreadyLoaded.find((l) => l.id === dependency.neededLayer).forceLoad = true\n                }\n            }\n\n            // During the generate script, builtin layers are verified but not loaded - so we have to add them manually here\n            // Their existence is checked elsewhere, so this is fine\n            unmetDependencies = dependencies.filter((dep) => !loadedLayerIds.has(dep.neededLayer))\n            for (const unmetDependency of unmetDependencies) {\n                if (loadedLayerIds.has(unmetDependency.neededLayer)) {\n                    continue\n                }\n                const dep = Utils.Clone(allKnownLayers.get(unmetDependency.neededLayer))\n                const reason =\n                    \"This layer is needed by \" +\n                    unmetDependency.neededBy +\n                    \" because \" +\n                    unmetDependency.reason +\n                    \" (at \" +\n                    unmetDependency.context +\n                    \")\"\n                if (dep === undefined) {\n                    const message = [\n                        \"Loading a dependency failed: layer \" +\n                            unmetDependency.neededLayer +\n                            \" is not found, neither as layer of \" +\n                            themeId +\n                            \" nor as builtin layer.\",\n                        reason,\n                        \"Loaded layers are: \" + alreadyLoaded.map((l) => l.id).join(\",\"),\n                    ]\n                    throw message.join(\"\\n\\t\")\n                }\n\n                dep.forceLoad = true\n                dep.passAllFeatures = true\n                dep.description = reason\n                dependenciesToAdd.unshift({\n                    config: dep,\n                    reason,\n                })\n                loadedLayerIds.add(dep.id)\n                unmetDependencies = unmetDependencies.filter(\n                    (d) => d.neededLayer !== unmetDependency.neededLayer\n                )\n            }\n        } while (unmetDependencies.length > 0)\n\n        return dependenciesToAdd\n    }\n\n    convert(\n        theme: LayoutConfigJson,\n        context: string\n    ): { result: LayoutConfigJson; information: string[] } {\n        const state = this._state\n        const allKnownLayers: Map<string, LayerConfigJson> = state.sharedLayers\n        const knownTagRenderings: Map<string, TagRenderingConfigJson> = state.tagRenderings\n        const information = []\n        const layers: LayerConfigJson[] = <LayerConfigJson[]>theme.layers // Layers should be expanded at this point\n\n        knownTagRenderings.forEach((value, key) => {\n            value.id = key\n        })\n\n        const dependencies = AddDependencyLayersToTheme.CalculateDependencies(\n            layers,\n            allKnownLayers,\n            theme.id\n        )\n        for (const dependency of dependencies) {\n        }\n        if (dependencies.length > 0) {\n            for (const dependency of dependencies) {\n                information.push(\n                    context +\n                        \": added \" +\n                        dependency.config.id +\n                        \" to the theme. \" +\n                        dependency.reason\n                )\n            }\n        }\n        layers.unshift(...dependencies.map((l) => l.config))\n\n        return {\n            result: {\n                ...theme,\n                layers: layers,\n            },\n            information,\n        }\n    }\n}\n\nclass PreparePersonalTheme extends DesugaringStep<LayoutConfigJson> {\n    private readonly _state: DesugaringContext\n\n    constructor(state: DesugaringContext) {\n        super(\"Adds every public layer to the personal theme\", [\"layers\"], \"PreparePersonalTheme\")\n        this._state = state\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): {\n        result: LayoutConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        if (json.id !== \"personal\") {\n            return { result: json }\n        }\n\n        // The only thing this _really_ does, is adding the layer-ids into 'layers'\n        // All other preparations are done by the 'override-all'-block in personal.json\n\n        json.layers = Array.from(this._state.sharedLayers.keys())\n            .filter((l) => this._state.sharedLayers.get(l).source !== null)\n            .filter((l) => this._state.publicLayers.has(l))\n        return {\n            result: json,\n            information: [\"The personal theme has \" + json.layers.length + \" public layers\"],\n        }\n    }\n}\n\nclass WarnForUnsubstitutedLayersInTheme extends DesugaringStep<LayoutConfigJson> {\n    constructor() {\n        super(\n            \"Generates a warning if a theme uses an unsubstituted layer\",\n            [\"layers\"],\n            \"WarnForUnsubstitutedLayersInTheme\"\n        )\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): {\n        result: LayoutConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        if (json.hideFromOverview === true) {\n            return { result: json }\n        }\n        const warnings = []\n        for (const layer of json.layers) {\n            if (typeof layer === \"string\") {\n                continue\n            }\n            if (layer[\"builtin\"] !== undefined) {\n                continue\n            }\n            if (layer[\"source\"][\"geojson\"] !== undefined) {\n                // We turn a blind eye for import layers\n                continue\n            }\n\n            const wrn =\n                \"The theme \" +\n                json.id +\n                \" has an inline layer: \" +\n                layer[\"id\"] +\n                \". This is discouraged.\"\n            warnings.push(wrn)\n        }\n        return {\n            result: json,\n            warnings,\n        }\n    }\n}\n\nexport class PrepareTheme extends Fuse<LayoutConfigJson> {\n    private state: DesugaringContext\n    constructor(\n        state: DesugaringContext,\n        options?: {\n            skipDefaultLayers: false | boolean\n        }\n    ) {\n        super(\n            \"Fully prepares and expands a theme\",\n\n            new AddContextToTranslationsInLayout(),\n            new PreparePersonalTheme(state),\n            new WarnForUnsubstitutedLayersInTheme(),\n            new On(\"layers\", new Concat(new SubstituteLayer(state))),\n            new SetDefault(\"socialImage\", \"assets/SocialImage.png\", true),\n            // We expand all tagrenderings first...\n            new On(\"layers\", new Each(new PrepareLayer(state))),\n            // Then we apply the override all\n            new ApplyOverrideAll(),\n            // And then we prepare all the layers _again_ in case that an override all contained unexpanded tagrenderings!\n            new On(\"layers\", new Each(new PrepareLayer(state))),\n            options?.skipDefaultLayers\n                ? new Pass(\"AddDefaultLayers is disabled due to the set flag\")\n                : new AddDefaultLayers(state),\n            new AddDependencyLayersToTheme(state),\n            new AddImportLayers()\n        )\n        this.state = state\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): { result: LayoutConfigJson; errors: string[]; warnings: string[]; information: string[] } {\n        const result = super.convert(json, context)\n        if (this.state.publicLayers.size === 0) {\n            // THis is a bootstrapping run, no need to already set this flag\n            return result\n        }\n\n        const needsNodeDatabase = result.result.layers?.some((l: LayerConfigJson) =>\n            l.tagRenderings?.some((tr: TagRenderingConfigJson) =>\n                ValidationUtils.getSpecialVisualisations(tr)?.some(\n                    (special) => special.needsNodeDatabase\n                )\n            )\n        )\n        if (needsNodeDatabase) {\n            result.information.push(\n                context +\n                    \": setting 'enableNodeDatabase' as this theme uses a special visualisation which needs to keep track of _all_ nodes\"\n            )\n            result.result.enableNodeDatabase = true\n        }\n\n        return result\n    }\n}\n","import {DesugaringStep, Each, Fuse, On} from \"./Conversion\"\nimport {LayerConfigJson} from \"../Json/LayerConfigJson\"\nimport LayerConfig from \"../LayerConfig\"\nimport {Utils} from \"../../../Utils\"\nimport Constants from \"../../Constants\"\nimport {Translation} from \"../../../UI/i18n/Translation\"\nimport {LayoutConfigJson} from \"../Json/LayoutConfigJson\"\nimport LayoutConfig from \"../LayoutConfig\"\nimport {TagRenderingConfigJson} from \"../Json/TagRenderingConfigJson\"\nimport {TagUtils} from \"../../../Logic/Tags/TagUtils\"\nimport {ExtractImages} from \"./FixImages\"\nimport {And} from \"../../../Logic/Tags/And\"\nimport Translations from \"../../../UI/i18n/Translations\"\nimport Svg from \"../../../Svg\"\nimport FilterConfigJson from \"../Json/FilterConfigJson\"\nimport DeleteConfig from \"../DeleteConfig\"\nimport {QuestionableTagRenderingConfigJson} from \"../Json/QuestionableTagRenderingConfigJson\"\nimport Validators from \"../../../UI/InputElement/Validators\"\nimport TagRenderingConfig from \"../TagRenderingConfig\";\n\nclass ValidateLanguageCompleteness extends DesugaringStep<any> {\n    private readonly _languages: string[]\n\n    constructor(...languages: string[]) {\n        super(\n            \"Checks that the given object is fully translated in the specified languages\",\n            [],\n            \"ValidateLanguageCompleteness\"\n        )\n        this._languages = languages ?? [\"en\"]\n    }\n\n    convert(\n        obj: any,\n        context: string\n    ): { result: LayerConfig; errors: string[]; warnings: string[] } {\n        const errors = []\n        const warnings: string[] = []\n        const translations = Translation.ExtractAllTranslationsFrom(obj)\n        for (const neededLanguage of this._languages) {\n            translations\n                .filter(\n                    (t) =>\n                        t.tr.translations[neededLanguage] === undefined &&\n                        t.tr.translations[\"*\"] === undefined\n                )\n                .forEach((missing) => {\n                    errors.push(\n                        context +\n                        \"A theme should be translation-complete for \" +\n                        neededLanguage +\n                        \", but it lacks a translation for \" +\n                        missing.context +\n                        \".\\n\\tThe known translation is \" +\n                        missing.tr.textFor(\"en\")\n                    )\n                })\n        }\n\n        return {\n            result: obj,\n            errors,\n            warnings,\n        }\n    }\n}\n\nexport class DoesImageExist extends DesugaringStep<string> {\n    private readonly _knownImagePaths: Set<string>\n    private readonly _ignore?: Set<string>\n    private readonly doesPathExist: (path: string) => boolean = undefined\n\n    constructor(\n        knownImagePaths: Set<string>,\n        checkExistsSync: (path: string) => boolean = undefined,\n        ignore?: Set<string>\n    ) {\n        super(\"Checks if an image exists\", [], \"DoesImageExist\")\n        this._ignore = ignore\n        this._knownImagePaths = knownImagePaths\n        this.doesPathExist = checkExistsSync\n    }\n\n    convert(\n        image: string,\n        context: string\n    ): { result: string; errors?: string[]; warnings?: string[]; information?: string[] } {\n        if (this._ignore?.has(image)) {\n            return {result: image}\n        }\n\n        const errors = []\n        const warnings = []\n        const information = []\n        if (image.indexOf(\"{\") >= 0) {\n            information.push(\"Ignoring image with { in the path: \" + image)\n            return {result: image}\n        }\n\n        if (image === \"assets/SocialImage.png\") {\n            return {result: image}\n        }\n        if (image.match(/[a-z]*/)) {\n            if (Svg.All[image + \".svg\"] !== undefined) {\n                // This is a builtin img, e.g. 'checkmark' or 'crosshair'\n                return {result: image}\n            }\n        }\n\n        if (image.startsWith(\"<\") && image.endsWith(\">\")) {\n            // This is probably HTML, you're on your own here\n            return {result: image}\n        }\n\n        if (!this._knownImagePaths.has(image)) {\n            if (this.doesPathExist === undefined) {\n                errors.push(\n                    `Image with path ${image} not found or not attributed; it is used in ${context}`\n                )\n            } else if (!this.doesPathExist(image)) {\n                errors.push(\n                    `Image with path ${image} does not exist; it is used in ${context}.\\n     Check for typo's and missing directories in the path.`\n                )\n            } else {\n                errors.push(\n                    `Image with path ${image} is not attributed (but it exists); execute 'npm run query:licenses' to add the license information and/or run 'npm run generate:licenses' to compile all the license info`\n                )\n            }\n        }\n        return {\n            result: image,\n            errors,\n            warnings,\n            information,\n        }\n    }\n}\n\nclass ValidateTheme extends DesugaringStep<LayoutConfigJson> {\n    /**\n     * The paths where this layer is originally saved. Triggers some extra checks\n     * @private\n     */\n    private readonly _path?: string\n    private readonly _isBuiltin: boolean\n    //private readonly _sharedTagRenderings: Map<string, any>\n    private readonly _validateImage: DesugaringStep<string>\n    private readonly _extractImages: ExtractImages = undefined\n\n    constructor(\n        doesImageExist: DoesImageExist,\n        path: string,\n        isBuiltin: boolean,\n        sharedTagRenderings?: Set<string>\n    ) {\n        super(\"Doesn't change anything, but emits warnings and errors\", [], \"ValidateTheme\")\n        this._validateImage = doesImageExist\n        this._path = path\n        this._isBuiltin = isBuiltin\n        if (sharedTagRenderings) {\n            this._extractImages = new ExtractImages(this._isBuiltin, sharedTagRenderings)\n        }\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): { result: LayoutConfigJson; errors: string[]; warnings: string[]; information: string[] } {\n        const errors = []\n        const warnings = []\n        const information = []\n\n        const theme = new LayoutConfig(json, this._isBuiltin)\n\n        {\n            // Legacy format checks\n            if (this._isBuiltin) {\n                if (json[\"units\"] !== undefined) {\n                    errors.push(\n                        \"The theme \" +\n                        json.id +\n                        \" has units defined - these should be defined on the layer instead. (Hint: use overrideAll: { '+units': ... }) \"\n                    )\n                }\n                if (json[\"roamingRenderings\"] !== undefined) {\n                    errors.push(\n                        \"Theme \" +\n                        json.id +\n                        \" contains an old 'roamingRenderings'. Use an 'overrideAll' instead\"\n                    )\n                }\n            }\n        }\n        if (this._isBuiltin && this._extractImages !== undefined) {\n            // Check images: are they local, are the licenses there, is the theme icon square, ...\n            const images = this._extractImages.convertStrict(json, \"validation\")\n            const remoteImages = images.filter((img) => img.path.indexOf(\"http\") == 0)\n            for (const remoteImage of remoteImages) {\n                errors.push(\n                    \"Found a remote image: \" +\n                    remoteImage +\n                    \" in theme \" +\n                    json.id +\n                    \", please download it.\"\n                )\n            }\n            for (const image of images) {\n                this._validateImage.convertJoin(\n                    image.path,\n                    context === undefined ? \"\" : ` in the theme ${context} at ${image.context}`,\n                    errors,\n                    warnings,\n                    information\n                )\n            }\n        }\n\n        try {\n            if (this._isBuiltin) {\n                if (theme.id !== theme.id.toLowerCase()) {\n                    errors.push(\"Theme ids should be in lowercase, but it is \" + theme.id)\n                }\n\n                const filename = this._path.substring(\n                    this._path.lastIndexOf(\"/\") + 1,\n                    this._path.length - 5\n                )\n                if (theme.id !== filename) {\n                    errors.push(\n                        \"Theme ids should be the same as the name.json, but we got id: \" +\n                        theme.id +\n                        \" and filename \" +\n                        filename +\n                        \" (\" +\n                        this._path +\n                        \")\"\n                    )\n                }\n                this._validateImage.convertJoin(\n                    theme.icon,\n                    context + \".icon\",\n                    errors,\n                    warnings,\n                    information\n                )\n            }\n            const dups = Utils.Dupiclates(json.layers.map((layer) => layer[\"id\"]))\n            if (dups.length > 0) {\n                errors.push(\n                    `The theme ${json.id} defines multiple layers with id ${dups.join(\", \")}`\n                )\n            }\n            if (json[\"mustHaveLanguage\"] !== undefined) {\n                const checked = new ValidateLanguageCompleteness(\n                    ...json[\"mustHaveLanguage\"]\n                ).convert(theme, theme.id)\n\n                errors.push(...checked.errors)\n            }\n            if (!json.hideFromOverview && theme.id !== \"personal\" && this._isBuiltin) {\n                // The first key in the the title-field must be english, otherwise the title in the loading page will be the different language\n                const targetLanguage = theme.title.SupportedLanguages()[0]\n                if (targetLanguage !== \"en\") {\n                    warnings.push(\n                        `TargetLanguage is not 'en' for public theme ${theme.id}, it is ${targetLanguage}. Move 'en' up in the title of the theme and set it as the first key`\n                    )\n                }\n\n                // Official, public themes must have a full english translation\n                const checked = new ValidateLanguageCompleteness(\"en\").convert(theme, theme.id)\n                errors.push(...checked.errors)\n            }\n        } catch (e) {\n            errors.push(e)\n        }\n\n        return {\n            result: json,\n            errors,\n            warnings,\n            information,\n        }\n    }\n}\n\nexport class ValidateThemeAndLayers extends Fuse<LayoutConfigJson> {\n    constructor(\n        doesImageExist: DoesImageExist,\n        path: string,\n        isBuiltin: boolean,\n        sharedTagRenderings?: Set<string>\n    ) {\n        super(\n            \"Validates a theme and the contained layers\",\n            new ValidateTheme(doesImageExist, path, isBuiltin, sharedTagRenderings),\n            new On(\"layers\", new Each(new ValidateLayer(undefined, isBuiltin, doesImageExist)))\n        )\n    }\n}\n\nclass OverrideShadowingCheck extends DesugaringStep<LayoutConfigJson> {\n    constructor() {\n        super(\n            \"Checks that an 'overrideAll' does not override a single override\",\n            [],\n            \"OverrideShadowingCheck\"\n        )\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        _: string\n    ): { result: LayoutConfigJson; errors?: string[]; warnings?: string[] } {\n        const overrideAll = json.overrideAll\n        if (overrideAll === undefined) {\n            return {result: json}\n        }\n\n        const errors = []\n        const withOverride = json.layers.filter((l) => l[\"override\"] !== undefined)\n\n        for (const layer of withOverride) {\n            for (const key in overrideAll) {\n                if (key.endsWith(\"+\") || key.startsWith(\"+\")) {\n                    // This key will _add_ to the list, not overwrite it - so no warning is needed\n                    continue\n                }\n                if (\n                    layer[\"override\"][key] !== undefined ||\n                    layer[\"override\"][\"=\" + key] !== undefined\n                ) {\n                    const w =\n                        \"The override of layer \" +\n                        JSON.stringify(layer[\"builtin\"]) +\n                        \" has a shadowed property: \" +\n                        key +\n                        \" is overriden by overrideAll of the theme\"\n                    errors.push(w)\n                }\n            }\n        }\n\n        return {result: json, errors}\n    }\n}\n\nclass MiscThemeChecks extends DesugaringStep<LayoutConfigJson> {\n    constructor() {\n        super(\"Miscelleanous checks on the theme\", [], \"MiscThemesChecks\")\n    }\n\n    convert(\n        json: LayoutConfigJson,\n        context: string\n    ): {\n        result: LayoutConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        const warnings = []\n        const errors = []\n        if (json.id !== \"personal\" && (json.layers === undefined || json.layers.length === 0)) {\n            errors.push(\"The theme \" + json.id + \" has no 'layers' defined (\" + context + \")\")\n        }\n        if (json.socialImage === \"\") {\n            warnings.push(\"Social image for theme \" + json.id + \" is the emtpy string\")\n        }\n        return {\n            result: json,\n            warnings,\n            errors,\n        }\n    }\n}\n\nexport class PrevalidateTheme extends Fuse<LayoutConfigJson> {\n    constructor() {\n        super(\n            \"Various consistency checks on the raw JSON\",\n            new MiscThemeChecks(),\n            new OverrideShadowingCheck()\n        )\n    }\n}\n\nexport class DetectConflictingAddExtraTags extends DesugaringStep<TagRenderingConfigJson> {\n    constructor() {\n        super(\"The `if`-part in a mapping might set some keys. Those key are not allowed to be set in the `addExtraTags`, as this might result in conflicting values\", [], \"DetectConflictingAddExtraTags\");\n    }\n\n    convert(json: TagRenderingConfigJson, context: string): {\n        result: TagRenderingConfigJson;\n        errors?: string[];\n        warnings?: string[];\n        information?: string[]\n    } {\n\n        if (!(json.mappings?.length > 0)) {\n            return {result: json}\n        }\n\n        const tagRendering = new TagRenderingConfig(json)\n\n        const errors = []\n        for (let i = 0; i < tagRendering.mappings.length; i++) {\n            const mapping = tagRendering.mappings[i];\n            if (!mapping.addExtraTags) {\n                continue\n            }\n            const keysInMapping = new Set(mapping.if.usedKeys())\n\n            const keysInAddExtraTags = mapping.addExtraTags.map(t => t.key)\n\n            const duplicateKeys = keysInAddExtraTags.filter(k => keysInMapping.has(k))\n            if (duplicateKeys.length > 0) {\n                errors.push(\n                    \"At \" + context + \".mappings[\" + i + \"]: AddExtraTags overrides a key that is set in the `if`-clause of this mapping. Selecting this answer might thus first set one value (needed to match as answer) and then override it with a different value, resulting in an unsaveable question. The offending `addExtraTags` is \" + duplicateKeys.join(\", \")\n                )\n            }\n        }\n\n\n        return {\n            result: json,\n            errors\n        };\n    }\n}\n\n\nexport class DetectShadowedMappings extends DesugaringStep<TagRenderingConfigJson> {\n    private readonly _calculatedTagNames: string[]\n\n    constructor(layerConfig?: LayerConfigJson) {\n        super(\"Checks that the mappings don't shadow each other\", [], \"DetectShadowedMappings\")\n        this._calculatedTagNames = DetectShadowedMappings.extractCalculatedTagNames(layerConfig)\n    }\n\n    /**\n     *\n     * DetectShadowedMappings.extractCalculatedTagNames({calculatedTags: [\"_abc:=js()\"]}) // => [\"_abc\"]\n     * DetectShadowedMappings.extractCalculatedTagNames({calculatedTags: [\"_abc=js()\"]}) // => [\"_abc\"]\n     */\n    private static extractCalculatedTagNames(\n        layerConfig?: LayerConfigJson | { calculatedTags: string[] }\n    ) {\n        return (\n            layerConfig?.calculatedTags?.map((ct) => {\n                if (ct.indexOf(\":=\") >= 0) {\n                    return ct.split(\":=\")[0]\n                }\n                return ct.split(\"=\")[0]\n            }) ?? []\n        )\n    }\n\n    /**\n     *\n     * // should detect a simple shadowed mapping\n     * const tr = {mappings: [\n     *            {\n     *                if: {or: [\"key=value\", \"x=y\"]},\n     *                then: \"Case A\"\n     *            },\n     *            {\n     *                if: \"key=value\",\n     *                then: \"Shadowed\"\n     *            }\n     *        ]\n     *    }\n     * const r = new DetectShadowedMappings().convert(tr, \"test\");\n     * r.errors.length // => 1\n     * r.errors[0].indexOf(\"The mapping key=value is fully matched by a previous mapping (namely 0)\") >= 0 // => true\n     *\n     * const tr = {mappings: [\n     *         {\n     *             if: {or: [\"key=value\", \"x=y\"]},\n     *             then: \"Case A\"\n     *         },\n     *         {\n     *             if: {and: [\"key=value\", \"x=y\"]},\n     *             then: \"Shadowed\"\n     *         }\n     *     ]\n     * }\n     * const r = new DetectShadowedMappings().convert(tr, \"test\");\n     * r.errors.length // => 1\n     * r.errors[0].indexOf(\"The mapping key=value&x=y is fully matched by a previous mapping (namely 0)\") >= 0 // => true\n     */\n    convert(\n        json: TagRenderingConfigJson,\n        context: string\n    ): { result: TagRenderingConfigJson; errors?: string[]; warnings?: string[] } {\n        const errors = []\n        const warnings = []\n        if (json.mappings === undefined || json.mappings.length === 0) {\n            return {result: json}\n        }\n        const defaultProperties = {}\n        for (const calculatedTagName of this._calculatedTagNames) {\n            defaultProperties[calculatedTagName] =\n                \"some_calculated_tag_value_for_\" + calculatedTagName\n        }\n        const parsedConditions = json.mappings.map((m, i) => {\n            const ctx = `${context}.mappings[${i}]`\n            const ifTags = TagUtils.Tag(m.if, ctx)\n            const hideInAnswer = m[\"hideInAnswer\"]\n            if (hideInAnswer !== undefined && hideInAnswer !== false && hideInAnswer !== true) {\n                let conditionTags = TagUtils.Tag(hideInAnswer)\n                // Merge the condition too!\n                return new And([conditionTags, ifTags])\n            }\n            return ifTags\n        })\n        for (let i = 0; i < json.mappings.length; i++) {\n            if (!parsedConditions[i].isUsableAsAnswer()) {\n                // There is no straightforward way to convert this mapping.if into a properties-object, so we simply skip this one\n                // Yes, it might be shadowed, but running this check is to difficult right now\n                continue\n            }\n            const keyValues = parsedConditions[i].asChange(defaultProperties)\n            const properties = {}\n            keyValues.forEach(({k, v}) => {\n                properties[k] = v\n            })\n            for (let j = 0; j < i; j++) {\n                const doesMatch = parsedConditions[j].matchesProperties(properties)\n                if (\n                    doesMatch &&\n                    json.mappings[j][\"hideInAnswer\"] === true &&\n                    json.mappings[i][\"hideInAnswer\"] !== true\n                ) {\n                    warnings.push(\n                        `At ${context}: Mapping ${i} is shadowed by mapping ${j}. However, mapping ${j} has 'hideInAnswer' set, which will result in a different rendering in question-mode.`\n                    )\n                } else if (doesMatch) {\n                    // The current mapping is shadowed!\n                    errors.push(`At ${context}: Mapping ${i} is shadowed by mapping ${j} and will thus never be shown:\n    The mapping ${parsedConditions[i].asHumanString(\n                        false,\n                        false,\n                        {}\n                    )} is fully matched by a previous mapping (namely ${j}), which matches:\n    ${parsedConditions[j].asHumanString(false, false, {})}.\n\n    To fix this problem, you can try to:\n    - Move the shadowed mapping up\n    - Do you want to use a different text in 'question mode'? Add 'hideInAnswer=true' to the first mapping\n    - Use \"addExtraTags\": [\"key=value\", ...] in order to avoid a different rendering\n         (e.g. [{\"if\": \"fee=no\",                     \"then\": \"Free to use\", \"hideInAnswer\":true},\n                {\"if\": {\"and\":[\"fee=no\",\"charge=\"]}, \"then\": \"Free to use\"}]\n          can be replaced by\n               [{\"if\":\"fee=no\", \"then\": \"Free to use\", \"addExtraTags\": [\"charge=\"]}]\n`)\n                }\n            }\n        }\n\n        return {\n            errors,\n            warnings,\n            result: json,\n        }\n    }\n}\n\nexport class DetectMappingsWithImages extends DesugaringStep<TagRenderingConfigJson> {\n    private readonly _doesImageExist: DoesImageExist\n\n    constructor(doesImageExist: DoesImageExist) {\n        super(\n            \"Checks that 'then'clauses in mappings don't have images, but use 'icon' instead\",\n            [],\n            \"DetectMappingsWithImages\"\n        )\n        this._doesImageExist = doesImageExist\n    }\n\n    /**\n     * const r = new DetectMappingsWithImages(new DoesImageExist(new Set<string>())).convert({\n     *     \"mappings\": [\n     *         {\n     *             \"if\": \"bicycle_parking=stands\",\n     *             \"then\": {\n     *                 \"en\": \"Staple racks <img style='width: 25%' src='./assets/layers/bike_parking/staple.svg'>\",\n     *                 \"nl\": \"Nietjes <img style='width: 25%'' src='./assets/layers/bike_parking/staple.svg'>\",\n     *                 \"fr\": \"Arceaux <img style='width: 25%'' src='./assets/layers/bike_parking/staple.svg'>\",\n     *                 \"gl\": \"De roda (Stands) <img style='width: 25%'' src='./assets/layers/bike_parking/staple.svg'>\",\n     *                 \"de\": \"Fahrradbügel <img style='width: 25%'' src='./assets/layers/bike_parking/staple.svg'>\",\n     *                 \"hu\": \"Korlát <img style='width: 25%' src='./assets/layers/bike_parking/staple.svg'>\",\n     *                 \"it\": \"Archetti <img style='width: 25%' src='./assets/layers/bike_parking/staple.svg'>\",\n     *                 \"zh_Hant\": \"單車架 <img style='width: 25%' src='./assets/layers/bike_parking/staple.svg'>\"\n     *             }\n     *         }]\n     * }, \"test\");\n     * r.errors.length > 0 // => true\n     * r.errors.some(msg => msg.indexOf(\"./assets/layers/bike_parking/staple.svg\") >= 0) // => true\n     */\n    convert(\n        json: TagRenderingConfigJson,\n        context: string\n    ): {\n        result: TagRenderingConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        const errors: string[] = []\n        const warnings: string[] = []\n        const information: string[] = []\n        if (json.mappings === undefined || json.mappings.length === 0) {\n            return {result: json}\n        }\n        const ignoreToken = \"ignore-image-in-then\"\n        for (let i = 0; i < json.mappings.length; i++) {\n            const mapping = json.mappings[i]\n            const ignore = mapping[\"#\"]?.indexOf(ignoreToken) >= 0\n            const images = Utils.Dedup(Translations.T(mapping.then)?.ExtractImages() ?? [])\n            const ctx = `${context}.mappings[${i}]`\n            if (images.length > 0) {\n                if (!ignore) {\n                    errors.push(\n                        `${ctx}: A mapping has an image in the 'then'-clause. Remove the image there and use \\`\"icon\": <your-image>\\` instead. The images found are ${images.join(\n                            \", \"\n                        )}. (This check can be turned of by adding \"#\": \"${ignoreToken}\" in the mapping, but this is discouraged`\n                    )\n                } else {\n                    information.push(\n                        `${ctx}: Ignored image ${images.join(\n                            \", \"\n                        )} in 'then'-clause of a mapping as this check has been disabled`\n                    )\n\n                    for (const image of images) {\n                        this._doesImageExist.convertJoin(image, ctx, errors, warnings, information)\n                    }\n                }\n            } else if (ignore) {\n                warnings.push(`${ctx}: unused '${ignoreToken}' - please remove this`)\n            }\n        }\n\n        return {\n            errors,\n            warnings,\n            information,\n            result: json,\n        }\n    }\n}\n\nclass MiscTagRenderingChecks extends DesugaringStep<TagRenderingConfigJson> {\n    private _options: { noQuestionHintCheck: boolean }\n\n    constructor(options: { noQuestionHintCheck: boolean }) {\n        super(\"Miscellaneous checks on the tagrendering\", [\"special\"], \"MiscTagRenderingChecks\")\n        this._options = options\n    }\n\n    convert(\n        json: TagRenderingConfigJson | QuestionableTagRenderingConfigJson,\n        context: string\n    ): {\n        result: TagRenderingConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        const warnings = []\n        const errors = []\n        if (json[\"special\"] !== undefined) {\n            errors.push(\n                \"At \" +\n                context +\n                ': detected `special` on the top level. Did you mean `{\"render\":{ \"special\": ... }}`'\n            )\n        }\n        if (json[\"group\"]) {\n            errors.push(\n                \"At \" +\n                context +\n                ': groups are deprecated, use `\"label\": [\"' +\n                json[\"group\"] +\n                '\"]` instead'\n            )\n        }\n        const freeformType = json[\"freeform\"]?.[\"type\"]\n        if (freeformType) {\n            if (Validators.availableTypes.indexOf(freeformType) < 0) {\n                throw (\n                    \"At \" +\n                    context +\n                    \".freeform.type is an unknown type: \" +\n                    freeformType +\n                    \"; try one of \" +\n                    Validators.availableTypes.join(\", \")\n                )\n            }\n        }\n        return {\n            result: json,\n            errors,\n            warnings,\n        }\n    }\n}\n\nexport class ValidateTagRenderings extends Fuse<TagRenderingConfigJson> {\n    constructor(\n        layerConfig?: LayerConfigJson,\n        doesImageExist?: DoesImageExist,\n        options?: { noQuestionHintCheck: boolean }\n    ) {\n        super(\n            \"Various validation on tagRenderingConfigs\",\n            new DetectShadowedMappings(layerConfig),\n            new DetectConflictingAddExtraTags(),\n            new DetectMappingsWithImages(doesImageExist),\n            new MiscTagRenderingChecks(options)\n        )\n    }\n}\n\nexport class ValidateLayer extends DesugaringStep<LayerConfigJson> {\n    /**\n     * The paths where this layer is originally saved. Triggers some extra checks\n     * @private\n     */\n    private readonly _path?: string\n    private readonly _isBuiltin: boolean\n    private readonly _doesImageExist: DoesImageExist\n\n    constructor(path: string, isBuiltin: boolean, doesImageExist: DoesImageExist) {\n        super(\"Doesn't change anything, but emits warnings and errors\", [], \"ValidateLayer\")\n        this._path = path\n        this._isBuiltin = isBuiltin\n        this._doesImageExist = doesImageExist\n    }\n\n    convert(\n        json: LayerConfigJson,\n        context: string\n    ): { result: LayerConfigJson; errors: string[]; warnings?: string[]; information?: string[] } {\n        const errors = []\n        const warnings = []\n        const information = []\n        context = \"While validating a layer: \" + context\n        if (typeof json === \"string\") {\n            errors.push(context + \": This layer hasn't been expanded: \" + json)\n            return {\n                result: null,\n                errors,\n            }\n        }\n\n        if (json.source === \"special\") {\n            if (!Constants.priviliged_layers.find((x) => x == json.id)) {\n                errors.push(\n                    context +\n                    \": layer \" +\n                    json.id +\n                    \" uses 'special' as source.osmTags. However, this layer is not a priviliged layer\"\n                )\n            }\n        }\n\n        if (json.tagRenderings !== undefined && json.tagRenderings.length > 0) {\n            if (json.title === undefined && json.source !== \"special:library\") {\n                errors.push(\n                    context +\n                    \": this layer does not have a title defined but it does have tagRenderings. Not having a title will disable the popups, resulting in an unclickable element. Please add a title. If not having a popup is intended and the tagrenderings need to be kept (e.g. in a library layer), set `title: null` to disable this error.\"\n                )\n            }\n            if (json.title === null) {\n                information.push(\n                    context +\n                    \": title is `null`. This results in an element that cannot be clicked - even though tagRenderings is set.\"\n                )\n            }\n        }\n\n        if (json[\"builtin\"] !== undefined) {\n            errors.push(context + \": This layer hasn't been expanded: \" + json)\n            return {\n                result: null,\n                errors,\n            }\n        }\n\n        if (json.minzoom > Constants.minZoomLevelToAddNewPoint) {\n            ;(json.presets?.length > 0 ? errors : warnings).push(\n                `At ${context}: minzoom is ${json.minzoom}, this should be at most ${Constants.minZoomLevelToAddNewPoint} as a preset is set. Why? Selecting the pin for a new item will zoom in to level before adding the point. Having a greater minzoom will hide the points, resulting in possible duplicates`\n            )\n        }\n        {\n            // duplicate ids in tagrenderings check\n            const duplicates = Utils.Dedup(\n                Utils.Dupiclates(Utils.NoNull((json.tagRenderings ?? []).map((tr) => tr[\"id\"])))\n            )\n            if (duplicates.length > 0) {\n                console.log(json.tagRenderings)\n                errors.push(\n                    \"At \" +\n                    context +\n                    \": some tagrenderings have a duplicate id: \" +\n                    duplicates.join(\", \")\n                )\n            }\n        }\n\n        if (json.deletion !== undefined && json.deletion instanceof DeleteConfig) {\n            if (json.deletion.softDeletionTags === undefined) {\n                warnings.push(\"No soft-deletion tags in deletion block for layer \" + json.id)\n            }\n        }\n\n        try {\n            if (this._isBuiltin) {\n                // Some checks for legacy elements\n\n                if (json[\"overpassTags\"] !== undefined) {\n                    errors.push(\n                        \"Layer \" +\n                        json.id +\n                        'still uses the old \\'overpassTags\\'-format. Please use \"source\": {\"osmTags\": <tags>}\\' instead of \"overpassTags\": <tags> (note: this isn\\'t your fault, the custom theme generator still spits out the old format)'\n                    )\n                }\n                const forbiddenTopLevel = [\n                    \"icon\",\n                    \"wayHandling\",\n                    \"roamingRenderings\",\n                    \"roamingRendering\",\n                    \"label\",\n                    \"width\",\n                    \"color\",\n                    \"colour\",\n                    \"iconOverlays\",\n                ]\n                for (const forbiddenKey of forbiddenTopLevel) {\n                    if (json[forbiddenKey] !== undefined)\n                        errors.push(\n                            context +\n                            \": layer \" +\n                            json.id +\n                            \" still has a forbidden key \" +\n                            forbiddenKey\n                        )\n                }\n                if (json[\"hideUnderlayingFeaturesMinPercentage\"] !== undefined) {\n                    errors.push(\n                        context +\n                        \": layer \" +\n                        json.id +\n                        \" contains an old 'hideUnderlayingFeaturesMinPercentage'\"\n                    )\n                }\n\n                if (\n                    json.isShown !== undefined &&\n                    (json.isShown[\"render\"] !== undefined || json.isShown[\"mappings\"] !== undefined)\n                ) {\n                    warnings.push(context + \" has a tagRendering as `isShown`\")\n                }\n            }\n            if (this._isBuiltin) {\n                // Check location of layer file\n                const expected: string = `assets/layers/${json.id}/${json.id}.json`\n                if (this._path != undefined && this._path.indexOf(expected) < 0) {\n                    errors.push(\n                        \"Layer is in an incorrect place. The path is \" +\n                        this._path +\n                        \", but expected \" +\n                        expected\n                    )\n                }\n            }\n            if (this._isBuiltin) {\n                // Check for correct IDs\n                if (json.tagRenderings?.some((tr) => tr[\"id\"] === \"\")) {\n                    const emptyIndexes: number[] = []\n                    for (let i = 0; i < json.tagRenderings.length; i++) {\n                        const tagRendering = json.tagRenderings[i]\n                        if (tagRendering[\"id\"] === \"\") {\n                            emptyIndexes.push(i)\n                        }\n                    }\n                    errors.push(\n                        `Some tagrendering-ids are empty or have an emtpy string; this is not allowed (at ${context}.tagRenderings.[${emptyIndexes.join(\n                            \",\"\n                        )}])`\n                    )\n                }\n\n                const duplicateIds = Utils.Dupiclates(\n                    (json.tagRenderings ?? [])\n                        ?.map((f) => f[\"id\"])\n                        .filter((id) => id !== \"questions\")\n                )\n                if (duplicateIds.length > 0 && !Utils.runningFromConsole) {\n                    errors.push(\n                        `Some tagRenderings have a duplicate id: ${duplicateIds} (at ${context}.tagRenderings)`\n                    )\n                }\n\n                if (json.description === undefined) {\n                    if (typeof json.source === null) {\n                        errors.push(context + \": A priviliged layer must have a description\")\n                    } else {\n                        warnings.push(context + \": A builtin layer should have a description\")\n                    }\n                }\n            }\n\n            if (json.filter) {\n                const r = new On(\"filter\", new Each( new ValidateFilter())).convert(json, context)\n                warnings.push(...(r.warnings ?? []))\n                errors.push(...(r.errors ?? []))\n                information.push(...(r.information ?? []))\n            }\n\n            if (json.tagRenderings !== undefined) {\n                const r = new On(\n                    \"tagRenderings\",\n                    new Each(\n                        new ValidateTagRenderings(json, this._doesImageExist, {\n                            noQuestionHintCheck: json[\"#\"]?.indexOf(\"no-question-hint-check\") >= 0,\n                        })\n                    )\n                ).convert(json, context)\n                warnings.push(...(r.warnings ?? []))\n                errors.push(...(r.errors ?? []))\n                information.push(...(r.information ?? []))\n            }\n\n            {\n                const hasCondition = json.mapRendering?.filter(\n                    (mr) => mr[\"icon\"] !== undefined && mr[\"icon\"][\"condition\"] !== undefined\n                )\n                if (hasCondition?.length > 0) {\n                    errors.push(\n                        \"At \" +\n                        context +\n                        \":\\n    One or more icons in the mapRenderings have a condition set. Don't do this, as this will result in an invisible but clickable element. Use extra filters in the source instead. The offending mapRenderings are:\\n\" +\n                        JSON.stringify(hasCondition, null, \"  \")\n                    )\n                }\n            }\n\n            if (json.presets !== undefined) {\n                if (typeof json.source === \"string\") {\n                    throw \"A special layer cannot have presets\"\n                }\n                // Check that a preset will be picked up by the layer itself\n                const baseTags = TagUtils.Tag(json.source[\"osmTags\"])\n                for (let i = 0; i < json.presets.length; i++) {\n                    const preset = json.presets[i]\n                    const tags: { k: string; v: string }[] = new And(\n                        preset.tags.map((t) => TagUtils.Tag(t))\n                    ).asChange({id: \"node/-1\"})\n                    const properties = {}\n                    for (const tag of tags) {\n                        properties[tag.k] = tag.v\n                    }\n                    const doMatch = baseTags.matchesProperties(properties)\n                    if (!doMatch) {\n                        errors.push(\n                            context +\n                            \".presets[\" +\n                            i +\n                            \"]: This preset does not match the required tags of this layer. This implies that a newly added point will not show up.\\n    A newly created point will have properties: \" +\n                            JSON.stringify(properties) +\n                            \"\\n    The required tags are: \" +\n                            baseTags.asHumanString(false, false, {})\n                        )\n                    }\n                }\n            }\n        } catch (e) {\n            errors.push(e)\n        }\n\n        return {\n            result: json,\n            errors,\n            warnings,\n            information,\n        }\n    }\n}\n\nexport class ValidateFilter extends DesugaringStep<FilterConfigJson> {\n    constructor() {\n        super(\"Detect common errors in the filters\", [], \"ValidateFilter\")\n    }\n\n    convert(\n        filter: FilterConfigJson,\n        context: string\n    ): {\n        result: FilterConfigJson\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        if (typeof filter === \"string\") {\n            // Calling another filter, we skip\n            return {result: filter}\n        }\n        const errors = []\n        for (const option of filter.options) {\n\n            for (let i = 0; i < option.fields?.length ?? 0; i++) {\n                const field = option.fields[i]\n                const type = field.type ?? \"string\"\n                if (Validators.availableTypes.find((t) => t === type) === undefined) {\n                    const err = `Invalid filter: ${type} is not a valid textfield type (at ${context}.fields[${i}])\\n\\tTry one of ${Array.from(\n                        Validators.availableTypes\n                    ).join(\",\")}`\n                    errors.push(err)\n                }\n            }\n        }\n        return {result: filter, errors}\n    }\n}\n\nexport class DetectDuplicateFilters extends DesugaringStep<{\n    layers: LayerConfigJson[]\n    themes: LayoutConfigJson[]\n}> {\n    constructor() {\n        super(\n            \"Tries to detect layers where a shared filter can be used (or where similar filters occur)\",\n            [],\n            \"DetectDuplicateFilters\"\n        )\n    }\n\n    convert(\n        json: { layers: LayerConfigJson[]; themes: LayoutConfigJson[] },\n        __: string\n    ): {\n        result: { layers: LayerConfigJson[]; themes: LayoutConfigJson[] }\n        errors?: string[]\n        warnings?: string[]\n        information?: string[]\n    } {\n        const errors: string[] = []\n        const warnings: string[] = []\n        const information: string[] = []\n\n        const {layers, themes} = json\n        const perOsmTag = new Map<\n            string,\n            {\n                layer: LayerConfigJson\n                layout: LayoutConfigJson | undefined\n                filter: FilterConfigJson\n            }[]\n        >()\n\n        for (const layer of layers) {\n            this.addLayerFilters(layer, perOsmTag)\n        }\n\n        for (const theme of themes) {\n            if (theme.id === \"personal\") {\n                continue\n            }\n            for (const layer of theme.layers) {\n                if (typeof layer === \"string\") {\n                    continue\n                }\n                if (layer[\"builtin\"] !== undefined) {\n                    continue\n                }\n                this.addLayerFilters(<LayerConfigJson>layer, perOsmTag, theme)\n            }\n        }\n\n        // At this point, we have gathered all filters per tag - time to find duplicates\n        perOsmTag.forEach((value, key) => {\n            if (value.length <= 1) {\n                // Seen this key just once, it is unique\n                return\n            }\n            let msg = \"Possible duplicate filter: \" + key\n            for (const {filter, layer, layout} of value) {\n                let id = \"\"\n                if (layout !== undefined) {\n                    id = layout.id + \":\"\n                }\n                msg += `\\n      - ${id}${layer.id}.${filter.id}`\n            }\n            warnings.push(msg)\n        })\n\n        return {\n            result: json,\n            errors,\n            warnings,\n            information,\n        }\n    }\n\n    /**\n     * Add all filter options into 'perOsmTag'\n     */\n    private addLayerFilters(\n        layer: LayerConfigJson,\n        perOsmTag: Map<\n            string,\n            {\n                layer: LayerConfigJson\n                layout: LayoutConfigJson | undefined\n                filter: FilterConfigJson\n            }[]\n        >,\n        layout?: LayoutConfigJson | undefined\n    ): void {\n        if (layer.filter === undefined || layer.filter === null) {\n            return\n        }\n        if (layer.filter[\"sameAs\"] !== undefined) {\n            return\n        }\n        for (const filter of <(string | FilterConfigJson)[]>layer.filter) {\n            if (typeof filter === \"string\") {\n                continue\n            }\n\n            if (filter[\"#\"]?.indexOf(\"ignore-possible-duplicate\") >= 0) {\n                continue\n            }\n\n            for (const option of filter.options) {\n                if (option.osmTags === undefined) {\n                    continue\n                }\n                const key = JSON.stringify(option.osmTags)\n                if (!perOsmTag.has(key)) {\n                    perOsmTag.set(key, [])\n                }\n                perOsmTag.get(key).push({\n                    layer,\n                    filter,\n                    layout,\n                })\n            }\n        }\n    }\n}\n","import LayoutConfig from \"../Models/ThemeConfig/LayoutConfig\"\nimport { QueryParameters } from \"./Web/QueryParameters\"\nimport { AllKnownLayouts } from \"../Customizations/AllKnownLayouts\"\nimport { FixedUiElement } from \"../UI/Base/FixedUiElement\"\nimport { Utils } from \"../Utils\"\nimport Combine from \"../UI/Base/Combine\"\nimport { SubtleButton } from \"../UI/Base/SubtleButton\"\nimport BaseUIElement from \"../UI/BaseUIElement\"\nimport { UIEventSource } from \"./UIEventSource\"\nimport { LocalStorageSource } from \"./Web/LocalStorageSource\"\nimport LZString from \"lz-string\"\nimport { FixLegacyTheme } from \"../Models/ThemeConfig/Conversion/LegacyJsonConvert\"\nimport { LayerConfigJson } from \"../Models/ThemeConfig/Json/LayerConfigJson\"\nimport known_layers from \"../assets/generated/known_layers.json\"\nimport { PrepareTheme } from \"../Models/ThemeConfig/Conversion/PrepareTheme\"\nimport licenses from \"../assets/generated/license_info.json\"\nimport TagRenderingConfig from \"../Models/ThemeConfig/TagRenderingConfig\"\nimport { FixImages } from \"../Models/ThemeConfig/Conversion/FixImages\"\nimport Svg from \"../Svg\"\nimport questions from \"../assets/generated/layers/questions.json\"\nimport {\n    DoesImageExist,\n    PrevalidateTheme,\n    ValidateThemeAndLayers,\n} from \"../Models/ThemeConfig/Conversion/Validation\"\nimport { DesugaringContext } from \"../Models/ThemeConfig/Conversion/Conversion\"\nimport { TagRenderingConfigJson } from \"../Models/ThemeConfig/Json/TagRenderingConfigJson\"\nimport Hash from \"./Web/Hash\"\n\nexport default class DetermineLayout {\n    private static readonly _knownImages = new Set(Array.from(licenses).map((l) => l.path))\n    private static readonly loadCustomThemeParam = QueryParameters.GetQueryParameter(\n        \"userlayout\",\n        \"false\",\n        \"If not 'false', a custom (non-official) theme is loaded. This custom layout can be done in multiple ways: \\n\\n- The hash of the URL contains a base64-encoded .json-file containing the theme definition\\n- The hash of the URL contains a lz-compressed .json-file, as generated by the custom theme generator\\n- The parameter itself is an URL, in which case that URL will be downloaded. It should point to a .json of a theme\"\n    )\n    public static getCustomDefinition(): string {\n        const layoutFromBase64 = decodeURIComponent(DetermineLayout.loadCustomThemeParam.data)\n\n        if (layoutFromBase64.startsWith(\"http\")) {\n            return layoutFromBase64\n        }\n\n        if (layoutFromBase64 !== \"false\") {\n            // We have to load something from the hash (or from disk)\n            const hash = Hash.hash.data\n            try {\n                JSON.parse(atob(hash))\n                return atob(hash)\n            } catch (e) {\n                // We try to decode with lz-string\n                JSON.parse(Utils.UnMinify(LZString.decompressFromBase64(hash)))\n                return Utils.UnMinify(LZString.decompressFromBase64(hash))\n            }\n        }\n        return undefined\n    }\n\n    /**\n     * Gets the correct layout for this website\n     */\n    public static async GetLayout(): Promise<LayoutConfig | undefined> {\n        const layoutFromBase64 = decodeURIComponent(DetermineLayout.loadCustomThemeParam.data)\n\n        if (layoutFromBase64.startsWith(\"http\")) {\n            return await DetermineLayout.LoadRemoteTheme(layoutFromBase64)\n        }\n\n        if (layoutFromBase64 !== \"false\") {\n            // We have to load something from the hash (or from disk)\n            return DetermineLayout.LoadLayoutFromHash(DetermineLayout.loadCustomThemeParam)\n        }\n\n        let layoutId: string = undefined\n\n        const path = window.location.pathname.split(\"/\").slice(-1)[0]\n        if (path !== \"theme.html\" && path !== \"\") {\n            layoutId = path\n            if (path.endsWith(\".html\")) {\n                layoutId = path.substr(0, path.length - 5)\n            }\n            console.log(\"Using layout\", layoutId)\n        }\n        layoutId = QueryParameters.GetQueryParameter(\n            \"layout\",\n            layoutId,\n            \"The layout to load into MapComplete\"\n        ).data\n        const layout = AllKnownLayouts.allKnownLayouts.get(layoutId?.toLowerCase())\n        if (layout === undefined) {\n            throw \"No builtin map theme with name \" + layoutId + \" exists\"\n        }\n        return layout\n    }\n\n    public static LoadLayoutFromHash(userLayoutParam: UIEventSource<string>): LayoutConfig | null {\n        let hash = location.hash.substr(1)\n        let json: any\n\n        // layoutFromBase64 contains the name of the theme. This is partly to do tracking with goat counter\n        const dedicatedHashFromLocalStorage = LocalStorageSource.Get(\n            \"user-layout-\" + userLayoutParam.data?.replace(\" \", \"_\")\n        )\n        if (dedicatedHashFromLocalStorage.data?.length < 10) {\n            dedicatedHashFromLocalStorage.setData(undefined)\n        }\n\n        const hashFromLocalStorage = LocalStorageSource.Get(\"last-loaded-user-layout\")\n        if (hash.length < 10) {\n            hash = dedicatedHashFromLocalStorage.data ?? hashFromLocalStorage.data\n        } else {\n            console.log(\"Saving hash to local storage\")\n            hashFromLocalStorage.setData(hash)\n            dedicatedHashFromLocalStorage.setData(hash)\n        }\n\n        try {\n            json = JSON.parse(atob(hash))\n        } catch (e) {\n            // We try to decode with lz-string\n            json = JSON.parse(Utils.UnMinify(LZString.decompressFromBase64(hash)))\n        }\n\n        const layoutToUse = DetermineLayout.prepCustomTheme(json)\n        userLayoutParam.setData(layoutToUse.id)\n        return layoutToUse\n    }\n\n    public static ShowErrorOnCustomTheme(\n        intro: string = \"Error: could not parse the custom layout:\",\n        error: BaseUIElement,\n        json?: any\n    ) {\n        new Combine([\n            intro,\n            error.SetClass(\"alert\"),\n            new SubtleButton(Svg.back_svg(), \"Go back to the theme overview\", {\n                url: window.location.protocol + \"//\" + window.location.host + \"/index.html\",\n                newTab: false,\n            }),\n            json !== undefined\n                ? new SubtleButton(Svg.download_svg(), \"Download the JSON file\").onClick(() => {\n                      Utils.offerContentsAsDownloadableFile(\n                          JSON.stringify(json, null, \"  \"),\n                          \"theme_definition.json\"\n                      )\n                  })\n                : undefined,\n        ])\n            .SetClass(\"flex flex-col clickable\")\n            .AttachTo(\"maindiv\")\n    }\n\n    private static getSharedTagRenderings(): Map<string, TagRenderingConfigJson> {\n        const dict = new Map<string, TagRenderingConfigJson>()\n\n        for (const tagRendering of questions.tagRenderings) {\n            dict.set(tagRendering.id, tagRendering)\n        }\n\n        return dict\n    }\n\n    private static prepCustomTheme(json: any, sourceUrl?: string, forceId?: string): LayoutConfig {\n        if (json.layers === undefined && json.tagRenderings !== undefined) {\n            const iconTr = json.mapRendering.map((mr) => mr.icon).find((icon) => icon !== undefined)\n            const icon = new TagRenderingConfig(iconTr).render.txt\n            json = {\n                id: json.id,\n                description: json.description,\n                descriptionTail: {\n                    en: \"<div class='alert'>Layer only mode.</div> The loaded custom theme actually isn't a custom theme, but only contains a layer.\",\n                },\n                icon,\n                title: json.name,\n                layers: [json],\n            }\n        }\n\n        const knownLayersDict = new Map<string, LayerConfigJson>()\n        for (const key in known_layers.layers) {\n            const layer = known_layers.layers[key]\n            knownLayersDict.set(layer.id, <LayerConfigJson>layer)\n        }\n        const convertState: DesugaringContext = {\n            tagRenderings: DetermineLayout.getSharedTagRenderings(),\n            sharedLayers: knownLayersDict,\n            publicLayers: new Set<string>(),\n        }\n        json = new FixLegacyTheme().convertStrict(json, \"While loading a dynamic theme\")\n        const raw = json\n\n        json = new FixImages(DetermineLayout._knownImages).convertStrict(\n            json,\n            \"While fixing the images\"\n        )\n        json.enableNoteImports = json.enableNoteImports ?? false\n        json = new PrepareTheme(convertState).convertStrict(json, \"While preparing a dynamic theme\")\n        console.log(\"The layoutconfig is \", json)\n\n        json.id = forceId ?? json.id\n\n        {\n            let { errors } = new PrevalidateTheme().convert(json, \"validation\")\n            if (errors.length > 0) {\n                throw \"Detected errors: \" + errors.join(\"\\n\")\n            }\n        }\n        {\n            let { errors } = new ValidateThemeAndLayers(\n                new DoesImageExist(new Set<string>(), (_) => true),\n                \"\",\n                false\n            ).convert(json, \"validation\")\n            if (errors.length > 0) {\n                throw \"Detected errors: \" + errors.join(\"\\n\")\n            }\n        }\n        return new LayoutConfig(json, false, {\n            definitionRaw: JSON.stringify(raw, null, \"  \"),\n            definedAtUrl: sourceUrl,\n        })\n    }\n\n    private static async LoadRemoteTheme(link: string): Promise<LayoutConfig | null> {\n        console.log(\"Downloading map theme from \", link)\n\n        new FixedUiElement(`Downloading the theme from the <a href=\"${link}\">link</a>...`).AttachTo(\n            \"maindiv\"\n        )\n\n        let parsed = await Utils.downloadJson(link)\n        let forcedId = parsed.id\n        const url = new URL(link)\n        if (!(url.hostname === \"localhost\" || url.hostname === \"127.0.0.1\")) {\n            forcedId = link\n        }\n        console.log(\"Loaded remote link:\", link)\n        return DetermineLayout.prepCustomTheme(parsed, link, forcedId)\n    }\n}\n","import DetermineLayout from \"./Logic/DetermineLayout\"\nimport ThemeViewState from \"./Models/ThemeViewState\"\nimport SvelteUIElement from \"./UI/Base/SvelteUIElement\"\nimport ThemeViewGUI from \"./UI/ThemeViewGUI.svelte\"\nimport { FixedUiElement } from \"./UI/Base/FixedUiElement\"\nimport Combine from \"./UI/Base/Combine\"\nimport { SubtleButton } from \"./UI/Base/SubtleButton\"\nimport Svg from \"./Svg\"\nimport { Utils } from \"./Utils\"\n\n// @ts-ignore\ntry {\n    DetermineLayout.GetLayout()\n        .then((layout) => {\n            const state = new ThemeViewState(layout)\n            const main = new SvelteUIElement(ThemeViewGUI, { state })\n            main.AttachTo(\"maindiv\")\n        })\n        .catch((err) => {\n            console.error(\"Error while initializing: \", err, err.stack)\n            new Combine([\n                new FixedUiElement(err).SetClass(\"block alert\"),\n\n                new SubtleButton(Svg.download_svg(), \"Download the raw file\").onClick(() =>\n                    Utils.offerContentsAsDownloadableFile(\n                        DetermineLayout.getCustomDefinition(),\n                        \"mapcomplete-theme.json\",\n                        { mimetype: \"application/json\" }\n                    )\n                ),\n            ]).AttachTo(\"maindiv\")\n        })\n} catch (err) {\n    new FixedUiElement(err).SetClass(\"block alert\").AttachTo(\"maindiv\")\n}\n"],"names":["LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","i","input","res","a","index","compressed","uncompressed","buf","TotalLen","current_value","result","c","bitsPerChar","getCharFromInt","value","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","length","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","entry","w","bits","resb","maxpower","power","data","module","UpdateLegacyLayer","DesugaringStep","json","context","warnings","config","preset","preciseInput","tagRendering","_a","location","wayHandling","pointConfig","lineRenderConfig","mapRenderingElement","overlay","rendering","pr","iconSize","parts","key","UpdateLegacyTheme","oldThemeConfig","Utils","FixLegacyTheme","Fuse","On","Each","AddContextToTranslations","prefix","__publicField","leaf","path","breadcrumb","pointer","obj","Translations","ValidationUtils","layer","specialVisualisation","vis","renderingConfig","spec","translations","m","all","translation","template","specials","SpecialVisualizations","p","_ExpandFilter","state","filters","filter","predifined_filters","newFilters","errors","split","expectedId","expandedFilter","found","suggestions","t","err","ExpandFilter","ExpandTagRendering","Conversion","self","options","trconfig","label","withLabel","name","direct","tagRenderingConfigJson","nm","indirect","foundTr","spl","id","layerTrs","tr","matchingTrs","id_","contextWriter","_b","ctx","lookup","_d","_c","names","trs","candidates","layerName","s","stable","DetectInline","AddQuestionBox","questionSpecials","sp","noLabels","allLabels","seen","questionSpecial","used","blacklisted","_f","_e","usedLabel","question","AddEditingElements","desugaring","trc","ExpandRewrite","keyToRewrite","target","targetIsTranslation","replaceRecursive","o","isTr","subtarget","rewrite","keysToRewrite","ts","guard","j","toRewrite","into","RewriteSpecial","special","type","k","argNamesList","argNames","wrongArg","byDistance","x","arg","foundLanguages","translatedArgs","v","translatedArg","ln","before","after","args","languages","argName","Translation","txt","beforeText","afterText","paths","tagrenderingconfigmeta","travelled","ExpandIconBadges","badgesJson","iconBadges","errs","warns","iconBadge","resolved","PreparePointRendering","FirstOf","SetFullNodeDatabase","specs","AddMiniMap","layerConfig","minimap","PrepareLayer","Concat","SetDefault","CreateNoteImportLayer","includeClosedNotesDays","layerJson","isShownIfAny","LayerConfig","mustMatchAll","tag","condition","r","title","importButton","embed","postfix","language","subs","DependencyCalculator","deps","part","specialVizs","specialViz","dep","currentKey","currentLine","params","_","layerId","helpers","ExtraFunctions","code","SubstituteLayer","information","reportNotFound","withDistance","lname","b","ids","n","layers","e","hideLabels","usedLabels","filtered","labels","forbiddenLabel","l","unused","AddDefaultLayers","Constants","alreadyLoaded","AddImportLayers","allLayers","creator","i1","importLayerResult","AddContextToTranslationsInLayout","ApplyOverrideAll","overrideAll","newLayers","AddDependencyLayersToTheme","allKnownLayers","themeId","dependenciesToAdd","loadedLayerIds","unmetDependencies","dependencies","layerDeps","dependency","unmetDependency","reason","theme","knownTagRenderings","PreparePersonalTheme","WarnForUnsubstitutedLayersInTheme","wrn","PrepareTheme","Pass","ValidateLanguageCompleteness","neededLanguage","missing","DoesImageExist","knownImagePaths","checkExistsSync","ignore","image","Svg","ValidateTheme","doesImageExist","isBuiltin","sharedTagRenderings","ExtractImages","LayoutConfig","images","remoteImages","img","remoteImage","filename","dups","checked","targetLanguage","ValidateThemeAndLayers","ValidateLayer","OverrideShadowingCheck","withOverride","MiscThemeChecks","PrevalidateTheme","DetectConflictingAddExtraTags","TagRenderingConfig","mapping","keysInMapping","duplicateKeys","DetectShadowedMappings","ct","defaultProperties","calculatedTagName","parsedConditions","ifTags","TagUtils","hideInAnswer","conditionTags","And","keyValues","properties","doesMatch","DetectMappingsWithImages","ignoreToken","MiscTagRenderingChecks","freeformType","Validators","ValidateTagRenderings","duplicates","DeleteConfig","forbiddenTopLevel","forbiddenKey","expected","emptyIndexes","duplicateIds","ValidateFilter","hasCondition","mr","baseTags","tags","option","_DetermineLayout","layoutFromBase64","hash","Hash","layoutId","QueryParameters","layout","AllKnownLayouts","userLayoutParam","dedicatedHashFromLocalStorage","LocalStorageSource","hashFromLocalStorage","layoutToUse","intro","error","Combine","SubtleButton","dict","questions","sourceUrl","forceId","iconTr","icon","knownLayersDict","known_layers","convertState","raw","FixImages","link","FixedUiElement","parsed","forcedId","url","DetermineLayout","licenses","ThemeViewState","SvelteUIElement","ThemeViewGUI"],"mappings":"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"}