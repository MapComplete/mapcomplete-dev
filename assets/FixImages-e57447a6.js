var u2=Object.defineProperty;var h2=(i,e,t)=>e in i?u2(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var R=(i,e,t)=>(h2(i,typeof e!="symbol"?e+"":e,t),t);import{U as ke}from"./Utils-f43fc41d.js";import{c as ue,a as bp,g as Nl,C as c2}from"./Constants-b0e1f442.js";import{F as Zi,a as De,f as js,d as a0,C as Qt,V as _h,L as $s,g as d2,Q as p2,t as Jo}from"./tw-merge-bd01e9b5.js";import{B as qu,S as It,i as Dt,s as Rt,l as Z,o as _,b as h,p as a,q as de,d as st,f as T,r as P,u as Ht,n as ge,h as ot,v as Yt,w as pe,x as Xt,y as F,k as Jr,G as vp,H as wp,I as _p,J as Cp,t as We,g as Ue,N as tg,ac as f2,z as Tp,C as ec,A as tc,e as xp,a6 as ng,c as nn,m as rn,j as sn,F as l0,T as g2,a as m2}from"./index-c9990257.js";import{U as xr,a as y2,I as Su,S as u0}from"./LocalStorageSource-8810ea8f.js";var Ch={exports:{}};/**
 * @license
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash exports="node" include="clone,merge,isEmpty,isArray,compact,each" -d`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */Ch.exports;(function(i,e){(function(){var t,n="4.15.0",r=200,s="Expected a function",o="__lodash_hash_undefined__",l=1,u=2,c=1/0,p=9007199254740991,d="[object Arguments]",f="[object Array]",g="[object Boolean]",v="[object Date]",w="[object Error]",A="[object Function]",C="[object GeneratorFunction]",m="[object Map]",y="[object Number]",x="[object Object]",k="[object Promise]",q="[object RegExp]",I="[object Set]",S="[object String]",$="[object Symbol]",B="[object WeakMap]",D="[object ArrayBuffer]",N="[object DataView]",O="[object Float32Array]",L="[object Float64Array]",V="[object Int8Array]",X="[object Int16Array]",K="[object Int32Array]",ee="[object Uint8Array]",z="[object Uint8ClampedArray]",J="[object Uint16Array]",H="[object Uint32Array]",Y=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,se=/^\w*$/,Q=/^\./,ie=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,te=/[\\^$.*+?()[\]{}|]/g,oe=/\\(\\)?/g,ve=/\w*$/,be=/^\[object .+?Constructor\]$/,ye=/^(?:0|[1-9]\d*)$/,re={};re[O]=re[L]=re[V]=re[X]=re[K]=re[ee]=re[z]=re[J]=re[H]=!0,re[d]=re[f]=re[D]=re[g]=re[N]=re[v]=re[w]=re[A]=re[m]=re[y]=re[x]=re[q]=re[I]=re[S]=re[B]=!1;var he={};he[d]=he[f]=he[D]=he[N]=he[g]=he[v]=he[O]=he[L]=he[V]=he[X]=he[K]=he[m]=he[y]=he[x]=he[q]=he[I]=he[S]=he[$]=he[ee]=he[z]=he[J]=he[H]=!0,he[w]=he[A]=he[B]=!1;var Se=typeof ue=="object"&&ue&&ue.Object===Object&&ue,Re=typeof self=="object"&&self&&self.Object===Object&&self,we=Se||Re||Function("return this")(),Ee=e&&!e.nodeType&&e,qe=Ee&&!0&&i&&!i.nodeType&&i,Be=qe&&qe.exports===Ee,Je=Be&&Se.process,_e=function(){try{return Je&&Je.binding("util")}catch{}}(),Fe=_e&&_e.isTypedArray;function Ge(b,E){return b.set(E[0],E[1]),b}function Te(b,E){return b.add(E),b}function je(b,E,M){switch(M.length){case 0:return b.call(E);case 1:return b.call(E,M[0]);case 2:return b.call(E,M[0],M[1]);case 3:return b.call(E,M[0],M[1],M[2])}return b.apply(E,M)}function Ne(b,E){for(var M=-1,U=b?b.length:0;++M<U&&E(b[M],M,b)!==!1;);return b}function Oe(b,E){for(var M=-1,U=E.length,me=b.length;++M<U;)b[me+M]=E[M];return b}function Le(b,E,M,U){var me=-1,ae=b?b.length:0;for(U&&ae&&(M=b[++me]);++me<ae;)M=E(M,b[me],me,b);return M}function Ye(b,E){for(var M=-1,U=b?b.length:0;++M<U;)if(E(b[M],M,b))return!0;return!1}function Xe(b){return function(E){return E==null?t:E[b]}}function at(b,E){for(var M=-1,U=Array(b);++M<b;)U[M]=E(M);return U}function it(b){return function(E){return b(E)}}function Ze(b,E){return b==null?t:b[E]}function ze(b){var E=!1;if(b!=null&&typeof b.toString!="function")try{E=!!(b+"")}catch{}return E}function Ke(b){var E=-1,M=Array(b.size);return b.forEach(function(U,me){M[++E]=[me,U]}),M}function Qe(b,E){return function(M){return b(E(M))}}function rt(b){var E=-1,M=Array(b.size);return b.forEach(function(U){M[++E]=U}),M}var bt=Array.prototype,vt=Function.prototype,ct=Object.prototype,wt=we["__core-js_shared__"],dt=function(){var b=/[^.]+$/.exec(wt&&wt.keys&&wt.keys.IE_PROTO||"");return b?"Symbol(src)_1."+b:""}(),pt=vt.toString,Pe=ct.hasOwnProperty,_t=pt.call(Object),et=ct.toString,Ft=RegExp("^"+pt.call(Pe).replace(te,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ft=Be?we.Buffer:t,$t=we.Symbol,gt=we.Uint8Array,mt=Qe(Object.getPrototypeOf,Object),Bt=Object.create,Nt=ct.propertyIsEnumerable,Ct=bt.splice,Lt=Object.getOwnPropertySymbols,jt=ft?ft.isBuffer:t,yt=Qe(Object.keys,Object),Mt=Math.max,Tt=Ga(we,"DataView"),tt=Ga(we,"Map"),xt=Ga(we,"Promise"),kt=Ga(we,"Set"),lt=Ga(we,"WeakMap"),ut=Ga(Object,"create"),Wt=!Nt.call({valueOf:1},"valueOf"),At=ua(Tt),Jt=ua(tt),Vt=ua(xt),qt=ua(kt),Zt=ua(lt),Gt=$t?$t.prototype:t,St=Gt?Gt.valueOf:t,Ut=Gt?Gt.toString:t;function fe(){}function ht(b){var E=-1,M=b?b.length:0;for(this.clear();++E<M;){var U=b[E];this.set(U[0],U[1])}}function on(){this.__data__=ut?ut(null):{}}function an(b){return this.has(b)&&delete this.__data__[b]}function ln(b){var E=this.__data__;if(ut){var M=E[b];return M===o?t:M}return Pe.call(E,b)?E[b]:t}function un(b){var E=this.__data__;return ut?E[b]!==t:Pe.call(E,b)}function hn(b,E){var M=this.__data__;return M[b]=ut&&E===t?o:E,this}ht.prototype.clear=on,ht.prototype.delete=an,ht.prototype.get=ln,ht.prototype.has=un,ht.prototype.set=hn;function Et(b){var E=-1,M=b?b.length:0;for(this.clear();++E<M;){var U=b[E];this.set(U[0],U[1])}}function cn(){this.__data__=[]}function dn(b){var E=this.__data__,M=Vu(E,b);if(M<0)return!1;var U=E.length-1;return M==U?E.pop():Ct.call(E,M,1),!0}function pn(b){var E=this.__data__,M=Vu(E,b);return M<0?t:E[M][1]}function Qs(b){return Vu(this.__data__,b)>-1}function la(b,E){var M=this.__data__,U=Vu(M,b);return U<0?M.push([b,E]):M[U][1]=E,this}Et.prototype.clear=cn,Et.prototype.delete=dn,Et.prototype.get=pn,Et.prototype.has=Qs,Et.prototype.set=la;function Di(b){var E=-1,M=b?b.length:0;for(this.clear();++E<M;){var U=b[E];this.set(U[0],U[1])}}function ls(){this.__data__={hash:new ht,map:new(tt||Et),string:new ht}}function ti(b){return Gu(this,b).delete(b)}function eo(b){return Gu(this,b).get(b)}function ob(b){return Gu(this,b).has(b)}function ab(b,E){return Gu(this,b).set(b,E),this}Di.prototype.clear=ls,Di.prototype.delete=ti,Di.prototype.get=eo,Di.prototype.has=ob,Di.prototype.set=ab;function Ju(b){var E=-1,M=b?b.length:0;for(this.__data__=new Di;++E<M;)this.add(b[E])}function lb(b){return this.__data__.set(b,o),this}function ub(b){return this.__data__.has(b)}Ju.prototype.add=Ju.prototype.push=lb,Ju.prototype.has=ub;function us(b){this.__data__=new Et(b)}function hb(){this.__data__=new Et}function cb(b){return this.__data__.delete(b)}function db(b){return this.__data__.get(b)}function pb(b){return this.__data__.has(b)}function fb(b,E){var M=this.__data__;if(M instanceof Et){var U=M.__data__;if(!tt||U.length<r-1)return U.push([b,E]),this;M=this.__data__=new Di(U)}return M.set(b,E),this}us.prototype.clear=hb,us.prototype.delete=cb,us.prototype.get=db,us.prototype.has=pb,us.prototype.set=fb;function Df(b,E){var M=Hi(b)||za(b)?at(b.length,String):[],U=M.length,me=!!U;for(var ae in b)(E||Pe.call(b,ae))&&!(me&&(ae=="length"||jc(ae,U)))&&M.push(ae);return M}function Oc(b,E,M){(M!==t&&!Ua(b[E],M)||typeof E=="number"&&M===t&&!(E in b))&&(b[E]=M)}function Rf(b,E,M){var U=b[E];(!(Pe.call(b,E)&&Ua(U,M))||M===t&&!(E in b))&&(b[E]=M)}function Vu(b,E){for(var M=b.length;M--;)if(Ua(b[M][0],E))return M;return-1}function gb(b,E){return b&&Bc(E,qo(E),b)}function Va(b,E,M,U,me,ae,xe){var Ie;if(U&&(Ie=ae?U(b,me,ae,xe):U(b)),Ie!==t)return Ie;if(!hs(b))return b;var zt=Hi(b);if(zt){if(Ie=Zb(b),!E)return Pf(b,Ie)}else{var $n=Es(b),Sn=$n==A||$n==C;if(Jc(b))return Nb(b,E);if($n==x||$n==d||Sn&&!ae){if(ze(b))return ae?b:{};if(Ie=Kb(Sn?{}:b),!E)return jb(b,gb(Ie,b))}else{if(!he[$n])return ae?b:{};Ie=Qb(b,$n,Va,E)}}xe||(xe=new us);var Yn=xe.get(b);if(Yn)return Yn;if(xe.set(b,Ie),!zt)var ni=M?zb(b):qo(b);return Ne(ni||b,function(Bi,Ri){ni&&(Ri=Bi,Bi=b[Ri]),Rf(Ie,Ri,Va(Bi,E,M,U,Ri,b,xe))}),Ie}function mb(b){return hs(b)?Bt(b):{}}var yb=Jb(vb),bb=Vb();function vb(b,E){return b&&bb(b,E,qo)}function $f(b,E){E=Uu(E,b)?[E]:Of(E);for(var M=0,U=E.length;b!=null&&M<U;)b=b[Hu(E[M++])];return M&&M==U?b:t}function wb(b,E,M){var U=E(b);return Hi(b)?U:Oe(U,M(b))}function _b(b){return et.call(b)}function Cb(b,E){return b!=null&&E in Object(b)}function Pc(b,E,M,U,me){return b===E?!0:b==null||E==null||!hs(b)&&!Ha(E)?b!==b&&E!==E:Tb(b,E,Pc,M,U,me)}function Tb(b,E,M,U,me,ae){var xe=Hi(b),Ie=Hi(E),zt=f,$n=f;xe||(zt=Es(b),zt=zt==d?x:zt),Ie||($n=Es(E),$n=$n==d?x:$n);var Sn=zt==x&&!ze(b),Yn=$n==x&&!ze(E),ni=zt==$n;if(ni&&!Sn)return ae||(ae=new us),xe||Qu(b)?Ff(b,E,M,U,me,ae):Gb(b,E,zt,M,U,me,ae);if(!(me&u)){var Bi=Sn&&Pe.call(b,"__wrapped__"),Ri=Yn&&Pe.call(E,"__wrapped__");if(Bi||Ri){var So=Bi?b.value():b,to=Ri?E.value():E;return ae||(ae=new us),M(So,to,U,me,ae)}}return ni?(ae||(ae=new us),Ub(b,E,M,U,me,ae)):!1}function xb(b,E,M,U){var me=M.length,ae=me,xe=!U;if(b==null)return!ae;for(b=Object(b);me--;){var Ie=M[me];if(xe&&Ie[2]?Ie[1]!==b[Ie[0]]:!(Ie[0]in b))return!1}for(;++me<ae;){Ie=M[me];var zt=Ie[0],$n=b[zt],Sn=Ie[1];if(xe&&Ie[2]){if($n===t&&!(zt in b))return!1}else{var Yn=new us;if(U)var ni=U($n,Sn,zt,b,E,Yn);if(!(ni===t?Pc(Sn,$n,U,l|u,Yn):ni))return!1}}return!0}function kb(b){if(!hs(b)||n2(b))return!1;var E=Xu(b)||ze(b)?Ft:be;return E.test(ua(b))}function Ab(b){return Ha(b)&&Zu(b.length)&&!!re[et.call(b)]}function Nf(b){return typeof b=="function"?b:b==null?Xf:typeof b=="object"?Hi(b)?Eb(b[0],b[1]):Sb(b):Zf(b)}function qb(b){if(!zu(b))return yt(b);var E=[];for(var M in Object(b))Pe.call(b,M)&&M!="constructor"&&E.push(M);return E}function Lf(b){if(!hs(b))return i2(b);var E=zu(b),M=[];for(var U in b)U=="constructor"&&(E||!Pe.call(b,U))||M.push(U);return M}function Sb(b){var E=Yb(b);return E.length==1&&E[0][2]?Wf(E[0][0],E[0][1]):function(M){return M===b||xb(M,b,E)}}function Eb(b,E){return Uu(b)&&jf(E)?Wf(Hu(b),E):function(M){var U=zf(M,b);return U===t&&U===E?Hf(M,b):Pc(E,U,t,l|u)}}function Mf(b,E,M,U,me){if(b!==E){if(!(Hi(E)||Qu(E)))var ae=Lf(E);Ne(ae||E,function(xe,Ie){if(ae&&(Ie=xe,xe=E[Ie]),hs(xe))me||(me=new us),Ib(b,E,Ie,M,Mf,U,me);else{var zt=U?U(b[Ie],xe,Ie+"",b,E,me):t;zt===t&&(zt=xe),Oc(b,Ie,zt)}})}}function Ib(b,E,M,U,me,ae,xe){var Ie=b[M],zt=E[M],$n=xe.get(zt);if($n){Oc(b,M,$n);return}var Sn=ae?ae(Ie,zt,M+"",b,E,xe):t,Yn=Sn===t;Yn&&(Sn=zt,Hi(zt)||Qu(zt)?Hi(Ie)?Sn=Ie:Wc(Ie)?Sn=Pf(Ie):(Yn=!1,Sn=Va(zt,!0)):Vf(zt)||za(zt)?za(Ie)?Sn=Gf(Ie):!hs(Ie)||U&&Xu(Ie)?(Yn=!1,Sn=Va(zt,!0)):Sn=Ie:Yn=!1),Yn&&(xe.set(zt,Sn),me(Sn,zt,U,ae,xe),xe.delete(zt)),Oc(b,M,Sn)}function Db(b){return function(E){return $f(E,b)}}function Rb(b,E){return E=Mt(E===t?b.length-1:E,0),function(){for(var M=arguments,U=-1,me=Mt(M.length-E,0),ae=Array(me);++U<me;)ae[U]=M[E+U];U=-1;for(var xe=Array(E+1);++U<E;)xe[U]=M[U];return xe[E]=ae,je(b,this,xe)}}function $b(b){if(typeof b=="string")return b;if(Ku(b))return Ut?Ut.call(b):"";var E=b+"";return E=="0"&&1/b==-c?"-0":E}function Of(b){return Hi(b)?b:r2(b)}function Nb(b,E){if(E)return b.slice();var M=new b.constructor(b.length);return b.copy(M),M}function Fc(b){var E=new b.constructor(b.byteLength);return new gt(E).set(new gt(b)),E}function Lb(b,E){var M=E?Fc(b.buffer):b.buffer;return new b.constructor(M,b.byteOffset,b.byteLength)}function Mb(b,E,M){var U=E?M(Ke(b),!0):Ke(b);return Le(U,Ge,new b.constructor)}function Ob(b){var E=new b.constructor(b.source,ve.exec(b));return E.lastIndex=b.lastIndex,E}function Pb(b,E,M){var U=E?M(rt(b),!0):rt(b);return Le(U,Te,new b.constructor)}function Fb(b){return St?Object(St.call(b)):{}}function Bb(b,E){var M=E?Fc(b.buffer):b.buffer;return new b.constructor(M,b.byteOffset,b.length)}function Pf(b,E){var M=-1,U=b.length;for(E||(E=Array(U));++M<U;)E[M]=b[M];return E}function Bc(b,E,M,U){M||(M={});for(var me=-1,ae=E.length;++me<ae;){var xe=E[me],Ie=U?U(M[xe],b[xe],xe,M,b):t;Rf(M,xe,Ie===t?b[xe]:Ie)}return M}function jb(b,E){return Bc(b,Bf(b),E)}function Wb(b){return Rb(function(E,M){var U=-1,me=M.length,ae=me>1?M[me-1]:t,xe=me>2?M[2]:t;for(ae=b.length>3&&typeof ae=="function"?(me--,ae):t,xe&&e2(M[0],M[1],xe)&&(ae=me<3?t:ae,me=1),E=Object(E);++U<me;){var Ie=M[U];Ie&&b(E,Ie,U,ae)}return E})}function Jb(b,E){return function(M,U){if(M==null)return M;if(!ha(M))return b(M,U);for(var me=M.length,ae=E?me:-1,xe=Object(M);(E?ae--:++ae<me)&&U(xe[ae],ae,xe)!==!1;);return M}}function Vb(b){return function(E,M,U){for(var me=-1,ae=Object(E),xe=U(E),Ie=xe.length;Ie--;){var zt=xe[b?Ie:++me];if(M(ae[zt],zt,ae)===!1)break}return E}}function Ff(b,E,M,U,me,ae){var xe=me&u,Ie=b.length,zt=E.length;if(Ie!=zt&&!(xe&&zt>Ie))return!1;var $n=ae.get(b);if($n&&ae.get(E))return $n==E;var Sn=-1,Yn=!0,ni=me&l?new Ju:t;for(ae.set(b,E),ae.set(E,b);++Sn<Ie;){var Bi=b[Sn],Ri=E[Sn];if(U)var So=xe?U(Ri,Bi,Sn,E,b,ae):U(Bi,Ri,Sn,b,E,ae);if(So!==t){if(So)continue;Yn=!1;break}if(ni){if(!Ye(E,function(to,ca){if(!ni.has(ca)&&(Bi===to||M(Bi,to,U,me,ae)))return ni.add(ca)})){Yn=!1;break}}else if(!(Bi===Ri||M(Bi,Ri,U,me,ae))){Yn=!1;break}}return ae.delete(b),ae.delete(E),Yn}function Gb(b,E,M,U,me,ae,xe){switch(M){case N:if(b.byteLength!=E.byteLength||b.byteOffset!=E.byteOffset)return!1;b=b.buffer,E=E.buffer;case D:return!(b.byteLength!=E.byteLength||!U(new gt(b),new gt(E)));case g:case v:case y:return Ua(+b,+E);case w:return b.name==E.name&&b.message==E.message;case q:case S:return b==E+"";case m:var Ie=Ke;case I:var zt=ae&u;if(Ie||(Ie=rt),b.size!=E.size&&!zt)return!1;var $n=xe.get(b);if($n)return $n==E;ae|=l,xe.set(b,E);var Sn=Ff(Ie(b),Ie(E),U,me,ae,xe);return xe.delete(b),Sn;case $:if(St)return St.call(b)==St.call(E)}return!1}function Ub(b,E,M,U,me,ae){var xe=me&u,Ie=qo(b),zt=Ie.length,$n=qo(E),Sn=$n.length;if(zt!=Sn&&!xe)return!1;for(var Yn=zt;Yn--;){var ni=Ie[Yn];if(!(xe?ni in E:Pe.call(E,ni)))return!1}var Bi=ae.get(b);if(Bi&&ae.get(E))return Bi==E;var Ri=!0;ae.set(b,E),ae.set(E,b);for(var So=xe;++Yn<zt;){ni=Ie[Yn];var to=b[ni],ca=E[ni];if(U)var eg=xe?U(ca,to,ni,E,b,ae):U(to,ca,ni,b,E,ae);if(!(eg===t?to===ca||M(to,ca,U,me,ae):eg)){Ri=!1;break}So||(So=ni=="constructor")}if(Ri&&!So){var eh=b.constructor,th=E.constructor;eh!=th&&"constructor"in b&&"constructor"in E&&!(typeof eh=="function"&&eh instanceof eh&&typeof th=="function"&&th instanceof th)&&(Ri=!1)}return ae.delete(b),ae.delete(E),Ri}function zb(b){return wb(b,qo,Bf)}function Hb(){var b=fe.iteratee||Vc;return b=b===Vc?Nf:b,arguments.length?b(arguments[0],arguments[1]):b}function Gu(b,E){var M=b.__data__;return t2(E)?M[typeof E=="string"?"string":"hash"]:M.map}function Yb(b){for(var E=qo(b),M=E.length;M--;){var U=E[M],me=b[U];E[M]=[U,me,jf(me)]}return E}function Ga(b,E){var M=Ze(b,E);return kb(M)?M:t}var Bf=Lt?Qe(Lt,Object):Kf,Es=_b;(Tt&&Es(new Tt(new ArrayBuffer(1)))!=N||tt&&Es(new tt)!=m||xt&&Es(xt.resolve())!=k||kt&&Es(new kt)!=I||lt&&Es(new lt)!=B)&&(Es=function(b){var E=et.call(b),M=E==x?b.constructor:t,U=M?ua(M):t;if(U)switch(U){case At:return N;case Jt:return m;case Vt:return k;case qt:return I;case Zt:return B}return E});function Xb(b,E,M){E=Uu(E,b)?[E]:Of(E);for(var U,me=-1,xe=E.length;++me<xe;){var ae=Hu(E[me]);if(!(U=b!=null&&M(b,ae)))break;b=b[ae]}if(U)return U;var xe=b?b.length:0;return!!xe&&Zu(xe)&&jc(ae,xe)&&(Hi(b)||za(b))}function Zb(b){var E=b.length,M=b.constructor(E);return E&&typeof b[0]=="string"&&Pe.call(b,"index")&&(M.index=b.index,M.input=b.input),M}function Kb(b){return typeof b.constructor=="function"&&!zu(b)?mb(mt(b)):{}}function Qb(b,E,M,U){var me=b.constructor;switch(E){case D:return Fc(b);case g:case v:return new me(+b);case N:return Lb(b,U);case O:case L:case V:case X:case K:case ee:case z:case J:case H:return Bb(b,U);case m:return Mb(b,U,M);case y:case S:return new me(b);case q:return Ob(b);case I:return Pb(b,U,M);case $:return Fb(b)}}function jc(b,E){return E=E??p,!!E&&(typeof b=="number"||ye.test(b))&&b>-1&&b%1==0&&b<E}function e2(b,E,M){if(!hs(M))return!1;var U=typeof E;return(U=="number"?ha(M)&&jc(E,M.length):U=="string"&&E in M)?Ua(M[E],b):!1}function Uu(b,E){if(Hi(b))return!1;var M=typeof b;return M=="number"||M=="symbol"||M=="boolean"||b==null||Ku(b)?!0:se.test(b)||!Y.test(b)||E!=null&&b in Object(E)}function t2(b){var E=typeof b;return E=="string"||E=="number"||E=="symbol"||E=="boolean"?b!=="__proto__":b===null}function n2(b){return!!dt&&dt in b}function zu(b){var E=b&&b.constructor,M=typeof E=="function"&&E.prototype||ct;return b===M}function jf(b){return b===b&&!hs(b)}function Wf(b,E){return function(M){return M==null?!1:M[b]===E&&(E!==t||b in Object(M))}}function i2(b){var E=[];if(b!=null)for(var M in Object(b))E.push(M);return E}var r2=Yu(function(b){b=Uf(b);var E=[];return Q.test(b)&&E.push(""),b.replace(ie,function(M,U,me,ae){E.push(me?ae.replace(oe,"$1"):U||M)}),E});function Hu(b){if(typeof b=="string"||Ku(b))return b;var E=b+"";return E=="0"&&1/b==-c?"-0":E}function ua(b){if(b!=null){try{return pt.call(b)}catch{}try{return b+""}catch{}}return""}function s2(b){for(var E=-1,M=b?b.length:0,U=0,me=[];++E<M;){var ae=b[E];ae&&(me[U++]=ae)}return me}function Jf(b,E){var M=Hi(b)?Ne:yb;return M(b,Hb(E,3))}function Yu(b,E){if(typeof b!="function"||E&&typeof E!="function")throw new TypeError(s);var M=function(){var U=arguments,me=E?E.apply(this,U):U[0],ae=M.cache;if(ae.has(me))return ae.get(me);var xe=b.apply(this,U);return M.cache=ae.set(me,xe),xe};return M.cache=new(Yu.Cache||Di),M}Yu.Cache=Di;function o2(b){return Va(b,!1,!0)}function Ua(b,E){return b===E||b!==b&&E!==E}function za(b){return Wc(b)&&Pe.call(b,"callee")&&(!Nt.call(b,"callee")||et.call(b)==d)}var Hi=Array.isArray;function ha(b){return b!=null&&Zu(b.length)&&!Xu(b)}function Wc(b){return Ha(b)&&ha(b)}var Jc=jt||Qf;function a2(b){if(ha(b)&&(Hi(b)||typeof b=="string"||typeof b.splice=="function"||Jc(b)||za(b)))return!b.length;var E=Es(b);if(E==m||E==I)return!b.size;if(Wt||zu(b))return!yt(b).length;for(var M in b)if(Pe.call(b,M))return!1;return!0}function Xu(b){var E=hs(b)?et.call(b):"";return E==A||E==C}function Zu(b){return typeof b=="number"&&b>-1&&b%1==0&&b<=p}function hs(b){var E=typeof b;return!!b&&(E=="object"||E=="function")}function Ha(b){return!!b&&typeof b=="object"}function Vf(b){if(!Ha(b)||et.call(b)!=x||ze(b))return!1;var E=mt(b);if(E===null)return!0;var M=Pe.call(E,"constructor")&&E.constructor;return typeof M=="function"&&M instanceof M&&pt.call(M)==_t}function Ku(b){return typeof b=="symbol"||Ha(b)&&et.call(b)==$}var Qu=Fe?it(Fe):Ab;function Gf(b){return Bc(b,Yf(b))}function Uf(b){return b==null?"":$b(b)}function zf(b,E,M){var U=b==null?t:$f(b,E);return U===t?M:U}function Hf(b,E){return b!=null&&Xb(b,E,Cb)}function qo(b){return ha(b)?Df(b):qb(b)}function Yf(b){return ha(b)?Df(b,!0):Lf(b)}var l2=Wb(function(b,E,M){Mf(b,E,M)});function Xf(b){return b}function Vc(b){return Nf(typeof b=="function"?b:Va(b,!0))}function Zf(b){return Uu(b)?Xe(Hu(b)):Db(b)}function Kf(){return[]}function Qf(){return!1}fe.compact=s2,fe.iteratee=Vc,fe.keys=qo,fe.keysIn=Yf,fe.memoize=Yu,fe.merge=l2,fe.property=Zf,fe.toPlainObject=Gf,fe.clone=o2,fe.eq=Ua,fe.forEach=Jf,fe.get=zf,fe.hasIn=Hf,fe.identity=Xf,fe.isArguments=za,fe.isArray=Hi,fe.isArrayLike=ha,fe.isArrayLikeObject=Wc,fe.isBuffer=Jc,fe.isEmpty=a2,fe.isFunction=Xu,fe.isLength=Zu,fe.isObject=hs,fe.isObjectLike=Ha,fe.isPlainObject=Vf,fe.isSymbol=Ku,fe.isTypedArray=Qu,fe.stubArray=Kf,fe.stubFalse=Qf,fe.toString=Uf,fe.each=Jf,fe.VERSION=n,qe&&((qe.exports=fe)._=fe,Ee._=fe)}).call(ue)})(Ch,Ch.exports);var b2=Ch.exports,v2=fh;function fh(i,e){var t=i&&i.type,n;if(t==="FeatureCollection")for(n=0;n<i.features.length;n++)fh(i.features[n],e);else if(t==="GeometryCollection")for(n=0;n<i.geometries.length;n++)fh(i.geometries[n],e);else if(t==="Feature")fh(i.geometry,e);else if(t==="Polygon")ig(i.coordinates,e);else if(t==="MultiPolygon")for(n=0;n<i.coordinates.length;n++)ig(i.coordinates[n],e);return i}function ig(i,e){if(i.length!==0){rg(i[0],e);for(var t=1;t<i.length;t++)rg(i[t],!e)}}function rg(i,e){for(var t=0,n=0,r=0,s=i.length,o=s-1;r<s;o=r++){var l=(i[r][0]-i[o][0])*(i[o][1]+i[r][1]),u=t+l;n+=Math.abs(t)>=Math.abs(l)?t-u+l:l-u+t,t=u}t+n>=0!=!!e&&i.reverse()}const w2=[{key:"building",polygon:"all"},{key:"highway",polygon:"whitelist",values:["services","rest_area","escape","elevator"]},{key:"natural",polygon:"blacklist",values:["coastline","cliff","ridge","arete","tree_row"]},{key:"landuse",polygon:"all"},{key:"waterway",polygon:"whitelist",values:["riverbank","dock","boatyard","dam"]},{key:"amenity",polygon:"all"},{key:"leisure",polygon:"all"},{key:"barrier",polygon:"whitelist",values:["city_wall","ditch","hedge","retaining_wall","wall","spikes"]},{key:"railway",polygon:"whitelist",values:["station","turntable","roundhouse","platform"]},{key:"area",polygon:"all"},{key:"boundary",polygon:"all"},{key:"man_made",polygon:"blacklist",values:["cutline","embankment","pipeline"]},{key:"power",polygon:"whitelist",values:["plant","substation","generator","transformer"]},{key:"place",polygon:"all"},{key:"shop",polygon:"all"},{key:"aeroway",polygon:"blacklist",values:["taxiway"]},{key:"tourism",polygon:"all"},{key:"historic",polygon:"all"},{key:"public_transport",polygon:"all"},{key:"office",polygon:"all"},{key:"building:part",polygon:"all"},{key:"military",polygon:"all"},{key:"ruins",polygon:"all"},{key:"area:highway",polygon:"all"},{key:"craft",polygon:"all"},{key:"golf",polygon:"all"},{key:"indoor",polygon:"all"}];var _2=w2,Kt=b2,nh=v2,gh={};_2.forEach(function(i){if(i.polygon==="all")gh[i.key]=!0;else{var e=i.polygon==="whitelist"?"included_values":"excluded_values",t={};i.values.forEach(function(n){t[n]=!0}),gh[i.key]={},gh[i.key][e]=t}});function C2(i,e){return(i.version||e.version)&&i.version!==e.version?(+i.version||0)>(+e.version||0)?i:e:Kt.merge(i,e)}var Th={};Th=function(i,e,t){e=Kt.merge({verbose:!1,flatProperties:!0,uninterestingTags:{source:!0,source_ref:!0,"source:ref":!0,history:!0,attribution:!0,created_by:!0,"tiger:county":!0,"tiger:tlid":!0,"tiger:upload_uuid":!0},polygonFeatures:gh,deduplicator:C2},e);var n;return typeof XMLDocument<"u"&&i instanceof XMLDocument||typeof XMLDocument>"u"&&i.childNodes?n=s(i):n=r(i),n;function r(u){var c=new Array,p=new Array,d=new Array;function f(k){var q=Kt.clone(k);q.lat=k.center.lat,q.lon=k.center.lon,q.__is_center_placeholder=!0,c.push(q)}function g(k){var q=Kt.clone(k);q.nodes=[];function I(S,$,B){var D={type:"node",id:"_"+q.type+"/"+q.id+"bounds"+B,lat:S,lon:$};q.nodes.push(D.id),c.push(D)}I(q.bounds.minlat,q.bounds.minlon,1),I(q.bounds.maxlat,q.bounds.minlon,2),I(q.bounds.maxlat,q.bounds.maxlon,3),I(q.bounds.minlat,q.bounds.maxlon,4),q.nodes.push(q.nodes[0]),q.__is_bounds_placeholder=!0,p.push(q)}function v(k){function q(I,S,$){var B={type:"node",id:$,lat:I,lon:S};c.push(B)}Kt.isArray(k.nodes)||(k.nodes=k.geometry.map(function(I){return I!==null?"_anonymous@"+I.lat+"/"+I.lon:"_anonymous@unknown_location"})),k.geometry.forEach(function(I,S){I&&q(I.lat,I.lon,k.nodes[S])})}function w(k){function q(S,$,B){var D={type:"node",id:B,lat:S,lon:$};c.push(D)}function I(S,$){if(p.some(function(N){return N.type=="way"&&N.id==$}))return;var B={type:"way",id:$,nodes:[]};function D(N,O){var L={type:"node",id:"_anonymous@"+N+"/"+O,lat:N,lon:O};B.nodes.push(L.id),c.push(L)}S.forEach(function(N){N?D(N.lat,N.lon):B.nodes.push(void 0)}),p.push(B)}k.members.forEach(function(S,$){S.type=="node"?S.lat&&q(S.lat,S.lon,S.ref):S.type=="way"&&S.geometry&&(S.ref="_fullGeom"+S.ref,I(S.geometry,S.ref))})}for(var A=0;A<u.elements.length;A++)switch(u.elements[A].type){case"node":var C=u.elements[A];c.push(C);break;case"way":var m=Kt.clone(u.elements[A]);m.nodes=Kt.clone(m.nodes),p.push(m),m.center&&f(m),m.geometry?v(m):m.bounds&&g(m);break;case"relation":var y=Kt.clone(u.elements[A]);y.members=Kt.clone(y.members),d.push(y);var x=y.members&&y.members.some(function(k){return k.type=="node"&&k.lat||k.type=="way"&&k.geometry&&k.geometry.length>0});y.center&&f(y),x?w(y):y.bounds&&g(y);break}return o(c,p,d)}function s(u){var c=new Array,p=new Array,d=new Array;function f(y,x,k){y.hasAttribute(k)&&(x[k]=y.getAttribute(k))}function g(y,x){var k=Kt.clone(y);f(x,k,"lat"),f(x,k,"lon"),k.__is_center_placeholder=!0,c.push(k)}function v(y,x){var k=Kt.clone(y);k.nodes=[];function q(I,S,$){var B={type:"node",id:"_"+k.type+"/"+k.id+"bounds"+$,lat:I,lon:S};k.nodes.push(B.id),c.push(B)}q(x.getAttribute("minlat"),x.getAttribute("minlon"),1),q(x.getAttribute("maxlat"),x.getAttribute("minlon"),2),q(x.getAttribute("maxlat"),x.getAttribute("maxlon"),3),q(x.getAttribute("minlat"),x.getAttribute("maxlon"),4),k.nodes.push(k.nodes[0]),k.__is_bounds_placeholder=!0,p.push(k)}function w(y,x){function k(q,I,S){var $={type:"node",id:S,lat:q,lon:I};return c.push($),$.id}Kt.isArray(y.nodes)||(y.nodes=[],Kt.each(x,function(q,I){y.nodes.push("_anonymous@"+q.getAttribute("lat")+"/"+q.getAttribute("lon"))})),Kt.each(x,function(q,I){q.getAttribute("lat")&&k(q.getAttribute("lat"),q.getAttribute("lon"),y.nodes[I])})}function A(y,x){function k(I,S,$){var B={type:"node",id:$,lat:I,lon:S};c.push(B)}function q(I,S){if(p.some(function(D){return D.type=="way"&&D.id==S}))return;var $={type:"way",id:S,nodes:[]};function B(D,N){var O={type:"node",id:"_anonymous@"+D+"/"+N,lat:D,lon:N};$.nodes.push(O.id),c.push(O)}Kt.each(I,function(D){D.getAttribute("lat")?B(D.getAttribute("lat"),D.getAttribute("lon")):$.nodes.push(void 0)}),p.push($)}Kt.each(x,function(I,S){y.members[S].type=="node"?I.getAttribute("lat")&&k(I.getAttribute("lat"),I.getAttribute("lon"),y.members[S].ref):y.members[S].type=="way"&&I.getElementsByTagName("nd").length>0&&(y.members[S].ref="_fullGeom"+y.members[S].ref,q(I.getElementsByTagName("nd"),y.members[S].ref))})}Kt.each(u.getElementsByTagName("node"),function(y,x){var k={};Kt.each(y.getElementsByTagName("tag"),function(I){k[I.getAttribute("k")]=I.getAttribute("v")});var q={type:"node"};f(y,q,"id"),f(y,q,"lat"),f(y,q,"lon"),f(y,q,"version"),f(y,q,"timestamp"),f(y,q,"changeset"),f(y,q,"uid"),f(y,q,"user"),Kt.isEmpty(k)||(q.tags=k),c.push(q)});var C,m;return Kt.each(u.getElementsByTagName("way"),function(y,x){var k={},q=[];Kt.each(y.getElementsByTagName("tag"),function($){k[$.getAttribute("k")]=$.getAttribute("v")});var I=!1;Kt.each(y.getElementsByTagName("nd"),function($,B){var D;(D=$.getAttribute("ref"))&&(q[B]=D),!I&&$.getAttribute("lat")&&(I=!0)});var S={type:"way"};f(y,S,"id"),f(y,S,"version"),f(y,S,"timestamp"),f(y,S,"changeset"),f(y,S,"uid"),f(y,S,"user"),q.length>0&&(S.nodes=q),Kt.isEmpty(k)||(S.tags=k),(C=y.getElementsByTagName("center")[0])&&g(S,C),I?w(S,y.getElementsByTagName("nd")):(m=y.getElementsByTagName("bounds")[0])&&v(S,m),p.push(S)}),Kt.each(u.getElementsByTagName("relation"),function(y,x){var k={},q=[];Kt.each(y.getElementsByTagName("tag"),function($){k[$.getAttribute("k")]=$.getAttribute("v")});var I=!1;Kt.each(y.getElementsByTagName("member"),function($,B){q[B]={},f($,q[B],"ref"),f($,q[B],"role"),f($,q[B],"type"),(!I&&q[B].type=="node"&&$.getAttribute("lat")||q[B].type=="way"&&$.getElementsByTagName("nd").length>0)&&(I=!0)});var S={type:"relation"};f(y,S,"id"),f(y,S,"version"),f(y,S,"timestamp"),f(y,S,"changeset"),f(y,S,"uid"),f(y,S,"user"),q.length>0&&(S.members=q),Kt.isEmpty(k)||(S.tags=k),(C=y.getElementsByTagName("center")[0])&&g(S,C),I?A(S,y.getElementsByTagName("member")):(m=y.getElementsByTagName("bounds")[0])&&v(S,m),d.push(S)}),o(c,p,d)}function o(u,c,p){function d(Y,se){if(typeof se!="object"&&(se={}),typeof e.uninterestingTags=="function")return!e.uninterestingTags(Y,se);for(var Q in Y)if(e.uninterestingTags[Q]!==!0&&!(se[Q]===!0||se[Q]===Y[Q]))return!0;return!1}function f(Y){var se={timestamp:Y.timestamp,version:Y.version,changeset:Y.changeset,user:Y.user,uid:Y.uid};for(var Q in se)se[Q]===void 0&&delete se[Q];return se}for(var g=new Object,v=new Object,w=0;w<u.length;w++){var A=u[w];g[A.id]!==void 0&&(A=e.deduplicator(A,g[A.id])),g[A.id]=A,typeof A.tags<"u"&&d(A.tags)&&(v[A.id]=!0)}for(var w=0;w<p.length;w++)if(Kt.isArray(p[w].members))for(var C=0;C<p[w].members.length;C++)p[w].members[C].type=="node"&&(v[p[w].members[C].ref]=!0);for(var m=new Object,y=new Object,w=0;w<c.length;w++){var x=c[w];if(m[x.id]&&(x=e.deduplicator(x,m[x.id])),m[x.id]=x,Kt.isArray(x.nodes))for(var C=0;C<x.nodes.length;C++)typeof x.nodes[C]!="object"&&(y[x.nodes[C]]=!0,x.nodes[C]=g[x.nodes[C]])}var k=new Array;for(var q in g){var A=g[q];(!y[q]||v[q])&&k.push(A)}for(var I=new Array,w=0;w<p.length;w++){var S=p[w];I[S.id]&&(S=e.deduplicator(S,I[S.id])),I[S.id]=S}var $={node:{},way:{},relation:{}};for(var q in I){var S=I[q];if(!Kt.isArray(S.members)){e.verbose&&console.warn("Relation",S.type+"/"+S.id,"ignored because it has no members");continue}for(var C=0;C<S.members.length;C++){var B=S.members[C].type,D=S.members[C].ref;if(typeof D!="number"&&(D=D.replace("_fullGeom","")),!$[B]){e.verbose&&console.warn("Relation",S.type+"/"+S.id,"member",B+"/"+D,"ignored because it has an invalid type");continue}typeof $[B][D]>"u"&&($[B][D]=[]),$[B][D].push({role:S.members[C].role,rel:S.id,reltags:S.tags})}}var N,O=[];for(w=0;w<k.length;w++){if(typeof k[w].lon>"u"||typeof k[w].lat>"u"){e.verbose&&console.warn("POI",k[w].type+"/"+k[w].id,"ignored because it lacks coordinates");continue}var L={type:"Feature",id:k[w].type+"/"+k[w].id,properties:{type:k[w].type,id:k[w].id,tags:k[w].tags||{},relations:$.node[k[w].id]||[],meta:f(k[w])},geometry:{type:"Point",coordinates:[+k[w].lon,+k[w].lat]}};k[w].__is_center_placeholder&&(L.properties.geometry="center"),t?t(L):O.push(L)}for(var V=[],X=[],w=0;w<p.length;w++)if(I[p[w].id]===p[w]){if(typeof p[w].tags<"u"&&(p[w].tags.type=="route"||p[w].tags.type=="waterway")){let se=function(Q){var ie=!1,te;te=Q.members.filter(function(ye){return ye.type==="way"}),te=te.map(function(ye){var re=m[ye.ref];if(re===void 0||re.nodes===void 0){e.verbose&&console.warn("Route "+Q.type+"/"+Q.id,"tainted by a missing or incomplete  way",ye.type+"/"+ye.ref),ie=!0;return}return{id:ye.ref,role:ye.role,way:re,nodes:re.nodes.filter(function(he){return he!==void 0?!0:(ie=!0,e.verbose&&console.warn("Route",Q.type+"/"+Q.id,"tainted by a way",ye.type+"/"+ye.ref,"with a missing node"),!1)})}}),te=Kt.compact(te);var oe;oe=Gc(te);var ve=[];if(ve=Kt.compact(oe.map(function(ye){return Kt.compact(ye.map(function(re){return[+re.lon,+re.lat]}))})),ve.length==0)return e.verbose&&console.warn("Route",Q.type+"/"+Q.id,"contains no coordinates"),!1;var be={type:"Feature",id:Q.type+"/"+Q.id,properties:{type:Q.type,id:Q.id,tags:Q.tags||{},relations:$[Q.type][Q.id]||[],meta:f(Q)},geometry:{type:ve.length===1?"LineString":"MultiLineString",coordinates:ve.length===1?ve[0]:ve}};return ie&&(e.verbose&&console.warn("Route",Q.type+"/"+Q.id,"is tainted"),be.properties.tainted=!0),be};if(!Kt.isArray(p[w].members)){e.verbose&&console.warn("Route",p[w].type+"/"+p[w].id,"ignored because it has no members");continue}if(p[w].members.forEach(function(Q){m[Q.ref]&&!d(m[Q.ref].tags)&&(m[Q.ref].is_skippablerelationmember=!0)}),L=se(p[w]),L===!1){e.verbose&&console.warn("Route relation",p[w].type+"/"+p[w].id,"ignored because it has invalid geometry");continue}t?t(nh(L)):X.push(L)}if(typeof p[w].tags<"u"&&(p[w].tags.type=="multipolygon"||p[w].tags.type=="boundary")){let Q=function(ie,te){var oe=!1,ve=ee?"way":"relation",be=typeof ie.id=="number"?ie.id:+ie.id.replace("_fullGeom",""),ye;ye=te.members.filter(function(_e){return _e.type==="way"}),ye=ye.map(function(_e){var Fe=m[_e.ref];if(Fe===void 0||Fe.nodes===void 0){e.verbose&&console.warn("Multipolygon",ve+"/"+be,"tainted by a missing or incomplete way",_e.type+"/"+_e.ref),oe=!0;return}return{id:_e.ref,role:_e.role||"outer",way:Fe,nodes:Fe.nodes.filter(function(Ge){return Ge!==void 0?!0:(oe=!0,e.verbose&&console.warn("Multipolygon",ve+"/"+be,"tainted by a way",_e.type+"/"+_e.ref,"with a missing node"),!1)})}}),ye=Kt.compact(ye);var re,he;re=Gc(ye.filter(function(_e){return _e.role==="outer"})),he=Gc(ye.filter(function(_e){return _e.role==="inner"}));var Se;function Re(_e){var Fe=function(Oe,Le){for(var Ye=0;Ye<Le.length;Ye++)if(Te(Le[Ye],Oe))return!0;return!1},Ge=function(Oe){return Oe.map(function(Le){return[+Le.lat,+Le.lon]})},Te=function(Oe,Le){for(var Ye=Oe[0],Xe=Oe[1],at=!1,it=0,Ze=Le.length-1;it<Le.length;Ze=it++){var ze=Le[it][0],Ke=Le[it][1],Qe=Le[Ze][0],rt=Le[Ze][1],bt=Ke>Xe!=rt>Xe&&Ye<(Qe-ze)*(Xe-Ke)/(rt-Ke)+ze;bt&&(at=!at)}return at},je,Ne;for(_e=Ge(_e),je=0;je<re.length;je++)if(Ne=Ge(re[je]),Fe(Ne,_e))return je}Se=re.map(function(_e){return[_e]});for(var we=0;we<he.length;we++){var Ee=Re(he[we]);Ee!==void 0?Se[Ee].push(he[we]):e.verbose&&console.warn("Multipolygon",ve+"/"+be,"contains an inner ring with no containing outer")}var qe=[];if(qe=Kt.compact(Se.map(function(_e){var Fe=Kt.compact(_e.map(function(Ge){if(Ge.length<4){e.verbose&&console.warn("Multipolygon",ve+"/"+be,"contains a ring with less than four nodes");return}return Kt.compact(Ge.map(function(Te){return[+Te.lon,+Te.lat]}))}));if(Fe.length==0){e.verbose&&console.warn("Multipolygon",ve+"/"+be,"contains an empty ring cluster");return}return Fe})),qe.length==0)return e.verbose&&console.warn("Multipolygon",ve+"/"+be,"contains no coordinates"),!1;var Be="MultiPolygon";qe.length===1&&(Be="Polygon",qe=qe[0]);var Je={type:"Feature",id:ie.type+"/"+be,properties:{type:ie.type,id:be,tags:ie.tags||{},relations:$[ie.type][ie.id]||[],meta:f(ie)},geometry:{type:Be,coordinates:qe}};return oe&&(e.verbose&&console.warn("Multipolygon",ve+"/"+be,"is tainted"),Je.properties.tainted=!0),Je};if(!Kt.isArray(p[w].members)){e.verbose&&console.warn("Multipolygon",p[w].type+"/"+p[w].id,"ignored because it has no members");continue}for(var K=0,C=0;C<p[w].members.length;C++)p[w].members[C].role=="outer"?K++:e.verbose&&p[w].members[C].role!="inner"&&console.warn("Multipolygon",p[w].type+"/"+p[w].id,"member",p[w].members[C].type+"/"+p[w].members[C].ref,'ignored because it has an invalid role: "'+p[w].members[C].role+'"');if(p[w].members.forEach(function(ie){m[ie.ref]&&(ie.role==="outer"&&!d(m[ie.ref].tags,p[w].tags)&&(m[ie.ref].is_skippablerelationmember=!0),ie.role==="inner"&&!d(m[ie.ref].tags)&&(m[ie.ref].is_skippablerelationmember=!0))}),K==0){e.verbose&&console.warn("Multipolygon relation",p[w].type+"/"+p[w].id,"ignored because it has no outer ways");continue}var ee=!1;K==1&&!d(p[w].tags,{type:!0})&&(ee=!0);var L=null;if(!ee)L=Q(p[w],p[w]);else{var z=p[w].members.filter(function(ie){return ie.role==="outer"})[0];if(z=m[z.ref],z===void 0){e.verbose&&console.warn("Multipolygon relation",p[w].type+"/"+p[w].id,"ignored because outer way",z.type+"/"+z.ref,"is missing");continue}z.is_skippablerelationmember=!0,L=Q(z,p[w])}if(L===!1){e.verbose&&console.warn("Multipolygon relation",p[w].type+"/"+p[w].id,"ignored because it has invalid geometry");continue}t?t(nh(L)):X.push(L)}}for(var w=0;w<c.length;w++)if(m[c[w].id]===c[w]){if(!Kt.isArray(c[w].nodes)){e.verbose&&console.warn("Way",c[w].type+"/"+c[w].id,"ignored because it has no nodes");continue}if(!c[w].is_skippablerelationmember){typeof c[w].id!="number"&&(c[w].id=+c[w].id.replace("_fullGeom","")),c[w].tainted=!1,c[w].hidden=!1;var J=new Array;for(C=0;C<c[w].nodes.length;C++)typeof c[w].nodes[C]=="object"?J.push([+c[w].nodes[C].lon,+c[w].nodes[C].lat]):(e.verbose&&console.warn("Way",c[w].type+"/"+c[w].id,"is tainted by an invalid node"),c[w].tainted=!0);if(J.length<=1){e.verbose&&console.warn("Way",c[w].type+"/"+c[w].id,"ignored because it contains too few nodes");continue}var H="LineString";typeof c[w].nodes[0]<"u"&&typeof c[w].nodes[c[w].nodes.length-1]<"u"&&c[w].nodes[0].id===c[w].nodes[c[w].nodes.length-1].id&&(typeof c[w].tags<"u"&&l(c[w].tags)||c[w].__is_bounds_placeholder)&&(H="Polygon",J=[J]);var L={type:"Feature",id:c[w].type+"/"+c[w].id,properties:{type:c[w].type,id:c[w].id,tags:c[w].tags||{},relations:$.way[c[w].id]||[],meta:f(c[w])},geometry:{type:H,coordinates:J}};c[w].tainted&&(e.verbose&&console.warn("Way",c[w].type+"/"+c[w].id,"is tainted"),L.properties.tainted=!0),c[w].__is_bounds_placeholder&&(L.properties.geometry="bounds"),t?t(nh(L)):H=="LineString"?V.push(L):X.push(L)}}return t?!0:(N={type:"FeatureCollection",features:[]},N.features=N.features.concat(X),N.features=N.features.concat(V),N.features=N.features.concat(O),e.flatProperties&&N.features.forEach(function(Y){Y.properties=Kt.merge(Y.properties.meta,Y.properties.tags,{id:Y.properties.type+"/"+Y.properties.id})}),N=nh(N),N)}function l(u){var c=e.polygonFeatures;if(typeof c=="function")return c(u);if(u.area==="no")return!1;for(var p in u){var d=u[p],f=c[p];if(!(typeof f>"u")&&d!=="no"&&(f===!0||f.included_values&&f.included_values[d]===!0||f.excluded_values&&f.excluded_values[d]!==!0))return!0}return!1}};function Gc(i){for(var e=function(d){return d[0]},t=function(d){return d[d.length-1]},n=function(d,f){return d!==void 0&&f!==void 0&&d.id===f.id},r=[],s,o,l,u,c,p;i.length;)for(s=i.pop().nodes.slice(),r.push(s);i.length&&!n(e(s),t(s));){for(o=e(s),l=t(s),u=0;u<i.length;u++)if(p=i[u].nodes,n(l,e(p))){c=s.push,p=p.slice(1);break}else if(n(l,t(p))){c=s.push,p=p.slice(0,-1).reverse();break}else if(n(o,t(p))){c=s.unshift,p=p.slice(0,-1);break}else if(n(o,e(p))){c=s.unshift,p=p.slice(1).reverse();break}else p=c=null;if(!p)break;i.splice(u,1),c.apply(s,p)}return r}Th.toGeojson=Th;var T2=Th;const x2=bp(T2);var $i=63710088e-1,kp={centimeters:$i*100,centimetres:$i*100,degrees:$i/111325,feet:$i*3.28084,inches:$i*39.37,kilometers:$i/1e3,kilometres:$i/1e3,meters:$i,metres:$i,miles:$i/1609.344,millimeters:$i*1e3,millimetres:$i*1e3,nauticalmiles:$i/1852,radians:1,yards:$i*1.0936},k2={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:1/1e3,kilometres:1/1e3,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/$i,yards:1.0936133},Td={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function Ir(i,e,t){t===void 0&&(t={});var n={type:"Feature"};return(t.id===0||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=i,n}function A2(i,e,t){switch(i){case"Point":return gi(e).geometry;case"LineString":return nr(e).geometry;case"Polygon":return Ll(e).geometry;case"MultiPoint":return c0(e).geometry;case"MultiLineString":return h0(e).geometry;case"MultiPolygon":return nc(e).geometry;default:throw new Error(i+" is invalid")}}function gi(i,e,t){if(t===void 0&&(t={}),!i)throw new Error("coordinates is required");if(!Array.isArray(i))throw new Error("coordinates must be an Array");if(i.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!au(i[0])||!au(i[1]))throw new Error("coordinates must contain numbers");var n={type:"Point",coordinates:i};return Ir(n,e,t)}function q2(i,e,t){return t===void 0&&(t={}),ir(i.map(function(n){return gi(n,e)}),t)}function Ll(i,e,t){t===void 0&&(t={});for(var n=0,r=i;n<r.length;n++){var s=r[n];if(s.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var o=0;o<s[s.length-1].length;o++)if(s[s.length-1][o]!==s[0][o])throw new Error("First and last Position are not equivalent.")}var l={type:"Polygon",coordinates:i};return Ir(l,e,t)}function S2(i,e,t){return t===void 0&&(t={}),ir(i.map(function(n){return Ll(n,e)}),t)}function nr(i,e,t){if(t===void 0&&(t={}),i.length<2)throw new Error("coordinates must be an array of two or more positions");var n={type:"LineString",coordinates:i};return Ir(n,e,t)}function E2(i,e,t){return t===void 0&&(t={}),ir(i.map(function(n){return nr(n,e)}),t)}function ir(i,e){e===void 0&&(e={});var t={type:"FeatureCollection"};return e.id&&(t.id=e.id),e.bbox&&(t.bbox=e.bbox),t.features=i,t}function h0(i,e,t){t===void 0&&(t={});var n={type:"MultiLineString",coordinates:i};return Ir(n,e,t)}function c0(i,e,t){t===void 0&&(t={});var n={type:"MultiPoint",coordinates:i};return Ir(n,e,t)}function nc(i,e,t){t===void 0&&(t={});var n={type:"MultiPolygon",coordinates:i};return Ir(n,e,t)}function I2(i,e,t){t===void 0&&(t={});var n={type:"GeometryCollection",geometries:i};return Ir(n,e,t)}function D2(i,e){if(e===void 0&&(e=0),e&&!(e>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,e||0);return Math.round(i*t)/t}function ic(i,e){e===void 0&&(e="kilometers");var t=kp[e];if(!t)throw new Error(e+" units is invalid");return i*t}function Eu(i,e){e===void 0&&(e="kilometers");var t=kp[e];if(!t)throw new Error(e+" units is invalid");return i/t}function R2(i,e){return ou(Eu(i,e))}function $2(i){var e=i%360;return e<0&&(e+=360),e}function ou(i){var e=i%(2*Math.PI);return e*180/Math.PI}function Gr(i){var e=i%360;return e*Math.PI/180}function N2(i,e,t){if(e===void 0&&(e="kilometers"),t===void 0&&(t="kilometers"),!(i>=0))throw new Error("length must be a positive number");return ic(Eu(i,e),t)}function L2(i,e,t){if(e===void 0&&(e="meters"),t===void 0&&(t="kilometers"),!(i>=0))throw new Error("area must be a positive number");var n=Td[e];if(!n)throw new Error("invalid original units");var r=Td[t];if(!r)throw new Error("invalid final units");return i/n*r}function au(i){return!isNaN(i)&&i!==null&&!Array.isArray(i)}function Ap(i){return!!i&&i.constructor===Object}function M2(i){if(!i)throw new Error("bbox is required");if(!Array.isArray(i))throw new Error("bbox must be an Array");if(i.length!==4&&i.length!==6)throw new Error("bbox must be an Array of 4 or 6 numbers");i.forEach(function(e){if(!au(e))throw new Error("bbox must only contain numbers")})}function O2(i){if(!i)throw new Error("id is required");if(["string","number"].indexOf(typeof i)===-1)throw new Error("id must be a number or a string")}const P2=Object.freeze(Object.defineProperty({__proto__:null,areaFactors:Td,bearingToAzimuth:$2,convertArea:L2,convertLength:N2,degreesToRadians:Gr,earthRadius:$i,factors:kp,feature:Ir,featureCollection:ir,geometry:A2,geometryCollection:I2,isNumber:au,isObject:Ap,lengthToDegrees:R2,lengthToRadians:Eu,lineString:nr,lineStrings:E2,multiLineString:h0,multiPoint:c0,multiPolygon:nc,point:gi,points:q2,polygon:Ll,polygons:S2,radiansToDegrees:ou,radiansToLength:ic,round:D2,unitsFactors:k2,validateBBox:M2,validateId:O2},Symbol.toStringTag,{value:"Module"}));function ko(i,e,t){if(i!==null)for(var n,r,s,o,l,u,c,p=0,d=0,f,g=i.type,v=g==="FeatureCollection",w=g==="Feature",A=v?i.features.length:1,C=0;C<A;C++){c=v?i.features[C].geometry:w?i.geometry:i,f=c?c.type==="GeometryCollection":!1,l=f?c.geometries.length:1;for(var m=0;m<l;m++){var y=0,x=0;if(o=f?c.geometries[m]:c,o!==null){u=o.coordinates;var k=o.type;switch(p=t&&(k==="Polygon"||k==="MultiPolygon")?1:0,k){case null:break;case"Point":if(e(u,d,C,y,x)===!1)return!1;d++,y++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++){if(e(u[n],d,C,y,x)===!1)return!1;d++,k==="MultiPoint"&&y++}k==="LineString"&&y++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(r=0;r<u[n].length-p;r++){if(e(u[n][r],d,C,y,x)===!1)return!1;d++}k==="MultiLineString"&&y++,k==="Polygon"&&x++}k==="Polygon"&&y++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for(x=0,r=0;r<u[n].length;r++){for(s=0;s<u[n][r].length-p;s++){if(e(u[n][r][s],d,C,y,x)===!1)return!1;d++}x++}y++}break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)if(ko(o.geometries[n],e,t)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function F2(i,e,t,n){var r=t;return ko(i,function(s,o,l,u,c){o===0&&t===void 0?r=s:r=e(r,s,o,l,u,c)},n),r}function d0(i,e){var t;switch(i.type){case"FeatureCollection":for(t=0;t<i.features.length&&e(i.features[t].properties,t)!==!1;t++);break;case"Feature":e(i.properties,0);break}}function B2(i,e,t){var n=t;return d0(i,function(r,s){s===0&&t===void 0?n=r:n=e(n,r,s)}),n}function Vo(i,e){if(i.type==="Feature")e(i,0);else if(i.type==="FeatureCollection")for(var t=0;t<i.features.length&&e(i.features[t],t)!==!1;t++);}function p0(i,e,t){var n=t;return Vo(i,function(r,s){s===0&&t===void 0?n=r:n=e(n,r,s)}),n}function j2(i){var e=[];return ko(i,function(t){e.push(t)}),e}function Iu(i,e){var t,n,r,s,o,l,u,c,p,d,f=0,g=i.type==="FeatureCollection",v=i.type==="Feature",w=g?i.features.length:1;for(t=0;t<w;t++){for(l=g?i.features[t].geometry:v?i.geometry:i,c=g?i.features[t].properties:v?i.properties:{},p=g?i.features[t].bbox:v?i.bbox:void 0,d=g?i.features[t].id:v?i.id:void 0,u=l?l.type==="GeometryCollection":!1,o=u?l.geometries.length:1,r=0;r<o;r++){if(s=u?l.geometries[r]:l,s===null){if(e(null,f,c,p,d)===!1)return!1;continue}switch(s.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(e(s,f,c,p,d)===!1)return!1;break}case"GeometryCollection":{for(n=0;n<s.geometries.length;n++)if(e(s.geometries[n],f,c,p,d)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}f++}}function f0(i,e,t){var n=t;return Iu(i,function(r,s,o,l,u){s===0&&t===void 0?n=r:n=e(n,r,s,o,l,u)}),n}function Na(i,e){Iu(i,function(t,n,r,s,o){var l=t===null?null:t.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return e(Ir(t,r,{bbox:s,id:o}),n,0)===!1?!1:void 0}var u;switch(l){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon";break}for(var c=0;c<t.coordinates.length;c++){var p=t.coordinates[c],d={type:u,coordinates:p};if(e(Ir(d,r),n,c)===!1)return!1}})}function W2(i,e,t){var n=t;return Na(i,function(r,s,o){s===0&&o===0&&t===void 0?n=r:n=e(n,r,s,o)}),n}function g0(i,e){Na(i,function(t,n,r){var s=0;if(t.geometry){var o=t.geometry.type;if(!(o==="Point"||o==="MultiPoint")){var l,u=0,c=0,p=0;if(ko(t,function(d,f,g,v,w){if(l===void 0||n>u||v>c||w>p){l=d,u=n,c=v,p=w,s=0;return}var A=nr([l,d],t.properties);if(e(A,n,r,w,s)===!1)return!1;s++,l=d})===!1)return!1}}})}function m0(i,e,t){var n=t,r=!1;return g0(i,function(s,o,l,u,c){r===!1&&t===void 0?n=s:n=e(n,s,o,l,u,c),r=!0}),n}function y0(i,e){if(!i)throw new Error("geojson is required");Na(i,function(t,n,r){if(t.geometry!==null){var s=t.geometry.type,o=t.geometry.coordinates;switch(s){case"LineString":if(e(t,n,r,0,0)===!1)return!1;break;case"Polygon":for(var l=0;l<o.length;l++)if(e(nr(o[l],t.properties),n,r,l)===!1)return!1;break}}})}function J2(i,e,t){var n=t;return y0(i,function(r,s,o,l){s===0&&t===void 0?n=r:n=e(n,r,s,o,l)}),n}function V2(i,e){if(e=e||{},!Ap(e))throw new Error("options is invalid");var t=e.featureIndex||0,n=e.multiFeatureIndex||0,r=e.geometryIndex||0,s=e.segmentIndex||0,o=e.properties,l;switch(i.type){case"FeatureCollection":t<0&&(t=i.features.length+t),o=o||i.features[t].properties,l=i.features[t].geometry;break;case"Feature":o=o||i.properties,l=i.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":l=i;break;default:throw new Error("geojson is invalid")}if(l===null)return null;var u=l.coordinates;switch(l.type){case"Point":case"MultiPoint":return null;case"LineString":return s<0&&(s=u.length+s-1),nr([u[s],u[s+1]],o,e);case"Polygon":return r<0&&(r=u.length+r),s<0&&(s=u[r].length+s-1),nr([u[r][s],u[r][s+1]],o,e);case"MultiLineString":return n<0&&(n=u.length+n),s<0&&(s=u[n].length+s-1),nr([u[n][s],u[n][s+1]],o,e);case"MultiPolygon":return n<0&&(n=u.length+n),r<0&&(r=u[n].length+r),s<0&&(s=u[n][r].length-s-1),nr([u[n][r][s],u[n][r][s+1]],o,e)}throw new Error("geojson is invalid")}function G2(i,e){if(e=e||{},!Ap(e))throw new Error("options is invalid");var t=e.featureIndex||0,n=e.multiFeatureIndex||0,r=e.geometryIndex||0,s=e.coordIndex||0,o=e.properties,l;switch(i.type){case"FeatureCollection":t<0&&(t=i.features.length+t),o=o||i.features[t].properties,l=i.features[t].geometry;break;case"Feature":o=o||i.properties,l=i.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":l=i;break;default:throw new Error("geojson is invalid")}if(l===null)return null;var u=l.coordinates;switch(l.type){case"Point":return gi(u,o,e);case"MultiPoint":return n<0&&(n=u.length+n),gi(u[n],o,e);case"LineString":return s<0&&(s=u.length+s),gi(u[s],o,e);case"Polygon":return r<0&&(r=u.length+r),s<0&&(s=u[r].length+s),gi(u[r][s],o,e);case"MultiLineString":return n<0&&(n=u.length+n),s<0&&(s=u[n].length+s),gi(u[n][s],o,e);case"MultiPolygon":return n<0&&(n=u.length+n),r<0&&(r=u[n].length+r),s<0&&(s=u[n][r].length-s),gi(u[n][r][s],o,e)}throw new Error("geojson is invalid")}const U2=Object.freeze(Object.defineProperty({__proto__:null,coordAll:j2,coordEach:ko,coordReduce:F2,featureEach:Vo,featureReduce:p0,findPoint:G2,findSegment:V2,flattenEach:Na,flattenReduce:W2,geomEach:Iu,geomReduce:f0,lineEach:y0,lineReduce:J2,propEach:d0,propReduce:B2,segmentEach:g0,segmentReduce:m0},Symbol.toStringTag,{value:"Module"}));function bs(i){var e=[1/0,1/0,-1/0,-1/0];return ko(i,function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])}),e}bs.default=bs;const z2=Object.freeze(Object.defineProperty({__proto__:null,default:bs},Symbol.toStringTag,{value:"Module"}));function Ws(i){if(!i)throw new Error("coord is required");if(!Array.isArray(i)){if(i.type==="Feature"&&i.geometry!==null&&i.geometry.type==="Point")return i.geometry.coordinates;if(i.type==="Point")return i.coordinates}if(Array.isArray(i)&&i.length>=2&&!Array.isArray(i[0])&&!Array.isArray(i[1]))return i;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function gs(i){if(Array.isArray(i))return i;if(i.type==="Feature"){if(i.geometry!==null)return i.geometry.coordinates}else if(i.coordinates)return i.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function Go(i){return i.type==="Feature"?i.geometry:i}function xd(i,e){return i.type==="FeatureCollection"?"FeatureCollection":i.type==="GeometryCollection"?"GeometryCollection":i.type==="Feature"&&i.geometry!==null?i.geometry.type:i.type}var qp={exports:{}},b0={exports:{}};(function(i,e){(function(t,n){i.exports=n()})(ue,function(){function t(m,y,x,k,q){(function I(S,$,B,D,N){for(;D>B;){if(D-B>600){var O=D-B+1,L=$-B+1,V=Math.log(O),X=.5*Math.exp(2*V/3),K=.5*Math.sqrt(V*X*(O-X)/O)*(L-O/2<0?-1:1),ee=Math.max(B,Math.floor($-L*X/O+K)),z=Math.min(D,Math.floor($+(O-L)*X/O+K));I(S,$,ee,z,N)}var J=S[$],H=B,Y=D;for(n(S,B,$),N(S[D],J)>0&&n(S,B,D);H<Y;){for(n(S,H,Y),H++,Y--;N(S[H],J)<0;)H++;for(;N(S[Y],J)>0;)Y--}N(S[B],J)===0?n(S,B,Y):n(S,++Y,D),Y<=$&&(B=Y+1),$<=Y&&(D=Y-1)}})(m,y,x||0,k||m.length-1,q||r)}function n(m,y,x){var k=m[y];m[y]=m[x],m[x]=k}function r(m,y){return m<y?-1:m>y?1:0}var s=function(m){m===void 0&&(m=9),this._maxEntries=Math.max(4,m),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function o(m,y,x){if(!x)return y.indexOf(m);for(var k=0;k<y.length;k++)if(x(m,y[k]))return k;return-1}function l(m,y){u(m,0,m.children.length,y,m)}function u(m,y,x,k,q){q||(q=A(null)),q.minX=1/0,q.minY=1/0,q.maxX=-1/0,q.maxY=-1/0;for(var I=y;I<x;I++){var S=m.children[I];c(q,m.leaf?k(S):S)}return q}function c(m,y){return m.minX=Math.min(m.minX,y.minX),m.minY=Math.min(m.minY,y.minY),m.maxX=Math.max(m.maxX,y.maxX),m.maxY=Math.max(m.maxY,y.maxY),m}function p(m,y){return m.minX-y.minX}function d(m,y){return m.minY-y.minY}function f(m){return(m.maxX-m.minX)*(m.maxY-m.minY)}function g(m){return m.maxX-m.minX+(m.maxY-m.minY)}function v(m,y){return m.minX<=y.minX&&m.minY<=y.minY&&y.maxX<=m.maxX&&y.maxY<=m.maxY}function w(m,y){return y.minX<=m.maxX&&y.minY<=m.maxY&&y.maxX>=m.minX&&y.maxY>=m.minY}function A(m){return{children:m,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function C(m,y,x,k,q){for(var I=[y,x];I.length;)if(!((x=I.pop())-(y=I.pop())<=k)){var S=y+Math.ceil((x-y)/k/2)*k;t(m,S,y,x,q),I.push(y,S,S,x)}}return s.prototype.all=function(){return this._all(this.data,[])},s.prototype.search=function(m){var y=this.data,x=[];if(!w(m,y))return x;for(var k=this.toBBox,q=[];y;){for(var I=0;I<y.children.length;I++){var S=y.children[I],$=y.leaf?k(S):S;w(m,$)&&(y.leaf?x.push(S):v(m,$)?this._all(S,x):q.push(S))}y=q.pop()}return x},s.prototype.collides=function(m){var y=this.data;if(!w(m,y))return!1;for(var x=[];y;){for(var k=0;k<y.children.length;k++){var q=y.children[k],I=y.leaf?this.toBBox(q):q;if(w(m,I)){if(y.leaf||v(m,I))return!0;x.push(q)}}y=x.pop()}return!1},s.prototype.load=function(m){if(!m||!m.length)return this;if(m.length<this._minEntries){for(var y=0;y<m.length;y++)this.insert(m[y]);return this}var x=this._build(m.slice(),0,m.length-1,0);if(this.data.children.length)if(this.data.height===x.height)this._splitRoot(this.data,x);else{if(this.data.height<x.height){var k=this.data;this.data=x,x=k}this._insert(x,this.data.height-x.height-1,!0)}else this.data=x;return this},s.prototype.insert=function(m){return m&&this._insert(m,this.data.height-1),this},s.prototype.clear=function(){return this.data=A([]),this},s.prototype.remove=function(m,y){if(!m)return this;for(var x,k,q,I=this.data,S=this.toBBox(m),$=[],B=[];I||$.length;){if(I||(I=$.pop(),k=$[$.length-1],x=B.pop(),q=!0),I.leaf){var D=o(m,I.children,y);if(D!==-1)return I.children.splice(D,1),$.push(I),this._condense($),this}q||I.leaf||!v(I,S)?k?(x++,I=k.children[x],q=!1):I=null:($.push(I),B.push(x),x=0,k=I,I=I.children[0])}return this},s.prototype.toBBox=function(m){return m},s.prototype.compareMinX=function(m,y){return m.minX-y.minX},s.prototype.compareMinY=function(m,y){return m.minY-y.minY},s.prototype.toJSON=function(){return this.data},s.prototype.fromJSON=function(m){return this.data=m,this},s.prototype._all=function(m,y){for(var x=[];m;)m.leaf?y.push.apply(y,m.children):x.push.apply(x,m.children),m=x.pop();return y},s.prototype._build=function(m,y,x,k){var q,I=x-y+1,S=this._maxEntries;if(I<=S)return l(q=A(m.slice(y,x+1)),this.toBBox),q;k||(k=Math.ceil(Math.log(I)/Math.log(S)),S=Math.ceil(I/Math.pow(S,k-1))),(q=A([])).leaf=!1,q.height=k;var $=Math.ceil(I/S),B=$*Math.ceil(Math.sqrt(S));C(m,y,x,B,this.compareMinX);for(var D=y;D<=x;D+=B){var N=Math.min(D+B-1,x);C(m,D,N,$,this.compareMinY);for(var O=D;O<=N;O+=$){var L=Math.min(O+$-1,N);q.children.push(this._build(m,O,L,k-1))}}return l(q,this.toBBox),q},s.prototype._chooseSubtree=function(m,y,x,k){for(;k.push(y),!y.leaf&&k.length-1!==x;){for(var q=1/0,I=1/0,S=void 0,$=0;$<y.children.length;$++){var B=y.children[$],D=f(B),N=(O=m,L=B,(Math.max(L.maxX,O.maxX)-Math.min(L.minX,O.minX))*(Math.max(L.maxY,O.maxY)-Math.min(L.minY,O.minY))-D);N<I?(I=N,q=D<q?D:q,S=B):N===I&&D<q&&(q=D,S=B)}y=S||y.children[0]}var O,L;return y},s.prototype._insert=function(m,y,x){var k=x?m:this.toBBox(m),q=[],I=this._chooseSubtree(k,this.data,y,q);for(I.children.push(m),c(I,k);y>=0&&q[y].children.length>this._maxEntries;)this._split(q,y),y--;this._adjustParentBBoxes(k,q,y)},s.prototype._split=function(m,y){var x=m[y],k=x.children.length,q=this._minEntries;this._chooseSplitAxis(x,q,k);var I=this._chooseSplitIndex(x,q,k),S=A(x.children.splice(I,x.children.length-I));S.height=x.height,S.leaf=x.leaf,l(x,this.toBBox),l(S,this.toBBox),y?m[y-1].children.push(S):this._splitRoot(x,S)},s.prototype._splitRoot=function(m,y){this.data=A([m,y]),this.data.height=m.height+1,this.data.leaf=!1,l(this.data,this.toBBox)},s.prototype._chooseSplitIndex=function(m,y,x){for(var k,q,I,S,$,B,D,N=1/0,O=1/0,L=y;L<=x-y;L++){var V=u(m,0,L,this.toBBox),X=u(m,L,x,this.toBBox),K=(q=V,I=X,S=void 0,$=void 0,B=void 0,D=void 0,S=Math.max(q.minX,I.minX),$=Math.max(q.minY,I.minY),B=Math.min(q.maxX,I.maxX),D=Math.min(q.maxY,I.maxY),Math.max(0,B-S)*Math.max(0,D-$)),ee=f(V)+f(X);K<N?(N=K,k=L,O=ee<O?ee:O):K===N&&ee<O&&(O=ee,k=L)}return k||x-y},s.prototype._chooseSplitAxis=function(m,y,x){var k=m.leaf?this.compareMinX:p,q=m.leaf?this.compareMinY:d;this._allDistMargin(m,y,x,k)<this._allDistMargin(m,y,x,q)&&m.children.sort(k)},s.prototype._allDistMargin=function(m,y,x,k){m.children.sort(k);for(var q=this.toBBox,I=u(m,0,y,q),S=u(m,x-y,x,q),$=g(I)+g(S),B=y;B<x-y;B++){var D=m.children[B];c(I,m.leaf?q(D):D),$+=g(I)}for(var N=x-y-1;N>=y;N--){var O=m.children[N];c(S,m.leaf?q(O):O),$+=g(S)}return $},s.prototype._adjustParentBBoxes=function(m,y,x){for(var k=x;k>=0;k--)c(y[k],m)},s.prototype._condense=function(m){for(var y=m.length-1,x=void 0;y>=0;y--)m[y].children.length===0?y>0?(x=m[y-1].children).splice(x.indexOf(m[y]),1):this.clear():l(m[y],this.toBBox)},s})})(b0);var H2=b0.exports;class Y2{constructor(e=[],t=X2){if(this.data=e,this.length=this.data.length,this.compare=t,this.length>0)for(let n=(this.length>>1)-1;n>=0;n--)this._down(n)}push(e){this.data.push(e),this.length++,this._up(this.length-1)}pop(){if(this.length===0)return;const e=this.data[0],t=this.data.pop();return this.length--,this.length>0&&(this.data[0]=t,this._down(0)),e}peek(){return this.data[0]}_up(e){const{data:t,compare:n}=this,r=t[e];for(;e>0;){const s=e-1>>1,o=t[s];if(n(r,o)>=0)break;t[e]=o,e=s}t[e]=r}_down(e){const{data:t,compare:n}=this,r=this.length>>1,s=t[e];for(;e<r;){let o=(e<<1)+1,l=t[o];const u=o+1;if(u<this.length&&n(t[u],l)<0&&(o=u,l=t[u]),n(l,s)>=0)break;t[e]=l,e=o}t[e]=s}}function X2(i,e){return i<e?-1:i>e?1:0}const Z2=Object.freeze(Object.defineProperty({__proto__:null,default:Y2},Symbol.toStringTag,{value:"Module"})),K2=Nl(Z2);var rc={exports:{}},Q2=function(e,t,n,r){var s=e[0],o=e[1],l=!1;n===void 0&&(n=0),r===void 0&&(r=t.length);for(var u=(r-n)/2,c=0,p=u-1;c<u;p=c++){var d=t[n+c*2+0],f=t[n+c*2+1],g=t[n+p*2+0],v=t[n+p*2+1],w=f>o!=v>o&&s<(g-d)*(o-f)/(v-f)+d;w&&(l=!l)}return l},ev=function(e,t,n,r){var s=e[0],o=e[1],l=!1;n===void 0&&(n=0),r===void 0&&(r=t.length);for(var u=r-n,c=0,p=u-1;c<u;p=c++){var d=t[c+n][0],f=t[c+n][1],g=t[p+n][0],v=t[p+n][1],w=f>o!=v>o&&s<(g-d)*(o-f)/(v-f)+d;w&&(l=!l)}return l},v0=Q2,w0=ev;rc.exports=function(e,t,n,r){return t.length>0&&Array.isArray(t[0])?w0(e,t,n,r):v0(e,t,n,r)};rc.exports.nested=w0;rc.exports.flat=v0;var tv=rc.exports,kd={exports:{}};(function(i,e){(function(t,n){n(e)})(ue,function(t){const r=33306690738754706e-32;function s(w,A,C,m,y){let x,k,q,I,S=A[0],$=m[0],B=0,D=0;$>S==$>-S?(x=S,S=A[++B]):(x=$,$=m[++D]);let N=0;if(B<w&&D<C)for($>S==$>-S?(q=x-((k=S+x)-S),S=A[++B]):(q=x-((k=$+x)-$),$=m[++D]),x=k,q!==0&&(y[N++]=q);B<w&&D<C;)$>S==$>-S?(q=x-((k=x+S)-(I=k-x))+(S-I),S=A[++B]):(q=x-((k=x+$)-(I=k-x))+($-I),$=m[++D]),x=k,q!==0&&(y[N++]=q);for(;B<w;)q=x-((k=x+S)-(I=k-x))+(S-I),S=A[++B],x=k,q!==0&&(y[N++]=q);for(;D<C;)q=x-((k=x+$)-(I=k-x))+($-I),$=m[++D],x=k,q!==0&&(y[N++]=q);return x===0&&N!==0||(y[N++]=x),N}function o(w){return new Float64Array(w)}const l=33306690738754716e-32,u=22204460492503146e-32,c=11093356479670487e-47,p=o(4),d=o(8),f=o(12),g=o(16),v=o(4);t.orient2d=function(w,A,C,m,y,x){const k=(A-x)*(C-y),q=(w-y)*(m-x),I=k-q;if(k===0||q===0||k>0!=q>0)return I;const S=Math.abs(k+q);return Math.abs(I)>=l*S?I:-function($,B,D,N,O,L,V){let X,K,ee,z,J,H,Y,se,Q,ie,te,oe,ve,be,ye,re,he,Se;const Re=$-O,we=D-O,Ee=B-L,qe=N-L;J=(ye=(se=Re-(Y=(H=134217729*Re)-(H-Re)))*(ie=qe-(Q=(H=134217729*qe)-(H-qe)))-((be=Re*qe)-Y*Q-se*Q-Y*ie))-(te=ye-(he=(se=Ee-(Y=(H=134217729*Ee)-(H-Ee)))*(ie=we-(Q=(H=134217729*we)-(H-we)))-((re=Ee*we)-Y*Q-se*Q-Y*ie))),p[0]=ye-(te+J)+(J-he),J=(ve=be-((oe=be+te)-(J=oe-be))+(te-J))-(te=ve-re),p[1]=ve-(te+J)+(J-re),J=(Se=oe+te)-oe,p[2]=oe-(Se-J)+(te-J),p[3]=Se;let Be=function(Te,je){let Ne=je[0];for(let Oe=1;Oe<Te;Oe++)Ne+=je[Oe];return Ne}(4,p),Je=u*V;if(Be>=Je||-Be>=Je||(X=$-(Re+(J=$-Re))+(J-O),ee=D-(we+(J=D-we))+(J-O),K=B-(Ee+(J=B-Ee))+(J-L),z=N-(qe+(J=N-qe))+(J-L),X===0&&K===0&&ee===0&&z===0)||(Je=c*V+r*Math.abs(Be),(Be+=Re*z+qe*X-(Ee*ee+we*K))>=Je||-Be>=Je))return Be;J=(ye=(se=X-(Y=(H=134217729*X)-(H-X)))*(ie=qe-(Q=(H=134217729*qe)-(H-qe)))-((be=X*qe)-Y*Q-se*Q-Y*ie))-(te=ye-(he=(se=K-(Y=(H=134217729*K)-(H-K)))*(ie=we-(Q=(H=134217729*we)-(H-we)))-((re=K*we)-Y*Q-se*Q-Y*ie))),v[0]=ye-(te+J)+(J-he),J=(ve=be-((oe=be+te)-(J=oe-be))+(te-J))-(te=ve-re),v[1]=ve-(te+J)+(J-re),J=(Se=oe+te)-oe,v[2]=oe-(Se-J)+(te-J),v[3]=Se;const _e=s(4,p,4,v,d);J=(ye=(se=Re-(Y=(H=134217729*Re)-(H-Re)))*(ie=z-(Q=(H=134217729*z)-(H-z)))-((be=Re*z)-Y*Q-se*Q-Y*ie))-(te=ye-(he=(se=Ee-(Y=(H=134217729*Ee)-(H-Ee)))*(ie=ee-(Q=(H=134217729*ee)-(H-ee)))-((re=Ee*ee)-Y*Q-se*Q-Y*ie))),v[0]=ye-(te+J)+(J-he),J=(ve=be-((oe=be+te)-(J=oe-be))+(te-J))-(te=ve-re),v[1]=ve-(te+J)+(J-re),J=(Se=oe+te)-oe,v[2]=oe-(Se-J)+(te-J),v[3]=Se;const Fe=s(_e,d,4,v,f);J=(ye=(se=X-(Y=(H=134217729*X)-(H-X)))*(ie=z-(Q=(H=134217729*z)-(H-z)))-((be=X*z)-Y*Q-se*Q-Y*ie))-(te=ye-(he=(se=K-(Y=(H=134217729*K)-(H-K)))*(ie=ee-(Q=(H=134217729*ee)-(H-ee)))-((re=K*ee)-Y*Q-se*Q-Y*ie))),v[0]=ye-(te+J)+(J-he),J=(ve=be-((oe=be+te)-(J=oe-be))+(te-J))-(te=ve-re),v[1]=ve-(te+J)+(J-re),J=(Se=oe+te)-oe,v[2]=oe-(Se-J)+(te-J),v[3]=Se;const Ge=s(Fe,f,4,v,g);return g[Ge-1]}(w,A,C,m,y,x,S)},t.orient2dfast=function(w,A,C,m,y,x){return(A-x)*(C-y)-(w-y)*(m-x)},Object.defineProperty(t,"__esModule",{value:!0})})})(kd,kd.exports);var nv=kd.exports,sg=H2,mh=K2,iv=tv,rv=nv.orient2d;mh.default&&(mh=mh.default);qp.exports=_0;qp.exports.default=_0;function _0(i,e,t){e=Math.max(0,e===void 0?2:e),t=t||0;var n=uv(i),r=new sg(16);r.toBBox=function(m){return{minX:m[0],minY:m[1],maxX:m[0],maxY:m[1]}},r.compareMinX=function(m,y){return m[0]-y[0]},r.compareMinY=function(m,y){return m[1]-y[1]},r.load(i);for(var s=[],o=0,l;o<n.length;o++){var u=n[o];r.remove(u),l=lg(u,l),s.push(l)}var c=new sg(16);for(o=0;o<s.length;o++)c.insert(Uc(s[o]));for(var p=e*e,d=t*t;s.length;){var f=s.shift(),g=f.p,v=f.next.p,w=zc(g,v);if(!(w<d)){var A=w/p;u=sv(r,f.prev.p,g,v,f.next.next.p,A,c),u&&Math.min(zc(u,g),zc(u,v))<=A&&(s.push(f),s.push(lg(u,f)),r.remove(u),c.remove(f),c.insert(Uc(f)),c.insert(Uc(f.next)))}}f=l;var C=[];do C.push(f.p),f=f.next;while(f!==l);return C.push(f.p),C}function sv(i,e,t,n,r,s,o){for(var l=new mh([],ov),u=i.data;u;){for(var c=0;c<u.children.length;c++){var p=u.children[c],d=u.leaf?Hc(p,t,n):av(t,n,p);d>s||l.push({node:p,dist:d})}for(;l.length&&!l.peek().node.children;){var f=l.pop(),g=f.node,v=Hc(g,e,t),w=Hc(g,n,r);if(f.dist<v&&f.dist<w&&ag(t,g,o)&&ag(n,g,o))return g}u=l.pop(),u&&(u=u.node)}return null}function ov(i,e){return i.dist-e.dist}function av(i,e,t){if(og(i,t)||og(e,t))return 0;var n=ih(i[0],i[1],e[0],e[1],t.minX,t.minY,t.maxX,t.minY);if(n===0)return 0;var r=ih(i[0],i[1],e[0],e[1],t.minX,t.minY,t.minX,t.maxY);if(r===0)return 0;var s=ih(i[0],i[1],e[0],e[1],t.maxX,t.minY,t.maxX,t.maxY);if(s===0)return 0;var o=ih(i[0],i[1],e[0],e[1],t.minX,t.maxY,t.maxX,t.maxY);return o===0?0:Math.min(n,r,s,o)}function og(i,e){return i[0]>=e.minX&&i[0]<=e.maxX&&i[1]>=e.minY&&i[1]<=e.maxY}function ag(i,e,t){for(var n=Math.min(i[0],e[0]),r=Math.min(i[1],e[1]),s=Math.max(i[0],e[0]),o=Math.max(i[1],e[1]),l=t.search({minX:n,minY:r,maxX:s,maxY:o}),u=0;u<l.length;u++)if(lv(l[u].p,l[u].next.p,i,e))return!1;return!0}function Qa(i,e,t){return rv(i[0],i[1],e[0],e[1],t[0],t[1])}function lv(i,e,t,n){return i!==n&&e!==t&&Qa(i,e,t)>0!=Qa(i,e,n)>0&&Qa(t,n,i)>0!=Qa(t,n,e)>0}function Uc(i){var e=i.p,t=i.next.p;return i.minX=Math.min(e[0],t[0]),i.minY=Math.min(e[1],t[1]),i.maxX=Math.max(e[0],t[0]),i.maxY=Math.max(e[1],t[1]),i}function uv(i){for(var e=i[0],t=i[0],n=i[0],r=i[0],s=0;s<i.length;s++){var o=i[s];o[0]<e[0]&&(e=o),o[0]>n[0]&&(n=o),o[1]<t[1]&&(t=o),o[1]>r[1]&&(r=o)}var l=[e,t,n,r],u=l.slice();for(s=0;s<i.length;s++)iv(i[s],l)||u.push(i[s]);return cv(u)}function lg(i,e){var t={p:i,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return e?(t.next=e.next,t.prev=e,e.next.prev=t,e.next=t):(t.prev=t,t.next=t),t}function zc(i,e){var t=i[0]-e[0],n=i[1]-e[1];return t*t+n*n}function Hc(i,e,t){var n=e[0],r=e[1],s=t[0]-n,o=t[1]-r;if(s!==0||o!==0){var l=((i[0]-n)*s+(i[1]-r)*o)/(s*s+o*o);l>1?(n=t[0],r=t[1]):l>0&&(n+=s*l,r+=o*l)}return s=i[0]-n,o=i[1]-r,s*s+o*o}function ih(i,e,t,n,r,s,o,l){var u=t-i,c=n-e,p=o-r,d=l-s,f=i-r,g=e-s,v=u*u+c*c,w=u*p+c*d,A=p*p+d*d,C=u*f+c*g,m=p*f+d*g,y=v*A-w*w,x,k,q,I,S=y,$=y;y===0?(k=0,S=1,I=m,$=A):(k=w*m-A*C,I=v*m-w*C,k<0?(k=0,I=m,$=A):k>S&&(k=S,I=m+w,$=A)),I<0?(I=0,-C<0?k=0:-C>v?k=S:(k=-C,S=v)):I>$&&(I=$,-C+w<0?k=0:-C+w>v?k=S:(k=-C+w,S=v)),x=k===0?0:k/S,q=I===0?0:I/$;var B=(1-x)*i+x*t,D=(1-x)*e+x*n,N=(1-q)*r+q*o,O=(1-q)*s+q*l,L=N-B,V=O-D;return L*L+V*V}function hv(i,e){return i[0]===e[0]?i[1]-e[1]:i[0]-e[0]}function cv(i){i.sort(hv);for(var e=[],t=0;t<i.length;t++){for(;e.length>=2&&Qa(e[e.length-2],e[e.length-1],i[t])<=0;)e.pop();e.push(i[t])}for(var n=[],r=i.length-1;r>=0;r--){for(;n.length>=2&&Qa(n[n.length-2],n[n.length-1],i[r])<=0;)n.pop();n.push(i[r])}return n.pop(),e.pop(),e.concat(n)}var dv=qp.exports;const pv=bp(dv);function fv(i,e){e===void 0&&(e={}),e.concavity=e.concavity||1/0;var t=[];if(ko(i,function(r){t.push([r[0],r[1]])}),!t.length)return null;var n=pv(t,e.concavity);return n.length>3?Ll([n]):null}function va(i,e,t){if(t===void 0&&(t={}),!i)throw new Error("point is required");if(!e)throw new Error("polygon is required");var n=Ws(i),r=Go(e),s=r.type,o=e.bbox,l=r.coordinates;if(o&&gv(n,o)===!1)return!1;s==="Polygon"&&(l=[l]);for(var u=!1,c=0;c<l.length&&!u;c++)if(ug(n,l[c][0],t.ignoreBoundary)){for(var p=!1,d=1;d<l[c].length&&!p;)ug(n,l[c][d],!t.ignoreBoundary)&&(p=!0),d++;p||(u=!0)}return u}function ug(i,e,t){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var r=0,s=e.length-1;r<e.length;s=r++){var o=e[r][0],l=e[r][1],u=e[s][0],c=e[s][1],p=i[1]*(o-u)+l*(u-i[0])+c*(i[0]-o)===0&&(o-i[0])*(u-i[0])<=0&&(l-i[1])*(c-i[1])<=0;if(p)return!t;var d=l>i[1]!=c>i[1]&&i[0]<(u-o)*(i[1]-l)/(c-l)+o;d&&(n=!n)}return n}function gv(i,e){return e[0]<=i[0]&&e[1]<=i[1]&&e[2]>=i[0]&&e[3]>=i[1]}function Fs(i,e,t){t===void 0&&(t={});var n=Ws(i),r=Ws(e),s=Gr(r[1]-n[1]),o=Gr(r[0]-n[0]),l=Gr(n[1]),u=Gr(r[1]),c=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(o/2),2)*Math.cos(l)*Math.cos(u);return ic(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),t.units)}function mv(i){if(!i)throw new Error("geojson is required");switch(i.type){case"Feature":return C0(i);case"FeatureCollection":return yv(i);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return Sp(i);default:throw new Error("unknown GeoJSON type")}}function C0(i){var e={type:"Feature"};return Object.keys(i).forEach(function(t){switch(t){case"type":case"properties":case"geometry":return;default:e[t]=i[t]}}),e.properties=T0(i.properties),e.geometry=Sp(i.geometry),e}function T0(i){var e={};return i&&Object.keys(i).forEach(function(t){var n=i[t];typeof n=="object"?n===null?e[t]=null:Array.isArray(n)?e[t]=n.map(function(r){return r}):e[t]=T0(n):e[t]=n}),e}function yv(i){var e={type:"FeatureCollection"};return Object.keys(i).forEach(function(t){switch(t){case"type":case"features":return;default:e[t]=i[t]}}),e.features=i.features.map(function(t){return C0(t)}),e}function Sp(i){var e={type:i.type};return i.bbox&&(e.bbox=i.bbox),i.type==="GeometryCollection"?(e.geometries=i.geometries.map(function(t){return Sp(t)}),e):(e.coordinates=x0(i.coordinates),e)}function x0(i){var e=i;return typeof e[0]!="object"?e.slice():e.map(function(t){return x0(t)})}function bv(i){var e=i[0],t=i[1],n=i[2],r=i[3],s=Fs(i.slice(0,2),[n,t]),o=Fs(i.slice(0,2),[e,r]);if(s>=o){var l=(t+r)/2;return[e,l-(n-e)/2,n,l+(n-e)/2]}else{var u=(e+n)/2;return[u-(r-t)/2,t,u+(r-t)/2,r]}}function Ad(i,e,t,n){n===void 0&&(n={});var r=Ws(i),s=Gr(r[0]),o=Gr(r[1]),l=Gr(t),u=Eu(e,n.units),c=Math.asin(Math.sin(o)*Math.cos(u)+Math.cos(o)*Math.sin(u)*Math.cos(l)),p=s+Math.atan2(Math.sin(l)*Math.sin(u)*Math.cos(o),Math.cos(u)-Math.sin(o)*Math.sin(c)),d=ou(p),f=ou(c);return gi([d,f],n.properties)}function Lo(i,e,t){if(t===void 0&&(t={}),t.final===!0)return vv(i,e);var n=Ws(i),r=Ws(e),s=Gr(n[0]),o=Gr(r[0]),l=Gr(n[1]),u=Gr(r[1]),c=Math.sin(o-s)*Math.cos(u),p=Math.cos(l)*Math.sin(u)-Math.sin(l)*Math.cos(u)*Math.cos(o-s);return ou(Math.atan2(c,p))}function vv(i,e){var t=Lo(e,i);return t=(t+180)%360,t}function qd(i,e){e===void 0&&(e={});var t=bs(i),n=(t[0]+t[2])/2,r=(t[1]+t[3])/2;return gi([n,r],e.properties,e)}function Sd(i){if(!i)throw new Error("geojson is required");var e=[];return Na(i,function(t){wv(t,e)}),ir(e)}function wv(i,e){var t=[],n=i.geometry;if(n!==null){switch(n.type){case"Polygon":t=gs(n);break;case"LineString":t=[gs(n)]}t.forEach(function(r){var s=_v(r,i.properties);s.forEach(function(o){o.id=e.length,e.push(o)})})}}function _v(i,e){var t=[];return i.reduce(function(n,r){var s=nr([n,r],e);return s.bbox=Cv(n,r),t.push(s),r}),t}function Cv(i,e){var t=i[0],n=i[1],r=e[0],s=e[1],o=t<r?t:r,l=n<s?n:s,u=t>r?t:r,c=n>s?n:s;return[o,l,u,c]}var Ep={exports:{}},k0={exports:{}};(function(i,e){(function(t,n){i.exports=n()})(ue,function(){function t(m,y,x,k,q){(function I(S,$,B,D,N){for(;D>B;){if(D-B>600){var O=D-B+1,L=$-B+1,V=Math.log(O),X=.5*Math.exp(2*V/3),K=.5*Math.sqrt(V*X*(O-X)/O)*(L-O/2<0?-1:1),ee=Math.max(B,Math.floor($-L*X/O+K)),z=Math.min(D,Math.floor($+(O-L)*X/O+K));I(S,$,ee,z,N)}var J=S[$],H=B,Y=D;for(n(S,B,$),N(S[D],J)>0&&n(S,B,D);H<Y;){for(n(S,H,Y),H++,Y--;N(S[H],J)<0;)H++;for(;N(S[Y],J)>0;)Y--}N(S[B],J)===0?n(S,B,Y):n(S,++Y,D),Y<=$&&(B=Y+1),$<=Y&&(D=Y-1)}})(m,y,x||0,k||m.length-1,q||r)}function n(m,y,x){var k=m[y];m[y]=m[x],m[x]=k}function r(m,y){return m<y?-1:m>y?1:0}var s=function(m){m===void 0&&(m=9),this._maxEntries=Math.max(4,m),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function o(m,y,x){if(!x)return y.indexOf(m);for(var k=0;k<y.length;k++)if(x(m,y[k]))return k;return-1}function l(m,y){u(m,0,m.children.length,y,m)}function u(m,y,x,k,q){q||(q=A(null)),q.minX=1/0,q.minY=1/0,q.maxX=-1/0,q.maxY=-1/0;for(var I=y;I<x;I++){var S=m.children[I];c(q,m.leaf?k(S):S)}return q}function c(m,y){return m.minX=Math.min(m.minX,y.minX),m.minY=Math.min(m.minY,y.minY),m.maxX=Math.max(m.maxX,y.maxX),m.maxY=Math.max(m.maxY,y.maxY),m}function p(m,y){return m.minX-y.minX}function d(m,y){return m.minY-y.minY}function f(m){return(m.maxX-m.minX)*(m.maxY-m.minY)}function g(m){return m.maxX-m.minX+(m.maxY-m.minY)}function v(m,y){return m.minX<=y.minX&&m.minY<=y.minY&&y.maxX<=m.maxX&&y.maxY<=m.maxY}function w(m,y){return y.minX<=m.maxX&&y.minY<=m.maxY&&y.maxX>=m.minX&&y.maxY>=m.minY}function A(m){return{children:m,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function C(m,y,x,k,q){for(var I=[y,x];I.length;)if(!((x=I.pop())-(y=I.pop())<=k)){var S=y+Math.ceil((x-y)/k/2)*k;t(m,S,y,x,q),I.push(y,S,S,x)}}return s.prototype.all=function(){return this._all(this.data,[])},s.prototype.search=function(m){var y=this.data,x=[];if(!w(m,y))return x;for(var k=this.toBBox,q=[];y;){for(var I=0;I<y.children.length;I++){var S=y.children[I],$=y.leaf?k(S):S;w(m,$)&&(y.leaf?x.push(S):v(m,$)?this._all(S,x):q.push(S))}y=q.pop()}return x},s.prototype.collides=function(m){var y=this.data;if(!w(m,y))return!1;for(var x=[];y;){for(var k=0;k<y.children.length;k++){var q=y.children[k],I=y.leaf?this.toBBox(q):q;if(w(m,I)){if(y.leaf||v(m,I))return!0;x.push(q)}}y=x.pop()}return!1},s.prototype.load=function(m){if(!m||!m.length)return this;if(m.length<this._minEntries){for(var y=0;y<m.length;y++)this.insert(m[y]);return this}var x=this._build(m.slice(),0,m.length-1,0);if(this.data.children.length)if(this.data.height===x.height)this._splitRoot(this.data,x);else{if(this.data.height<x.height){var k=this.data;this.data=x,x=k}this._insert(x,this.data.height-x.height-1,!0)}else this.data=x;return this},s.prototype.insert=function(m){return m&&this._insert(m,this.data.height-1),this},s.prototype.clear=function(){return this.data=A([]),this},s.prototype.remove=function(m,y){if(!m)return this;for(var x,k,q,I=this.data,S=this.toBBox(m),$=[],B=[];I||$.length;){if(I||(I=$.pop(),k=$[$.length-1],x=B.pop(),q=!0),I.leaf){var D=o(m,I.children,y);if(D!==-1)return I.children.splice(D,1),$.push(I),this._condense($),this}q||I.leaf||!v(I,S)?k?(x++,I=k.children[x],q=!1):I=null:($.push(I),B.push(x),x=0,k=I,I=I.children[0])}return this},s.prototype.toBBox=function(m){return m},s.prototype.compareMinX=function(m,y){return m.minX-y.minX},s.prototype.compareMinY=function(m,y){return m.minY-y.minY},s.prototype.toJSON=function(){return this.data},s.prototype.fromJSON=function(m){return this.data=m,this},s.prototype._all=function(m,y){for(var x=[];m;)m.leaf?y.push.apply(y,m.children):x.push.apply(x,m.children),m=x.pop();return y},s.prototype._build=function(m,y,x,k){var q,I=x-y+1,S=this._maxEntries;if(I<=S)return l(q=A(m.slice(y,x+1)),this.toBBox),q;k||(k=Math.ceil(Math.log(I)/Math.log(S)),S=Math.ceil(I/Math.pow(S,k-1))),(q=A([])).leaf=!1,q.height=k;var $=Math.ceil(I/S),B=$*Math.ceil(Math.sqrt(S));C(m,y,x,B,this.compareMinX);for(var D=y;D<=x;D+=B){var N=Math.min(D+B-1,x);C(m,D,N,$,this.compareMinY);for(var O=D;O<=N;O+=$){var L=Math.min(O+$-1,N);q.children.push(this._build(m,O,L,k-1))}}return l(q,this.toBBox),q},s.prototype._chooseSubtree=function(m,y,x,k){for(;k.push(y),!y.leaf&&k.length-1!==x;){for(var q=1/0,I=1/0,S=void 0,$=0;$<y.children.length;$++){var B=y.children[$],D=f(B),N=(O=m,L=B,(Math.max(L.maxX,O.maxX)-Math.min(L.minX,O.minX))*(Math.max(L.maxY,O.maxY)-Math.min(L.minY,O.minY))-D);N<I?(I=N,q=D<q?D:q,S=B):N===I&&D<q&&(q=D,S=B)}y=S||y.children[0]}var O,L;return y},s.prototype._insert=function(m,y,x){var k=x?m:this.toBBox(m),q=[],I=this._chooseSubtree(k,this.data,y,q);for(I.children.push(m),c(I,k);y>=0&&q[y].children.length>this._maxEntries;)this._split(q,y),y--;this._adjustParentBBoxes(k,q,y)},s.prototype._split=function(m,y){var x=m[y],k=x.children.length,q=this._minEntries;this._chooseSplitAxis(x,q,k);var I=this._chooseSplitIndex(x,q,k),S=A(x.children.splice(I,x.children.length-I));S.height=x.height,S.leaf=x.leaf,l(x,this.toBBox),l(S,this.toBBox),y?m[y-1].children.push(S):this._splitRoot(x,S)},s.prototype._splitRoot=function(m,y){this.data=A([m,y]),this.data.height=m.height+1,this.data.leaf=!1,l(this.data,this.toBBox)},s.prototype._chooseSplitIndex=function(m,y,x){for(var k,q,I,S,$,B,D,N=1/0,O=1/0,L=y;L<=x-y;L++){var V=u(m,0,L,this.toBBox),X=u(m,L,x,this.toBBox),K=(q=V,I=X,S=void 0,$=void 0,B=void 0,D=void 0,S=Math.max(q.minX,I.minX),$=Math.max(q.minY,I.minY),B=Math.min(q.maxX,I.maxX),D=Math.min(q.maxY,I.maxY),Math.max(0,B-S)*Math.max(0,D-$)),ee=f(V)+f(X);K<N?(N=K,k=L,O=ee<O?ee:O):K===N&&ee<O&&(O=ee,k=L)}return k||x-y},s.prototype._chooseSplitAxis=function(m,y,x){var k=m.leaf?this.compareMinX:p,q=m.leaf?this.compareMinY:d;this._allDistMargin(m,y,x,k)<this._allDistMargin(m,y,x,q)&&m.children.sort(k)},s.prototype._allDistMargin=function(m,y,x,k){m.children.sort(k);for(var q=this.toBBox,I=u(m,0,y,q),S=u(m,x-y,x,q),$=g(I)+g(S),B=y;B<x-y;B++){var D=m.children[B];c(I,m.leaf?q(D):D),$+=g(I)}for(var N=x-y-1;N>=y;N--){var O=m.children[N];c(S,m.leaf?q(O):O),$+=g(S)}return $},s.prototype._adjustParentBBoxes=function(m,y,x){for(var k=x;k>=0;k--)c(y[k],m)},s.prototype._condense=function(m){for(var y=m.length-1,x=void 0;y>=0;y--)m[y].children.length===0?y>0?(x=m[y-1].children).splice(x.indexOf(m[y]),1):this.clear():l(m[y],this.toBBox)},s})})(k0);var Tv=k0.exports;const xv=Nl(P2),kv=Nl(U2),Av=Nl(z2);var Is=Tv,A0=xv,q0=kv,Ya=Av.default,qv=q0.featureEach;q0.coordEach;A0.polygon;var hg=A0.featureCollection;function S0(i){var e=new Is(i);return e.insert=function(t){if(t.type!=="Feature")throw new Error("invalid feature");return t.bbox=t.bbox?t.bbox:Ya(t),Is.prototype.insert.call(this,t)},e.load=function(t){var n=[];return Array.isArray(t)?t.forEach(function(r){if(r.type!=="Feature")throw new Error("invalid features");r.bbox=r.bbox?r.bbox:Ya(r),n.push(r)}):qv(t,function(r){if(r.type!=="Feature")throw new Error("invalid features");r.bbox=r.bbox?r.bbox:Ya(r),n.push(r)}),Is.prototype.load.call(this,n)},e.remove=function(t,n){if(t.type!=="Feature")throw new Error("invalid feature");return t.bbox=t.bbox?t.bbox:Ya(t),Is.prototype.remove.call(this,t,n)},e.clear=function(){return Is.prototype.clear.call(this)},e.search=function(t){var n=Is.prototype.search.call(this,this.toBBox(t));return hg(n)},e.collides=function(t){return Is.prototype.collides.call(this,this.toBBox(t))},e.all=function(){var t=Is.prototype.all.call(this);return hg(t)},e.toJSON=function(){return Is.prototype.toJSON.call(this)},e.fromJSON=function(t){return Is.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var n;if(t.bbox)n=t.bbox;else if(Array.isArray(t)&&t.length===4)n=t;else if(Array.isArray(t)&&t.length===6)n=[t[0],t[1],t[3],t[4]];else if(t.type==="Feature")n=Ya(t);else if(t.type==="FeatureCollection")n=Ya(t);else throw new Error("invalid geojson");return{minX:n[0],minY:n[1],maxX:n[2],maxY:n[3]}},e}Ep.exports=S0;Ep.exports.default=S0;var Sv=Ep.exports;const Ip=bp(Sv);function xh(i,e){var t={},n=[];if(i.type==="LineString"&&(i=Ir(i)),e.type==="LineString"&&(e=Ir(e)),i.type==="Feature"&&e.type==="Feature"&&i.geometry!==null&&e.geometry!==null&&i.geometry.type==="LineString"&&e.geometry.type==="LineString"&&i.geometry.coordinates.length===2&&e.geometry.coordinates.length===2){var r=cg(i,e);return r&&n.push(r),ir(n)}var s=Ip();return s.load(Sd(e)),Vo(Sd(i),function(o){Vo(s.search(o),function(l){var u=cg(o,l);if(u){var c=gs(u).join(",");t[c]||(t[c]=!0,n.push(u))}})}),ir(n)}function cg(i,e){var t=gs(i),n=gs(e);if(t.length!==2)throw new Error("<intersects> line1 must only contain 2 coordinates");if(n.length!==2)throw new Error("<intersects> line2 must only contain 2 coordinates");var r=t[0][0],s=t[0][1],o=t[1][0],l=t[1][1],u=n[0][0],c=n[0][1],p=n[1][0],d=n[1][1],f=(d-c)*(o-r)-(p-u)*(l-s),g=(p-u)*(s-c)-(d-c)*(r-u),v=(o-r)*(s-c)-(l-s)*(r-u);if(f===0)return null;var w=g/f,A=v/f;if(w>=0&&w<=1&&A>=0&&A<=1){var C=r+w*(o-r),m=s+w*(l-s);return gi([C,m])}return null}function kh(i,e,t){t===void 0&&(t={});var n=gi([1/0,1/0],{dist:1/0}),r=0;return Na(i,function(s){for(var o=gs(s),l=0;l<o.length-1;l++){var u=gi(o[l]);u.properties.dist=Fs(e,u,t);var c=gi(o[l+1]);c.properties.dist=Fs(e,c,t);var p=Fs(u,c,t),d=Math.max(u.properties.dist,c.properties.dist),f=Lo(u,c),g=Ad(e,d,f+90,t),v=Ad(e,d,f-90,t),w=xh(nr([g.geometry.coordinates,v.geometry.coordinates]),nr([u.geometry.coordinates,c.geometry.coordinates])),A=null;w.features.length>0&&(A=w.features[0],A.properties.dist=Fs(e,A,t),A.properties.location=r+Fs(u,A,t)),u.properties.dist<n.properties.dist&&(n=u,n.properties.index=l,n.properties.location=r),c.properties.dist<n.properties.dist&&(n=c,n.properties.index=l+1,n.properties.location=r+p),A&&A.properties.dist<n.properties.dist&&(n=A,n.properties.index=l),r+=p}}),n}var dg=6378137;function Yc(i){return f0(i,function(e,t){return e+Ev(t)},0)}function Ev(i){var e=0,t;switch(i.type){case"Polygon":return pg(i.coordinates);case"MultiPolygon":for(t=0;t<i.coordinates.length;t++)e+=pg(i.coordinates[t]);return e;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}function pg(i){var e=0;if(i&&i.length>0){e+=Math.abs(fg(i[0]));for(var t=1;t<i.length;t++)e-=Math.abs(fg(i[t]))}return e}function fg(i){var e,t,n,r,s,o,l,u=0,c=i.length;if(c>2){for(l=0;l<c;l++)l===c-2?(r=c-2,s=c-1,o=0):l===c-1?(r=c-1,s=0,o=1):(r=l,s=l+1,o=l+2),e=i[r],t=i[s],n=i[o],u+=(Xc(n[0])-Xc(e[0]))*Math.sin(Xc(t[1]));u=u*dg*dg/2}return u}function Xc(i){return i*Math.PI/180}function Iv(i,e,t){t===void 0&&(t={});for(var n=Go(i),r=n.coordinates,s=0,o=0;o<r.length&&!(e>=s&&o===r.length-1);o++)if(s>=e){var l=e-s;if(l){var u=Lo(r[o],r[o-1])-180,c=Ad(r[o],l,u,t);return c}else return gi(r[o])}else s+=Fs(r[o],r[o+1],t);return gi(r[r.length-1])}function gg(i,e){return e===void 0&&(e={}),m0(i,function(t,n){var r=n.geometry.coordinates;return t+Fs(r[0],r[1],e)},0)}function Dv(i,e,t){var n=gs(t);if(xd(t)!=="LineString")throw new Error("line must be a LineString");var r=kh(t,i),s=kh(t,e),o;r.properties.index<=s.properties.index?o=[r,s]:o=[s,r];for(var l=[o[0].geometry.coordinates],u=o[0].properties.index+1;u<o[1].properties.index+1;u++)l.push(n[u]);return l.push(o[1].geometry.coordinates),nr(l,t.properties)}function Ah(i,e,t){t===void 0&&(t={});for(var n=Ws(i),r=gs(e),s=0;s<r.length-1;s++){var o=!1;if(t.ignoreEndVertices&&(s===0&&(o="start"),s===r.length-2&&(o="end"),s===0&&s+1===r.length-1&&(o="both")),Rv(r[s],r[s+1],n,o,typeof t.epsilon>"u"?null:t.epsilon))return!0}return!1}function Rv(i,e,t,n,r){var s=t[0],o=t[1],l=i[0],u=i[1],c=e[0],p=e[1],d=t[0]-l,f=t[1]-u,g=c-l,v=p-u,w=d*v-f*g;if(r!==null){if(Math.abs(w)>r)return!1}else if(w!==0)return!1;if(n){if(n==="start")return Math.abs(g)>=Math.abs(v)?g>0?l<s&&s<=c:c<=s&&s<l:v>0?u<o&&o<=p:p<=o&&o<u;if(n==="end")return Math.abs(g)>=Math.abs(v)?g>0?l<=s&&s<c:c<s&&s<=l:v>0?u<=o&&o<p:p<o&&o<=u;if(n==="both")return Math.abs(g)>=Math.abs(v)?g>0?l<s&&s<c:c<s&&s<l:v>0?u<o&&o<p:p<o&&o<u}else return Math.abs(g)>=Math.abs(v)?g>0?l<=s&&s<=c:c<=s&&s<=l:v>0?u<=o&&o<=p:p<=o&&o<=u;return!1}function $v(i,e){var t=Go(i),n=Go(e),r=t.type,s=n.type;switch(r){case"Point":switch(s){case"MultiPoint":return Nv(t,n);case"LineString":return Ah(t,n,{ignoreEndVertices:!0});case"Polygon":case"MultiPolygon":return va(t,n,{ignoreBoundary:!0});default:throw new Error("feature2 "+s+" geometry not supported")}case"MultiPoint":switch(s){case"MultiPoint":return Lv(t,n);case"LineString":return Mv(t,n);case"Polygon":case"MultiPolygon":return Ov(t,n);default:throw new Error("feature2 "+s+" geometry not supported")}case"LineString":switch(s){case"LineString":return Pv(t,n);case"Polygon":case"MultiPolygon":return Fv(t,n);default:throw new Error("feature2 "+s+" geometry not supported")}case"Polygon":switch(s){case"Polygon":case"MultiPolygon":return Bv(t,n);default:throw new Error("feature2 "+s+" geometry not supported")}default:throw new Error("feature1 "+r+" geometry not supported")}}function Nv(i,e){var t,n=!1;for(t=0;t<e.coordinates.length;t++)if(I0(e.coordinates[t],i.coordinates)){n=!0;break}return n}function Lv(i,e){for(var t=0;t<i.coordinates.length;t++){for(var n=!1,r=0;r<e.coordinates.length;r++)I0(i.coordinates[t],e.coordinates[r])&&(n=!0);if(!n)return!1}return!0}function Mv(i,e){for(var t=!1,n=0;n<i.coordinates.length;n++){if(!Ah(i.coordinates[n],e))return!1;t||(t=Ah(i.coordinates[n],e,{ignoreEndVertices:!0}))}return t}function Ov(i,e){for(var t=!0,n=!1,r=0;r<i.coordinates.length;r++){if(n=va(i.coordinates[1],e),!n){t=!1;break}n=va(i.coordinates[1],e,{ignoreBoundary:!0})}return t&&n}function Pv(i,e){for(var t=0;t<i.coordinates.length;t++)if(!Ah(i.coordinates[t],e))return!1;return!0}function Fv(i,e){var t=bs(e),n=bs(i);if(!E0(t,n))return!1;for(var r=!1,s=0;s<i.coordinates.length-1;s++){if(!va(i.coordinates[s],e))return!1;if(r||(r=va(i.coordinates[s],e,{ignoreBoundary:!0})),!r){var o=jv(i.coordinates[s],i.coordinates[s+1]);r=va(o,e,{ignoreBoundary:!0})}}return r}function Bv(i,e){var t=bs(i),n=bs(e);if(!E0(n,t))return!1;for(var r=0;r<i.coordinates[0].length;r++)if(!va(i.coordinates[0][r],e))return!1;return!0}function E0(i,e){return!(i[0]>e[0]||i[2]<e[2]||i[1]>e[1]||i[3]<e[3])}function I0(i,e){return i[0]===e[0]&&i[1]===e[1]}function jv(i,e){return[(i[0]+e[0])/2,(i[1]+e[1])/2]}function Ed(i,e){e===void 0&&(e={});var t=e.precision,n=e.coordinates,r=e.mutate;if(t=t==null||isNaN(t)?6:t,n=n==null||isNaN(n)?3:n,!i)throw new Error("<geojson> is required");if(typeof t!="number")throw new Error("<precision> must be a number");if(typeof n!="number")throw new Error("<coordinates> must be a number");(r===!1||r===void 0)&&(i=JSON.parse(JSON.stringify(i)));var s=Math.pow(10,t);return ko(i,function(o){Wv(o,s,n)}),i}function Wv(i,e,t){i.length>t&&i.splice(t,i.length);for(var n=0;n<i.length;n++)i[n]=Math.round(i[n]*e)/e;return i}function mg(i,e){if(!i)throw new Error("line is required");if(!e)throw new Error("splitter is required");var t=xd(i),n=xd(e);if(t!=="LineString")throw new Error("line must be LineString");if(n==="FeatureCollection")throw new Error("splitter cannot be a FeatureCollection");if(n==="GeometryCollection")throw new Error("splitter cannot be a GeometryCollection");var r=Ed(e,{precision:7});switch(n){case"Point":return Id(i,r);case"MultiPoint":return yg(i,r);case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":return yg(i,xh(i,r))}}function yg(i,e){var t=[],n=Ip();return Na(e,function(r){if(t.forEach(function(l,u){l.id=u}),!t.length)t=Id(i,r).features,t.forEach(function(l){l.bbox||(l.bbox=bv(bs(l)))}),n.load(ir(t));else{var s=n.search(r);if(s.features.length){var o=D0(r,s);t=t.filter(function(l){return l.id!==o.id}),n.remove(o),Vo(Id(o,r),function(l){t.push(l),n.insert(l)})}}}),ir(t)}function Id(i,e){var t=[],n=gs(i)[0],r=gs(i)[i.geometry.coordinates.length-1];if(Zc(n,Ws(e))||Zc(r,Ws(e)))return ir([i]);var s=Ip(),o=Sd(i);s.load(o);var l=s.search(e);if(!l.features.length)return ir([i]);var u=D0(e,l),c=[n],p=p0(o,function(d,f,g){var v=gs(f)[1],w=Ws(e);return g===u.id?(d.push(w),t.push(nr(d)),Zc(w,v)?[w]:[w,v]):(d.push(v),d)},c);return p.length>1&&t.push(nr(p)),ir(t)}function D0(i,e){if(!e.features.length)throw new Error("lines must contain features");if(e.features.length===1)return e.features[0];var t,n=1/0;return Vo(e,function(r){var s=kh(r,i),o=s.properties.dist;o<n&&(t=r,n=o)}),t}function Zc(i,e){return i[0]===e[0]&&i[1]===e[1]}function Jv(i,e){return e===void 0&&(e={}),Vv(i,"wgs84",e)}function Vv(i,e,t){t===void 0&&(t={}),t=t||{};var n=t.mutate;if(!i)throw new Error("geojson is required");return Array.isArray(i)&&au(i[0])?i=e==="mercator"?bg(i):vg(i):(n!==!0&&(i=mv(i)),ko(i,function(r){var s=e==="mercator"?bg(r):vg(r);r[0]=s[0],r[1]=s[1]})),i}function bg(i){var e=Math.PI/180,t=6378137,n=20037508342789244e-9,r=Math.abs(i[0])<=180?i[0]:i[0]-Gv(i[0])*360,s=[t*r*e,t*Math.log(Math.tan(Math.PI*.25+.5*i[1]*e))];return s[0]>n&&(s[0]=n),s[0]<-n&&(s[0]=-n),s[1]>n&&(s[1]=n),s[1]<-n&&(s[1]=-n),s}function vg(i){var e=180/Math.PI,t=6378137;return[i[0]*e/t,(Math.PI*.5-2*Math.atan(Math.exp(-i[1]/t)))*e]}function Gv(i){return i<0?-1:i>0?1:0}/**
 * splaytree v3.1.1
 * Fast Splay tree for Node and browser
 *
 * @author Alexander Milevski <info@w8r.name>
 * @license MIT
 * @preserve
 *//*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function Uv(i,e){var t={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},n,r,s,o;return o={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function l(c){return function(p){return u([c,p])}}function u(c){if(n)throw new TypeError("Generator is already executing.");for(;t;)try{if(n=1,r&&(s=c[0]&2?r.return:c[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,c[1])).done)return s;switch(r=0,s&&(c=[c[0]&2,s.value]),c[0]){case 0:case 1:s=c;break;case 4:return t.label++,{value:c[1],done:!1};case 5:t.label++,r=c[1],c=[0];continue;case 7:c=t.ops.pop(),t.trys.pop();continue;default:if(s=t.trys,!(s=s.length>0&&s[s.length-1])&&(c[0]===6||c[0]===2)){t=0;continue}if(c[0]===3&&(!s||c[1]>s[0]&&c[1]<s[3])){t.label=c[1];break}if(c[0]===6&&t.label<s[1]){t.label=s[1],s=c;break}if(s&&t.label<s[2]){t.label=s[2],t.ops.push(c);break}s[2]&&t.ops.pop(),t.trys.pop();continue}c=e.call(i,t)}catch(p){c=[6,p],r=0}finally{n=s=0}if(c[0]&5)throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}var Uo=function(){function i(e,t){this.next=null,this.key=e,this.data=t,this.left=null,this.right=null}return i}();function zv(i,e){return i>e?1:i<e?-1:0}function Mo(i,e,t){for(var n=new Uo(null,null),r=n,s=n;;){var o=t(i,e.key);if(o<0){if(e.left===null)break;if(t(i,e.left.key)<0){var l=e.left;if(e.left=l.right,l.right=e,e=l,e.left===null)break}s.left=e,s=e,e=e.left}else if(o>0){if(e.right===null)break;if(t(i,e.right.key)>0){var l=e.right;if(e.right=l.left,l.left=e,e=l,e.right===null)break}r.right=e,r=e,e=e.right}else break}return r.right=e.left,s.left=e.right,e.left=n.right,e.right=n.left,e}function Kc(i,e,t,n){var r=new Uo(i,e);if(t===null)return r.left=r.right=null,r;t=Mo(i,t,n);var s=n(i,t.key);return s<0?(r.left=t.left,r.right=t,t.left=null):s>=0&&(r.right=t.right,r.left=t,t.right=null),r}function wg(i,e,t){var n=null,r=null;if(e){e=Mo(i,e,t);var s=t(e.key,i);s===0?(n=e.left,r=e.right):s<0?(r=e.right,e.right=null,n=e):(n=e.left,e.left=null,r=e)}return{left:n,right:r}}function Hv(i,e,t){return e===null?i:(i===null||(e=Mo(i.key,e,t),e.left=i),e)}function Dd(i,e,t,n,r){if(i){n(""+e+(t?"└── ":"├── ")+r(i)+`
`);var s=e+(t?"    ":"│   ");i.left&&Dd(i.left,s,!1,n,r),i.right&&Dd(i.right,s,!0,n,r)}}var Dp=function(){function i(e){e===void 0&&(e=zv),this._root=null,this._size=0,this._comparator=e}return i.prototype.insert=function(e,t){return this._size++,this._root=Kc(e,t,this._root,this._comparator)},i.prototype.add=function(e,t){var n=new Uo(e,t);this._root===null&&(n.left=n.right=null,this._size++,this._root=n);var r=this._comparator,s=Mo(e,this._root,r),o=r(e,s.key);return o===0?this._root=s:(o<0?(n.left=s.left,n.right=s,s.left=null):o>0&&(n.right=s.right,n.left=s,s.right=null),this._size++,this._root=n),this._root},i.prototype.remove=function(e){this._root=this._remove(e,this._root,this._comparator)},i.prototype._remove=function(e,t,n){var r;if(t===null)return null;t=Mo(e,t,n);var s=n(e,t.key);return s===0?(t.left===null?r=t.right:(r=Mo(e,t.left,n),r.right=t.right),this._size--,r):t},i.prototype.pop=function(){var e=this._root;if(e){for(;e.left;)e=e.left;return this._root=Mo(e.key,this._root,this._comparator),this._root=this._remove(e.key,this._root,this._comparator),{key:e.key,data:e.data}}return null},i.prototype.findStatic=function(e){for(var t=this._root,n=this._comparator;t;){var r=n(e,t.key);if(r===0)return t;r<0?t=t.left:t=t.right}return null},i.prototype.find=function(e){return this._root&&(this._root=Mo(e,this._root,this._comparator),this._comparator(e,this._root.key)!==0)?null:this._root},i.prototype.contains=function(e){for(var t=this._root,n=this._comparator;t;){var r=n(e,t.key);if(r===0)return!0;r<0?t=t.left:t=t.right}return!1},i.prototype.forEach=function(e,t){for(var n=this._root,r=[],s=!1;!s;)n!==null?(r.push(n),n=n.left):r.length!==0?(n=r.pop(),e.call(t,n),n=n.right):s=!0;return this},i.prototype.range=function(e,t,n,r){for(var s=[],o=this._comparator,l=this._root,u;s.length!==0||l;)if(l)s.push(l),l=l.left;else{if(l=s.pop(),u=o(l.key,t),u>0)break;if(o(l.key,e)>=0&&n.call(r,l))return this;l=l.right}return this},i.prototype.keys=function(){var e=[];return this.forEach(function(t){var n=t.key;return e.push(n)}),e},i.prototype.values=function(){var e=[];return this.forEach(function(t){var n=t.data;return e.push(n)}),e},i.prototype.min=function(){return this._root?this.minNode(this._root).key:null},i.prototype.max=function(){return this._root?this.maxNode(this._root).key:null},i.prototype.minNode=function(e){if(e===void 0&&(e=this._root),e)for(;e.left;)e=e.left;return e},i.prototype.maxNode=function(e){if(e===void 0&&(e=this._root),e)for(;e.right;)e=e.right;return e},i.prototype.at=function(e){for(var t=this._root,n=!1,r=0,s=[];!n;)if(t)s.push(t),t=t.left;else if(s.length>0){if(t=s.pop(),r===e)return t;r++,t=t.right}else n=!0;return null},i.prototype.next=function(e){var t=this._root,n=null;if(e.right){for(n=e.right;n.left;)n=n.left;return n}for(var r=this._comparator;t;){var s=r(e.key,t.key);if(s===0)break;s<0?(n=t,t=t.left):t=t.right}return n},i.prototype.prev=function(e){var t=this._root,n=null;if(e.left!==null){for(n=e.left;n.right;)n=n.right;return n}for(var r=this._comparator;t;){var s=r(e.key,t.key);if(s===0)break;s<0?t=t.left:(n=t,t=t.right)}return n},i.prototype.clear=function(){return this._root=null,this._size=0,this},i.prototype.toList=function(){return Xv(this._root)},i.prototype.load=function(e,t,n){t===void 0&&(t=[]),n===void 0&&(n=!1);var r=e.length,s=this._comparator;if(n&&Nd(e,t,0,r-1,s),this._root===null)this._root=Rd(e,t,0,r),this._size=r;else{var o=Zv(this.toList(),Yv(e,t),s);r=this._size+r,this._root=$d({head:o},0,r)}return this},i.prototype.isEmpty=function(){return this._root===null},Object.defineProperty(i.prototype,"size",{get:function(){return this._size},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"root",{get:function(){return this._root},enumerable:!0,configurable:!0}),i.prototype.toString=function(e){e===void 0&&(e=function(n){return String(n.key)});var t=[];return Dd(this._root,"",!0,function(n){return t.push(n)},e),t.join("")},i.prototype.update=function(e,t,n){var r=this._comparator,s=wg(e,this._root,r),o=s.left,l=s.right;r(e,t)<0?l=Kc(t,n,l,r):o=Kc(t,n,o,r),this._root=Hv(o,l,r)},i.prototype.split=function(e){return wg(e,this._root,this._comparator)},i.prototype[Symbol.iterator]=function(){var e;return Uv(this,function(t){switch(t.label){case 0:e=this.minNode(),t.label=1;case 1:return e?[4,e]:[3,3];case 2:return t.sent(),e=this.next(e),[3,1];case 3:return[2]}})},i}();function Rd(i,e,t,n){var r=n-t;if(r>0){var s=t+Math.floor(r/2),o=i[s],l=e[s],u=new Uo(o,l);return u.left=Rd(i,e,t,s),u.right=Rd(i,e,s+1,n),u}return null}function Yv(i,e){for(var t=new Uo(null,null),n=t,r=0;r<i.length;r++)n=n.next=new Uo(i[r],e[r]);return n.next=null,t.next}function Xv(i){for(var e=i,t=[],n=!1,r=new Uo(null,null),s=r;!n;)e?(t.push(e),e=e.left):t.length>0?(e=s=s.next=t.pop(),e=e.right):n=!0;return s.next=null,r.next}function $d(i,e,t){var n=t-e;if(n>0){var r=e+Math.floor(n/2),s=$d(i,e,r),o=i.head;return o.left=s,i.head=i.head.next,o.right=$d(i,r+1,t),o}return null}function Zv(i,e,t){for(var n=new Uo(null,null),r=n,s=i,o=e;s!==null&&o!==null;)t(s.key,o.key)<0?(r.next=s,s=s.next):(r.next=o,o=o.next),r=r.next;return s!==null?r.next=s:o!==null&&(r.next=o),n.next}function Nd(i,e,t,n,r){if(!(t>=n)){for(var s=i[t+n>>1],o=t-1,l=n+1;;){do o++;while(r(i[o],s)<0);do l--;while(r(i[l],s)>0);if(o>=l)break;var u=i[o];i[o]=i[l],i[l]=u,u=e[o],e[o]=e[l],e[l]=u}Nd(i,e,t,l,r),Nd(i,e,l+1,n,r)}}function rs(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function _g(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function sr(i,e,t){return e&&_g(i.prototype,e),t&&_g(i,t),i}var Gl=function(e,t){return e.ll.x<=t.x&&t.x<=e.ur.x&&e.ll.y<=t.y&&t.y<=e.ur.y},Ld=function(e,t){if(t.ur.x<e.ll.x||e.ur.x<t.ll.x||t.ur.y<e.ll.y||e.ur.y<t.ll.y)return null;var n=e.ll.x<t.ll.x?t.ll.x:e.ll.x,r=e.ur.x<t.ur.x?e.ur.x:t.ur.x,s=e.ll.y<t.ll.y?t.ll.y:e.ll.y,o=e.ur.y<t.ur.y?e.ur.y:t.ur.y;return{ll:{x:n,y:s},ur:{x:r,y:o}}},Oo=Number.EPSILON;Oo===void 0&&(Oo=Math.pow(2,-52));var Kv=Oo*Oo,Md=function(e,t){if(-Oo<e&&e<Oo&&-Oo<t&&t<Oo)return 0;var n=e-t;return n*n<Kv*e*t?0:e<t?-1:1},Qv=function(){function i(){rs(this,i),this.reset()}return sr(i,[{key:"reset",value:function(){this.xRounder=new Cg,this.yRounder=new Cg}},{key:"round",value:function(t,n){return{x:this.xRounder.round(t),y:this.yRounder.round(n)}}}]),i}(),Cg=function(){function i(){rs(this,i),this.tree=new Dp,this.round(0)}return sr(i,[{key:"round",value:function(t){var n=this.tree.add(t),r=this.tree.prev(n);if(r!==null&&Md(n.key,r.key)===0)return this.tree.remove(t),r.key;var s=this.tree.next(n);return s!==null&&Md(n.key,s.key)===0?(this.tree.remove(t),s.key):t}}]),i}(),lu=new Qv,eu=function(e,t){return e.x*t.y-e.y*t.x},R0=function(e,t){return e.x*t.x+e.y*t.y},Tg=function(e,t,n){var r={x:t.x-e.x,y:t.y-e.y},s={x:n.x-e.x,y:n.y-e.y},o=eu(r,s);return Md(o,0)},qh=function(e){return Math.sqrt(R0(e,e))},ew=function(e,t,n){var r={x:t.x-e.x,y:t.y-e.y},s={x:n.x-e.x,y:n.y-e.y};return eu(s,r)/qh(s)/qh(r)},tw=function(e,t,n){var r={x:t.x-e.x,y:t.y-e.y},s={x:n.x-e.x,y:n.y-e.y};return R0(s,r)/qh(s)/qh(r)},xg=function(e,t,n){return t.y===0?null:{x:e.x+t.x/t.y*(n-e.y),y:n}},kg=function(e,t,n){return t.x===0?null:{x:n,y:e.y+t.y/t.x*(n-e.x)}},nw=function(e,t,n,r){if(t.x===0)return kg(n,r,e.x);if(r.x===0)return kg(e,t,n.x);if(t.y===0)return xg(n,r,e.y);if(r.y===0)return xg(e,t,n.y);var s=eu(t,r);if(s==0)return null;var o={x:n.x-e.x,y:n.y-e.y},l=eu(o,t)/s,u=eu(o,r)/s,c=e.x+u*t.x,p=n.x+l*r.x,d=e.y+u*t.y,f=n.y+l*r.y,g=(c+p)/2,v=(d+f)/2;return{x:g,y:v}},Os=function(){sr(i,null,[{key:"compare",value:function(t,n){var r=i.comparePoints(t.point,n.point);return r!==0?r:(t.point!==n.point&&t.link(n),t.isLeft!==n.isLeft?t.isLeft?1:-1:Sh.compare(t.segment,n.segment))}},{key:"comparePoints",value:function(t,n){return t.x<n.x?-1:t.x>n.x?1:t.y<n.y?-1:t.y>n.y?1:0}}]);function i(e,t){rs(this,i),e.events===void 0?e.events=[this]:e.events.push(this),this.point=e,this.isLeft=t}return sr(i,[{key:"link",value:function(t){if(t.point===this.point)throw new Error("Tried to link already linked events");for(var n=t.point.events,r=0,s=n.length;r<s;r++){var o=n[r];this.point.events.push(o),o.point=this.point}this.checkForConsuming()}},{key:"checkForConsuming",value:function(){for(var t=this.point.events.length,n=0;n<t;n++){var r=this.point.events[n];if(r.segment.consumedBy===void 0)for(var s=n+1;s<t;s++){var o=this.point.events[s];o.consumedBy===void 0&&r.otherSE.point.events===o.otherSE.point.events&&r.segment.consume(o.segment)}}}},{key:"getAvailableLinkedEvents",value:function(){for(var t=[],n=0,r=this.point.events.length;n<r;n++){var s=this.point.events[n];s!==this&&!s.segment.ringOut&&s.segment.isInResult()&&t.push(s)}return t}},{key:"getLeftmostComparator",value:function(t){var n=this,r=new Map,s=function(l){var u=l.otherSE;r.set(l,{sine:ew(n.point,t.point,u.point),cosine:tw(n.point,t.point,u.point)})};return function(o,l){r.has(o)||s(o),r.has(l)||s(l);var u=r.get(o),c=u.sine,p=u.cosine,d=r.get(l),f=d.sine,g=d.cosine;return c>=0&&f>=0?p<g?1:p>g?-1:0:c<0&&f<0?p<g?-1:p>g?1:0:f<c?-1:f>c?1:0}}}]),i}(),iw=0,Sh=function(){sr(i,null,[{key:"compare",value:function(t,n){var r=t.leftSE.point.x,s=n.leftSE.point.x,o=t.rightSE.point.x,l=n.rightSE.point.x;if(l<r)return 1;if(o<s)return-1;var u=t.leftSE.point.y,c=n.leftSE.point.y,p=t.rightSE.point.y,d=n.rightSE.point.y;if(r<s){if(c<u&&c<p)return 1;if(c>u&&c>p)return-1;var f=t.comparePoint(n.leftSE.point);if(f<0)return 1;if(f>0)return-1;var g=n.comparePoint(t.rightSE.point);return g!==0?g:-1}if(r>s){if(u<c&&u<d)return-1;if(u>c&&u>d)return 1;var v=n.comparePoint(t.leftSE.point);if(v!==0)return v;var w=t.comparePoint(n.rightSE.point);return w<0?1:w>0?-1:1}if(u<c)return-1;if(u>c)return 1;if(o<l){var A=n.comparePoint(t.rightSE.point);if(A!==0)return A}if(o>l){var C=t.comparePoint(n.rightSE.point);if(C<0)return 1;if(C>0)return-1}if(o!==l){var m=p-u,y=o-r,x=d-c,k=l-s;if(m>y&&x<k)return 1;if(m<y&&x>k)return-1}return o>l?1:o<l||p<d?-1:p>d?1:t.id<n.id?-1:t.id>n.id?1:0}}]);function i(e,t,n,r){rs(this,i),this.id=++iw,this.leftSE=e,e.segment=this,e.otherSE=t,this.rightSE=t,t.segment=this,t.otherSE=e,this.rings=n,this.windings=r}return sr(i,[{key:"replaceRightSE",value:function(t){this.rightSE=t,this.rightSE.segment=this,this.rightSE.otherSE=this.leftSE,this.leftSE.otherSE=this.rightSE}},{key:"bbox",value:function(){var t=this.leftSE.point.y,n=this.rightSE.point.y;return{ll:{x:this.leftSE.point.x,y:t<n?t:n},ur:{x:this.rightSE.point.x,y:t>n?t:n}}}},{key:"vector",value:function(){return{x:this.rightSE.point.x-this.leftSE.point.x,y:this.rightSE.point.y-this.leftSE.point.y}}},{key:"isAnEndpoint",value:function(t){return t.x===this.leftSE.point.x&&t.y===this.leftSE.point.y||t.x===this.rightSE.point.x&&t.y===this.rightSE.point.y}},{key:"comparePoint",value:function(t){if(this.isAnEndpoint(t))return 0;var n=this.leftSE.point,r=this.rightSE.point,s=this.vector();if(n.x===r.x)return t.x===n.x?0:t.x<n.x?1:-1;var o=(t.y-n.y)/s.y,l=n.x+o*s.x;if(t.x===l)return 0;var u=(t.x-n.x)/s.x,c=n.y+u*s.y;return t.y===c?0:t.y<c?-1:1}},{key:"getIntersection",value:function(t){var n=this.bbox(),r=t.bbox(),s=Ld(n,r);if(s===null)return null;var o=this.leftSE.point,l=this.rightSE.point,u=t.leftSE.point,c=t.rightSE.point,p=Gl(n,u)&&this.comparePoint(u)===0,d=Gl(r,o)&&t.comparePoint(o)===0,f=Gl(n,c)&&this.comparePoint(c)===0,g=Gl(r,l)&&t.comparePoint(l)===0;if(d&&p)return g&&!f?l:!g&&f?c:null;if(d)return f&&o.x===c.x&&o.y===c.y?null:o;if(p)return g&&l.x===u.x&&l.y===u.y?null:u;if(g&&f)return null;if(g)return l;if(f)return c;var v=nw(o,this.vector(),u,t.vector());return v===null||!Gl(s,v)?null:lu.round(v.x,v.y)}},{key:"split",value:function(t){var n=[],r=t.events!==void 0,s=new Os(t,!0),o=new Os(t,!1),l=this.rightSE;this.replaceRightSE(o),n.push(o),n.push(s);var u=new i(s,l,this.rings.slice(),this.windings.slice());return Os.comparePoints(u.leftSE.point,u.rightSE.point)>0&&u.swapEvents(),Os.comparePoints(this.leftSE.point,this.rightSE.point)>0&&this.swapEvents(),r&&(s.checkForConsuming(),o.checkForConsuming()),n}},{key:"swapEvents",value:function(){var t=this.rightSE;this.rightSE=this.leftSE,this.leftSE=t,this.leftSE.isLeft=!0,this.rightSE.isLeft=!1;for(var n=0,r=this.windings.length;n<r;n++)this.windings[n]*=-1}},{key:"consume",value:function(t){for(var n=this,r=t;n.consumedBy;)n=n.consumedBy;for(;r.consumedBy;)r=r.consumedBy;var s=i.compare(n,r);if(s!==0){if(s>0){var o=n;n=r,r=o}if(n.prev===r){var l=n;n=r,r=l}for(var u=0,c=r.rings.length;u<c;u++){var p=r.rings[u],d=r.windings[u],f=n.rings.indexOf(p);f===-1?(n.rings.push(p),n.windings.push(d)):n.windings[f]+=d}r.rings=null,r.windings=null,r.consumedBy=n,r.leftSE.consumedBy=n.leftSE,r.rightSE.consumedBy=n.rightSE}}},{key:"prevInResult",value:function(){return this._prevInResult!==void 0?this._prevInResult:(this.prev?this.prev.isInResult()?this._prevInResult=this.prev:this._prevInResult=this.prev.prevInResult():this._prevInResult=null,this._prevInResult)}},{key:"beforeState",value:function(){if(this._beforeState!==void 0)return this._beforeState;if(!this.prev)this._beforeState={rings:[],windings:[],multiPolys:[]};else{var t=this.prev.consumedBy||this.prev;this._beforeState=t.afterState()}return this._beforeState}},{key:"afterState",value:function(){if(this._afterState!==void 0)return this._afterState;var t=this.beforeState();this._afterState={rings:t.rings.slice(0),windings:t.windings.slice(0),multiPolys:[]};for(var n=this._afterState.rings,r=this._afterState.windings,s=this._afterState.multiPolys,o=0,l=this.rings.length;o<l;o++){var u=this.rings[o],c=this.windings[o],p=n.indexOf(u);p===-1?(n.push(u),r.push(c)):r[p]+=c}for(var d=[],f=[],g=0,v=n.length;g<v;g++)if(r[g]!==0){var w=n[g],A=w.poly;if(f.indexOf(A)===-1)if(w.isExterior)d.push(A);else{f.indexOf(A)===-1&&f.push(A);var C=d.indexOf(w.poly);C!==-1&&d.splice(C,1)}}for(var m=0,y=d.length;m<y;m++){var x=d[m].multiPoly;s.indexOf(x)===-1&&s.push(x)}return this._afterState}},{key:"isInResult",value:function(){if(this.consumedBy)return!1;if(this._isInResult!==void 0)return this._isInResult;var t=this.beforeState().multiPolys,n=this.afterState().multiPolys;switch(fs.type){case"union":{var r=t.length===0,s=n.length===0;this._isInResult=r!==s;break}case"intersection":{var o,l;t.length<n.length?(o=t.length,l=n.length):(o=n.length,l=t.length),this._isInResult=l===fs.numMultiPolys&&o<l;break}case"xor":{var u=Math.abs(t.length-n.length);this._isInResult=u%2===1;break}case"difference":{var c=function(d){return d.length===1&&d[0].isSubject};this._isInResult=c(t)!==c(n);break}default:throw new Error("Unrecognized operation type found ".concat(fs.type))}return this._isInResult}}],[{key:"fromRing",value:function(t,n,r){var s,o,l,u=Os.comparePoints(t,n);if(u<0)s=t,o=n,l=1;else if(u>0)s=n,o=t,l=-1;else throw new Error("Tried to create degenerate segment at [".concat(t.x,", ").concat(t.y,"]"));var c=new Os(s,!0),p=new Os(o,!1);return new i(c,p,[r],[l])}}]),i}(),Ag=function(){function i(e,t,n){if(rs(this,i),!Array.isArray(e)||e.length===0)throw new Error("Input geometry is not a valid Polygon or MultiPolygon");if(this.poly=t,this.isExterior=n,this.segments=[],typeof e[0][0]!="number"||typeof e[0][1]!="number")throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var r=lu.round(e[0][0],e[0][1]);this.bbox={ll:{x:r.x,y:r.y},ur:{x:r.x,y:r.y}};for(var s=r,o=1,l=e.length;o<l;o++){if(typeof e[o][0]!="number"||typeof e[o][1]!="number")throw new Error("Input geometry is not a valid Polygon or MultiPolygon");var u=lu.round(e[o][0],e[o][1]);u.x===s.x&&u.y===s.y||(this.segments.push(Sh.fromRing(s,u,this)),u.x<this.bbox.ll.x&&(this.bbox.ll.x=u.x),u.y<this.bbox.ll.y&&(this.bbox.ll.y=u.y),u.x>this.bbox.ur.x&&(this.bbox.ur.x=u.x),u.y>this.bbox.ur.y&&(this.bbox.ur.y=u.y),s=u)}(r.x!==s.x||r.y!==s.y)&&this.segments.push(Sh.fromRing(s,r,this))}return sr(i,[{key:"getSweepEvents",value:function(){for(var t=[],n=0,r=this.segments.length;n<r;n++){var s=this.segments[n];t.push(s.leftSE),t.push(s.rightSE)}return t}}]),i}(),rw=function(){function i(e,t){if(rs(this,i),!Array.isArray(e))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");this.exteriorRing=new Ag(e[0],this,!0),this.bbox={ll:{x:this.exteriorRing.bbox.ll.x,y:this.exteriorRing.bbox.ll.y},ur:{x:this.exteriorRing.bbox.ur.x,y:this.exteriorRing.bbox.ur.y}},this.interiorRings=[];for(var n=1,r=e.length;n<r;n++){var s=new Ag(e[n],this,!1);s.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=s.bbox.ll.x),s.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=s.bbox.ll.y),s.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=s.bbox.ur.x),s.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=s.bbox.ur.y),this.interiorRings.push(s)}this.multiPoly=t}return sr(i,[{key:"getSweepEvents",value:function(){for(var t=this.exteriorRing.getSweepEvents(),n=0,r=this.interiorRings.length;n<r;n++)for(var s=this.interiorRings[n].getSweepEvents(),o=0,l=s.length;o<l;o++)t.push(s[o]);return t}}]),i}(),qg=function(){function i(e,t){if(rs(this,i),!Array.isArray(e))throw new Error("Input geometry is not a valid Polygon or MultiPolygon");try{typeof e[0][0][0]=="number"&&(e=[e])}catch{}this.polys=[],this.bbox={ll:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY},ur:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY}};for(var n=0,r=e.length;n<r;n++){var s=new rw(e[n],this);s.bbox.ll.x<this.bbox.ll.x&&(this.bbox.ll.x=s.bbox.ll.x),s.bbox.ll.y<this.bbox.ll.y&&(this.bbox.ll.y=s.bbox.ll.y),s.bbox.ur.x>this.bbox.ur.x&&(this.bbox.ur.x=s.bbox.ur.x),s.bbox.ur.y>this.bbox.ur.y&&(this.bbox.ur.y=s.bbox.ur.y),this.polys.push(s)}this.isSubject=t}return sr(i,[{key:"getSweepEvents",value:function(){for(var t=[],n=0,r=this.polys.length;n<r;n++)for(var s=this.polys[n].getSweepEvents(),o=0,l=s.length;o<l;o++)t.push(s[o]);return t}}]),i}(),sw=function(){sr(i,null,[{key:"factory",value:function(t){for(var n=[],r=0,s=t.length;r<s;r++){var o=t[r];if(!(!o.isInResult()||o.ringOut)){for(var l=null,u=o.leftSE,c=o.rightSE,p=[u],d=u.point,f=[];l=u,u=c,p.push(u),u.point!==d;)for(;;){var g=u.getAvailableLinkedEvents();if(g.length===0){var v=p[0].point,w=p[p.length-1].point;throw new Error("Unable to complete output ring starting at [".concat(v.x,",")+" ".concat(v.y,"]. Last matching segment found ends at")+" [".concat(w.x,", ").concat(w.y,"]."))}if(g.length===1){c=g[0].otherSE;break}for(var A=null,C=0,m=f.length;C<m;C++)if(f[C].point===u.point){A=C;break}if(A!==null){var y=f.splice(A)[0],x=p.splice(y.index);x.unshift(x[0].otherSE),n.push(new i(x.reverse()));continue}f.push({index:p.length,point:u.point});var k=u.getLeftmostComparator(l);c=g.sort(k)[0].otherSE;break}n.push(new i(p))}}return n}}]);function i(e){rs(this,i),this.events=e;for(var t=0,n=e.length;t<n;t++)e[t].segment.ringOut=this;this.poly=null}return sr(i,[{key:"getGeom",value:function(){for(var t=this.events[0].point,n=[t],r=1,s=this.events.length-1;r<s;r++){var o=this.events[r].point,l=this.events[r+1].point;Tg(o,t,l)!==0&&(n.push(o),t=o)}if(n.length===1)return null;var u=n[0],c=n[1];Tg(u,t,c)===0&&n.shift(),n.push(n[0]);for(var p=this.isExteriorRing()?1:-1,d=this.isExteriorRing()?0:n.length-1,f=this.isExteriorRing()?n.length:-1,g=[],v=d;v!=f;v+=p)g.push([n[v].x,n[v].y]);return g}},{key:"isExteriorRing",value:function(){if(this._isExteriorRing===void 0){var t=this.enclosingRing();this._isExteriorRing=t?!t.isExteriorRing():!0}return this._isExteriorRing}},{key:"enclosingRing",value:function(){return this._enclosingRing===void 0&&(this._enclosingRing=this._calcEnclosingRing()),this._enclosingRing}},{key:"_calcEnclosingRing",value:function(){for(var t=this.events[0],n=1,r=this.events.length;n<r;n++){var s=this.events[n];Os.compare(t,s)>0&&(t=s)}for(var o=t.segment.prevInResult(),l=o?o.prevInResult():null;;){if(!o)return null;if(!l)return o.ringOut;if(l.ringOut!==o.ringOut)return l.ringOut.enclosingRing()!==o.ringOut?o.ringOut:o.ringOut.enclosingRing();o=l.prevInResult(),l=o?o.prevInResult():null}}}]),i}(),Sg=function(){function i(e){rs(this,i),this.exteriorRing=e,e.poly=this,this.interiorRings=[]}return sr(i,[{key:"addInterior",value:function(t){this.interiorRings.push(t),t.poly=this}},{key:"getGeom",value:function(){var t=[this.exteriorRing.getGeom()];if(t[0]===null)return null;for(var n=0,r=this.interiorRings.length;n<r;n++){var s=this.interiorRings[n].getGeom();s!==null&&t.push(s)}return t}}]),i}(),ow=function(){function i(e){rs(this,i),this.rings=e,this.polys=this._composePolys(e)}return sr(i,[{key:"getGeom",value:function(){for(var t=[],n=0,r=this.polys.length;n<r;n++){var s=this.polys[n].getGeom();s!==null&&t.push(s)}return t}},{key:"_composePolys",value:function(t){for(var n=[],r=0,s=t.length;r<s;r++){var o=t[r];if(!o.poly)if(o.isExteriorRing())n.push(new Sg(o));else{var l=o.enclosingRing();l.poly||n.push(new Sg(l)),l.poly.addInterior(o)}}return n}}]),i}(),aw=function(){function i(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Sh.compare;rs(this,i),this.queue=e,this.tree=new Dp(t),this.segments=[]}return sr(i,[{key:"process",value:function(t){var n=t.segment,r=[];if(t.consumedBy)return t.isLeft?this.queue.remove(t.otherSE):this.tree.remove(n),r;var s=t.isLeft?this.tree.insert(n):this.tree.find(n);if(!s)throw new Error("Unable to find segment #".concat(n.id," ")+"[".concat(n.leftSE.point.x,", ").concat(n.leftSE.point.y,"] -> ")+"[".concat(n.rightSE.point.x,", ").concat(n.rightSE.point.y,"] ")+"in SweepLine tree. Please submit a bug report.");for(var o=s,l=s,u=void 0,c=void 0;u===void 0;)o=this.tree.prev(o),o===null?u=null:o.key.consumedBy===void 0&&(u=o.key);for(;c===void 0;)l=this.tree.next(l),l===null?c=null:l.key.consumedBy===void 0&&(c=l.key);if(t.isLeft){var p=null;if(u){var d=u.getIntersection(n);if(d!==null&&(n.isAnEndpoint(d)||(p=d),!u.isAnEndpoint(d)))for(var f=this._splitSafely(u,d),g=0,v=f.length;g<v;g++)r.push(f[g])}var w=null;if(c){var A=c.getIntersection(n);if(A!==null&&(n.isAnEndpoint(A)||(w=A),!c.isAnEndpoint(A)))for(var C=this._splitSafely(c,A),m=0,y=C.length;m<y;m++)r.push(C[m])}if(p!==null||w!==null){var x=null;if(p===null)x=w;else if(w===null)x=p;else{var k=Os.comparePoints(p,w);x=k<=0?p:w}this.queue.remove(n.rightSE),r.push(n.rightSE);for(var q=n.split(x),I=0,S=q.length;I<S;I++)r.push(q[I])}r.length>0?(this.tree.remove(n),r.push(t)):(this.segments.push(n),n.prev=u)}else{if(u&&c){var $=u.getIntersection(c);if($!==null){if(!u.isAnEndpoint($))for(var B=this._splitSafely(u,$),D=0,N=B.length;D<N;D++)r.push(B[D]);if(!c.isAnEndpoint($))for(var O=this._splitSafely(c,$),L=0,V=O.length;L<V;L++)r.push(O[L])}}this.tree.remove(n)}return r}},{key:"_splitSafely",value:function(t,n){this.tree.remove(t);var r=t.rightSE;this.queue.remove(r);var s=t.split(n);return s.push(r),t.consumedBy===void 0&&this.tree.insert(t),s}}]),i}(),Eg=typeof process<"u"&&{}.POLYGON_CLIPPING_MAX_QUEUE_SIZE||1e6,lw=typeof process<"u"&&{}.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS||1e6,uw=function(){function i(){rs(this,i)}return sr(i,[{key:"run",value:function(t,n,r){fs.type=t,lu.reset();for(var s=[new qg(n,!0)],o=0,l=r.length;o<l;o++)s.push(new qg(r[o],!1));if(fs.numMultiPolys=s.length,fs.type==="difference")for(var u=s[0],c=1;c<s.length;)Ld(s[c].bbox,u.bbox)!==null?c++:s.splice(c,1);if(fs.type==="intersection"){for(var p=0,d=s.length;p<d;p++)for(var f=s[p],g=p+1,v=s.length;g<v;g++)if(Ld(f.bbox,s[g].bbox)===null)return[]}for(var w=new Dp(Os.compare),A=0,C=s.length;A<C;A++)for(var m=s[A].getSweepEvents(),y=0,x=m.length;y<x;y++)if(w.insert(m[y]),w.size>Eg)throw new Error("Infinite loop when putting segment endpoints in a priority queue (queue size too big). Please file a bug report.");for(var k=new aw(w),q=w.size,I=w.pop();I;){var S=I.key;if(w.size===q){var $=S.segment;throw new Error("Unable to pop() ".concat(S.isLeft?"left":"right"," SweepEvent ")+"[".concat(S.point.x,", ").concat(S.point.y,"] from segment #").concat($.id," ")+"[".concat($.leftSE.point.x,", ").concat($.leftSE.point.y,"] -> ")+"[".concat($.rightSE.point.x,", ").concat($.rightSE.point.y,"] from queue. ")+"Please file a bug report.")}if(w.size>Eg)throw new Error("Infinite loop when passing sweep line over endpoints (queue size too big). Please file a bug report.");if(k.segments.length>lw)throw new Error("Infinite loop when passing sweep line over endpoints (too many sweep line segments). Please file a bug report.");for(var B=k.process(S),D=0,N=B.length;D<N;D++){var O=B[D];O.consumedBy===void 0&&w.insert(O)}q=w.size,I=w.pop()}lu.reset();var L=sw.factory(k.segments),V=new ow(L);return V.getGeom()}}]),i}(),fs=new uw,hw=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return fs.run("union",e,n)},cw=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return fs.run("intersection",e,n)},dw=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return fs.run("xor",e,n)},pw=function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return fs.run("difference",e,n)},fw={union:hw,intersection:cw,xor:dw,difference:pw};const $0=fw;"fill"in Array.prototype||Object.defineProperty(Array.prototype,"fill",{configurable:!0,value:function(e){if(this===void 0||this===null)throw new TypeError(this+" is not an object");var t=Object(this),n=Math.max(Math.min(t.length,9007199254740991),0)||0,r=1 in arguments&&parseInt(Number(arguments[1]),10)||0;r=r<0?Math.max(n+r,0):Math.min(r,n);var s=2 in arguments&&arguments[2]!==void 0?parseInt(Number(arguments[2]),10)||0:n;for(s=s<0?Math.max(n+arguments[2],0):Math.min(s,n);r<s;)t[r]=e,++r;return t},writable:!0});Number.isFinite=Number.isFinite||function(i){return typeof i=="number"&&isFinite(i)};Number.isInteger=Number.isInteger||function(i){return typeof i=="number"&&isFinite(i)&&Math.floor(i)===i};Number.parseFloat=Number.parseFloat||parseFloat;Number.isNaN=Number.isNaN||function(i){return i!==i};Math.trunc=Math.trunc||function(i){return i<0?Math.ceil(i):Math.floor(i)};var wa=function(){};wa.prototype.interfaces_=function(){return[]};wa.prototype.getClass=function(){return wa};wa.prototype.equalsWithTolerance=function(e,t,n){return Math.abs(e-t)<=n};var Nn=function(i){function e(t){i.call(this,t),this.name="IllegalArgumentException",this.message=t,this.stack=new i().stack}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e}(Error),Ve=function(){},N0={MAX_VALUE:{configurable:!0}};Ve.isNaN=function(e){return Number.isNaN(e)};Ve.doubleToLongBits=function(e){return e};Ve.longBitsToDouble=function(e){return e};Ve.isInfinite=function(e){return!Number.isFinite(e)};N0.MAX_VALUE.get=function(){return Number.MAX_VALUE};Object.defineProperties(Ve,N0);var _r=function(){},sc=function(){},ll=function(){};function Cr(){}var j=function i(){if(this.x=null,this.y=null,this.z=null,arguments.length===0)this.x=0,this.y=0,this.z=i.NULL_ORDINATE;else if(arguments.length===1){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else arguments.length===2?(this.x=arguments[0],this.y=arguments[1],this.z=i.NULL_ORDINATE):arguments.length===3&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},La={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};j.prototype.setOrdinate=function(e,t){switch(e){case j.X:this.x=t;break;case j.Y:this.y=t;break;case j.Z:this.z=t;break;default:throw new Nn("Invalid ordinate index: "+e)}};j.prototype.equals2D=function(){if(arguments.length===1){var e=arguments[0];return!(this.x!==e.x||this.y!==e.y)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];return!(!wa.equalsWithTolerance(this.x,t.x,n)||!wa.equalsWithTolerance(this.y,t.y,n))}};j.prototype.getOrdinate=function(e){switch(e){case j.X:return this.x;case j.Y:return this.y;case j.Z:return this.z}throw new Nn("Invalid ordinate index: "+e)};j.prototype.equals3D=function(e){return this.x===e.x&&this.y===e.y&&(this.z===e.z||Ve.isNaN(this.z))&&Ve.isNaN(e.z)};j.prototype.equals=function(e){return e instanceof j?this.equals2D(e):!1};j.prototype.equalInZ=function(e,t){return wa.equalsWithTolerance(this.z,e.z,t)};j.prototype.compareTo=function(e){var t=e;return this.x<t.x?-1:this.x>t.x?1:this.y<t.y?-1:this.y>t.y?1:0};j.prototype.clone=function(){};j.prototype.copy=function(){return new j(this)};j.prototype.toString=function(){return"("+this.x+", "+this.y+", "+this.z+")"};j.prototype.distance3D=function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return Math.sqrt(t*t+n*n+r*r)};j.prototype.distance=function(e){var t=this.x-e.x,n=this.y-e.y;return Math.sqrt(t*t+n*n)};j.prototype.hashCode=function(){var e=17;return e=37*e+j.hashCode(this.x),e=37*e+j.hashCode(this.y),e};j.prototype.setCoordinate=function(e){this.x=e.x,this.y=e.y,this.z=e.z};j.prototype.interfaces_=function(){return[_r,sc,Cr]};j.prototype.getClass=function(){return j};j.hashCode=function(){if(arguments.length===1){var e=arguments[0],t=Ve.doubleToLongBits(e);return Math.trunc((t^t)>>>32)}};La.DimensionalComparator.get=function(){return lo};La.serialVersionUID.get=function(){return 6683108902428367e3};La.NULL_ORDINATE.get=function(){return Ve.NaN};La.X.get=function(){return 0};La.Y.get=function(){return 1};La.Z.get=function(){return 2};Object.defineProperties(j,La);var lo=function(e){if(this._dimensionsToTest=2,arguments.length!==0){if(arguments.length===1){var t=arguments[0];if(t!==2&&t!==3)throw new Nn("only 2 or 3 dimensions may be specified");this._dimensionsToTest=t}}};lo.prototype.compare=function(e,t){var n=e,r=t,s=lo.compare(n.x,r.x);if(s!==0)return s;var o=lo.compare(n.y,r.y);if(o!==0)return o;if(this._dimensionsToTest<=2)return 0;var l=lo.compare(n.z,r.z);return l};lo.prototype.interfaces_=function(){return[ll]};lo.prototype.getClass=function(){return lo};lo.compare=function(e,t){return e<t?-1:e>t?1:Ve.isNaN(e)?Ve.isNaN(t)?0:-1:Ve.isNaN(t)?1:0};var ul=function(){};ul.prototype.create=function(){};ul.prototype.interfaces_=function(){return[]};ul.prototype.getClass=function(){return ul};var W=function(){},Du={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};W.prototype.interfaces_=function(){return[]};W.prototype.getClass=function(){return W};W.toLocationSymbol=function(e){switch(e){case W.EXTERIOR:return"e";case W.BOUNDARY:return"b";case W.INTERIOR:return"i";case W.NONE:return"-"}throw new Nn("Unknown location value: "+e)};Du.INTERIOR.get=function(){return 0};Du.BOUNDARY.get=function(){return 1};Du.EXTERIOR.get=function(){return 2};Du.NONE.get=function(){return-1};Object.defineProperties(W,Du);var Me=function(i,e){return i.interfaces_&&i.interfaces_().indexOf(e)>-1},or=function(){},L0={LOG_10:{configurable:!0}};or.prototype.interfaces_=function(){return[]};or.prototype.getClass=function(){return or};or.log10=function(e){var t=Math.log(e);return Ve.isInfinite(t)||Ve.isNaN(t)?t:t/or.LOG_10};or.min=function(e,t,n,r){var s=e;return t<s&&(s=t),n<s&&(s=n),r<s&&(s=r),s};or.clamp=function(){if(typeof arguments[2]=="number"&&typeof arguments[0]=="number"&&typeof arguments[1]=="number"){var e=arguments[0],t=arguments[1],n=arguments[2];return e<t?t:e>n?n:e}else if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var r=arguments[0],s=arguments[1],o=arguments[2];return r<s?s:r>o?o:r}};or.wrap=function(e,t){return e<0?t- -e%t:e%t};or.max=function(){if(arguments.length===3){var e=arguments[0],t=arguments[1],n=arguments[2],r=e;return t>r&&(r=t),n>r&&(r=n),r}else if(arguments.length===4){var s=arguments[0],o=arguments[1],l=arguments[2],u=arguments[3],c=s;return o>c&&(c=o),l>c&&(c=l),u>c&&(c=u),c}};or.average=function(e,t){return(e+t)/2};L0.LOG_10.get=function(){return Math.log(10)};Object.defineProperties(or,L0);var ss=function(e){this.str=e};ss.prototype.append=function(e){this.str+=e};ss.prototype.setCharAt=function(e,t){this.str=this.str.substr(0,e)+t+this.str.substr(e+1)};ss.prototype.toString=function(e){return this.str};var Hr=function(e){this.value=e};Hr.prototype.intValue=function(){return this.value};Hr.prototype.compareTo=function(e){return this.value<e?-1:this.value>e?1:0};Hr.isNaN=function(e){return Number.isNaN(e)};var uu=function(){};uu.isWhitespace=function(e){return e<=32&&e>=0||e===127};uu.toUpperCase=function(e){return e.toUpperCase()};var G=function i(){if(this._hi=0,this._lo=0,arguments.length===0)this.init(0);else if(arguments.length===1){if(typeof arguments[0]=="number"){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof i){var t=arguments[0];this.init(t)}else if(typeof arguments[0]=="string"){var n=arguments[0];i.call(this,i.parse(n))}}else if(arguments.length===2){var r=arguments[0],s=arguments[1];this.init(r,s)}},Pr={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};G.prototype.le=function(e){return(this._hi<e._hi||this._hi===e._hi)&&this._lo<=e._lo};G.prototype.extractSignificantDigits=function(e,t){var n=this.abs(),r=G.magnitude(n._hi),s=G.TEN.pow(r);n=n.divide(s),n.gt(G.TEN)?(n=n.divide(G.TEN),r+=1):n.lt(G.ONE)&&(n=n.multiply(G.TEN),r-=1);for(var o=r+1,l=new ss,u=G.MAX_PRINT_DIGITS-1,c=0;c<=u;c++){e&&c===o&&l.append(".");var p=Math.trunc(n._hi);if(p<0)break;var d=!1,f=0;p>9?(d=!0,f="9"):f="0"+p,l.append(f),n=n.subtract(G.valueOf(p)).multiply(G.TEN),d&&n.selfAdd(G.TEN);var g=!0,v=G.magnitude(n._hi);if(v<0&&Math.abs(v)>=u-c&&(g=!1),!g)break}return t[0]=r,l.toString()};G.prototype.sqr=function(){return this.multiply(this)};G.prototype.doubleValue=function(){return this._hi+this._lo};G.prototype.subtract=function(){if(arguments[0]instanceof G){var e=arguments[0];return this.add(e.negate())}else if(typeof arguments[0]=="number"){var t=arguments[0];return this.add(-t)}};G.prototype.equals=function(){if(arguments.length===1){var e=arguments[0];return this._hi===e._hi&&this._lo===e._lo}};G.prototype.isZero=function(){return this._hi===0&&this._lo===0};G.prototype.selfSubtract=function(){if(arguments[0]instanceof G){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e._hi,-e._lo)}else if(typeof arguments[0]=="number"){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t,0)}};G.prototype.getSpecialNumberString=function(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null};G.prototype.min=function(e){return this.le(e)?this:e};G.prototype.selfDivide=function(){if(arguments.length===1){if(arguments[0]instanceof G){var e=arguments[0];return this.selfDivide(e._hi,e._lo)}else if(typeof arguments[0]=="number"){var t=arguments[0];return this.selfDivide(t,0)}}else if(arguments.length===2){var n=arguments[0],r=arguments[1],s=null,o=null,l=null,u=null,c=null,p=null,d=null,f=null;return c=this._hi/n,p=G.SPLIT*c,s=p-c,f=G.SPLIT*n,s=p-s,o=c-s,l=f-n,d=c*n,l=f-l,u=n-l,f=s*l-d+s*u+o*l+o*u,p=(this._hi-d-f+this._lo-c*r)/n,f=c+p,this._hi=f,this._lo=c-f+p,this}};G.prototype.dump=function(){return"DD<"+this._hi+", "+this._lo+">"};G.prototype.divide=function(){if(arguments[0]instanceof G){var e=arguments[0],t=null,n=null,r=null,s=null,o=null,l=null,u=null,c=null;o=this._hi/e._hi,l=G.SPLIT*o,t=l-o,c=G.SPLIT*e._hi,t=l-t,n=o-t,r=c-e._hi,u=o*e._hi,r=c-r,s=e._hi-r,c=t*r-u+t*s+n*r+n*s,l=(this._hi-u-c+this._lo-o*e._lo)/e._hi,c=o+l;var p=c,d=o-c+l;return new G(p,d)}else if(typeof arguments[0]=="number"){var f=arguments[0];return Ve.isNaN(f)?G.createNaN():G.copy(this).selfDivide(f,0)}};G.prototype.ge=function(e){return(this._hi>e._hi||this._hi===e._hi)&&this._lo>=e._lo};G.prototype.pow=function(e){if(e===0)return G.valueOf(1);var t=new G(this),n=G.valueOf(1),r=Math.abs(e);if(r>1)for(;r>0;)r%2===1&&n.selfMultiply(t),r/=2,r>0&&(t=t.sqr());else n=t;return e<0?n.reciprocal():n};G.prototype.ceil=function(){if(this.isNaN())return G.NaN;var e=Math.ceil(this._hi),t=0;return e===this._hi&&(t=Math.ceil(this._lo)),new G(e,t)};G.prototype.compareTo=function(e){var t=e;return this._hi<t._hi?-1:this._hi>t._hi?1:this._lo<t._lo?-1:this._lo>t._lo?1:0};G.prototype.rint=function(){if(this.isNaN())return this;var e=this.add(.5);return e.floor()};G.prototype.setValue=function(){if(arguments[0]instanceof G){var e=arguments[0];return this.init(e),this}else if(typeof arguments[0]=="number"){var t=arguments[0];return this.init(t),this}};G.prototype.max=function(e){return this.ge(e)?this:e};G.prototype.sqrt=function(){if(this.isZero())return G.valueOf(0);if(this.isNegative())return G.NaN;var e=1/Math.sqrt(this._hi),t=this._hi*e,n=G.valueOf(t),r=this.subtract(n.sqr()),s=r._hi*(e*.5);return n.add(s)};G.prototype.selfAdd=function(){if(arguments.length===1){if(arguments[0]instanceof G){var e=arguments[0];return this.selfAdd(e._hi,e._lo)}else if(typeof arguments[0]=="number"){var t=arguments[0],n=null,r=null,s=null,o=null,l=null,u=null;return s=this._hi+t,l=s-this._hi,o=s-l,o=t-l+(this._hi-o),u=o+this._lo,n=s+u,r=u+(s-n),this._hi=n+r,this._lo=r+(n-this._hi),this}}else if(arguments.length===2){var c=arguments[0],p=arguments[1],d=null,f=null,g=null,v=null,w=null,A=null,C=null,m=null;w=this._hi+c,g=this._lo+p,C=w-this._hi,m=g-this._lo,A=w-C,v=g-m,A=c-C+(this._hi-A),v=p-m+(this._lo-v),C=A+g,d=w+C,f=C+(w-d),C=v+f;var y=d+C,x=C+(d-y);return this._hi=y,this._lo=x,this}};G.prototype.selfMultiply=function(){if(arguments.length===1){if(arguments[0]instanceof G){var e=arguments[0];return this.selfMultiply(e._hi,e._lo)}else if(typeof arguments[0]=="number"){var t=arguments[0];return this.selfMultiply(t,0)}}else if(arguments.length===2){var n=arguments[0],r=arguments[1],s=null,o=null,l=null,u=null,c=null,p=null;c=G.SPLIT*this._hi,s=c-this._hi,p=G.SPLIT*n,s=c-s,o=this._hi-s,l=p-n,c=this._hi*n,l=p-l,u=n-l,p=s*l-c+s*u+o*l+o*u+(this._hi*r+this._lo*n);var d=c+p;s=c-d;var f=p+s;return this._hi=d,this._lo=f,this}};G.prototype.selfSqr=function(){return this.selfMultiply(this)};G.prototype.floor=function(){if(this.isNaN())return G.NaN;var e=Math.floor(this._hi),t=0;return e===this._hi&&(t=Math.floor(this._lo)),new G(e,t)};G.prototype.negate=function(){return this.isNaN()?this:new G(-this._hi,-this._lo)};G.prototype.clone=function(){};G.prototype.multiply=function(){if(arguments[0]instanceof G){var e=arguments[0];return e.isNaN()?G.createNaN():G.copy(this).selfMultiply(e)}else if(typeof arguments[0]=="number"){var t=arguments[0];return Ve.isNaN(t)?G.createNaN():G.copy(this).selfMultiply(t,0)}};G.prototype.isNaN=function(){return Ve.isNaN(this._hi)};G.prototype.intValue=function(){return Math.trunc(this._hi)};G.prototype.toString=function(){var e=G.magnitude(this._hi);return e>=-3&&e<=20?this.toStandardNotation():this.toSciNotation()};G.prototype.toStandardNotation=function(){var e=this.getSpecialNumberString();if(e!==null)return e;var t=new Array(1).fill(null),n=this.extractSignificantDigits(!0,t),r=t[0]+1,s=n;if(n.charAt(0)===".")s="0"+n;else if(r<0)s="0."+G.stringOfChar("0",-r)+n;else if(n.indexOf(".")===-1){var o=r-n.length,l=G.stringOfChar("0",o);s=n+l+".0"}return this.isNegative()?"-"+s:s};G.prototype.reciprocal=function(){var e=null,t=null,n=null,r=null,s=null,o=null,l=null,u=null;s=1/this._hi,o=G.SPLIT*s,e=o-s,u=G.SPLIT*this._hi,e=o-e,t=s-e,n=u-this._hi,l=s*this._hi,n=u-n,r=this._hi-n,u=e*n-l+e*r+t*n+t*r,o=(1-l-u-s*this._lo)/this._hi;var c=s+o,p=s-c+o;return new G(c,p)};G.prototype.toSciNotation=function(){if(this.isZero())return G.SCI_NOT_ZERO;var e=this.getSpecialNumberString();if(e!==null)return e;var t=new Array(1).fill(null),n=this.extractSignificantDigits(!1,t),r=G.SCI_NOT_EXPONENT_CHAR+t[0];if(n.charAt(0)==="0")throw new Error("Found leading zero: "+n);var s="";n.length>1&&(s=n.substring(1));var o=n.charAt(0)+"."+s;return this.isNegative()?"-"+o+r:o+r};G.prototype.abs=function(){return this.isNaN()?G.NaN:this.isNegative()?this.negate():new G(this)};G.prototype.isPositive=function(){return(this._hi>0||this._hi===0)&&this._lo>0};G.prototype.lt=function(e){return(this._hi<e._hi||this._hi===e._hi)&&this._lo<e._lo};G.prototype.add=function(){if(arguments[0]instanceof G){var e=arguments[0];return G.copy(this).selfAdd(e)}else if(typeof arguments[0]=="number"){var t=arguments[0];return G.copy(this).selfAdd(t)}};G.prototype.init=function(){if(arguments.length===1){if(typeof arguments[0]=="number"){var e=arguments[0];this._hi=e,this._lo=0}else if(arguments[0]instanceof G){var t=arguments[0];this._hi=t._hi,this._lo=t._lo}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];this._hi=n,this._lo=r}};G.prototype.gt=function(e){return(this._hi>e._hi||this._hi===e._hi)&&this._lo>e._lo};G.prototype.isNegative=function(){return(this._hi<0||this._hi===0)&&this._lo<0};G.prototype.trunc=function(){return this.isNaN()?G.NaN:this.isPositive()?this.floor():this.ceil()};G.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0};G.prototype.interfaces_=function(){return[Cr,_r,sc]};G.prototype.getClass=function(){return G};G.sqr=function(e){return G.valueOf(e).selfMultiply(e)};G.valueOf=function(){if(typeof arguments[0]=="string"){var e=arguments[0];return G.parse(e)}else if(typeof arguments[0]=="number"){var t=arguments[0];return new G(t)}};G.sqrt=function(e){return G.valueOf(e).sqrt()};G.parse=function(e){for(var t=0,n=e.length;uu.isWhitespace(e.charAt(t));)t++;var r=!1;if(t<n){var s=e.charAt(t);(s==="-"||s==="+")&&(t++,s==="-"&&(r=!0))}for(var o=new G,l=0,u=0,c=0;!(t>=n);){var p=e.charAt(t);if(t++,uu.isDigit(p)){var d=p-"0";o.selfMultiply(G.TEN),o.selfAdd(d),l++;continue}if(p==="."){u=l;continue}if(p==="e"||p==="E"){var f=e.substring(t);try{c=Hr.parseInt(f)}catch(C){throw C instanceof Error?new Error("Invalid exponent "+f+" in string "+e):C}finally{}break}throw new Error("Unexpected character '"+p+"' at position "+t+" in string "+e)}var g=o,v=l-u-c;if(v===0)g=o;else if(v>0){var w=G.TEN.pow(v);g=o.divide(w)}else if(v<0){var A=G.TEN.pow(-v);g=o.multiply(A)}return r?g.negate():g};G.createNaN=function(){return new G(Ve.NaN,Ve.NaN)};G.copy=function(e){return new G(e)};G.magnitude=function(e){var t=Math.abs(e),n=Math.log(t)/Math.log(10),r=Math.trunc(Math.floor(n)),s=Math.pow(10,r);return s*10<=t&&(r+=1),r};G.stringOfChar=function(e,t){for(var n=new ss,r=0;r<t;r++)n.append(e);return n.toString()};Pr.PI.get=function(){return new G(3.141592653589793,12246467991473532e-32)};Pr.TWO_PI.get=function(){return new G(6.283185307179586,24492935982947064e-32)};Pr.PI_2.get=function(){return new G(1.5707963267948966,6123233995736766e-32)};Pr.E.get=function(){return new G(2.718281828459045,14456468917292502e-32)};Pr.NaN.get=function(){return new G(Ve.NaN,Ve.NaN)};Pr.EPS.get=function(){return 123259516440783e-46};Pr.SPLIT.get=function(){return 134217729};Pr.MAX_PRINT_DIGITS.get=function(){return 32};Pr.TEN.get=function(){return G.valueOf(10)};Pr.ONE.get=function(){return G.valueOf(1)};Pr.SCI_NOT_EXPONENT_CHAR.get=function(){return"E"};Pr.SCI_NOT_ZERO.get=function(){return"0.0E0"};Object.defineProperties(G,Pr);var Mi=function(){},M0={DP_SAFE_EPSILON:{configurable:!0}};Mi.prototype.interfaces_=function(){return[]};Mi.prototype.getClass=function(){return Mi};Mi.orientationIndex=function(e,t,n){var r=Mi.orientationIndexFilter(e,t,n);if(r<=1)return r;var s=G.valueOf(t.x).selfAdd(-e.x),o=G.valueOf(t.y).selfAdd(-e.y),l=G.valueOf(n.x).selfAdd(-t.x),u=G.valueOf(n.y).selfAdd(-t.y);return s.selfMultiply(u).selfSubtract(o.selfMultiply(l)).signum()};Mi.signOfDet2x2=function(e,t,n,r){var s=e.multiply(r).selfSubtract(t.multiply(n));return s.signum()};Mi.intersection=function(e,t,n,r){var s=G.valueOf(r.y).selfSubtract(n.y).selfMultiply(G.valueOf(t.x).selfSubtract(e.x)),o=G.valueOf(r.x).selfSubtract(n.x).selfMultiply(G.valueOf(t.y).selfSubtract(e.y)),l=s.subtract(o),u=G.valueOf(r.x).selfSubtract(n.x).selfMultiply(G.valueOf(e.y).selfSubtract(n.y)),c=G.valueOf(r.y).selfSubtract(n.y).selfMultiply(G.valueOf(e.x).selfSubtract(n.x)),p=u.subtract(c),d=p.selfDivide(l).doubleValue(),f=G.valueOf(e.x).selfAdd(G.valueOf(t.x).selfSubtract(e.x).selfMultiply(d)).doubleValue(),g=G.valueOf(t.x).selfSubtract(e.x).selfMultiply(G.valueOf(e.y).selfSubtract(n.y)),v=G.valueOf(t.y).selfSubtract(e.y).selfMultiply(G.valueOf(e.x).selfSubtract(n.x)),w=g.subtract(v),A=w.selfDivide(l).doubleValue(),C=G.valueOf(n.y).selfAdd(G.valueOf(r.y).selfSubtract(n.y).selfMultiply(A)).doubleValue();return new j(f,C)};Mi.orientationIndexFilter=function(e,t,n){var r=null,s=(e.x-n.x)*(t.y-n.y),o=(e.y-n.y)*(t.x-n.x),l=s-o;if(s>0){if(o<=0)return Mi.signum(l);r=s+o}else if(s<0){if(o>=0)return Mi.signum(l);r=-s-o}else return Mi.signum(l);var u=Mi.DP_SAFE_EPSILON*r;return l>=u||-l>=u?Mi.signum(l):2};Mi.signum=function(e){return e>0?1:e<0?-1:0};M0.DP_SAFE_EPSILON.get=function(){return 1e-15};Object.defineProperties(Mi,M0);var tn=function(){},Ru={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};Ru.X.get=function(){return 0};Ru.Y.get=function(){return 1};Ru.Z.get=function(){return 2};Ru.M.get=function(){return 3};tn.prototype.setOrdinate=function(e,t,n){};tn.prototype.size=function(){};tn.prototype.getOrdinate=function(e,t){};tn.prototype.getCoordinate=function(){};tn.prototype.getCoordinateCopy=function(e){};tn.prototype.getDimension=function(){};tn.prototype.getX=function(e){};tn.prototype.clone=function(){};tn.prototype.expandEnvelope=function(e){};tn.prototype.copy=function(){};tn.prototype.getY=function(e){};tn.prototype.toCoordinateArray=function(){};tn.prototype.interfaces_=function(){return[sc]};tn.prototype.getClass=function(){return tn};Object.defineProperties(tn,Ru);var O0=function(){},Ml=function(i){function e(){i.call(this,"Projective point not representable on the Cartesian plane.")}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(O0),hi=function(){};hi.arraycopy=function(e,t,n,r,s){for(var o=0,l=t;l<t+s;l++)n[r+o]=e[l],o++};hi.getProperty=function(e){return{"line.separator":`
`}[e]};var Sr=function i(){if(this.x=null,this.y=null,this.w=null,arguments.length===0)this.x=0,this.y=0,this.w=1;else if(arguments.length===1){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(arguments.length===2){if(typeof arguments[0]=="number"&&typeof arguments[1]=="number"){var t=arguments[0],n=arguments[1];this.x=t,this.y=n,this.w=1}else if(arguments[0]instanceof i&&arguments[1]instanceof i){var r=arguments[0],s=arguments[1];this.x=r.y*s.w-s.y*r.w,this.y=s.x*r.w-r.x*s.w,this.w=r.x*s.y-s.x*r.y}else if(arguments[0]instanceof j&&arguments[1]instanceof j){var o=arguments[0],l=arguments[1];this.x=o.y-l.y,this.y=l.x-o.x,this.w=o.x*l.y-l.x*o.y}}else if(arguments.length===3){var u=arguments[0],c=arguments[1],p=arguments[2];this.x=u,this.y=c,this.w=p}else if(arguments.length===4){var d=arguments[0],f=arguments[1],g=arguments[2],v=arguments[3],w=d.y-f.y,A=f.x-d.x,C=d.x*f.y-f.x*d.y,m=g.y-v.y,y=v.x-g.x,x=g.x*v.y-v.x*g.y;this.x=A*x-y*C,this.y=m*C-w*x,this.w=w*y-m*A}};Sr.prototype.getY=function(){var e=this.y/this.w;if(Ve.isNaN(e)||Ve.isInfinite(e))throw new Ml;return e};Sr.prototype.getX=function(){var e=this.x/this.w;if(Ve.isNaN(e)||Ve.isInfinite(e))throw new Ml;return e};Sr.prototype.getCoordinate=function(){var e=new j;return e.x=this.getX(),e.y=this.getY(),e};Sr.prototype.interfaces_=function(){return[]};Sr.prototype.getClass=function(){return Sr};Sr.intersection=function(e,t,n,r){var s=e.y-t.y,o=t.x-e.x,l=e.x*t.y-t.x*e.y,u=n.y-r.y,c=r.x-n.x,p=n.x*r.y-r.x*n.y,d=o*p-c*l,f=u*l-s*p,g=s*c-u*o,v=d/g,w=f/g;if(Ve.isNaN(v)||Ve.isInfinite(v)||Ve.isNaN(w)||Ve.isInfinite(w))throw new Ml;return new j(v,w)};var Ce=function i(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,arguments.length===0)this.init();else if(arguments.length===1){if(arguments[0]instanceof j){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof i){var t=arguments[0];this.init(t)}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];this.init(n.x,r.x,n.y,r.y)}else if(arguments.length===4){var s=arguments[0],o=arguments[1],l=arguments[2],u=arguments[3];this.init(s,o,l,u)}},P0={serialVersionUID:{configurable:!0}};Ce.prototype.getArea=function(){return this.getWidth()*this.getHeight()};Ce.prototype.equals=function(e){if(!(e instanceof Ce))return!1;var t=e;return this.isNull()?t.isNull():this._maxx===t.getMaxX()&&this._maxy===t.getMaxY()&&this._minx===t.getMinX()&&this._miny===t.getMinY()};Ce.prototype.intersection=function(e){if(this.isNull()||e.isNull()||!this.intersects(e))return new Ce;var t=this._minx>e._minx?this._minx:e._minx,n=this._miny>e._miny?this._miny:e._miny,r=this._maxx<e._maxx?this._maxx:e._maxx,s=this._maxy<e._maxy?this._maxy:e._maxy;return new Ce(t,r,n,s)};Ce.prototype.isNull=function(){return this._maxx<this._minx};Ce.prototype.getMaxX=function(){return this._maxx};Ce.prototype.covers=function(){if(arguments.length===1){if(arguments[0]instanceof j){var e=arguments[0];return this.covers(e.x,e.y)}else if(arguments[0]instanceof Ce){var t=arguments[0];return this.isNull()||t.isNull()?!1:t.getMinX()>=this._minx&&t.getMaxX()<=this._maxx&&t.getMinY()>=this._miny&&t.getMaxY()<=this._maxy}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];return this.isNull()?!1:n>=this._minx&&n<=this._maxx&&r>=this._miny&&r<=this._maxy}};Ce.prototype.intersects=function(){if(arguments.length===1){if(arguments[0]instanceof Ce){var e=arguments[0];return this.isNull()||e.isNull()?!1:!(e._minx>this._maxx||e._maxx<this._minx||e._miny>this._maxy||e._maxy<this._miny)}else if(arguments[0]instanceof j){var t=arguments[0];return this.intersects(t.x,t.y)}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];return this.isNull()?!1:!(n>this._maxx||n<this._minx||r>this._maxy||r<this._miny)}};Ce.prototype.getMinY=function(){return this._miny};Ce.prototype.getMinX=function(){return this._minx};Ce.prototype.expandToInclude=function(){if(arguments.length===1){if(arguments[0]instanceof j){var e=arguments[0];this.expandToInclude(e.x,e.y)}else if(arguments[0]instanceof Ce){var t=arguments[0];if(t.isNull())return null;this.isNull()?(this._minx=t.getMinX(),this._maxx=t.getMaxX(),this._miny=t.getMinY(),this._maxy=t.getMaxY()):(t._minx<this._minx&&(this._minx=t._minx),t._maxx>this._maxx&&(this._maxx=t._maxx),t._miny<this._miny&&(this._miny=t._miny),t._maxy>this._maxy&&(this._maxy=t._maxy))}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=r,this._maxy=r):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),r<this._miny&&(this._miny=r),r>this._maxy&&(this._maxy=r))}};Ce.prototype.minExtent=function(){if(this.isNull())return 0;var e=this.getWidth(),t=this.getHeight();return e<t?e:t};Ce.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx};Ce.prototype.compareTo=function(e){var t=e;return this.isNull()?t.isNull()?0:-1:t.isNull()?1:this._minx<t._minx?-1:this._minx>t._minx?1:this._miny<t._miny?-1:this._miny>t._miny?1:this._maxx<t._maxx?-1:this._maxx>t._maxx?1:this._maxy<t._maxy?-1:this._maxy>t._maxy?1:0};Ce.prototype.translate=function(e,t){if(this.isNull())return null;this.init(this.getMinX()+e,this.getMaxX()+e,this.getMinY()+t,this.getMaxY()+t)};Ce.prototype.toString=function(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"};Ce.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1};Ce.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny};Ce.prototype.maxExtent=function(){if(this.isNull())return 0;var e=this.getWidth(),t=this.getHeight();return e>t?e:t};Ce.prototype.expandBy=function(){if(arguments.length===1){var e=arguments[0];this.expandBy(e,e)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=t,this._maxx+=t,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}};Ce.prototype.contains=function(){if(arguments.length===1){if(arguments[0]instanceof Ce){var e=arguments[0];return this.covers(e)}else if(arguments[0]instanceof j){var t=arguments[0];return this.covers(t)}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];return this.covers(n,r)}};Ce.prototype.centre=function(){return this.isNull()?null:new j((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)};Ce.prototype.init=function(){if(arguments.length===0)this.setToNull();else if(arguments.length===1){if(arguments[0]instanceof j){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof Ce){var t=arguments[0];this._minx=t._minx,this._maxx=t._maxx,this._miny=t._miny,this._maxy=t._maxy}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];this.init(n.x,r.x,n.y,r.y)}else if(arguments.length===4){var s=arguments[0],o=arguments[1],l=arguments[2],u=arguments[3];s<o?(this._minx=s,this._maxx=o):(this._minx=o,this._maxx=s),l<u?(this._miny=l,this._maxy=u):(this._miny=u,this._maxy=l)}};Ce.prototype.getMaxY=function(){return this._maxy};Ce.prototype.distance=function(e){if(this.intersects(e))return 0;var t=0;this._maxx<e._minx?t=e._minx-this._maxx:this._minx>e._maxx&&(t=this._minx-e._maxx);var n=0;return this._maxy<e._miny?n=e._miny-this._maxy:this._miny>e._maxy&&(n=this._miny-e._maxy),t===0?n:n===0?t:Math.sqrt(t*t+n*n)};Ce.prototype.hashCode=function(){var e=17;return e=37*e+j.hashCode(this._minx),e=37*e+j.hashCode(this._maxx),e=37*e+j.hashCode(this._miny),e=37*e+j.hashCode(this._maxy),e};Ce.prototype.interfaces_=function(){return[_r,Cr]};Ce.prototype.getClass=function(){return Ce};Ce.intersects=function(){if(arguments.length===3){var e=arguments[0],t=arguments[1],n=arguments[2];return n.x>=(e.x<t.x?e.x:t.x)&&n.x<=(e.x>t.x?e.x:t.x)&&n.y>=(e.y<t.y?e.y:t.y)&&n.y<=(e.y>t.y?e.y:t.y)}else if(arguments.length===4){var r=arguments[0],s=arguments[1],o=arguments[2],l=arguments[3],u=Math.min(o.x,l.x),c=Math.max(o.x,l.x),p=Math.min(r.x,s.x),d=Math.max(r.x,s.x);return!(p>c||d<u||(u=Math.min(o.y,l.y),c=Math.max(o.y,l.y),p=Math.min(r.y,s.y),d=Math.max(r.y,s.y),p>c)||d<u)}};P0.serialVersionUID.get=function(){return 5873921885273102e3};Object.defineProperties(Ce,P0);var Br={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,emptyTypeStr:/^\s*(\w+)\s*EMPTY\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/},oc=function(e){this.geometryFactory=e||new Ot};oc.prototype.read=function(e){var t,n,r;e=e.replace(/[\n\r]/g," ");var s=Br.typeStr.exec(e);if(e.search("EMPTY")!==-1&&(s=Br.emptyTypeStr.exec(e),s[2]=void 0),s&&(n=s[1].toLowerCase(),r=s[2],el[n]&&(t=el[n].apply(this,[r]))),t===void 0)throw new Error("Could not parse WKT "+e);return t};oc.prototype.write=function(e){return this.extractGeometry(e)};oc.prototype.extractGeometry=function(e){var t=e.getGeometryType().toLowerCase();if(!Ns[t])return null;var n=t.toUpperCase(),r;return e.isEmpty()?r=n+" EMPTY":r=n+"("+Ns[t].apply(this,[e])+")",r};var Ns={coordinate:function(e){return e.x+" "+e.y},point:function(e){return Ns.coordinate.call(this,e._coordinates._coordinates[0])},multipoint:function(e){for(var t=this,n=[],r=0,s=e._geometries.length;r<s;++r)n.push("("+Ns.point.apply(t,[e._geometries[r]])+")");return n.join(",")},linestring:function(e){for(var t=this,n=[],r=0,s=e._points._coordinates.length;r<s;++r)n.push(Ns.coordinate.apply(t,[e._points._coordinates[r]]));return n.join(",")},linearring:function(e){for(var t=this,n=[],r=0,s=e._points._coordinates.length;r<s;++r)n.push(Ns.coordinate.apply(t,[e._points._coordinates[r]]));return n.join(",")},multilinestring:function(e){for(var t=this,n=[],r=0,s=e._geometries.length;r<s;++r)n.push("("+Ns.linestring.apply(t,[e._geometries[r]])+")");return n.join(",")},polygon:function(e){var t=this,n=[];n.push("("+Ns.linestring.apply(this,[e._shell])+")");for(var r=0,s=e._holes.length;r<s;++r)n.push("("+Ns.linestring.apply(t,[e._holes[r]])+")");return n.join(",")},multipolygon:function(e){for(var t=this,n=[],r=0,s=e._geometries.length;r<s;++r)n.push("("+Ns.polygon.apply(t,[e._geometries[r]])+")");return n.join(",")},geometrycollection:function(e){for(var t=this,n=[],r=0,s=e._geometries.length;r<s;++r)n.push(t.extractGeometry(e._geometries[r]));return n.join(",")}},el={point:function(e){if(e===void 0)return this.geometryFactory.createPoint();var t=e.trim().split(Br.spaces);return this.geometryFactory.createPoint(new j(Number.parseFloat(t[0]),Number.parseFloat(t[1])))},multipoint:function(e){var t=this;if(e===void 0)return this.geometryFactory.createMultiPoint();for(var n,r=e.trim().split(","),s=[],o=0,l=r.length;o<l;++o)n=r[o].replace(Br.trimParens,"$1"),s.push(el.point.apply(t,[n]));return this.geometryFactory.createMultiPoint(s)},linestring:function(e){if(e===void 0)return this.geometryFactory.createLineString();for(var t=e.trim().split(","),n=[],r,s=0,o=t.length;s<o;++s)r=t[s].trim().split(Br.spaces),n.push(new j(Number.parseFloat(r[0]),Number.parseFloat(r[1])));return this.geometryFactory.createLineString(n)},linearring:function(e){if(e===void 0)return this.geometryFactory.createLinearRing();for(var t=e.trim().split(","),n=[],r,s=0,o=t.length;s<o;++s)r=t[s].trim().split(Br.spaces),n.push(new j(Number.parseFloat(r[0]),Number.parseFloat(r[1])));return this.geometryFactory.createLinearRing(n)},multilinestring:function(e){var t=this;if(e===void 0)return this.geometryFactory.createMultiLineString();for(var n,r=e.trim().split(Br.parenComma),s=[],o=0,l=r.length;o<l;++o)n=r[o].replace(Br.trimParens,"$1"),s.push(el.linestring.apply(t,[n]));return this.geometryFactory.createMultiLineString(s)},polygon:function(e){var t=this;if(e===void 0)return this.geometryFactory.createPolygon();for(var n,r,s,o=e.trim().split(Br.parenComma),l,u=[],c=0,p=o.length;c<p;++c)n=o[c].replace(Br.trimParens,"$1"),r=el.linestring.apply(t,[n]),s=t.geometryFactory.createLinearRing(r._points),c===0?l=s:u.push(s);return this.geometryFactory.createPolygon(l,u)},multipolygon:function(e){var t=this;if(e===void 0)return this.geometryFactory.createMultiPolygon();for(var n,r=e.trim().split(Br.doubleParenComma),s=[],o=0,l=r.length;o<l;++o)n=r[o].replace(Br.trimParens,"$1"),s.push(el.polygon.apply(t,[n]));return this.geometryFactory.createMultiPolygon(s)},geometrycollection:function(e){var t=this;if(e===void 0)return this.geometryFactory.createGeometryCollection();e=e.replace(/,\s*([A-Za-z])/g,"|$1");for(var n=e.trim().split("|"),r=[],s=0,o=n.length;s<o;++s)r.push(t.read(n[s]));return this.geometryFactory.createGeometryCollection(r)}},Dr=function(e){this.parser=new oc(e)};Dr.prototype.write=function(e){return this.parser.write(e)};Dr.toLineString=function(e,t){if(arguments.length!==2)throw new Error("Not implemented");return"LINESTRING ( "+e.x+" "+e.y+", "+t.x+" "+t.y+" )"};var Gs=function(i){function e(t){i.call(this,t),this.name="RuntimeException",this.message=t,this.stack=new i().stack}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e}(Error),Eh=function(i){function e(){if(i.call(this),arguments.length===0)i.call(this);else if(arguments.length===1){var t=arguments[0];i.call(this,t)}}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Gs),nt=function(){};nt.prototype.interfaces_=function(){return[]};nt.prototype.getClass=function(){return nt};nt.shouldNeverReachHere=function(){if(arguments.length===0)nt.shouldNeverReachHere(null);else if(arguments.length===1){var e=arguments[0];throw new Eh("Should never reach here"+(e!==null?": "+e:""))}};nt.isTrue=function(){var e,t;if(arguments.length===1)e=arguments[0],nt.isTrue(e,null);else if(arguments.length===2&&(e=arguments[0],t=arguments[1],!e))throw t===null?new Eh:new Eh(t)};nt.equals=function(){var e,t,n;if(arguments.length===2)e=arguments[0],t=arguments[1],nt.equals(e,t,null);else if(arguments.length===3&&(e=arguments[0],t=arguments[1],n=arguments[2],!t.equals(e)))throw new Eh("Expected "+e+" but encountered "+t+(n!==null?": "+n:""))};var Ln=function(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new j,this._intPt[1]=new j,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},Ma={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};Ln.prototype.getIndexAlongSegment=function(e,t){return this.computeIntLineIndex(),this._intLineIndex[e][t]};Ln.prototype.getTopologySummary=function(){var e=new ss;return this.isEndPoint()&&e.append(" endpoint"),this._isProper&&e.append(" proper"),this.isCollinear()&&e.append(" collinear"),e.toString()};Ln.prototype.computeIntersection=function(e,t,n,r){this._inputLines[0][0]=e,this._inputLines[0][1]=t,this._inputLines[1][0]=n,this._inputLines[1][1]=r,this._result=this.computeIntersect(e,t,n,r)};Ln.prototype.getIntersectionNum=function(){return this._result};Ln.prototype.computeIntLineIndex=function(){if(arguments.length===0)this._intLineIndex===null&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(arguments.length===1){var e=arguments[0],t=this.getEdgeDistance(e,0),n=this.getEdgeDistance(e,1);t>n?(this._intLineIndex[e][0]=0,this._intLineIndex[e][1]=1):(this._intLineIndex[e][0]=1,this._intLineIndex[e][1]=0)}};Ln.prototype.isProper=function(){return this.hasIntersection()&&this._isProper};Ln.prototype.setPrecisionModel=function(e){this._precisionModel=e};Ln.prototype.isInteriorIntersection=function(){var e=this;if(arguments.length===0)return!!(this.isInteriorIntersection(0)||this.isInteriorIntersection(1));if(arguments.length===1){for(var t=arguments[0],n=0;n<this._result;n++)if(!(e._intPt[n].equals2D(e._inputLines[t][0])||e._intPt[n].equals2D(e._inputLines[t][1])))return!0;return!1}};Ln.prototype.getIntersection=function(e){return this._intPt[e]};Ln.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper};Ln.prototype.hasIntersection=function(){return this._result!==Ln.NO_INTERSECTION};Ln.prototype.getEdgeDistance=function(e,t){var n=Ln.computeEdgeDistance(this._intPt[t],this._inputLines[e][0],this._inputLines[e][1]);return n};Ln.prototype.isCollinear=function(){return this._result===Ln.COLLINEAR_INTERSECTION};Ln.prototype.toString=function(){return Dr.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+Dr.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()};Ln.prototype.getEndpoint=function(e,t){return this._inputLines[e][t]};Ln.prototype.isIntersection=function(e){for(var t=this,n=0;n<this._result;n++)if(t._intPt[n].equals2D(e))return!0;return!1};Ln.prototype.getIntersectionAlongSegment=function(e,t){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[e][t]]};Ln.prototype.interfaces_=function(){return[]};Ln.prototype.getClass=function(){return Ln};Ln.computeEdgeDistance=function(e,t,n){var r=Math.abs(n.x-t.x),s=Math.abs(n.y-t.y),o=-1;if(e.equals(t))o=0;else if(e.equals(n))r>s?o=r:o=s;else{var l=Math.abs(e.x-t.x),u=Math.abs(e.y-t.y);r>s?o=l:o=u,o===0&&!e.equals(t)&&(o=Math.max(l,u))}return nt.isTrue(!(o===0&&!e.equals(t)),"Bad distance calculation"),o};Ln.nonRobustComputeEdgeDistance=function(e,t,n){var r=e.x-t.x,s=e.y-t.y,o=Math.sqrt(r*r+s*s);return nt.isTrue(!(o===0&&!e.equals(t)),"Invalid distance calculation"),o};Ma.DONT_INTERSECT.get=function(){return 0};Ma.DO_INTERSECT.get=function(){return 1};Ma.COLLINEAR.get=function(){return 2};Ma.NO_INTERSECTION.get=function(){return 0};Ma.POINT_INTERSECTION.get=function(){return 1};Ma.COLLINEAR_INTERSECTION.get=function(){return 2};Object.defineProperties(Ln,Ma);var ia=function(i){function e(){i.apply(this,arguments)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(n){var r=new Ce(this._inputLines[0][0],this._inputLines[0][1]),s=new Ce(this._inputLines[1][0],this._inputLines[1][1]);return r.contains(n)&&s.contains(n)},e.prototype.computeIntersection=function(){if(arguments.length===3){var n=arguments[0],r=arguments[1],s=arguments[2];if(this._isProper=!1,Ce.intersects(r,s,n)&&ce.orientationIndex(r,s,n)===0&&ce.orientationIndex(s,r,n)===0)return this._isProper=!0,(n.equals(r)||n.equals(s))&&(this._isProper=!1),this._result=i.POINT_INTERSECTION,null;this._result=i.NO_INTERSECTION}else return i.prototype.computeIntersection.apply(this,arguments)},e.prototype.normalizeToMinimum=function(n,r,s,o,l){l.x=this.smallestInAbsValue(n.x,r.x,s.x,o.x),l.y=this.smallestInAbsValue(n.y,r.y,s.y,o.y),n.x-=l.x,n.y-=l.y,r.x-=l.x,r.y-=l.y,s.x-=l.x,s.y-=l.y,o.x-=l.x,o.y-=l.y},e.prototype.safeHCoordinateIntersection=function(n,r,s,o){var l=null;try{l=Sr.intersection(n,r,s,o)}catch(u){if(u instanceof Ml)l=e.nearestEndpoint(n,r,s,o);else throw u}finally{}return l},e.prototype.intersection=function(n,r,s,o){var l=this.intersectionWithNormalization(n,r,s,o);return this.isInSegmentEnvelopes(l)||(l=new j(e.nearestEndpoint(n,r,s,o))),this._precisionModel!==null&&this._precisionModel.makePrecise(l),l},e.prototype.smallestInAbsValue=function(n,r,s,o){var l=n,u=Math.abs(l);return Math.abs(r)<u&&(l=r,u=Math.abs(r)),Math.abs(s)<u&&(l=s,u=Math.abs(s)),Math.abs(o)<u&&(l=o),l},e.prototype.checkDD=function(n,r,s,o,l){var u=Mi.intersection(n,r,s,o),c=this.isInSegmentEnvelopes(u);hi.out.println("DD in env = "+c+"  --------------------- "+u),l.distance(u)>1e-4&&hi.out.println("Distance = "+l.distance(u))},e.prototype.intersectionWithNormalization=function(n,r,s,o){var l=new j(n),u=new j(r),c=new j(s),p=new j(o),d=new j;this.normalizeToEnvCentre(l,u,c,p,d);var f=this.safeHCoordinateIntersection(l,u,c,p);return f.x+=d.x,f.y+=d.y,f},e.prototype.computeCollinearIntersection=function(n,r,s,o){var l=Ce.intersects(n,r,s),u=Ce.intersects(n,r,o),c=Ce.intersects(s,o,n),p=Ce.intersects(s,o,r);return l&&u?(this._intPt[0]=s,this._intPt[1]=o,i.COLLINEAR_INTERSECTION):c&&p?(this._intPt[0]=n,this._intPt[1]=r,i.COLLINEAR_INTERSECTION):l&&c?(this._intPt[0]=s,this._intPt[1]=n,s.equals(n)&&!u&&!p?i.POINT_INTERSECTION:i.COLLINEAR_INTERSECTION):l&&p?(this._intPt[0]=s,this._intPt[1]=r,s.equals(r)&&!u&&!c?i.POINT_INTERSECTION:i.COLLINEAR_INTERSECTION):u&&c?(this._intPt[0]=o,this._intPt[1]=n,o.equals(n)&&!l&&!p?i.POINT_INTERSECTION:i.COLLINEAR_INTERSECTION):u&&p?(this._intPt[0]=o,this._intPt[1]=r,o.equals(r)&&!l&&!c?i.POINT_INTERSECTION:i.COLLINEAR_INTERSECTION):i.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(n,r,s,o,l){var u=n.x<r.x?n.x:r.x,c=n.y<r.y?n.y:r.y,p=n.x>r.x?n.x:r.x,d=n.y>r.y?n.y:r.y,f=s.x<o.x?s.x:o.x,g=s.y<o.y?s.y:o.y,v=s.x>o.x?s.x:o.x,w=s.y>o.y?s.y:o.y,A=u>f?u:f,C=p<v?p:v,m=c>g?c:g,y=d<w?d:w,x=(A+C)/2,k=(m+y)/2;l.x=x,l.y=k,n.x-=l.x,n.y-=l.y,r.x-=l.x,r.y-=l.y,s.x-=l.x,s.y-=l.y,o.x-=l.x,o.y-=l.y},e.prototype.computeIntersect=function(n,r,s,o){if(this._isProper=!1,!Ce.intersects(n,r,s,o))return i.NO_INTERSECTION;var l=ce.orientationIndex(n,r,s),u=ce.orientationIndex(n,r,o);if(l>0&&u>0||l<0&&u<0)return i.NO_INTERSECTION;var c=ce.orientationIndex(s,o,n),p=ce.orientationIndex(s,o,r);if(c>0&&p>0||c<0&&p<0)return i.NO_INTERSECTION;var d=l===0&&u===0&&c===0&&p===0;return d?this.computeCollinearIntersection(n,r,s,o):(l===0||u===0||c===0||p===0?(this._isProper=!1,n.equals2D(s)||n.equals2D(o)?this._intPt[0]=n:r.equals2D(s)||r.equals2D(o)?this._intPt[0]=r:l===0?this._intPt[0]=new j(s):u===0?this._intPt[0]=new j(o):c===0?this._intPt[0]=new j(n):p===0&&(this._intPt[0]=new j(r))):(this._isProper=!0,this._intPt[0]=this.intersection(n,r,s,o)),i.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(n,r,s,o){var l=n,u=ce.distancePointLine(n,s,o),c=ce.distancePointLine(r,s,o);return c<u&&(u=c,l=r),c=ce.distancePointLine(s,n,r),c<u&&(u=c,l=s),c=ce.distancePointLine(o,n,r),c<u&&(u=c,l=o),l},e}(Ln),_a=function(){};_a.prototype.interfaces_=function(){return[]};_a.prototype.getClass=function(){return _a};_a.orientationIndex=function(e,t,n){var r=t.x-e.x,s=t.y-e.y,o=n.x-t.x,l=n.y-t.y;return _a.signOfDet2x2(r,s,o,l)};_a.signOfDet2x2=function(e,t,n,r){var s=null,o=null,l=null;if(s=1,e===0||r===0)return t===0||n===0?0:t>0?n>0?-s:s:n>0?s:-s;if(t===0||n===0)return r>0?e>0?s:-s:e>0?-s:s;if(t>0?r>0?t<=r||(s=-s,o=e,e=n,n=o,o=t,t=r,r=o):t<=-r?(s=-s,n=-n,r=-r):(o=e,e=-n,n=o,o=t,t=-r,r=o):r>0?-t<=r?(s=-s,e=-e,t=-t):(o=-e,e=n,n=o,o=-t,t=r,r=o):t>=r?(e=-e,t=-t,n=-n,r=-r):(s=-s,o=-e,e=-n,n=o,o=-t,t=-r,r=o),e>0)if(n>0){if(!(e<=n))return s}else return s;else{if(n>0)return-s;if(e>=n)s=-s,e=-e,n=-n;else return-s}for(;;){if(l=Math.floor(n/e),n=n-l*e,r=r-l*t,r<0)return-s;if(r>t)return s;if(e>n+n){if(t<r+r)return s}else{if(t>r+r)return-s;n=e-n,r=t-r,s=-s}if(r===0)return n===0?0:-s;if(n===0||(l=Math.floor(e/n),e=e-l*n,t=t-l*r,t<0))return s;if(t>r)return-s;if(n>e+e){if(r<t+t)return-s}else{if(r>t+t)return s;e=n-e,t=r-t,s=-s}if(t===0)return e===0?0:s;if(e===0)return-s}};var Ur=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var e=arguments[0];this._p=e};Ur.prototype.countSegment=function(e,t){if(e.x<this._p.x&&t.x<this._p.x)return null;if(this._p.x===t.x&&this._p.y===t.y)return this._isPointOnSegment=!0,null;if(e.y===this._p.y&&t.y===this._p.y){var n=e.x,r=t.x;return n>r&&(n=t.x,r=e.x),this._p.x>=n&&this._p.x<=r&&(this._isPointOnSegment=!0),null}if(e.y>this._p.y&&t.y<=this._p.y||t.y>this._p.y&&e.y<=this._p.y){var s=e.x-this._p.x,o=e.y-this._p.y,l=t.x-this._p.x,u=t.y-this._p.y,c=_a.signOfDet2x2(s,o,l,u);if(c===0)return this._isPointOnSegment=!0,null;u<o&&(c=-c),c>0&&this._crossingCount++}};Ur.prototype.isPointInPolygon=function(){return this.getLocation()!==W.EXTERIOR};Ur.prototype.getLocation=function(){return this._isPointOnSegment?W.BOUNDARY:this._crossingCount%2===1?W.INTERIOR:W.EXTERIOR};Ur.prototype.isOnSegment=function(){return this._isPointOnSegment};Ur.prototype.interfaces_=function(){return[]};Ur.prototype.getClass=function(){return Ur};Ur.locatePointInRing=function(){if(arguments[0]instanceof j&&Me(arguments[1],tn)){for(var e=arguments[0],t=arguments[1],n=new Ur(e),r=new j,s=new j,o=1;o<t.size();o++)if(t.getCoordinate(o,r),t.getCoordinate(o-1,s),n.countSegment(r,s),n.isOnSegment())return n.getLocation();return n.getLocation()}else if(arguments[0]instanceof j&&arguments[1]instanceof Array){for(var l=arguments[0],u=arguments[1],c=new Ur(l),p=1;p<u.length;p++){var d=u[p],f=u[p-1];if(c.countSegment(d,f),c.isOnSegment())return c.getLocation()}return c.getLocation()}};var ce=function(){},Oa={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};ce.prototype.interfaces_=function(){return[]};ce.prototype.getClass=function(){return ce};ce.orientationIndex=function(e,t,n){return Mi.orientationIndex(e,t,n)};ce.signedArea=function(){if(arguments[0]instanceof Array){var e=arguments[0];if(e.length<3)return 0;for(var t=0,n=e[0].x,r=1;r<e.length-1;r++){var s=e[r].x-n,o=e[r+1].y,l=e[r-1].y;t+=s*(l-o)}return t/2}else if(Me(arguments[0],tn)){var u=arguments[0],c=u.size();if(c<3)return 0;var p=new j,d=new j,f=new j;u.getCoordinate(0,d),u.getCoordinate(1,f);var g=d.x;f.x-=g;for(var v=0,w=1;w<c-1;w++)p.y=d.y,d.x=f.x,d.y=f.y,u.getCoordinate(w+1,f),f.x-=g,v+=d.x*(p.y-f.y);return v/2}};ce.distanceLineLine=function(e,t,n,r){if(e.equals(t))return ce.distancePointLine(e,n,r);if(n.equals(r))return ce.distancePointLine(r,e,t);var s=!1;if(!Ce.intersects(e,t,n,r))s=!0;else{var o=(t.x-e.x)*(r.y-n.y)-(t.y-e.y)*(r.x-n.x);if(o===0)s=!0;else{var l=(e.y-n.y)*(r.x-n.x)-(e.x-n.x)*(r.y-n.y),u=(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y),c=u/o,p=l/o;(p<0||p>1||c<0||c>1)&&(s=!0)}}return s?or.min(ce.distancePointLine(e,n,r),ce.distancePointLine(t,n,r),ce.distancePointLine(n,e,t),ce.distancePointLine(r,e,t)):0};ce.isPointInRing=function(e,t){return ce.locatePointInRing(e,t)!==W.EXTERIOR};ce.computeLength=function(e){var t=e.size();if(t<=1)return 0;var n=0,r=new j;e.getCoordinate(0,r);for(var s=r.x,o=r.y,l=1;l<t;l++){e.getCoordinate(l,r);var u=r.x,c=r.y,p=u-s,d=c-o;n+=Math.sqrt(p*p+d*d),s=u,o=c}return n};ce.isCCW=function(e){var t=e.length-1;if(t<3)throw new Nn("Ring has fewer than 4 points, so orientation cannot be determined");for(var n=e[0],r=0,s=1;s<=t;s++){var o=e[s];o.y>n.y&&(n=o,r=s)}var l=r;do l=l-1,l<0&&(l=t);while(e[l].equals2D(n)&&l!==r);var u=r;do u=(u+1)%t;while(e[u].equals2D(n)&&u!==r);var c=e[l],p=e[u];if(c.equals2D(n)||p.equals2D(n)||c.equals2D(p))return!1;var d=ce.computeOrientation(c,n,p),f=!1;return d===0?f=c.x>p.x:f=d>0,f};ce.locatePointInRing=function(e,t){return Ur.locatePointInRing(e,t)};ce.distancePointLinePerpendicular=function(e,t,n){var r=(n.x-t.x)*(n.x-t.x)+(n.y-t.y)*(n.y-t.y),s=((t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y))/r;return Math.abs(s)*Math.sqrt(r)};ce.computeOrientation=function(e,t,n){return ce.orientationIndex(e,t,n)};ce.distancePointLine=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1];if(t.length===0)throw new Nn("Line array must contain at least one vertex");for(var n=e.distance(t[0]),r=0;r<t.length-1;r++){var s=ce.distancePointLine(e,t[r],t[r+1]);s<n&&(n=s)}return n}else if(arguments.length===3){var o=arguments[0],l=arguments[1],u=arguments[2];if(l.x===u.x&&l.y===u.y)return o.distance(l);var c=(u.x-l.x)*(u.x-l.x)+(u.y-l.y)*(u.y-l.y),p=((o.x-l.x)*(u.x-l.x)+(o.y-l.y)*(u.y-l.y))/c;if(p<=0)return o.distance(l);if(p>=1)return o.distance(u);var d=((l.y-o.y)*(u.x-l.x)-(l.x-o.x)*(u.y-l.y))/c;return Math.abs(d)*Math.sqrt(c)}};ce.isOnLine=function(e,t){for(var n=new ia,r=1;r<t.length;r++){var s=t[r-1],o=t[r];if(n.computeIntersection(e,s,o),n.hasIntersection())return!0}return!1};Oa.CLOCKWISE.get=function(){return-1};Oa.RIGHT.get=function(){return ce.CLOCKWISE};Oa.COUNTERCLOCKWISE.get=function(){return 1};Oa.LEFT.get=function(){return ce.COUNTERCLOCKWISE};Oa.COLLINEAR.get=function(){return 0};Oa.STRAIGHT.get=function(){return ce.COLLINEAR};Object.defineProperties(ce,Oa);var Us=function(){};Us.prototype.filter=function(e){};Us.prototype.interfaces_=function(){return[]};Us.prototype.getClass=function(){return Us};var $e=function(){var e=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=e,this._SRID=e.getSRID()},Ss={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};$e.prototype.isGeometryCollection=function(){return this.getSortIndex()===$e.SORTINDEX_GEOMETRYCOLLECTION};$e.prototype.getFactory=function(){return this._factory};$e.prototype.getGeometryN=function(e){return this};$e.prototype.getArea=function(){return 0};$e.prototype.isRectangle=function(){return!1};$e.prototype.equals=function(){if(arguments[0]instanceof $e){var e=arguments[0];return e===null?!1:this.equalsTopo(e)}else if(arguments[0]instanceof Object){var t=arguments[0];if(!(t instanceof $e))return!1;var n=t;return this.equalsExact(n)}};$e.prototype.equalsExact=function(e){return this===e||this.equalsExact(e,0)};$e.prototype.geometryChanged=function(){this.apply($e.geometryChangedFilter)};$e.prototype.geometryChangedAction=function(){this._envelope=null};$e.prototype.equalsNorm=function(e){return e===null?!1:this.norm().equalsExact(e.norm())};$e.prototype.getLength=function(){return 0};$e.prototype.getNumGeometries=function(){return 1};$e.prototype.compareTo=function(){if(arguments.length===1){var e=arguments[0],t=e;return this.getSortIndex()!==t.getSortIndex()?this.getSortIndex()-t.getSortIndex():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(e)}else if(arguments.length===2){var n=arguments[0],r=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,r)}};$e.prototype.getUserData=function(){return this._userData};$e.prototype.getSRID=function(){return this._SRID};$e.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())};$e.prototype.checkNotGeometryCollection=function(e){if(e.getSortIndex()===$e.SORTINDEX_GEOMETRYCOLLECTION)throw new Nn("This method does not support GeometryCollection arguments")};$e.prototype.equal=function(e,t,n){return n===0?e.equals(t):e.distance(t)<=n};$e.prototype.norm=function(){var e=this.copy();return e.normalize(),e};$e.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()};$e.prototype.getEnvelopeInternal=function(){return this._envelope===null&&(this._envelope=this.computeEnvelopeInternal()),new Ce(this._envelope)};$e.prototype.setSRID=function(e){this._SRID=e};$e.prototype.setUserData=function(e){this._userData=e};$e.prototype.compare=function(e,t){for(var n=e.iterator(),r=t.iterator();n.hasNext()&&r.hasNext();){var s=n.next(),o=r.next(),l=s.compareTo(o);if(l!==0)return l}return n.hasNext()?1:r.hasNext()?-1:0};$e.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()};$e.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===$e.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===$e.SORTINDEX_MULTIPOINT||this.getSortIndex()===$e.SORTINDEX_MULTILINESTRING||this.getSortIndex()===$e.SORTINDEX_MULTIPOLYGON};$e.prototype.interfaces_=function(){return[sc,_r,Cr]};$e.prototype.getClass=function(){return $e};$e.hasNonEmptyElements=function(e){for(var t=0;t<e.length;t++)if(!e[t].isEmpty())return!0;return!1};$e.hasNullElements=function(e){for(var t=0;t<e.length;t++)if(e[t]===null)return!0;return!1};Ss.serialVersionUID.get=function(){return 8763622679187377e3};Ss.SORTINDEX_POINT.get=function(){return 0};Ss.SORTINDEX_MULTIPOINT.get=function(){return 1};Ss.SORTINDEX_LINESTRING.get=function(){return 2};Ss.SORTINDEX_LINEARRING.get=function(){return 3};Ss.SORTINDEX_MULTILINESTRING.get=function(){return 4};Ss.SORTINDEX_POLYGON.get=function(){return 5};Ss.SORTINDEX_MULTIPOLYGON.get=function(){return 6};Ss.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7};Ss.geometryChangedFilter.get=function(){return Rp};Object.defineProperties($e,Ss);var Rp=function(){};Rp.interfaces_=function(){return[Us]};Rp.filter=function(e){e.geometryChangedAction()};var vs=function(){};vs.prototype.filter=function(e){};vs.prototype.interfaces_=function(){return[]};vs.prototype.getClass=function(){return vs};var br=function(){},Zs={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};br.prototype.isInBoundary=function(e){};br.prototype.interfaces_=function(){return[]};br.prototype.getClass=function(){return br};Zs.Mod2BoundaryNodeRule.get=function(){return hl};Zs.EndPointBoundaryNodeRule.get=function(){return cl};Zs.MultiValentEndPointBoundaryNodeRule.get=function(){return dl};Zs.MonoValentEndPointBoundaryNodeRule.get=function(){return pl};Zs.MOD2_BOUNDARY_RULE.get=function(){return new hl};Zs.ENDPOINT_BOUNDARY_RULE.get=function(){return new cl};Zs.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new dl};Zs.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new pl};Zs.OGC_SFS_BOUNDARY_RULE.get=function(){return br.MOD2_BOUNDARY_RULE};Object.defineProperties(br,Zs);var hl=function(){};hl.prototype.isInBoundary=function(e){return e%2===1};hl.prototype.interfaces_=function(){return[br]};hl.prototype.getClass=function(){return hl};var cl=function(){};cl.prototype.isInBoundary=function(e){return e>0};cl.prototype.interfaces_=function(){return[br]};cl.prototype.getClass=function(){return cl};var dl=function(){};dl.prototype.isInBoundary=function(e){return e>1};dl.prototype.interfaces_=function(){return[br]};dl.prototype.getClass=function(){return dl};var pl=function(){};pl.prototype.isInBoundary=function(e){return e===1};pl.prototype.interfaces_=function(){return[br]};pl.prototype.getClass=function(){return pl};var Xn=function(){};Xn.prototype.add=function(){};Xn.prototype.addAll=function(){};Xn.prototype.isEmpty=function(){};Xn.prototype.iterator=function(){};Xn.prototype.size=function(){};Xn.prototype.toArray=function(){};Xn.prototype.remove=function(){};function $p(i){this.message=i||""}$p.prototype=new Error;$p.prototype.name="IndexOutOfBoundsException";var Ol=function(){};Ol.prototype.hasNext=function(){};Ol.prototype.next=function(){};Ol.prototype.remove=function(){};var Er=function(i){function e(){i.apply(this,arguments)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(Xn);function Pl(i){this.message=i||""}Pl.prototype=new Error;Pl.prototype.name="NoSuchElementException";var le=function(i){function e(){i.call(this),this.array_=[],arguments[0]instanceof Xn&&this.addAll(arguments[0])}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[i,Xn]},e.prototype.add=function(n){return arguments.length===1?this.array_.push(n):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(n){for(var r=this,s=n.iterator();s.hasNext();)r.add(s.next());return!0},e.prototype.set=function(n,r){var s=this.array_[n];return this.array_[n]=r,s},e.prototype.iterator=function(){return new gw(this)},e.prototype.get=function(n){if(n<0||n>=this.size())throw new $p;return this.array_[n]},e.prototype.isEmpty=function(){return this.array_.length===0},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var n=this,r=[],s=0,o=this.array_.length;s<o;s++)r.push(n.array_[s]);return r},e.prototype.remove=function(n){for(var r=this,s=!1,o=0,l=this.array_.length;o<l;o++)if(r.array_[o]===n){r.array_.splice(o,1),s=!0;break}return s},e}(Er),gw=function(i){function e(t){i.call(this),this.arrayList_=t,this.position_=0}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new Pl;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(n){return this.arrayList_.set(this.position_-1,n)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(Ol),$u=function(i){function e(){if(i.call(this),arguments.length!==0){if(arguments.length===1){var n=arguments[0];this.ensureCapacity(n.length),this.add(n,!0)}else if(arguments.length===2){var r=arguments[0],s=arguments[1];this.ensureCapacity(r.length),this.add(r,s)}}}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={coordArrayType:{configurable:!0}};return t.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(r){return this.get(r)},e.prototype.addAll=function(){var r=this;if(arguments.length===2){for(var s=arguments[0],o=arguments[1],l=!1,u=s.iterator();u.hasNext();)r.add(u.next(),o),l=!0;return l}else return i.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var r=this,s=i.prototype.clone.call(this),o=0;o<this.size();o++)s.add(o,r.get(o).copy());return s},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){var r=this;if(arguments.length===1){var s=arguments[0];i.prototype.add.call(this,s)}else if(arguments.length===2){if(arguments[0]instanceof Array&&typeof arguments[1]=="boolean"){var o=arguments[0],l=arguments[1];return this.add(o,l,!0),!0}else if(arguments[0]instanceof j&&typeof arguments[1]=="boolean"){var u=arguments[0],c=arguments[1];if(!c&&this.size()>=1){var p=this.get(this.size()-1);if(p.equals2D(u))return null}i.prototype.add.call(this,u)}else if(arguments[0]instanceof Object&&typeof arguments[1]=="boolean"){var d=arguments[0],f=arguments[1];return this.add(d,f),!0}}else if(arguments.length===3){if(typeof arguments[2]=="boolean"&&arguments[0]instanceof Array&&typeof arguments[1]=="boolean"){var g=arguments[0],v=arguments[1],w=arguments[2];if(w)for(var A=0;A<g.length;A++)r.add(g[A],v);else for(var C=g.length-1;C>=0;C--)r.add(g[C],v);return!0}else if(typeof arguments[2]=="boolean"&&Number.isInteger(arguments[0])&&arguments[1]instanceof j){var m=arguments[0],y=arguments[1],x=arguments[2];if(!x){var k=this.size();if(k>0){if(m>0){var q=this.get(m-1);if(q.equals2D(y))return null}if(m<k){var I=this.get(m);if(I.equals2D(y))return null}}}i.prototype.add.call(this,m,y)}}else if(arguments.length===4){var S=arguments[0],$=arguments[1],B=arguments[2],D=arguments[3],N=1;B>D&&(N=-1);for(var O=B;O!==D;O+=N)r.add(S[O],$);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new j(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,t),e}(le),Pt=function(){},ac={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};ac.ForwardComparator.get=function(){return hu};ac.BidirectionalComparator.get=function(){return fl};ac.coordArrayType.get=function(){return new Array(0).fill(null)};Pt.prototype.interfaces_=function(){return[]};Pt.prototype.getClass=function(){return Pt};Pt.isRing=function(e){return!(e.length<4||!e[0].equals2D(e[e.length-1]))};Pt.ptNotInList=function(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(Pt.indexOf(r,t)<0)return r}return null};Pt.scroll=function(e,t){var n=Pt.indexOf(t,e);if(n<0)return null;var r=new Array(e.length).fill(null);hi.arraycopy(e,n,r,0,e.length-n),hi.arraycopy(e,0,r,e.length-n,n),hi.arraycopy(r,0,e,0,e.length)};Pt.equals=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1];if(e===t)return!0;if(e===null||t===null||e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(!e[n].equals(t[n]))return!1;return!0}else if(arguments.length===3){var r=arguments[0],s=arguments[1],o=arguments[2];if(r===s)return!0;if(r===null||s===null||r.length!==s.length)return!1;for(var l=0;l<r.length;l++)if(o.compare(r[l],s[l])!==0)return!1;return!0}};Pt.intersection=function(e,t){for(var n=new $u,r=0;r<e.length;r++)t.intersects(e[r])&&n.add(e[r],!0);return n.toCoordinateArray()};Pt.hasRepeatedPoints=function(e){for(var t=1;t<e.length;t++)if(e[t-1].equals(e[t]))return!0;return!1};Pt.removeRepeatedPoints=function(e){if(!Pt.hasRepeatedPoints(e))return e;var t=new $u(e,!1);return t.toCoordinateArray()};Pt.reverse=function(e){for(var t=e.length-1,n=Math.trunc(t/2),r=0;r<=n;r++){var s=e[r];e[r]=e[t-r],e[t-r]=s}};Pt.removeNull=function(e){for(var t=0,n=0;n<e.length;n++)e[n]!==null&&t++;var r=new Array(t).fill(null);if(t===0)return r;for(var s=0,o=0;o<e.length;o++)e[o]!==null&&(r[s++]=e[o]);return r};Pt.copyDeep=function(){if(arguments.length===1){for(var e=arguments[0],t=new Array(e.length).fill(null),n=0;n<e.length;n++)t[n]=new j(e[n]);return t}else if(arguments.length===5)for(var r=arguments[0],s=arguments[1],o=arguments[2],l=arguments[3],u=arguments[4],c=0;c<u;c++)o[l+c]=new j(r[s+c])};Pt.isEqualReversed=function(e,t){for(var n=0;n<e.length;n++){var r=e[n],s=t[e.length-n-1];if(r.compareTo(s)!==0)return!1}return!0};Pt.envelope=function(e){for(var t=new Ce,n=0;n<e.length;n++)t.expandToInclude(e[n]);return t};Pt.toCoordinateArray=function(e){return e.toArray(Pt.coordArrayType)};Pt.atLeastNCoordinatesOrNothing=function(e,t){return t.length>=e?t:[]};Pt.indexOf=function(e,t){for(var n=0;n<t.length;n++)if(e.equals(t[n]))return n;return-1};Pt.increasingDirection=function(e){for(var t=0;t<Math.trunc(e.length/2);t++){var n=e.length-1-t,r=e[t].compareTo(e[n]);if(r!==0)return r}return 1};Pt.compare=function(e,t){for(var n=0;n<e.length&&n<t.length;){var r=e[n].compareTo(t[n]);if(r!==0)return r;n++}return n<t.length?-1:n<e.length?1:0};Pt.minCoordinate=function(e){for(var t=null,n=0;n<e.length;n++)(t===null||t.compareTo(e[n])>0)&&(t=e[n]);return t};Pt.extract=function(e,t,n){t=or.clamp(t,0,e.length),n=or.clamp(n,-1,e.length);var r=n-t+1;n<0&&(r=0),t>=e.length&&(r=0),n<t&&(r=0);var s=new Array(r).fill(null);if(r===0)return s;for(var o=0,l=t;l<=n;l++)s[o++]=e[l];return s};Object.defineProperties(Pt,ac);var hu=function(){};hu.prototype.compare=function(e,t){var n=e,r=t;return Pt.compare(n,r)};hu.prototype.interfaces_=function(){return[ll]};hu.prototype.getClass=function(){return hu};var fl=function(){};fl.prototype.compare=function(e,t){var n=e,r=t;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(n.length===0)return 0;var s=Pt.compare(n,r),o=Pt.isEqualReversed(n,r);return o?0:s};fl.prototype.OLDcompare=function(e,t){var n=e,r=t;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(n.length===0)return 0;for(var s=Pt.increasingDirection(n),o=Pt.increasingDirection(r),l=s>0?0:n.length-1,u=o>0?0:n.length-1,c=0;c<n.length;c++){var p=n[l].compareTo(r[u]);if(p!==0)return p;l+=s,u+=o}return 0};fl.prototype.interfaces_=function(){return[ll]};fl.prototype.getClass=function(){return fl};var Pa=function(){};Pa.prototype.get=function(){};Pa.prototype.put=function(){};Pa.prototype.size=function(){};Pa.prototype.values=function(){};Pa.prototype.entrySet=function(){};var mw=function(i){function e(){i.apply(this,arguments)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e}(Pa);function Nu(i){this.message=i||""}Nu.prototype=new Error;Nu.prototype.name="OperationNotSupported";function lc(){}lc.prototype=new Xn;lc.prototype.contains=function(){};var Np=function(i){function e(){i.call(this),this.array_=[],arguments[0]instanceof Xn&&this.addAll(arguments[0])}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.contains=function(n){for(var r=this,s=0,o=this.array_.length;s<o;s++){var l=r.array_[s];if(l===n)return!0}return!1},e.prototype.add=function(n){return this.contains(n)?!1:(this.array_.push(n),!0)},e.prototype.addAll=function(n){for(var r=this,s=n.iterator();s.hasNext();)r.add(s.next());return!0},e.prototype.remove=function(n){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return this.array_.length===0},e.prototype.toArray=function(){for(var n=this,r=[],s=0,o=this.array_.length;s<o;s++)r.push(n.array_[s]);return r},e.prototype.iterator=function(){return new yw(this)},e}(lc),yw=function(i){function e(t){i.call(this),this.hashSet_=t,this.position_=0}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new Pl;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new Nu},e}(Ol),Ps=0,Eo=1;function Ig(i){return i===null?Ps:i.color}function kn(i){return i===null?null:i.parent}function Ds(i,e){i!==null&&(i.color=e)}function Qc(i){return i===null?null:i.left}function Dg(i){return i===null?null:i.right}function yi(){this.root_=null,this.size_=0}yi.prototype=new mw;yi.prototype.get=function(i){for(var e=this.root_;e!==null;){var t=i.compareTo(e.key);if(t<0)e=e.left;else if(t>0)e=e.right;else return e.value}return null};yi.prototype.put=function(i,e){if(this.root_===null)return this.root_={key:i,value:e,left:null,right:null,parent:null,color:Ps,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var t=this.root_,n,r;do if(n=t,r=i.compareTo(t.key),r<0)t=t.left;else if(r>0)t=t.right;else{var s=t.value;return t.value=e,s}while(t!==null);var o={key:i,left:null,right:null,value:e,parent:n,color:Ps,getValue:function(){return this.value},getKey:function(){return this.key}};return r<0?n.left=o:n.right=o,this.fixAfterInsertion(o),this.size_++,null};yi.prototype.fixAfterInsertion=function(i){var e=this;for(i.color=Eo;i!=null&&i!==this.root_&&i.parent.color===Eo;)if(kn(i)===Qc(kn(kn(i)))){var t=Dg(kn(kn(i)));Ig(t)===Eo?(Ds(kn(i),Ps),Ds(t,Ps),Ds(kn(kn(i)),Eo),i=kn(kn(i))):(i===Dg(kn(i))&&(i=kn(i),e.rotateLeft(i)),Ds(kn(i),Ps),Ds(kn(kn(i)),Eo),e.rotateRight(kn(kn(i))))}else{var n=Qc(kn(kn(i)));Ig(n)===Eo?(Ds(kn(i),Ps),Ds(n,Ps),Ds(kn(kn(i)),Eo),i=kn(kn(i))):(i===Qc(kn(i))&&(i=kn(i),e.rotateRight(i)),Ds(kn(i),Ps),Ds(kn(kn(i)),Eo),e.rotateLeft(kn(kn(i))))}this.root_.color=Ps};yi.prototype.values=function(){var i=new le,e=this.getFirstEntry();if(e!==null)for(i.add(e.value);(e=yi.successor(e))!==null;)i.add(e.value);return i};yi.prototype.entrySet=function(){var i=new Np,e=this.getFirstEntry();if(e!==null)for(i.add(e);(e=yi.successor(e))!==null;)i.add(e);return i};yi.prototype.rotateLeft=function(i){if(i!=null){var e=i.right;i.right=e.left,e.left!=null&&(e.left.parent=i),e.parent=i.parent,i.parent===null?this.root_=e:i.parent.left===i?i.parent.left=e:i.parent.right=e,e.left=i,i.parent=e}};yi.prototype.rotateRight=function(i){if(i!=null){var e=i.left;i.left=e.right,e.right!=null&&(e.right.parent=i),e.parent=i.parent,i.parent===null?this.root_=e:i.parent.right===i?i.parent.right=e:i.parent.left=e,e.right=i,i.parent=e}};yi.prototype.getFirstEntry=function(){var i=this.root_;if(i!=null)for(;i.left!=null;)i=i.left;return i};yi.successor=function(i){if(i===null)return null;if(i.right!==null){for(var e=i.right;e.left!==null;)e=e.left;return e}else{for(var t=i.parent,n=i;t!==null&&n===t.right;)n=t,t=t.parent;return t}};yi.prototype.size=function(){return this.size_};var cu=function(){};cu.prototype.interfaces_=function(){return[]};cu.prototype.getClass=function(){return cu};function F0(){}F0.prototype=new lc;function Yr(){this.array_=[],arguments[0]instanceof Xn&&this.addAll(arguments[0])}Yr.prototype=new F0;Yr.prototype.contains=function(i){for(var e=this,t=0,n=this.array_.length;t<n;t++){var r=e.array_[t];if(r.compareTo(i)===0)return!0}return!1};Yr.prototype.add=function(i){var e=this;if(this.contains(i))return!1;for(var t=0,n=this.array_.length;t<n;t++){var r=e.array_[t];if(r.compareTo(i)===1)return e.array_.splice(t,0,i),!0}return this.array_.push(i),!0};Yr.prototype.addAll=function(i){for(var e=this,t=i.iterator();t.hasNext();)e.add(t.next());return!0};Yr.prototype.remove=function(i){throw new Nu};Yr.prototype.size=function(){return this.array_.length};Yr.prototype.isEmpty=function(){return this.array_.length===0};Yr.prototype.toArray=function(){for(var i=this,e=[],t=0,n=this.array_.length;t<n;t++)e.push(i.array_[t]);return e};Yr.prototype.iterator=function(){return new uc(this)};var uc=function(i){this.treeSet_=i,this.position_=0};uc.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new Pl;return this.treeSet_.array_[this.position_++]};uc.prototype.hasNext=function(){return this.position_<this.treeSet_.size()};uc.prototype.remove=function(){throw new Nu};var Fo=function(){};Fo.sort=function(){var e=arguments[0],t,n,r,s;if(arguments.length===1)s=function(l,u){return l.compareTo(u)},e.sort(s);else if(arguments.length===2)r=arguments[1],s=function(l,u){return r.compare(l,u)},e.sort(s);else if(arguments.length===3){n=e.slice(arguments[1],arguments[2]),n.sort();var o=e.slice(0,arguments[1]).concat(n,e.slice(arguments[2],e.length));for(e.splice(0,e.length),t=0;t<o.length;t++)e.push(o[t])}else if(arguments.length===4)for(n=e.slice(arguments[1],arguments[2]),r=arguments[3],s=function(l,u){return r.compare(l,u)},n.sort(s),o=e.slice(0,arguments[1]).concat(n,e.slice(arguments[2],e.length)),e.splice(0,e.length),t=0;t<o.length;t++)e.push(o[t])};Fo.asList=function(e){for(var t=new le,n=0,r=e.length;n<r;n++)t.add(e[n]);return t};var gn=function(){},Fr={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Fr.P.get=function(){return 0};Fr.L.get=function(){return 1};Fr.A.get=function(){return 2};Fr.FALSE.get=function(){return-1};Fr.TRUE.get=function(){return-2};Fr.DONTCARE.get=function(){return-3};Fr.SYM_FALSE.get=function(){return"F"};Fr.SYM_TRUE.get=function(){return"T"};Fr.SYM_DONTCARE.get=function(){return"*"};Fr.SYM_P.get=function(){return"0"};Fr.SYM_L.get=function(){return"1"};Fr.SYM_A.get=function(){return"2"};gn.prototype.interfaces_=function(){return[]};gn.prototype.getClass=function(){return gn};gn.toDimensionSymbol=function(e){switch(e){case gn.FALSE:return gn.SYM_FALSE;case gn.TRUE:return gn.SYM_TRUE;case gn.DONTCARE:return gn.SYM_DONTCARE;case gn.P:return gn.SYM_P;case gn.L:return gn.SYM_L;case gn.A:return gn.SYM_A}throw new Nn("Unknown dimension value: "+e)};gn.toDimensionValue=function(e){switch(uu.toUpperCase(e)){case gn.SYM_FALSE:return gn.FALSE;case gn.SYM_TRUE:return gn.TRUE;case gn.SYM_DONTCARE:return gn.DONTCARE;case gn.SYM_P:return gn.P;case gn.SYM_L:return gn.L;case gn.SYM_A:return gn.A}throw new Nn("Unknown dimension symbol: "+e)};Object.defineProperties(gn,Fr);var Xr=function(){};Xr.prototype.filter=function(e){};Xr.prototype.interfaces_=function(){return[]};Xr.prototype.getClass=function(){return Xr};var Rr=function(){};Rr.prototype.filter=function(e,t){};Rr.prototype.isDone=function(){};Rr.prototype.isGeometryChanged=function(){};Rr.prototype.interfaces_=function(){return[]};Rr.prototype.getClass=function(){return Rr};var qi=function(i){function e(n,r){if(i.call(this,r),this._geometries=n||[],i.hasNullElements(this._geometries))throw new Nn("geometries must not contain null elements")}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var r=this,s=new Ce,o=0;o<this._geometries.length;o++)s.expandToInclude(r._geometries[o].getEnvelopeInternal());return s},e.prototype.getGeometryN=function(r){return this._geometries[r]},e.prototype.getSortIndex=function(){return i.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var r=this,s=new Array(this.getNumPoints()).fill(null),o=-1,l=0;l<this._geometries.length;l++)for(var u=r._geometries[l].getCoordinates(),c=0;c<u.length;c++)o++,s[o]=u[c];return s},e.prototype.getArea=function(){for(var r=this,s=0,o=0;o<this._geometries.length;o++)s+=r._geometries[o].getArea();return s},e.prototype.equalsExact=function(){var r=this;if(arguments.length===2){var s=arguments[0],o=arguments[1];if(!this.isEquivalentClass(s))return!1;var l=s;if(this._geometries.length!==l._geometries.length)return!1;for(var u=0;u<this._geometries.length;u++)if(!r._geometries[u].equalsExact(l._geometries[u],o))return!1;return!0}else return i.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var r=this,s=0;s<this._geometries.length;s++)r._geometries[s].normalize();Fo.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var r=this,s=gn.FALSE,o=0;o<this._geometries.length;o++)s=Math.max(s,r._geometries[o].getBoundaryDimension());return s},e.prototype.getDimension=function(){for(var r=this,s=gn.FALSE,o=0;o<this._geometries.length;o++)s=Math.max(s,r._geometries[o].getDimension());return s},e.prototype.getLength=function(){for(var r=this,s=0,o=0;o<this._geometries.length;o++)s+=r._geometries[o].getLength();return s},e.prototype.getNumPoints=function(){for(var r=this,s=0,o=0;o<this._geometries.length;o++)s+=r._geometries[o].getNumPoints();return s},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var r=this,s=this._geometries.length,o=new Array(s).fill(null),l=0;l<this._geometries.length;l++)o[l]=r._geometries[l].reverse();return this.getFactory().createGeometryCollection(o)},e.prototype.compareToSameClass=function(){var r=this;if(arguments.length===1){var s=arguments[0],o=new Yr(Fo.asList(this._geometries)),l=new Yr(Fo.asList(s._geometries));return this.compare(o,l)}else if(arguments.length===2){for(var u=arguments[0],c=arguments[1],p=u,d=this.getNumGeometries(),f=p.getNumGeometries(),g=0;g<d&&g<f;){var v=r.getGeometryN(g),w=p.getGeometryN(g),A=v.compareToSameClass(w,c);if(A!==0)return A;g++}return g<d?1:g<f?-1:0}},e.prototype.apply=function(){var r=this;if(Me(arguments[0],vs))for(var s=arguments[0],o=0;o<this._geometries.length;o++)r._geometries[o].apply(s);else if(Me(arguments[0],Rr)){var l=arguments[0];if(this._geometries.length===0)return null;for(var u=0;u<this._geometries.length&&(r._geometries[u].apply(l),!l.isDone());u++);l.isGeometryChanged()&&this.geometryChanged()}else if(Me(arguments[0],Xr)){var c=arguments[0];c.filter(this);for(var p=0;p<this._geometries.length;p++)r._geometries[p].apply(c)}else if(Me(arguments[0],Us)){var d=arguments[0];d.filter(this);for(var f=0;f<this._geometries.length;f++)r._geometries[f].apply(d)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),nt.shouldNeverReachHere(),null},e.prototype.clone=function(){var r=this,s=i.prototype.clone.call(this);s._geometries=new Array(this._geometries.length).fill(null);for(var o=0;o<this._geometries.length;o++)s._geometries[o]=r._geometries[o].clone();return s},e.prototype.getGeometryType=function(){return"GeometryCollection"},e.prototype.copy=function(){for(var r=this,s=new Array(this._geometries.length).fill(null),o=0;o<s.length;o++)s[o]=r._geometries[o].copy();return new e(s,this._factory)},e.prototype.isEmpty=function(){for(var r=this,s=0;s<this._geometries.length;s++)if(!r._geometries[s].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},t.serialVersionUID.get=function(){return-5694727726395021e3},Object.defineProperties(e,t),e}($e),zo=function(i){function e(){i.apply(this,arguments)}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return $e.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(arguments.length===2){var r=arguments[0],s=arguments[1];return this.isEquivalentClass(r)?i.prototype.equalsExact.call(this,r,s):!1}else return i.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?gn.FALSE:0},e.prototype.isClosed=function(){var r=this;if(this.isEmpty())return!1;for(var s=0;s<this._geometries.length;s++)if(!r._geometries[s].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var r=this,s=this._geometries.length,o=new Array(s).fill(null),l=0;l<this._geometries.length;l++)o[s-1-l]=r._geometries[l].reverse();return this.getFactory().createMultiLineString(o)},e.prototype.getBoundary=function(){return new fr(this).getBoundary()},e.prototype.getGeometryType=function(){return"MultiLineString"},e.prototype.copy=function(){for(var r=this,s=new Array(this._geometries.length).fill(null),o=0;o<s.length;o++)s[o]=r._geometries[o].copy();return new e(s,this._factory)},e.prototype.interfaces_=function(){return[cu]},e.prototype.getClass=function(){return e},t.serialVersionUID.get=function(){return 8166665132445434e3},Object.defineProperties(e,t),e}(qi),fr=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,arguments.length===1){var e=arguments[0],t=br.MOD2_BOUNDARY_RULE;this._geom=e,this._geomFact=e.getFactory(),this._bnRule=t}else if(arguments.length===2){var n=arguments[0],r=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=r}};fr.prototype.boundaryMultiLineString=function(e){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var t=this.computeBoundaryCoordinates(e);return t.length===1?this._geomFact.createPoint(t[0]):this._geomFact.createMultiPointFromCoords(t)};fr.prototype.getBoundary=function(){return this._geom instanceof Pn?this.boundaryLineString(this._geom):this._geom instanceof zo?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()};fr.prototype.boundaryLineString=function(e){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(e.isClosed()){var t=this._bnRule.isInBoundary(2);return t?e.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([e.getStartPoint(),e.getEndPoint()])};fr.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()};fr.prototype.computeBoundaryCoordinates=function(e){var t=this,n=new le;this._endpointMap=new yi;for(var r=0;r<e.getNumGeometries();r++){var s=e.getGeometryN(r);s.getNumPoints()!==0&&(t.addEndpoint(s.getCoordinateN(0)),t.addEndpoint(s.getCoordinateN(s.getNumPoints()-1)))}for(var o=this._endpointMap.entrySet().iterator();o.hasNext();){var l=o.next(),u=l.getValue(),c=u.count;t._bnRule.isInBoundary(c)&&n.add(l.getKey())}return Pt.toCoordinateArray(n)};fr.prototype.addEndpoint=function(e){var t=this._endpointMap.get(e);t===null&&(t=new Ih,this._endpointMap.put(e,t)),t.count++};fr.prototype.interfaces_=function(){return[]};fr.prototype.getClass=function(){return fr};fr.getBoundary=function(){if(arguments.length===1){var e=arguments[0],t=new fr(e);return t.getBoundary()}else if(arguments.length===2){var n=arguments[0],r=arguments[1],s=new fr(n,r);return s.getBoundary()}};var Ih=function(){this.count=null};Ih.prototype.interfaces_=function(){return[]};Ih.prototype.getClass=function(){return Ih};function bw(){}function vw(){}var ww=function(){};function _w(){}function Cw(){}function Tw(){}var gr=function(){},Lp={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};gr.prototype.interfaces_=function(){return[]};gr.prototype.getClass=function(){return gr};gr.chars=function(e,t){for(var n=new Array(t).fill(null),r=0;r<t;r++)n[r]=e;return String(n)};gr.getStackTrace=function(){if(arguments.length===1){var e=arguments[0],t=new _w,n=new bw;return e.printStackTrace(n),t.toString()}else if(arguments.length===2){var r=arguments[0],s=arguments[1],o="";new vw(gr.getStackTrace(r));for(var l=new Tw,u=0;u<s;u++)try{o+=l.readLine()+gr.NEWLINE}catch(c){if(c instanceof Cw)nt.shouldNeverReachHere();else throw c}finally{}return o}};gr.split=function(e,t){for(var n=t.length,r=new le,s=""+e,o=s.indexOf(t);o>=0;){var l=s.substring(0,o);r.add(l),s=s.substring(o+n),o=s.indexOf(t)}s.length>0&&r.add(s);for(var u=new Array(r.size()).fill(null),c=0;c<u.length;c++)u[c]=r.get(c);return u};gr.toString=function(){if(arguments.length===1){var e=arguments[0];return gr.SIMPLE_ORDINATE_FORMAT.format(e)}};gr.spaces=function(e){return gr.chars(" ",e)};Lp.NEWLINE.get=function(){return hi.getProperty("line.separator")};Lp.SIMPLE_ORDINATE_FORMAT.get=function(){return new ww};Object.defineProperties(gr,Lp);var Wn=function(){};Wn.prototype.interfaces_=function(){return[]};Wn.prototype.getClass=function(){return Wn};Wn.copyCoord=function(e,t,n,r){for(var s=Math.min(e.getDimension(),n.getDimension()),o=0;o<s;o++)n.setOrdinate(r,o,e.getOrdinate(t,o))};Wn.isRing=function(e){var t=e.size();return t===0?!0:t<=3?!1:e.getOrdinate(0,tn.X)===e.getOrdinate(t-1,tn.X)&&e.getOrdinate(0,tn.Y)===e.getOrdinate(t-1,tn.Y)};Wn.isEqual=function(e,t){var n=e.size(),r=t.size();if(n!==r)return!1;for(var s=Math.min(e.getDimension(),t.getDimension()),o=0;o<n;o++)for(var l=0;l<s;l++){var u=e.getOrdinate(o,l),c=t.getOrdinate(o,l);if(e.getOrdinate(o,l)!==t.getOrdinate(o,l)&&!(Ve.isNaN(u)&&Ve.isNaN(c)))return!1}return!0};Wn.extend=function(e,t,n){var r=e.create(n,t.getDimension()),s=t.size();if(Wn.copy(t,0,r,0,s),s>0)for(var o=s;o<n;o++)Wn.copy(t,s-1,r,o,1);return r};Wn.reverse=function(e){for(var t=e.size()-1,n=Math.trunc(t/2),r=0;r<=n;r++)Wn.swap(e,r,t-r)};Wn.swap=function(e,t,n){if(t===n)return null;for(var r=0;r<e.getDimension();r++){var s=e.getOrdinate(t,r);e.setOrdinate(t,r,e.getOrdinate(n,r)),e.setOrdinate(n,r,s)}};Wn.copy=function(e,t,n,r,s){for(var o=0;o<s;o++)Wn.copyCoord(e,t+o,n,r+o)};Wn.toString=function(){if(arguments.length===1){var e=arguments[0],t=e.size();if(t===0)return"()";var n=e.getDimension(),r=new ss;r.append("(");for(var s=0;s<t;s++){s>0&&r.append(" ");for(var o=0;o<n;o++)o>0&&r.append(","),r.append(gr.toString(e.getOrdinate(s,o)))}return r.append(")"),r.toString()}};Wn.ensureValidRing=function(e,t){var n=t.size();if(n===0)return t;if(n<=3)return Wn.createClosedRing(e,t,4);var r=t.getOrdinate(0,tn.X)===t.getOrdinate(n-1,tn.X)&&t.getOrdinate(0,tn.Y)===t.getOrdinate(n-1,tn.Y);return r?t:Wn.createClosedRing(e,t,n+1)};Wn.createClosedRing=function(e,t,n){var r=e.create(n,t.getDimension()),s=t.size();Wn.copy(t,0,r,0,s);for(var o=s;o<n;o++)Wn.copy(t,0,r,o,1);return r};var Pn=function(i){function e(n,r){i.call(this,r),this._points=null,this.init(n)}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new Ce:this._points.expandEnvelope(new Ce)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return i.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){var r=this;if(arguments.length===2){var s=arguments[0],o=arguments[1];if(!this.isEquivalentClass(s))return!1;var l=s;if(this._points.size()!==l._points.size())return!1;for(var u=0;u<this._points.size();u++)if(!r.equal(r._points.getCoordinate(u),l._points.getCoordinate(u),o))return!1;return!0}else return i.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var r=this,s=0;s<Math.trunc(this._points.size()/2);s++){var o=r._points.size()-1-s;if(!r._points.getCoordinate(s).equals(r._points.getCoordinate(o)))return r._points.getCoordinate(s).compareTo(r._points.getCoordinate(o))>0&&Wn.reverse(r._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?gn.FALSE:0},e.prototype.isClosed=function(){return this.isEmpty()?!1:this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return ce.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var r=this._points.copy();Wn.reverse(r);var s=this.getFactory().createLineString(r);return s},e.prototype.compareToSameClass=function(){var r=this;if(arguments.length===1){for(var s=arguments[0],o=s,l=0,u=0;l<this._points.size()&&u<o._points.size();){var c=r._points.getCoordinate(l).compareTo(o._points.getCoordinate(u));if(c!==0)return c;l++,u++}return l<this._points.size()?1:u<o._points.size()?-1:0}else if(arguments.length===2){var p=arguments[0],d=arguments[1],f=p;return d.compare(this._points,f._points)}},e.prototype.apply=function(){var r=this;if(Me(arguments[0],vs))for(var s=arguments[0],o=0;o<this._points.size();o++)s.filter(r._points.getCoordinate(o));else if(Me(arguments[0],Rr)){var l=arguments[0];if(this._points.size()===0)return null;for(var u=0;u<this._points.size()&&(l.filter(r._points,u),!l.isDone());u++);l.isGeometryChanged()&&this.geometryChanged()}else if(Me(arguments[0],Xr)){var c=arguments[0];c.filter(this)}else if(Me(arguments[0],Us)){var p=arguments[0];p.filter(this)}},e.prototype.getBoundary=function(){return new fr(this).getBoundary()},e.prototype.isEquivalentClass=function(r){return r instanceof e},e.prototype.clone=function(){var r=i.prototype.clone.call(this);return r._points=this._points.clone(),r},e.prototype.getCoordinateN=function(r){return this._points.getCoordinate(r)},e.prototype.getGeometryType=function(){return"LineString"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return this._points.size()===0},e.prototype.init=function(r){if(r===null&&(r=this.getFactory().getCoordinateSequenceFactory().create([])),r.size()===1)throw new Nn("Invalid number of points in LineString (found "+r.size()+" - must be 0 or >= 2)");this._points=r},e.prototype.isCoordinate=function(r){for(var s=this,o=0;o<this._points.size();o++)if(s._points.getCoordinate(o).equals(r))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(r){return this.getFactory().createPoint(this._points.getCoordinate(r))},e.prototype.interfaces_=function(){return[cu]},e.prototype.getClass=function(){return e},t.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,t),e}($e),du=function(){};du.prototype.interfaces_=function(){return[]};du.prototype.getClass=function(){return du};var Vi=function(i){function e(n,r){i.call(this,r),this._coordinates=n||null,this.init(this._coordinates)}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new Ce;var r=new Ce;return r.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),r},e.prototype.getSortIndex=function(){return i.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(arguments.length===2){var r=arguments[0],s=arguments[1];return this.isEquivalentClass(r)?this.isEmpty()&&r.isEmpty()?!0:this.isEmpty()!==r.isEmpty()?!1:this.equal(r.getCoordinate(),this.getCoordinate(),s):!1}else return i.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return this._coordinates.size()!==0?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return gn.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(this.getCoordinate()===null)throw new Error("getX called on empty Point");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(arguments.length===1){var r=arguments[0],s=r;return this.getCoordinate().compareTo(s.getCoordinate())}else if(arguments.length===2){var o=arguments[0],l=arguments[1],u=o;return l.compare(this._coordinates,u._coordinates)}},e.prototype.apply=function(){if(Me(arguments[0],vs)){var r=arguments[0];if(this.isEmpty())return null;r.filter(this.getCoordinate())}else if(Me(arguments[0],Rr)){var s=arguments[0];if(this.isEmpty())return null;s.filter(this._coordinates,0),s.isGeometryChanged()&&this.geometryChanged()}else if(Me(arguments[0],Xr)){var o=arguments[0];o.filter(this)}else if(Me(arguments[0],Us)){var l=arguments[0];l.filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var r=i.prototype.clone.call(this);return r._coordinates=this._coordinates.clone(),r},e.prototype.getGeometryType=function(){return"Point"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(this.getCoordinate()===null)throw new Error("getY called on empty Point");return this.getCoordinate().y},e.prototype.isEmpty=function(){return this._coordinates.size()===0},e.prototype.init=function(r){r===null&&(r=this.getFactory().getCoordinateSequenceFactory().create([])),nt.isTrue(r.size()<=1),this._coordinates=r},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[du]},e.prototype.getClass=function(){return e},t.serialVersionUID.get=function(){return 4902022702746615e3},Object.defineProperties(e,t),e}($e),fo=function(){};fo.prototype.interfaces_=function(){return[]};fo.prototype.getClass=function(){return fo};var ei=function(i){function e(n,r,s){if(i.call(this,s),this._shell=null,this._holes=null,n===null&&(n=this.getFactory().createLinearRing()),r===null&&(r=[]),i.hasNullElements(r))throw new Nn("holes must not contain null elements");if(n.isEmpty()&&i.hasNonEmptyElements(r))throw new Nn("shell is empty but holes are not");this._shell=n,this._holes=r}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return i.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){var r=this;if(this.isEmpty())return[];for(var s=new Array(this.getNumPoints()).fill(null),o=-1,l=this._shell.getCoordinates(),u=0;u<l.length;u++)o++,s[o]=l[u];for(var c=0;c<this._holes.length;c++)for(var p=r._holes[c].getCoordinates(),d=0;d<p.length;d++)o++,s[o]=p[d];return s},e.prototype.getArea=function(){var r=this,s=0;s+=Math.abs(ce.signedArea(this._shell.getCoordinateSequence()));for(var o=0;o<this._holes.length;o++)s-=Math.abs(ce.signedArea(r._holes[o].getCoordinateSequence()));return s},e.prototype.isRectangle=function(){if(this.getNumInteriorRing()!==0||this._shell===null||this._shell.getNumPoints()!==5)return!1;for(var r=this._shell.getCoordinateSequence(),s=this.getEnvelopeInternal(),o=0;o<5;o++){var l=r.getX(o);if(!(l===s.getMinX()||l===s.getMaxX()))return!1;var u=r.getY(o);if(!(u===s.getMinY()||u===s.getMaxY()))return!1}for(var c=r.getX(0),p=r.getY(0),d=1;d<=4;d++){var f=r.getX(d),g=r.getY(d),v=f!==c,w=g!==p;if(v===w)return!1;c=f,p=g}return!0},e.prototype.equalsExact=function(){var r=this;if(arguments.length===2){var s=arguments[0],o=arguments[1];if(!this.isEquivalentClass(s))return!1;var l=s,u=this._shell,c=l._shell;if(!u.equalsExact(c,o)||this._holes.length!==l._holes.length)return!1;for(var p=0;p<this._holes.length;p++)if(!r._holes[p].equalsExact(l._holes[p],o))return!1;return!0}else return i.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){var r=this;if(arguments.length===0){this.normalize(this._shell,!0);for(var s=0;s<this._holes.length;s++)r.normalize(r._holes[s],!1);Fo.sort(this._holes)}else if(arguments.length===2){var o=arguments[0],l=arguments[1];if(o.isEmpty())return null;var u=new Array(o.getCoordinates().length-1).fill(null);hi.arraycopy(o.getCoordinates(),0,u,0,u.length);var c=Pt.minCoordinate(o.getCoordinates());Pt.scroll(u,c),hi.arraycopy(u,0,o.getCoordinates(),0,u.length),o.getCoordinates()[u.length]=u[0],ce.isCCW(o.getCoordinates())===l&&Pt.reverse(o.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var r=this,s=0;s+=this._shell.getLength();for(var o=0;o<this._holes.length;o++)s+=r._holes[o].getLength();return s},e.prototype.getNumPoints=function(){for(var r=this,s=this._shell.getNumPoints(),o=0;o<this._holes.length;o++)s+=r._holes[o].getNumPoints();return s},e.prototype.reverse=function(){var r=this,s=this.copy();s._shell=this._shell.copy().reverse(),s._holes=new Array(this._holes.length).fill(null);for(var o=0;o<this._holes.length;o++)s._holes[o]=r._holes[o].copy().reverse();return s},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){var r=this;if(arguments.length===1){var s=arguments[0],o=this._shell,l=s._shell;return o.compareToSameClass(l)}else if(arguments.length===2){var u=arguments[0],c=arguments[1],p=u,d=this._shell,f=p._shell,g=d.compareToSameClass(f,c);if(g!==0)return g;for(var v=this.getNumInteriorRing(),w=p.getNumInteriorRing(),A=0;A<v&&A<w;){var C=r.getInteriorRingN(A),m=p.getInteriorRingN(A),y=C.compareToSameClass(m,c);if(y!==0)return y;A++}return A<v?1:A<w?-1:0}},e.prototype.apply=function(r){var s=this;if(Me(r,vs)){this._shell.apply(r);for(var o=0;o<this._holes.length;o++)s._holes[o].apply(r)}else if(Me(r,Rr)){if(this._shell.apply(r),!r.isDone())for(var l=0;l<this._holes.length&&(s._holes[l].apply(r),!r.isDone());l++);r.isGeometryChanged()&&this.geometryChanged()}else if(Me(r,Xr))r.filter(this);else if(Me(r,Us)){r.filter(this),this._shell.apply(r);for(var u=0;u<this._holes.length;u++)s._holes[u].apply(r)}},e.prototype.getBoundary=function(){var r=this;if(this.isEmpty())return this.getFactory().createMultiLineString();var s=new Array(this._holes.length+1).fill(null);s[0]=this._shell;for(var o=0;o<this._holes.length;o++)s[o+1]=r._holes[o];return s.length<=1?this.getFactory().createLinearRing(s[0].getCoordinateSequence()):this.getFactory().createMultiLineString(s)},e.prototype.clone=function(){var r=this,s=i.prototype.clone.call(this);s._shell=this._shell.clone(),s._holes=new Array(this._holes.length).fill(null);for(var o=0;o<this._holes.length;o++)s._holes[o]=r._holes[o].clone();return s},e.prototype.getGeometryType=function(){return"Polygon"},e.prototype.copy=function(){for(var r=this,s=this._shell.copy(),o=new Array(this._holes.length).fill(null),l=0;l<o.length;l++)o[l]=r._holes[l].copy();return new e(s,o,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(r){return this._holes[r]},e.prototype.interfaces_=function(){return[fo]},e.prototype.getClass=function(){return e},t.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,t),e}($e),gl=function(i){function e(){i.apply(this,arguments)}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return $e.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(arguments.length===2){var r=arguments[0],s=arguments[1];return this.isEquivalentClass(r)?i.prototype.equalsExact.call(this,r,s):!1}else return i.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(arguments.length===1){var r=arguments[0];return this._geometries[r].getCoordinate()}else return i.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return gn.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return"MultiPoint"},e.prototype.copy=function(){for(var r=this,s=new Array(this._geometries.length).fill(null),o=0;o<s.length;o++)s[o]=r._geometries[o].copy();return new e(s,this._factory)},e.prototype.interfaces_=function(){return[du]},e.prototype.getClass=function(){return e},t.serialVersionUID.get=function(){return-8048474874175356e3},Object.defineProperties(e,t),e}(qi),ws=function(i){function e(n,r){n instanceof j&&r instanceof Ot&&(n=r.getCoordinateSequenceFactory().create(n)),i.call(this,n,r),this.validateConstruction()}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return $e.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return gn.FALSE},e.prototype.isClosed=function(){return this.isEmpty()?!0:i.prototype.isClosed.call(this)},e.prototype.reverse=function(){var r=this._points.copy();Wn.reverse(r);var s=this.getFactory().createLinearRing(r);return s},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!i.prototype.isClosed.call(this))throw new Nn("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new Nn("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")},e.prototype.getGeometryType=function(){return"LinearRing"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},t.MINIMUM_VALID_SIZE.get=function(){return 4},t.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,t),e}(Pn),ms=function(i){function e(){i.apply(this,arguments)}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return $e.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(arguments.length===2){var r=arguments[0],s=arguments[1];return this.isEquivalentClass(r)?i.prototype.equalsExact.call(this,r,s):!1}else return i.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var r=this,s=this._geometries.length,o=new Array(s).fill(null),l=0;l<this._geometries.length;l++)o[l]=r._geometries[l].reverse();return this.getFactory().createMultiPolygon(o)},e.prototype.getBoundary=function(){var r=this;if(this.isEmpty())return this.getFactory().createMultiLineString();for(var s=new le,o=0;o<this._geometries.length;o++)for(var l=r._geometries[o],u=l.getBoundary(),c=0;c<u.getNumGeometries();c++)s.add(u.getGeometryN(c));var p=new Array(s.size()).fill(null);return this.getFactory().createMultiLineString(s.toArray(p))},e.prototype.getGeometryType=function(){return"MultiPolygon"},e.prototype.copy=function(){for(var r=this,s=new Array(this._geometries.length).fill(null),o=0;o<s.length;o++)s[o]=r._geometries[o].copy();return new e(s,this._factory)},e.prototype.interfaces_=function(){return[fo]},e.prototype.getClass=function(){return e},t.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,t),e}(qi),vr=function(e){this._factory=e||null,this._isUserDataCopied=!1},hc={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};vr.prototype.setCopyUserData=function(e){this._isUserDataCopied=e};vr.prototype.edit=function(e,t){if(e===null)return null;var n=this.editInternal(e,t);return this._isUserDataCopied&&n.setUserData(e.getUserData()),n};vr.prototype.editInternal=function(e,t){return this._factory===null&&(this._factory=e.getFactory()),e instanceof qi?this.editGeometryCollection(e,t):e instanceof ei?this.editPolygon(e,t):e instanceof Vi?t.edit(e,this._factory):e instanceof Pn?t.edit(e,this._factory):(nt.shouldNeverReachHere("Unsupported Geometry class: "+e.getClass().getName()),null)};vr.prototype.editGeometryCollection=function(e,t){for(var n=this,r=t.edit(e,this._factory),s=new le,o=0;o<r.getNumGeometries();o++){var l=n.edit(r.getGeometryN(o),t);l===null||l.isEmpty()||s.add(l)}return r.getClass()===gl?this._factory.createMultiPoint(s.toArray([])):r.getClass()===zo?this._factory.createMultiLineString(s.toArray([])):r.getClass()===ms?this._factory.createMultiPolygon(s.toArray([])):this._factory.createGeometryCollection(s.toArray([]))};vr.prototype.editPolygon=function(e,t){var n=this,r=t.edit(e,this._factory);if(r===null&&(r=this._factory.createPolygon(null)),r.isEmpty())return r;var s=this.edit(r.getExteriorRing(),t);if(s===null||s.isEmpty())return this._factory.createPolygon();for(var o=new le,l=0;l<r.getNumInteriorRing();l++){var u=n.edit(r.getInteriorRingN(l),t);u===null||u.isEmpty()||o.add(u)}return this._factory.createPolygon(s,o.toArray([]))};vr.prototype.interfaces_=function(){return[]};vr.prototype.getClass=function(){return vr};vr.GeometryEditorOperation=function(){};hc.NoOpGeometryOperation.get=function(){return pu};hc.CoordinateOperation.get=function(){return fu};hc.CoordinateSequenceOperation.get=function(){return gu};Object.defineProperties(vr,hc);var pu=function(){};pu.prototype.edit=function(e,t){return e};pu.prototype.interfaces_=function(){return[vr.GeometryEditorOperation]};pu.prototype.getClass=function(){return pu};var fu=function(){};fu.prototype.edit=function(e,t){var n=this.editCoordinates(e.getCoordinates(),e);return n===null?e:e instanceof ws?t.createLinearRing(n):e instanceof Pn?t.createLineString(n):e instanceof Vi?n.length>0?t.createPoint(n[0]):t.createPoint():e};fu.prototype.interfaces_=function(){return[vr.GeometryEditorOperation]};fu.prototype.getClass=function(){return fu};var gu=function(){};gu.prototype.edit=function(e,t){return e instanceof ws?t.createLinearRing(this.edit(e.getCoordinateSequence(),e)):e instanceof Pn?t.createLineString(this.edit(e.getCoordinateSequence(),e)):e instanceof Vi?t.createPoint(this.edit(e.getCoordinateSequence(),e)):e};gu.prototype.interfaces_=function(){return[vr.GeometryEditorOperation]};gu.prototype.getClass=function(){return gu};var Bn=function(){var e=this;if(this._dimension=3,this._coordinates=null,arguments.length===1){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var t=arguments[0];this._coordinates=new Array(t).fill(null);for(var n=0;n<t;n++)e._coordinates[n]=new j}else if(Me(arguments[0],tn)){var r=arguments[0];if(r===null)return this._coordinates=new Array(0).fill(null),null;this._dimension=r.getDimension(),this._coordinates=new Array(r.size()).fill(null);for(var s=0;s<this._coordinates.length;s++)e._coordinates[s]=r.getCoordinateCopy(s)}}else if(arguments.length===2){if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var o=arguments[0],l=arguments[1];this._coordinates=o,this._dimension=l,o===null&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var u=arguments[0],c=arguments[1];this._coordinates=new Array(u).fill(null),this._dimension=c;for(var p=0;p<u;p++)e._coordinates[p]=new j}}},B0={serialVersionUID:{configurable:!0}};Bn.prototype.setOrdinate=function(e,t,n){switch(t){case tn.X:this._coordinates[e].x=n;break;case tn.Y:this._coordinates[e].y=n;break;case tn.Z:this._coordinates[e].z=n;break;default:throw new Nn("invalid ordinateIndex")}};Bn.prototype.size=function(){return this._coordinates.length};Bn.prototype.getOrdinate=function(e,t){switch(t){case tn.X:return this._coordinates[e].x;case tn.Y:return this._coordinates[e].y;case tn.Z:return this._coordinates[e].z}return Ve.NaN};Bn.prototype.getCoordinate=function(){if(arguments.length===1){var e=arguments[0];return this._coordinates[e]}else if(arguments.length===2){var t=arguments[0],n=arguments[1];n.x=this._coordinates[t].x,n.y=this._coordinates[t].y,n.z=this._coordinates[t].z}};Bn.prototype.getCoordinateCopy=function(e){return new j(this._coordinates[e])};Bn.prototype.getDimension=function(){return this._dimension};Bn.prototype.getX=function(e){return this._coordinates[e].x};Bn.prototype.clone=function(){for(var e=this,t=new Array(this.size()).fill(null),n=0;n<this._coordinates.length;n++)t[n]=e._coordinates[n].clone();return new Bn(t,this._dimension)};Bn.prototype.expandEnvelope=function(e){for(var t=this,n=0;n<this._coordinates.length;n++)e.expandToInclude(t._coordinates[n]);return e};Bn.prototype.copy=function(){for(var e=this,t=new Array(this.size()).fill(null),n=0;n<this._coordinates.length;n++)t[n]=e._coordinates[n].copy();return new Bn(t,this._dimension)};Bn.prototype.toString=function(){var e=this;if(this._coordinates.length>0){var t=new ss(17*this._coordinates.length);t.append("("),t.append(this._coordinates[0]);for(var n=1;n<this._coordinates.length;n++)t.append(", "),t.append(e._coordinates[n]);return t.append(")"),t.toString()}else return"()"};Bn.prototype.getY=function(e){return this._coordinates[e].y};Bn.prototype.toCoordinateArray=function(){return this._coordinates};Bn.prototype.interfaces_=function(){return[tn,Cr]};Bn.prototype.getClass=function(){return Bn};B0.serialVersionUID.get=function(){return-0xcb44a778db18e00};Object.defineProperties(Bn,B0);var _s=function(){},Mp={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};_s.prototype.readResolve=function(){return _s.instance()};_s.prototype.create=function(){if(arguments.length===1){if(arguments[0]instanceof Array){var e=arguments[0];return new Bn(e)}else if(Me(arguments[0],tn)){var t=arguments[0];return new Bn(t)}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];return r>3&&(r=3),r<2?new Bn(n):new Bn(n,r)}};_s.prototype.interfaces_=function(){return[ul,Cr]};_s.prototype.getClass=function(){return _s};_s.instance=function(){return _s.instanceObject};Mp.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00};Mp.instanceObject.get=function(){return new _s};Object.defineProperties(_s,Mp);var j0=function(i){function e(){i.call(this),this.map_=new Map}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.get=function(n){return this.map_.get(n)||null},e.prototype.put=function(n,r){return this.map_.set(n,r),r},e.prototype.values=function(){for(var n=new le,r=this.map_.values(),s=r.next();!s.done;)n.add(s.value),s=r.next();return n},e.prototype.entrySet=function(){var n=new Np;return this.map_.entries().forEach(function(r){return n.add(r)}),n},e.prototype.size=function(){return this.map_.size()},e}(Pa),yn=function i(){if(this._modelType=null,this._scale=null,arguments.length===0)this._modelType=i.FLOATING;else if(arguments.length===1){if(arguments[0]instanceof Zr){var e=arguments[0];this._modelType=e,e===i.FIXED&&this.setScale(1)}else if(typeof arguments[0]=="number"){var t=arguments[0];this._modelType=i.FIXED,this.setScale(t)}else if(arguments[0]instanceof i){var n=arguments[0];this._modelType=n._modelType,this._scale=n._scale}}},Op={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};yn.prototype.equals=function(e){if(!(e instanceof yn))return!1;var t=e;return this._modelType===t._modelType&&this._scale===t._scale};yn.prototype.compareTo=function(e){var t=e,n=this.getMaximumSignificantDigits(),r=t.getMaximumSignificantDigits();return new Hr(n).compareTo(new Hr(r))};yn.prototype.getScale=function(){return this._scale};yn.prototype.isFloating=function(){return this._modelType===yn.FLOATING||this._modelType===yn.FLOATING_SINGLE};yn.prototype.getType=function(){return this._modelType};yn.prototype.toString=function(){var e="UNKNOWN";return this._modelType===yn.FLOATING?e="Floating":this._modelType===yn.FLOATING_SINGLE?e="Floating-Single":this._modelType===yn.FIXED&&(e="Fixed (Scale="+this.getScale()+")"),e};yn.prototype.makePrecise=function(){if(typeof arguments[0]=="number"){var e=arguments[0];if(Ve.isNaN(e))return e;if(this._modelType===yn.FLOATING_SINGLE){var t=e;return t}return this._modelType===yn.FIXED?Math.round(e*this._scale)/this._scale:e}else if(arguments[0]instanceof j){var n=arguments[0];if(this._modelType===yn.FLOATING)return null;n.x=this.makePrecise(n.x),n.y=this.makePrecise(n.y)}};yn.prototype.getMaximumSignificantDigits=function(){var e=16;return this._modelType===yn.FLOATING?e=16:this._modelType===yn.FLOATING_SINGLE?e=6:this._modelType===yn.FIXED&&(e=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),e};yn.prototype.setScale=function(e){this._scale=Math.abs(e)};yn.prototype.interfaces_=function(){return[Cr,_r]};yn.prototype.getClass=function(){return yn};yn.mostPrecise=function(e,t){return e.compareTo(t)>=0?e:t};Op.serialVersionUID.get=function(){return 7777263578777804e3};Op.maximumPreciseValue.get=function(){return 9007199254740992};Object.defineProperties(yn,Op);var Zr=function i(e){this._name=e||null,i.nameToTypeMap.put(e,this)},Pp={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};Zr.prototype.readResolve=function(){return Zr.nameToTypeMap.get(this._name)};Zr.prototype.toString=function(){return this._name};Zr.prototype.interfaces_=function(){return[Cr]};Zr.prototype.getClass=function(){return Zr};Pp.serialVersionUID.get=function(){return-552860263173159e4};Pp.nameToTypeMap.get=function(){return new j0};Object.defineProperties(Zr,Pp);yn.Type=Zr;yn.FIXED=new Zr("FIXED");yn.FLOATING=new Zr("FLOATING");yn.FLOATING_SINGLE=new Zr("FLOATING SINGLE");var Ot=function i(){this._precisionModel=new yn,this._SRID=0,this._coordinateSequenceFactory=i.getDefaultCoordinateSequenceFactory(),arguments.length===0||(arguments.length===1?Me(arguments[0],ul)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof yn&&(this._precisionModel=arguments[0]):arguments.length===2?(this._precisionModel=arguments[0],this._SRID=arguments[1]):arguments.length===3&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},W0={serialVersionUID:{configurable:!0}};Ot.prototype.toGeometry=function(e){return e.isNull()?this.createPoint(null):e.getMinX()===e.getMaxX()&&e.getMinY()===e.getMaxY()?this.createPoint(new j(e.getMinX(),e.getMinY())):e.getMinX()===e.getMaxX()||e.getMinY()===e.getMaxY()?this.createLineString([new j(e.getMinX(),e.getMinY()),new j(e.getMaxX(),e.getMaxY())]):this.createPolygon(this.createLinearRing([new j(e.getMinX(),e.getMinY()),new j(e.getMinX(),e.getMaxY()),new j(e.getMaxX(),e.getMaxY()),new j(e.getMaxX(),e.getMinY()),new j(e.getMinX(),e.getMinY())]),null)};Ot.prototype.createLineString=function(e){if(e){if(e instanceof Array)return new Pn(this.getCoordinateSequenceFactory().create(e),this);if(Me(e,tn))return new Pn(e,this)}else return new Pn(this.getCoordinateSequenceFactory().create([]),this)};Ot.prototype.createMultiLineString=function(){if(arguments.length===0)return new zo(null,this);if(arguments.length===1){var e=arguments[0];return new zo(e,this)}};Ot.prototype.buildGeometry=function(e){for(var t=null,n=!1,r=!1,s=e.iterator();s.hasNext();){var o=s.next(),l=o.getClass();t===null&&(t=l),l!==t&&(n=!0),o.isGeometryCollectionOrDerived()&&(r=!0)}if(t===null)return this.createGeometryCollection();if(n||r)return this.createGeometryCollection(Ot.toGeometryArray(e));var u=e.iterator().next(),c=e.size()>1;if(c){if(u instanceof ei)return this.createMultiPolygon(Ot.toPolygonArray(e));if(u instanceof Pn)return this.createMultiLineString(Ot.toLineStringArray(e));if(u instanceof Vi)return this.createMultiPoint(Ot.toPointArray(e));nt.shouldNeverReachHere("Unhandled class: "+u.getClass().getName())}return u};Ot.prototype.createMultiPointFromCoords=function(e){return this.createMultiPoint(e!==null?this.getCoordinateSequenceFactory().create(e):null)};Ot.prototype.createPoint=function(){if(arguments.length===0)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(arguments.length===1){if(arguments[0]instanceof j){var e=arguments[0];return this.createPoint(e!==null?this.getCoordinateSequenceFactory().create([e]):null)}else if(Me(arguments[0],tn)){var t=arguments[0];return new Vi(t,this)}}};Ot.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory};Ot.prototype.createPolygon=function(){if(arguments.length===0)return new ei(null,null,this);if(arguments.length===1){if(Me(arguments[0],tn)){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}else if(arguments[0]instanceof Array){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}else if(arguments[0]instanceof ws){var n=arguments[0];return this.createPolygon(n,null)}}else if(arguments.length===2){var r=arguments[0],s=arguments[1];return new ei(r,s,this)}};Ot.prototype.getSRID=function(){return this._SRID};Ot.prototype.createGeometryCollection=function(){if(arguments.length===0)return new qi(null,this);if(arguments.length===1){var e=arguments[0];return new qi(e,this)}};Ot.prototype.createGeometry=function(e){var t=new vr(this);return t.edit(e,{edit:function(){if(arguments.length===2){var n=arguments[0];return this._coordinateSequenceFactory.create(n)}}})};Ot.prototype.getPrecisionModel=function(){return this._precisionModel};Ot.prototype.createLinearRing=function(){if(arguments.length===0)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(arguments.length===1){if(arguments[0]instanceof Array){var e=arguments[0];return this.createLinearRing(e!==null?this.getCoordinateSequenceFactory().create(e):null)}else if(Me(arguments[0],tn)){var t=arguments[0];return new ws(t,this)}}};Ot.prototype.createMultiPolygon=function(){if(arguments.length===0)return new ms(null,this);if(arguments.length===1){var e=arguments[0];return new ms(e,this)}};Ot.prototype.createMultiPoint=function(){var e=this;if(arguments.length===0)return new gl(null,this);if(arguments.length===1){if(arguments[0]instanceof Array){var t=arguments[0];return new gl(t,this)}else if(arguments[0]instanceof Array){var n=arguments[0];return this.createMultiPoint(n!==null?this.getCoordinateSequenceFactory().create(n):null)}else if(Me(arguments[0],tn)){var r=arguments[0];if(r===null)return this.createMultiPoint(new Array(0).fill(null));for(var s=new Array(r.size()).fill(null),o=0;o<r.size();o++){var l=e.getCoordinateSequenceFactory().create(1,r.getDimension());Wn.copy(r,o,l,0,1),s[o]=e.createPoint(l)}return this.createMultiPoint(s)}}};Ot.prototype.interfaces_=function(){return[Cr]};Ot.prototype.getClass=function(){return Ot};Ot.toMultiPolygonArray=function(e){var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.toGeometryArray=function(e){if(e===null)return null;var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.getDefaultCoordinateSequenceFactory=function(){return _s.instance()};Ot.toMultiLineStringArray=function(e){var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.toLineStringArray=function(e){var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.toMultiPointArray=function(e){var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.toLinearRingArray=function(e){var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.toPointArray=function(e){var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.toPolygonArray=function(e){var t=new Array(e.size()).fill(null);return e.toArray(t)};Ot.createPointFromInternalCoord=function(e,t){return t.getPrecisionModel().makePrecise(e),t.getFactory().createPoint(e)};W0.serialVersionUID.get=function(){return-6820524753094096e3};Object.defineProperties(Ot,W0);var xw=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],cc=function(e){this.geometryFactory=e||new Ot};cc.prototype.read=function(e){var t;typeof e=="string"?t=JSON.parse(e):t=e;var n=t.type;if(!Wr[n])throw new Error("Unknown GeoJSON type: "+t.type);return xw.indexOf(n)!==-1?Wr[n].apply(this,[t.coordinates]):n==="GeometryCollection"?Wr[n].apply(this,[t.geometries]):Wr[n].apply(this,[t])};cc.prototype.write=function(e){var t=e.getGeometryType();if(!Ls[t])throw new Error("Geometry is not supported");return Ls[t].apply(this,[e])};var Wr={Feature:function(i){var e={};for(var t in i)e[t]=i[t];if(i.geometry){var n=i.geometry.type;if(!Wr[n])throw new Error("Unknown GeoJSON type: "+i.type);e.geometry=this.read(i.geometry)}return i.bbox&&(e.bbox=Wr.bbox.apply(this,[i.bbox])),e},FeatureCollection:function(i){var e=this,t={};if(i.features){t.features=[];for(var n=0;n<i.features.length;++n)t.features.push(e.read(i.features[n]))}return i.bbox&&(t.bbox=this.parse.bbox.apply(this,[i.bbox])),t},coordinates:function(i){for(var e=[],t=0;t<i.length;++t){var n=i[t];e.push(new j(n[0],n[1]))}return e},bbox:function(i){return this.geometryFactory.createLinearRing([new j(i[0],i[1]),new j(i[2],i[1]),new j(i[2],i[3]),new j(i[0],i[3]),new j(i[0],i[1])])},Point:function(i){var e=new j(i[0],i[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(i){for(var e=this,t=[],n=0;n<i.length;++n)t.push(Wr.Point.apply(e,[i[n]]));return this.geometryFactory.createMultiPoint(t)},LineString:function(i){var e=Wr.coordinates.apply(this,[i]);return this.geometryFactory.createLineString(e)},MultiLineString:function(i){for(var e=this,t=[],n=0;n<i.length;++n)t.push(Wr.LineString.apply(e,[i[n]]));return this.geometryFactory.createMultiLineString(t)},Polygon:function(i){for(var e=this,t=Wr.coordinates.apply(this,[i[0]]),n=this.geometryFactory.createLinearRing(t),r=[],s=1;s<i.length;++s){var o=i[s],l=Wr.coordinates.apply(e,[o]),u=e.geometryFactory.createLinearRing(l);r.push(u)}return this.geometryFactory.createPolygon(n,r)},MultiPolygon:function(i){for(var e=this,t=[],n=0;n<i.length;++n){var r=i[n];t.push(Wr.Polygon.apply(e,[r]))}return this.geometryFactory.createMultiPolygon(t)},GeometryCollection:function(i){for(var e=this,t=[],n=0;n<i.length;++n){var r=i[n];t.push(e.read(r))}return this.geometryFactory.createGeometryCollection(t)}},Ls={coordinate:function(i){return[i.x,i.y]},Point:function(i){var e=Ls.coordinate.apply(this,[i.getCoordinate()]);return{type:"Point",coordinates:e}},MultiPoint:function(i){for(var e=this,t=[],n=0;n<i._geometries.length;++n){var r=i._geometries[n],s=Ls.Point.apply(e,[r]);t.push(s.coordinates)}return{type:"MultiPoint",coordinates:t}},LineString:function(i){for(var e=this,t=[],n=i.getCoordinates(),r=0;r<n.length;++r){var s=n[r];t.push(Ls.coordinate.apply(e,[s]))}return{type:"LineString",coordinates:t}},MultiLineString:function(i){for(var e=this,t=[],n=0;n<i._geometries.length;++n){var r=i._geometries[n],s=Ls.LineString.apply(e,[r]);t.push(s.coordinates)}return{type:"MultiLineString",coordinates:t}},Polygon:function(i){var e=this,t=[],n=Ls.LineString.apply(this,[i._shell]);t.push(n.coordinates);for(var r=0;r<i._holes.length;++r){var s=i._holes[r],o=Ls.LineString.apply(e,[s]);t.push(o.coordinates)}return{type:"Polygon",coordinates:t}},MultiPolygon:function(i){for(var e=this,t=[],n=0;n<i._geometries.length;++n){var r=i._geometries[n],s=Ls.Polygon.apply(e,[r]);t.push(s.coordinates)}return{type:"MultiPolygon",coordinates:t}},GeometryCollection:function(i){for(var e=this,t=[],n=0;n<i._geometries.length;++n){var r=i._geometries[n],s=r.getGeometryType();t.push(Ls[s].apply(e,[r]))}return{type:"GeometryCollection",geometries:t}}},Fp=function(e){this.geometryFactory=e||new Ot,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new cc(this.geometryFactory)};Fp.prototype.read=function(e){var t=this.parser.read(e);return this.precisionModel.getType()===yn.FIXED&&this.reducePrecision(t),t};Fp.prototype.reducePrecision=function(e){var t=this,n,r;if(e.coordinate)this.precisionModel.makePrecise(e.coordinate);else if(e.points)for(n=0,r=e.points.length;n<r;n++)t.precisionModel.makePrecise(e.points[n]);else if(e.geometries)for(n=0,r=e.geometries.length;n<r;n++)t.reducePrecision(e.geometries[n])};var J0=function(){this.parser=new cc(this.geometryFactory)};J0.prototype.write=function(e){return this.parser.write(e)};var ne=function(){},dc={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};ne.prototype.interfaces_=function(){return[]};ne.prototype.getClass=function(){return ne};ne.opposite=function(e){return e===ne.LEFT?ne.RIGHT:e===ne.RIGHT?ne.LEFT:e};dc.ON.get=function(){return 0};dc.LEFT.get=function(){return 1};dc.RIGHT.get=function(){return 2};Object.defineProperties(ne,dc);function pc(i){this.message=i||""}pc.prototype=new Error;pc.prototype.name="EmptyStackException";function os(){this.array_=[]}os.prototype=new Er;os.prototype.add=function(i){return this.array_.push(i),!0};os.prototype.get=function(i){if(i<0||i>=this.size())throw new Error;return this.array_[i]};os.prototype.push=function(i){return this.array_.push(i),i};os.prototype.pop=function(i){if(this.array_.length===0)throw new pc;return this.array_.pop()};os.prototype.peek=function(){if(this.array_.length===0)throw new pc;return this.array_[this.array_.length-1]};os.prototype.empty=function(){return this.array_.length===0};os.prototype.isEmpty=function(){return this.empty()};os.prototype.search=function(i){return this.array_.indexOf(i)};os.prototype.size=function(){return this.array_.length};os.prototype.toArray=function(){for(var i=this,e=[],t=0,n=this.array_.length;t<n;t++)e.push(i.array_[t]);return e};var Kr=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};Kr.prototype.getCoordinate=function(){return this._minCoord};Kr.prototype.getRightmostSide=function(e,t){var n=this.getRightmostSideOfSegment(e,t);return n<0&&(n=this.getRightmostSideOfSegment(e,t-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(e)),n};Kr.prototype.findRightmostEdgeAtVertex=function(){var e=this._minDe.getEdge().getCoordinates();nt.isTrue(this._minIndex>0&&this._minIndex<e.length,"rightmost point expected to be interior vertex of edge");var t=e[this._minIndex-1],n=e[this._minIndex+1],r=ce.computeOrientation(this._minCoord,n,t),s=!1;(t.y<this._minCoord.y&&n.y<this._minCoord.y&&r===ce.COUNTERCLOCKWISE||t.y>this._minCoord.y&&n.y>this._minCoord.y&&r===ce.CLOCKWISE)&&(s=!0),s&&(this._minIndex=this._minIndex-1)};Kr.prototype.getRightmostSideOfSegment=function(e,t){var n=e.getEdge(),r=n.getCoordinates();if(t<0||t+1>=r.length||r[t].y===r[t+1].y)return-1;var s=ne.LEFT;return r[t].y<r[t+1].y&&(s=ne.RIGHT),s};Kr.prototype.getEdge=function(){return this._orientedDe};Kr.prototype.checkForRightmostCoordinate=function(e){for(var t=this,n=e.getEdge().getCoordinates(),r=0;r<n.length-1;r++)(t._minCoord===null||n[r].x>t._minCoord.x)&&(t._minDe=e,t._minIndex=r,t._minCoord=n[r])};Kr.prototype.findRightmostEdgeAtNode=function(){var e=this._minDe.getNode(),t=e.getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)};Kr.prototype.findEdge=function(e){for(var t=this,n=e.iterator();n.hasNext();){var r=n.next();r.isForward()&&t.checkForRightmostCoordinate(r)}nt.isTrue(this._minIndex!==0||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),this._minIndex===0?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;var s=this.getRightmostSide(this._minDe,this._minIndex);s===ne.LEFT&&(this._orientedDe=this._minDe.getSym())};Kr.prototype.interfaces_=function(){return[]};Kr.prototype.getClass=function(){return Kr};var zs=function(i){function e(t,n){i.call(this,e.msgWithCoord(t,n)),this.pt=n?new j(n):null,this.name="TopologyException"}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(n,r){return r?n:n+" [ "+r+" ]"},e}(Gs),fc=function(){this.array_=[]};fc.prototype.addLast=function(e){this.array_.push(e)};fc.prototype.removeFirst=function(){return this.array_.shift()};fc.prototype.isEmpty=function(){return this.array_.length===0};var Si=function(){this._finder=null,this._dirEdgeList=new le,this._nodes=new le,this._rightMostCoord=null,this._env=null,this._finder=new Kr};Si.prototype.clearVisitedEdges=function(){for(var e=this._dirEdgeList.iterator();e.hasNext();){var t=e.next();t.setVisited(!1)}};Si.prototype.getRightmostCoordinate=function(){return this._rightMostCoord};Si.prototype.computeNodeDepth=function(e){for(var t=this,n=null,r=e.getEdges().iterator();r.hasNext();){var s=r.next();if(s.isVisited()||s.getSym().isVisited()){n=s;break}}if(n===null)throw new zs("unable to find edge to compute depths at "+e.getCoordinate());e.getEdges().computeDepths(n);for(var o=e.getEdges().iterator();o.hasNext();){var l=o.next();l.setVisited(!0),t.copySymDepths(l)}};Si.prototype.computeDepth=function(e){this.clearVisitedEdges();var t=this._finder.getEdge();t.setEdgeDepths(ne.RIGHT,e),this.copySymDepths(t),this.computeDepths(t)};Si.prototype.create=function(e){this.addReachable(e),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()};Si.prototype.findResultEdges=function(){for(var e=this._dirEdgeList.iterator();e.hasNext();){var t=e.next();t.getDepth(ne.RIGHT)>=1&&t.getDepth(ne.LEFT)<=0&&!t.isInteriorAreaEdge()&&t.setInResult(!0)}};Si.prototype.computeDepths=function(e){var t=this,n=new Np,r=new fc,s=e.getNode();for(r.addLast(s),n.add(s),e.setVisited(!0);!r.isEmpty();){var o=r.removeFirst();n.add(o),t.computeNodeDepth(o);for(var l=o.getEdges().iterator();l.hasNext();){var u=l.next(),c=u.getSym();if(!c.isVisited()){var p=c.getNode();n.contains(p)||(r.addLast(p),n.add(p))}}}};Si.prototype.compareTo=function(e){var t=e;return this._rightMostCoord.x<t._rightMostCoord.x?-1:this._rightMostCoord.x>t._rightMostCoord.x?1:0};Si.prototype.getEnvelope=function(){if(this._env===null){for(var e=new Ce,t=this._dirEdgeList.iterator();t.hasNext();)for(var n=t.next(),r=n.getEdge().getCoordinates(),s=0;s<r.length-1;s++)e.expandToInclude(r[s]);this._env=e}return this._env};Si.prototype.addReachable=function(e){var t=this,n=new os;for(n.add(e);!n.empty();){var r=n.pop();t.add(r,n)}};Si.prototype.copySymDepths=function(e){var t=e.getSym();t.setDepth(ne.LEFT,e.getDepth(ne.RIGHT)),t.setDepth(ne.RIGHT,e.getDepth(ne.LEFT))};Si.prototype.add=function(e,t){var n=this;e.setVisited(!0),this._nodes.add(e);for(var r=e.getEdges().iterator();r.hasNext();){var s=r.next();n._dirEdgeList.add(s);var o=s.getSym(),l=o.getNode();l.isVisited()||t.push(l)}};Si.prototype.getNodes=function(){return this._nodes};Si.prototype.getDirectedEdges=function(){return this._dirEdgeList};Si.prototype.interfaces_=function(){return[_r]};Si.prototype.getClass=function(){return Si};var An=function i(){var e=this;if(this.location=null,arguments.length===1){if(arguments[0]instanceof Array){var t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[ne.ON]=n}else if(arguments[0]instanceof i){var r=arguments[0];if(this.init(r.location.length),r!==null)for(var s=0;s<this.location.length;s++)e.location[s]=r.location[s]}}else if(arguments.length===3){var o=arguments[0],l=arguments[1],u=arguments[2];this.init(3),this.location[ne.ON]=o,this.location[ne.LEFT]=l,this.location[ne.RIGHT]=u}};An.prototype.setAllLocations=function(e){for(var t=this,n=0;n<this.location.length;n++)t.location[n]=e};An.prototype.isNull=function(){for(var e=this,t=0;t<this.location.length;t++)if(e.location[t]!==W.NONE)return!1;return!0};An.prototype.setAllLocationsIfNull=function(e){for(var t=this,n=0;n<this.location.length;n++)t.location[n]===W.NONE&&(t.location[n]=e)};An.prototype.isLine=function(){return this.location.length===1};An.prototype.merge=function(e){var t=this;if(e.location.length>this.location.length){var n=new Array(3).fill(null);n[ne.ON]=this.location[ne.ON],n[ne.LEFT]=W.NONE,n[ne.RIGHT]=W.NONE,this.location=n}for(var r=0;r<this.location.length;r++)t.location[r]===W.NONE&&r<e.location.length&&(t.location[r]=e.location[r])};An.prototype.getLocations=function(){return this.location};An.prototype.flip=function(){if(this.location.length<=1)return null;var e=this.location[ne.LEFT];this.location[ne.LEFT]=this.location[ne.RIGHT],this.location[ne.RIGHT]=e};An.prototype.toString=function(){var e=new ss;return this.location.length>1&&e.append(W.toLocationSymbol(this.location[ne.LEFT])),e.append(W.toLocationSymbol(this.location[ne.ON])),this.location.length>1&&e.append(W.toLocationSymbol(this.location[ne.RIGHT])),e.toString()};An.prototype.setLocations=function(e,t,n){this.location[ne.ON]=e,this.location[ne.LEFT]=t,this.location[ne.RIGHT]=n};An.prototype.get=function(e){return e<this.location.length?this.location[e]:W.NONE};An.prototype.isArea=function(){return this.location.length>1};An.prototype.isAnyNull=function(){for(var e=this,t=0;t<this.location.length;t++)if(e.location[t]===W.NONE)return!0;return!1};An.prototype.setLocation=function(){if(arguments.length===1){var e=arguments[0];this.setLocation(ne.ON,e)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];this.location[t]=n}};An.prototype.init=function(e){this.location=new Array(e).fill(null),this.setAllLocations(W.NONE)};An.prototype.isEqualOnSide=function(e,t){return this.location[t]===e.location[t]};An.prototype.allPositionsEqual=function(e){for(var t=this,n=0;n<this.location.length;n++)if(t.location[n]!==e)return!1;return!0};An.prototype.interfaces_=function(){return[]};An.prototype.getClass=function(){return An};var _n=function i(){if(this.elt=new Array(2).fill(null),arguments.length===1){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new An(e),this.elt[1]=new An(e)}else if(arguments[0]instanceof i){var t=arguments[0];this.elt[0]=new An(t.elt[0]),this.elt[1]=new An(t.elt[1])}}else if(arguments.length===2){var n=arguments[0],r=arguments[1];this.elt[0]=new An(W.NONE),this.elt[1]=new An(W.NONE),this.elt[n].setLocation(r)}else if(arguments.length===3){var s=arguments[0],o=arguments[1],l=arguments[2];this.elt[0]=new An(s,o,l),this.elt[1]=new An(s,o,l)}else if(arguments.length===4){var u=arguments[0],c=arguments[1],p=arguments[2],d=arguments[3];this.elt[0]=new An(W.NONE,W.NONE,W.NONE),this.elt[1]=new An(W.NONE,W.NONE,W.NONE),this.elt[u].setLocations(c,p,d)}};_n.prototype.getGeometryCount=function(){var e=0;return this.elt[0].isNull()||e++,this.elt[1].isNull()||e++,e};_n.prototype.setAllLocations=function(e,t){this.elt[e].setAllLocations(t)};_n.prototype.isNull=function(e){return this.elt[e].isNull()};_n.prototype.setAllLocationsIfNull=function(){if(arguments.length===1){var e=arguments[0];this.setAllLocationsIfNull(0,e),this.setAllLocationsIfNull(1,e)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];this.elt[t].setAllLocationsIfNull(n)}};_n.prototype.isLine=function(e){return this.elt[e].isLine()};_n.prototype.merge=function(e){for(var t=this,n=0;n<2;n++)t.elt[n]===null&&e.elt[n]!==null?t.elt[n]=new An(e.elt[n]):t.elt[n].merge(e.elt[n])};_n.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()};_n.prototype.getLocation=function(){if(arguments.length===1){var e=arguments[0];return this.elt[e].get(ne.ON)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];return this.elt[t].get(n)}};_n.prototype.toString=function(){var e=new ss;return this.elt[0]!==null&&(e.append("A:"),e.append(this.elt[0].toString())),this.elt[1]!==null&&(e.append(" B:"),e.append(this.elt[1].toString())),e.toString()};_n.prototype.isArea=function(){if(arguments.length===0)return this.elt[0].isArea()||this.elt[1].isArea();if(arguments.length===1){var e=arguments[0];return this.elt[e].isArea()}};_n.prototype.isAnyNull=function(e){return this.elt[e].isAnyNull()};_n.prototype.setLocation=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1];this.elt[e].setLocation(ne.ON,t)}else if(arguments.length===3){var n=arguments[0],r=arguments[1],s=arguments[2];this.elt[n].setLocation(r,s)}};_n.prototype.isEqualOnSide=function(e,t){return this.elt[0].isEqualOnSide(e.elt[0],t)&&this.elt[1].isEqualOnSide(e.elt[1],t)};_n.prototype.allPositionsEqual=function(e,t){return this.elt[e].allPositionsEqual(t)};_n.prototype.toLine=function(e){this.elt[e].isArea()&&(this.elt[e]=new An(this.elt[e].location[0]))};_n.prototype.interfaces_=function(){return[]};_n.prototype.getClass=function(){return _n};_n.toLineLabel=function(e){for(var t=new _n(W.NONE),n=0;n<2;n++)t.setLocation(n,e.getLocation(n));return t};var Hn=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new le,this._pts=new le,this._label=new _n(W.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new le,this._geometryFactory=null;var e=arguments[0],t=arguments[1];this._geometryFactory=t,this.computePoints(e),this.computeRing()};Hn.prototype.computeRing=function(){var e=this;if(this._ring!==null)return null;for(var t=new Array(this._pts.size()).fill(null),n=0;n<this._pts.size();n++)t[n]=e._pts.get(n);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=ce.isCCW(this._ring.getCoordinates())};Hn.prototype.isIsolated=function(){return this._label.getGeometryCount()===1};Hn.prototype.computePoints=function(e){var t=this;this._startDe=e;var n=e,r=!0;do{if(n===null)throw new zs("Found null DirectedEdge");if(n.getEdgeRing()===t)throw new zs("Directed Edge visited twice during ring-building at "+n.getCoordinate());t._edges.add(n);var s=n.getLabel();nt.isTrue(s.isArea()),t.mergeLabel(s),t.addPoints(n.getEdge(),n.isForward(),r),r=!1,t.setEdgeRing(n,t),n=t.getNext(n)}while(n!==this._startDe)};Hn.prototype.getLinearRing=function(){return this._ring};Hn.prototype.getCoordinate=function(e){return this._pts.get(e)};Hn.prototype.computeMaxNodeDegree=function(){var e=this;this._maxNodeDegree=0;var t=this._startDe;do{var n=t.getNode(),r=n.getEdges().getOutgoingDegree(e);r>e._maxNodeDegree&&(e._maxNodeDegree=r),t=e.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2};Hn.prototype.addPoints=function(e,t,n){var r=this,s=e.getCoordinates();if(t){var o=1;n&&(o=0);for(var l=o;l<s.length;l++)r._pts.add(s[l])}else{var u=s.length-2;n&&(u=s.length-1);for(var c=u;c>=0;c--)r._pts.add(s[c])}};Hn.prototype.isHole=function(){return this._isHole};Hn.prototype.setInResult=function(){var e=this._startDe;do e.getEdge().setInResult(!0),e=e.getNext();while(e!==this._startDe)};Hn.prototype.containsPoint=function(e){var t=this.getLinearRing(),n=t.getEnvelopeInternal();if(!n.contains(e)||!ce.isPointInRing(e,t.getCoordinates()))return!1;for(var r=this._holes.iterator();r.hasNext();){var s=r.next();if(s.containsPoint(e))return!1}return!0};Hn.prototype.addHole=function(e){this._holes.add(e)};Hn.prototype.isShell=function(){return this._shell===null};Hn.prototype.getLabel=function(){return this._label};Hn.prototype.getEdges=function(){return this._edges};Hn.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree};Hn.prototype.getShell=function(){return this._shell};Hn.prototype.mergeLabel=function(){if(arguments.length===1){var e=arguments[0];this.mergeLabel(e,0),this.mergeLabel(e,1)}else if(arguments.length===2){var t=arguments[0],n=arguments[1],r=t.getLocation(n,ne.RIGHT);if(r===W.NONE)return null;if(this._label.getLocation(n)===W.NONE)return this._label.setLocation(n,r),null}};Hn.prototype.setShell=function(e){this._shell=e,e!==null&&e.addHole(this)};Hn.prototype.toPolygon=function(e){for(var t=this,n=new Array(this._holes.size()).fill(null),r=0;r<this._holes.size();r++)n[r]=t._holes.get(r).getLinearRing();var s=e.createPolygon(this.getLinearRing(),n);return s};Hn.prototype.interfaces_=function(){return[]};Hn.prototype.getClass=function(){return Hn};var kw=function(i){function e(){var t=arguments[0],n=arguments[1];i.call(this,t,n)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(n,r){n.setMinEdgeRing(r)},e.prototype.getNext=function(n){return n.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Hn),Aw=function(i){function e(){var t=arguments[0],n=arguments[1];i.call(this,t,n)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var n=this,r=new le,s=this._startDe;do{if(s.getMinEdgeRing()===null){var o=new kw(s,n._geometryFactory);r.add(o)}s=s.getNext()}while(s!==this._startDe);return r},e.prototype.setEdgeRing=function(n,r){n.setEdgeRing(r)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var n=this,r=this._startDe;do{var s=r.getNode();s.getEdges().linkMinimalDirectedEdges(n),r=r.getNext()}while(r!==this._startDe)},e.prototype.getNext=function(n){return n.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Hn),ar=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,arguments.length!==0){if(arguments.length===1){var e=arguments[0];this._label=e}}};ar.prototype.setVisited=function(e){this._isVisited=e};ar.prototype.setInResult=function(e){this._isInResult=e};ar.prototype.isCovered=function(){return this._isCovered};ar.prototype.isCoveredSet=function(){return this._isCoveredSet};ar.prototype.setLabel=function(e){this._label=e};ar.prototype.getLabel=function(){return this._label};ar.prototype.setCovered=function(e){this._isCovered=e,this._isCoveredSet=!0};ar.prototype.updateIM=function(e){nt.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(e)};ar.prototype.isInResult=function(){return this._isInResult};ar.prototype.isVisited=function(){return this._isVisited};ar.prototype.interfaces_=function(){return[]};ar.prototype.getClass=function(){return ar};var gc=function(i){function e(){i.call(this),this._coord=null,this._edges=null;var t=arguments[0],n=arguments[1];this._coord=t,this._edges=n,this._label=new _n(0,W.NONE)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var n=this.getEdges().getEdges().iterator();n.hasNext();){var r=n.next();if(r.getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return this._label.getGeometryCount()===1},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(n){n.println("node "+this._coord+" lbl: "+this._label)},e.prototype.computeIM=function(n){},e.prototype.computeMergedLocation=function(n,r){var s=W.NONE;if(s=this._label.getLocation(r),!n.isNull(r)){var o=n.getLocation(r);s!==W.BOUNDARY&&(s=o)}return s},e.prototype.setLabel=function(){if(arguments.length===2){var n=arguments[0],r=arguments[1];this._label===null?this._label=new _n(n,r):this._label.setLocation(n,r)}else return i.prototype.setLabel.apply(this,arguments)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){var n=this;if(arguments[0]instanceof e){var r=arguments[0];this.mergeLabel(r._label)}else if(arguments[0]instanceof _n)for(var s=arguments[0],o=0;o<2;o++){var l=n.computeMergedLocation(s,o),u=n._label.getLocation(o);u===W.NONE&&n._label.setLocation(o,l)}},e.prototype.add=function(n){this._edges.insert(n),n.setNode(this)},e.prototype.setLabelBoundary=function(n){if(this._label===null)return null;var r=W.NONE;this._label!==null&&(r=this._label.getLocation(n));var s=null;switch(r){case W.BOUNDARY:s=W.INTERIOR;break;case W.INTERIOR:s=W.BOUNDARY;break;default:s=W.BOUNDARY;break}this._label.setLocation(n,s)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(ar),Qr=function(){this.nodeMap=new yi,this.nodeFact=null;var e=arguments[0];this.nodeFact=e};Qr.prototype.find=function(e){return this.nodeMap.get(e)};Qr.prototype.addNode=function(){if(arguments[0]instanceof j){var e=arguments[0],t=this.nodeMap.get(e);return t===null&&(t=this.nodeFact.createNode(e),this.nodeMap.put(e,t)),t}else if(arguments[0]instanceof gc){var n=arguments[0],r=this.nodeMap.get(n.getCoordinate());return r===null?(this.nodeMap.put(n.getCoordinate(),n),n):(r.mergeLabel(n),r)}};Qr.prototype.print=function(e){for(var t=this.iterator();t.hasNext();){var n=t.next();n.print(e)}};Qr.prototype.iterator=function(){return this.nodeMap.values().iterator()};Qr.prototype.values=function(){return this.nodeMap.values()};Qr.prototype.getBoundaryNodes=function(e){for(var t=new le,n=this.iterator();n.hasNext();){var r=n.next();r.getLabel().getLocation(e)===W.BOUNDARY&&t.add(r)}return t};Qr.prototype.add=function(e){var t=e.getCoordinate(),n=this.addNode(t);n.add(e)};Qr.prototype.interfaces_=function(){return[]};Qr.prototype.getClass=function(){return Qr};var Tn=function(){},Lu={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};Tn.prototype.interfaces_=function(){return[]};Tn.prototype.getClass=function(){return Tn};Tn.isNorthern=function(e){return e===Tn.NE||e===Tn.NW};Tn.isOpposite=function(e,t){if(e===t)return!1;var n=(e-t+4)%4;return n===2};Tn.commonHalfPlane=function(e,t){if(e===t)return e;var n=(e-t+4)%4;if(n===2)return-1;var r=e<t?e:t,s=e>t?e:t;return r===0&&s===3?3:r};Tn.isInHalfPlane=function(e,t){return t===Tn.SE?e===Tn.SE||e===Tn.SW:e===t||e===t+1};Tn.quadrant=function(){if(typeof arguments[0]=="number"&&typeof arguments[1]=="number"){var e=arguments[0],t=arguments[1];if(e===0&&t===0)throw new Nn("Cannot compute the quadrant for point ( "+e+", "+t+" )");return e>=0?t>=0?Tn.NE:Tn.SE:t>=0?Tn.NW:Tn.SW}else if(arguments[0]instanceof j&&arguments[1]instanceof j){var n=arguments[0],r=arguments[1];if(r.x===n.x&&r.y===n.y)throw new Nn("Cannot compute the quadrant for two identical points "+n);return r.x>=n.x?r.y>=n.y?Tn.NE:Tn.SE:r.y>=n.y?Tn.NW:Tn.SW}};Lu.NE.get=function(){return 0};Lu.NW.get=function(){return 1};Lu.SW.get=function(){return 2};Lu.SE.get=function(){return 3};Object.defineProperties(Tn,Lu);var bi=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,arguments.length===1){var e=arguments[0];this._edge=e}else if(arguments.length===3){var t=arguments[0],n=arguments[1],r=arguments[2],s=null;this._edge=t,this.init(n,r),this._label=s}else if(arguments.length===4){var o=arguments[0],l=arguments[1],u=arguments[2],c=arguments[3];this._edge=o,this.init(l,u),this._label=c}};bi.prototype.compareDirection=function(e){return this._dx===e._dx&&this._dy===e._dy?0:this._quadrant>e._quadrant?1:this._quadrant<e._quadrant?-1:ce.computeOrientation(e._p0,e._p1,this._p1)};bi.prototype.getDy=function(){return this._dy};bi.prototype.getCoordinate=function(){return this._p0};bi.prototype.setNode=function(e){this._node=e};bi.prototype.print=function(e){var t=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),r=n.lastIndexOf("."),s=n.substring(r+1);e.print("  "+s+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label)};bi.prototype.compareTo=function(e){var t=e;return this.compareDirection(t)};bi.prototype.getDirectedCoordinate=function(){return this._p1};bi.prototype.getDx=function(){return this._dx};bi.prototype.getLabel=function(){return this._label};bi.prototype.getEdge=function(){return this._edge};bi.prototype.getQuadrant=function(){return this._quadrant};bi.prototype.getNode=function(){return this._node};bi.prototype.toString=function(){var e=Math.atan2(this._dy,this._dx),t=this.getClass().getName(),n=t.lastIndexOf("."),r=t.substring(n+1);return"  "+r+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+e+"   "+this._label};bi.prototype.computeLabel=function(e){};bi.prototype.init=function(e,t){this._p0=e,this._p1=t,this._dx=t.x-e.x,this._dy=t.y-e.y,this._quadrant=Tn.quadrant(this._dx,this._dy),nt.isTrue(!(this._dx===0&&this._dy===0),"EdgeEnd with identical endpoints found")};bi.prototype.interfaces_=function(){return[_r]};bi.prototype.getClass=function(){return bi};var Od=function(i){function e(){var t=arguments[0],n=arguments[1];if(i.call(this,t),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(t.getCoordinate(0),t.getCoordinate(1));else{var r=t.getNumPoints()-1;this.init(t.getCoordinate(r),t.getCoordinate(r-1))}this.computeDirectedLabel()}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(n){return this._depth[n]},e.prototype.setVisited=function(n){this._isVisited=n},e.prototype.computeDirectedLabel=function(){this._label=new _n(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(n,r){if(this._depth[n]!==-999&&this._depth[n]!==r)throw new zs("assigned depths do not match",this.getCoordinate());this._depth[n]=r},e.prototype.isInteriorAreaEdge=function(){for(var n=this,r=!0,s=0;s<2;s++)n._label.isArea(s)&&n._label.getLocation(s,ne.LEFT)===W.INTERIOR&&n._label.getLocation(s,ne.RIGHT)===W.INTERIOR||(r=!1);return r},e.prototype.setNextMin=function(n){this._nextMin=n},e.prototype.print=function(n){i.prototype.print.call(this,n),n.print(" "+this._depth[ne.LEFT]+"/"+this._depth[ne.RIGHT]),n.print(" ("+this.getDepthDelta()+")"),this._isInResult&&n.print(" inResult")},e.prototype.setMinEdgeRing=function(n){this._minEdgeRing=n},e.prototype.isLineEdge=function(){var n=this._label.isLine(0)||this._label.isLine(1),r=!this._label.isArea(0)||this._label.allPositionsEqual(0,W.EXTERIOR),s=!this._label.isArea(1)||this._label.allPositionsEqual(1,W.EXTERIOR);return n&&r&&s},e.prototype.setEdgeRing=function(n){this._edgeRing=n},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var n=this._edge.getDepthDelta();return this._isForward||(n=-n),n},e.prototype.setInResult=function(n){this._isInResult=n},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(n){this.print(n),n.print(" "),this._isForward?this._edge.print(n):this._edge.printReverse(n)},e.prototype.setSym=function(n){this._sym=n},e.prototype.setVisitedEdge=function(n){this.setVisited(n),this._sym.setVisited(n)},e.prototype.setEdgeDepths=function(n,r){var s=this.getEdge().getDepthDelta();this._isForward||(s=-s);var o=1;n===ne.LEFT&&(o=-1);var l=ne.opposite(n),u=s*o,c=r+u;this.setDepth(n,r),this.setDepth(l,c)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(n){this._next=n},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(n,r){return n===W.EXTERIOR&&r===W.INTERIOR?1:n===W.INTERIOR&&r===W.EXTERIOR?-1:0},e}(bi),ml=function(){};ml.prototype.createNode=function(e){return new gc(e,null)};ml.prototype.interfaces_=function(){return[]};ml.prototype.getClass=function(){return ml};var Mn=function(){if(this._edges=new le,this._nodes=null,this._edgeEndList=new le,arguments.length===0)this._nodes=new Qr(new ml);else if(arguments.length===1){var e=arguments[0];this._nodes=new Qr(e)}};Mn.prototype.printEdges=function(e){var t=this;e.println("Edges:");for(var n=0;n<this._edges.size();n++){e.println("edge "+n+":");var r=t._edges.get(n);r.print(e),r.eiList.print(e)}};Mn.prototype.find=function(e){return this._nodes.find(e)};Mn.prototype.addNode=function(){if(arguments[0]instanceof gc){var e=arguments[0];return this._nodes.addNode(e)}else if(arguments[0]instanceof j){var t=arguments[0];return this._nodes.addNode(t)}};Mn.prototype.getNodeIterator=function(){return this._nodes.iterator()};Mn.prototype.linkResultDirectedEdges=function(){for(var e=this._nodes.iterator();e.hasNext();){var t=e.next();t.getEdges().linkResultDirectedEdges()}};Mn.prototype.debugPrintln=function(e){hi.out.println(e)};Mn.prototype.isBoundaryNode=function(e,t){var n=this._nodes.find(t);if(n===null)return!1;var r=n.getLabel();return r!==null&&r.getLocation(e)===W.BOUNDARY};Mn.prototype.linkAllDirectedEdges=function(){for(var e=this._nodes.iterator();e.hasNext();){var t=e.next();t.getEdges().linkAllDirectedEdges()}};Mn.prototype.matchInSameDirection=function(e,t,n,r){return e.equals(n)?ce.computeOrientation(e,t,r)===ce.COLLINEAR&&Tn.quadrant(e,t)===Tn.quadrant(n,r):!1};Mn.prototype.getEdgeEnds=function(){return this._edgeEndList};Mn.prototype.debugPrint=function(e){hi.out.print(e)};Mn.prototype.getEdgeIterator=function(){return this._edges.iterator()};Mn.prototype.findEdgeInSameDirection=function(e,t){for(var n=this,r=0;r<this._edges.size();r++){var s=n._edges.get(r),o=s.getCoordinates();if(n.matchInSameDirection(e,t,o[0],o[1])||n.matchInSameDirection(e,t,o[o.length-1],o[o.length-2]))return s}return null};Mn.prototype.insertEdge=function(e){this._edges.add(e)};Mn.prototype.findEdgeEnd=function(e){for(var t=this.getEdgeEnds().iterator();t.hasNext();){var n=t.next();if(n.getEdge()===e)return n}return null};Mn.prototype.addEdges=function(e){for(var t=this,n=e.iterator();n.hasNext();){var r=n.next();t._edges.add(r);var s=new Od(r,!0),o=new Od(r,!1);s.setSym(o),o.setSym(s),t.add(s),t.add(o)}};Mn.prototype.add=function(e){this._nodes.add(e),this._edgeEndList.add(e)};Mn.prototype.getNodes=function(){return this._nodes.values()};Mn.prototype.findEdge=function(e,t){for(var n=this,r=0;r<this._edges.size();r++){var s=n._edges.get(r),o=s.getCoordinates();if(e.equals(o[0])&&t.equals(o[1]))return s}return null};Mn.prototype.interfaces_=function(){return[]};Mn.prototype.getClass=function(){return Mn};Mn.linkResultDirectedEdges=function(e){for(var t=e.iterator();t.hasNext();){var n=t.next();n.getEdges().linkResultDirectedEdges()}};var Gi=function(){this._geometryFactory=null,this._shellList=new le;var e=arguments[0];this._geometryFactory=e};Gi.prototype.sortShellsAndHoles=function(e,t,n){for(var r=e.iterator();r.hasNext();){var s=r.next();s.isHole()?n.add(s):t.add(s)}};Gi.prototype.computePolygons=function(e){for(var t=this,n=new le,r=e.iterator();r.hasNext();){var s=r.next(),o=s.toPolygon(t._geometryFactory);n.add(o)}return n};Gi.prototype.placeFreeHoles=function(e,t){for(var n=this,r=t.iterator();r.hasNext();){var s=r.next();if(s.getShell()===null){var o=n.findEdgeRingContaining(s,e);if(o===null)throw new zs("unable to assign hole to a shell",s.getCoordinate(0));s.setShell(o)}}};Gi.prototype.buildMinimalEdgeRings=function(e,t,n){for(var r=this,s=new le,o=e.iterator();o.hasNext();){var l=o.next();if(l.getMaxNodeDegree()>2){l.linkDirectedEdgesForMinimalEdgeRings();var u=l.buildMinimalRings(),c=r.findShell(u);c!==null?(r.placePolygonHoles(c,u),t.add(c)):n.addAll(u)}else s.add(l)}return s};Gi.prototype.containsPoint=function(e){for(var t=this._shellList.iterator();t.hasNext();){var n=t.next();if(n.containsPoint(e))return!0}return!1};Gi.prototype.buildMaximalEdgeRings=function(e){for(var t=this,n=new le,r=e.iterator();r.hasNext();){var s=r.next();if(s.isInResult()&&s.getLabel().isArea()&&s.getEdgeRing()===null){var o=new Aw(s,t._geometryFactory);n.add(o),o.setInResult()}}return n};Gi.prototype.placePolygonHoles=function(e,t){for(var n=t.iterator();n.hasNext();){var r=n.next();r.isHole()&&r.setShell(e)}};Gi.prototype.getPolygons=function(){var e=this.computePolygons(this._shellList);return e};Gi.prototype.findEdgeRingContaining=function(e,t){for(var n=e.getLinearRing(),r=n.getEnvelopeInternal(),s=n.getCoordinateN(0),o=null,l=null,u=t.iterator();u.hasNext();){var c=u.next(),p=c.getLinearRing(),d=p.getEnvelopeInternal();o!==null&&(l=o.getLinearRing().getEnvelopeInternal());var f=!1;d.contains(r)&&ce.isPointInRing(s,p.getCoordinates())&&(f=!0),f&&(o===null||l.contains(d))&&(o=c)}return o};Gi.prototype.findShell=function(e){for(var t=0,n=null,r=e.iterator();r.hasNext();){var s=r.next();s.isHole()||(n=s,t++)}return nt.isTrue(t<=1,"found two shells in MinimalEdgeRing list"),n};Gi.prototype.add=function(){if(arguments.length===1){var e=arguments[0];this.add(e.getEdgeEnds(),e.getNodes())}else if(arguments.length===2){var t=arguments[0],n=arguments[1];Mn.linkResultDirectedEdges(n);var r=this.buildMaximalEdgeRings(t),s=new le,o=this.buildMinimalEdgeRings(r,this._shellList,s);this.sortShellsAndHoles(o,this._shellList,s),this.placeFreeHoles(this._shellList,s)}};Gi.prototype.interfaces_=function(){return[]};Gi.prototype.getClass=function(){return Gi};var yl=function(){};yl.prototype.getBounds=function(){};yl.prototype.interfaces_=function(){return[]};yl.prototype.getClass=function(){return yl};var $r=function(){this._bounds=null,this._item=null;var e=arguments[0],t=arguments[1];this._bounds=e,this._item=t};$r.prototype.getItem=function(){return this._item};$r.prototype.getBounds=function(){return this._bounds};$r.prototype.interfaces_=function(){return[yl,Cr]};$r.prototype.getClass=function(){return $r};var Hs=function(){this._size=null,this._items=null,this._size=0,this._items=new le,this._items.add(null)};Hs.prototype.poll=function(){if(this.isEmpty())return null;var e=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),e};Hs.prototype.size=function(){return this._size};Hs.prototype.reorder=function(e){for(var t=this,n=null,r=this._items.get(e);e*2<=this._size&&(n=e*2,n!==t._size&&t._items.get(n+1).compareTo(t._items.get(n))<0&&n++,t._items.get(n).compareTo(r)<0);e=n)t._items.set(e,t._items.get(n));this._items.set(e,r)};Hs.prototype.clear=function(){this._size=0,this._items.clear()};Hs.prototype.isEmpty=function(){return this._size===0};Hs.prototype.add=function(e){var t=this;this._items.add(null),this._size+=1;var n=this._size;for(this._items.set(0,e);e.compareTo(this._items.get(Math.trunc(n/2)))<0;n/=2)t._items.set(n,t._items.get(Math.trunc(n/2)));this._items.set(n,e)};Hs.prototype.interfaces_=function(){return[]};Hs.prototype.getClass=function(){return Hs};var go=function(){};go.prototype.visitItem=function(e){};go.prototype.interfaces_=function(){return[]};go.prototype.getClass=function(){return go};var Ca=function(){};Ca.prototype.insert=function(e,t){};Ca.prototype.remove=function(e,t){};Ca.prototype.query=function(){};Ca.prototype.interfaces_=function(){return[]};Ca.prototype.getClass=function(){return Ca};var Qn=function(){if(this._childBoundables=new le,this._bounds=null,this._level=null,arguments.length!==0){if(arguments.length===1){var e=arguments[0];this._level=e}}},V0={serialVersionUID:{configurable:!0}};Qn.prototype.getLevel=function(){return this._level};Qn.prototype.size=function(){return this._childBoundables.size()};Qn.prototype.getChildBoundables=function(){return this._childBoundables};Qn.prototype.addChildBoundable=function(e){nt.isTrue(this._bounds===null),this._childBoundables.add(e)};Qn.prototype.isEmpty=function(){return this._childBoundables.isEmpty()};Qn.prototype.getBounds=function(){return this._bounds===null&&(this._bounds=this.computeBounds()),this._bounds};Qn.prototype.interfaces_=function(){return[yl,Cr]};Qn.prototype.getClass=function(){return Qn};V0.serialVersionUID.get=function(){return 6493722185909574e3};Object.defineProperties(Qn,V0);var Nr=function(){};Nr.reverseOrder=function(){return{compare:function(t,n){return n.compareTo(t)}}};Nr.min=function(e){return Nr.sort(e),e.get(0)};Nr.sort=function(e,t){var n=e.toArray();t?Fo.sort(n,t):Fo.sort(n);for(var r=e.iterator(),s=0,o=n.length;s<o;s++)r.next(),r.set(n[s])};Nr.singletonList=function(e){var t=new le;return t.add(e),t};var Un=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var e=arguments[0],t=arguments[1],n=arguments[2];this._boundable1=e,this._boundable2=t,this._itemDistance=n,this._distance=this.distance()};Un.prototype.expandToQueue=function(e,t){var n=Un.isComposite(this._boundable1),r=Un.isComposite(this._boundable2);if(n&&r)return Un.area(this._boundable1)>Un.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,e,t),null):(this.expand(this._boundable2,this._boundable1,e,t),null);if(n)return this.expand(this._boundable1,this._boundable2,e,t),null;if(r)return this.expand(this._boundable2,this._boundable1,e,t),null;throw new Nn("neither boundable is composite")};Un.prototype.isLeaves=function(){return!(Un.isComposite(this._boundable1)||Un.isComposite(this._boundable2))};Un.prototype.compareTo=function(e){var t=e;return this._distance<t._distance?-1:this._distance>t._distance?1:0};Un.prototype.expand=function(e,t,n,r){for(var s=this,o=e.getChildBoundables(),l=o.iterator();l.hasNext();){var u=l.next(),c=new Un(u,t,s._itemDistance);c.getDistance()<r&&n.add(c)}};Un.prototype.getBoundable=function(e){return e===0?this._boundable1:this._boundable2};Un.prototype.getDistance=function(){return this._distance};Un.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())};Un.prototype.interfaces_=function(){return[_r]};Un.prototype.getClass=function(){return Un};Un.area=function(e){return e.getBounds().getArea()};Un.isComposite=function(e){return e instanceof Qn};var ri=function i(){if(this._root=null,this._built=!1,this._itemBoundables=new le,this._nodeCapacity=null,arguments.length===0){var e=i.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(arguments.length===1){var t=arguments[0];nt.isTrue(t>1,"Node capacity must be greater than 1"),this._nodeCapacity=t}},mc={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};ri.prototype.getNodeCapacity=function(){return this._nodeCapacity};ri.prototype.lastNode=function(e){return e.get(e.size()-1)};ri.prototype.size=function(){var e=this;if(arguments.length===0)return this.isEmpty()?0:(this.build(),this.size(this._root));if(arguments.length===1){for(var t=arguments[0],n=0,r=t.getChildBoundables().iterator();r.hasNext();){var s=r.next();s instanceof Qn?n+=e.size(s):s instanceof $r&&(n+=1)}return n}};ri.prototype.removeItem=function(e,t){for(var n=null,r=e.getChildBoundables().iterator();r.hasNext();){var s=r.next();s instanceof $r&&s.getItem()===t&&(n=s)}return n!==null?(e.getChildBoundables().remove(n),!0):!1};ri.prototype.itemsTree=function(){var e=this;if(arguments.length===0){this.build();var t=this.itemsTree(this._root);return t===null?new le:t}else if(arguments.length===1){for(var n=arguments[0],r=new le,s=n.getChildBoundables().iterator();s.hasNext();){var o=s.next();if(o instanceof Qn){var l=e.itemsTree(o);l!==null&&r.add(l)}else o instanceof $r?r.add(o.getItem()):nt.shouldNeverReachHere()}return r.size()<=0?null:r}};ri.prototype.insert=function(e,t){nt.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new $r(e,t))};ri.prototype.boundablesAtLevel=function(){var e=this;if(arguments.length===1){var t=arguments[0],n=new le;return this.boundablesAtLevel(t,this._root,n),n}else if(arguments.length===3){var r=arguments[0],s=arguments[1],o=arguments[2];if(nt.isTrue(r>-2),s.getLevel()===r)return o.add(s),null;for(var l=s.getChildBoundables().iterator();l.hasNext();){var u=l.next();u instanceof Qn?e.boundablesAtLevel(r,u,o):(nt.isTrue(u instanceof $r),r===-1&&o.add(u))}return null}};ri.prototype.query=function(){var e=this;if(arguments.length===1){var t=arguments[0];this.build();var n=new le;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.query(t,this._root,n),n}else if(arguments.length===2){var r=arguments[0],s=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),r)&&this.query(r,this._root,s)}else if(arguments.length===3){if(Me(arguments[2],go)&&arguments[0]instanceof Object&&arguments[1]instanceof Qn)for(var o=arguments[0],l=arguments[1],u=arguments[2],c=l.getChildBoundables(),p=0;p<c.size();p++){var d=c.get(p);e.getIntersectsOp().intersects(d.getBounds(),o)&&(d instanceof Qn?e.query(o,d,u):d instanceof $r?u.visitItem(d.getItem()):nt.shouldNeverReachHere())}else if(Me(arguments[2],Er)&&arguments[0]instanceof Object&&arguments[1]instanceof Qn)for(var f=arguments[0],g=arguments[1],v=arguments[2],w=g.getChildBoundables(),A=0;A<w.size();A++){var C=w.get(A);e.getIntersectsOp().intersects(C.getBounds(),f)&&(C instanceof Qn?e.query(f,C,v):C instanceof $r?v.add(C.getItem()):nt.shouldNeverReachHere())}}};ri.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0};ri.prototype.getRoot=function(){return this.build(),this._root};ri.prototype.remove=function(){var e=this;if(arguments.length===2){var t=arguments[0],n=arguments[1];return this.build(),this.getIntersectsOp().intersects(this._root.getBounds(),t)?this.remove(t,this._root,n):!1}else if(arguments.length===3){var r=arguments[0],s=arguments[1],o=arguments[2],l=this.removeItem(s,o);if(l)return!0;for(var u=null,c=s.getChildBoundables().iterator();c.hasNext();){var p=c.next();if(e.getIntersectsOp().intersects(p.getBounds(),r)&&p instanceof Qn&&(l=e.remove(r,p,o),l)){u=p;break}}return u!==null&&u.getChildBoundables().isEmpty()&&s.getChildBoundables().remove(u),l}};ri.prototype.createHigherLevels=function(e,t){nt.isTrue(!e.isEmpty());var n=this.createParentBoundables(e,t+1);return n.size()===1?n.get(0):this.createHigherLevels(n,t+1)};ri.prototype.depth=function(){var e=this;if(arguments.length===0)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(arguments.length===1){for(var t=arguments[0],n=0,r=t.getChildBoundables().iterator();r.hasNext();){var s=r.next();if(s instanceof Qn){var o=e.depth(s);o>n&&(n=o)}}return n+1}};ri.prototype.createParentBoundables=function(e,t){var n=this;nt.isTrue(!e.isEmpty());var r=new le;r.add(this.createNode(t));var s=new le(e);Nr.sort(s,this.getComparator());for(var o=s.iterator();o.hasNext();){var l=o.next();n.lastNode(r).getChildBoundables().size()===n.getNodeCapacity()&&r.add(n.createNode(t)),n.lastNode(r).addChildBoundable(l)}return r};ri.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()};ri.prototype.interfaces_=function(){return[Cr]};ri.prototype.getClass=function(){return ri};ri.compareDoubles=function(e,t){return e>t?1:e<t?-1:0};mc.IntersectsOp.get=function(){return qw};mc.serialVersionUID.get=function(){return-3886435814360241e3};mc.DEFAULT_NODE_CAPACITY.get=function(){return 10};Object.defineProperties(ri,mc);var qw=function(){},bl=function(){};bl.prototype.distance=function(e,t){};bl.prototype.interfaces_=function(){return[]};bl.prototype.getClass=function(){return bl};var G0=function(i){function e(n){n=n||e.DEFAULT_NODE_CAPACITY,i.call(this,n)}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return e.prototype.createParentBoundablesFromVerticalSlices=function(r,s){var o=this;nt.isTrue(r.length>0);for(var l=new le,u=0;u<r.length;u++)l.addAll(o.createParentBoundablesFromVerticalSlice(r[u],s));return l},e.prototype.createNode=function(r){return new Rg(r)},e.prototype.size=function(){return arguments.length===0?i.prototype.size.call(this):i.prototype.size.apply(this,arguments)},e.prototype.insert=function(){if(arguments.length===2){var r=arguments[0],s=arguments[1];if(r.isNull())return null;i.prototype.insert.call(this,r,s)}else return i.prototype.insert.apply(this,arguments)},e.prototype.getIntersectsOp=function(){return e.intersectsOp},e.prototype.verticalSlices=function(r,s){for(var o=Math.trunc(Math.ceil(r.size()/s)),l=new Array(s).fill(null),u=r.iterator(),c=0;c<s;c++){l[c]=new le;for(var p=0;u.hasNext()&&p<o;){var d=u.next();l[c].add(d),p++}}return l},e.prototype.query=function(){if(arguments.length===1){var r=arguments[0];return i.prototype.query.call(this,r)}else if(arguments.length===2){var s=arguments[0],o=arguments[1];i.prototype.query.call(this,s,o)}else if(arguments.length===3){if(Me(arguments[2],go)&&arguments[0]instanceof Object&&arguments[1]instanceof Qn){var l=arguments[0],u=arguments[1],c=arguments[2];i.prototype.query.call(this,l,u,c)}else if(Me(arguments[2],Er)&&arguments[0]instanceof Object&&arguments[1]instanceof Qn){var p=arguments[0],d=arguments[1],f=arguments[2];i.prototype.query.call(this,p,d,f)}}},e.prototype.getComparator=function(){return e.yComparator},e.prototype.createParentBoundablesFromVerticalSlice=function(r,s){return i.prototype.createParentBoundables.call(this,r,s)},e.prototype.remove=function(){if(arguments.length===2){var r=arguments[0],s=arguments[1];return i.prototype.remove.call(this,r,s)}else return i.prototype.remove.apply(this,arguments)},e.prototype.depth=function(){return arguments.length===0?i.prototype.depth.call(this):i.prototype.depth.apply(this,arguments)},e.prototype.createParentBoundables=function(r,s){nt.isTrue(!r.isEmpty());var o=Math.trunc(Math.ceil(r.size()/this.getNodeCapacity())),l=new le(r);Nr.sort(l,e.xComparator);var u=this.verticalSlices(l,Math.trunc(Math.ceil(Math.sqrt(o))));return this.createParentBoundablesFromVerticalSlices(u,s)},e.prototype.nearestNeighbour=function(){if(arguments.length===1){if(Me(arguments[0],bl)){var r=arguments[0],s=new Un(this.getRoot(),this.getRoot(),r);return this.nearestNeighbour(s)}else if(arguments[0]instanceof Un){var o=arguments[0];return this.nearestNeighbour(o,Ve.POSITIVE_INFINITY)}}else if(arguments.length===2){if(arguments[0]instanceof e&&Me(arguments[1],bl)){var l=arguments[0],u=arguments[1],c=new Un(this.getRoot(),l.getRoot(),u);return this.nearestNeighbour(c)}else if(arguments[0]instanceof Un&&typeof arguments[1]=="number"){var p=arguments[0],d=arguments[1],f=d,g=null,v=new Hs;for(v.add(p);!v.isEmpty()&&f>0;){var w=v.poll(),A=w.getDistance();if(A>=f)break;w.isLeaves()?(f=A,g=w):w.expandToQueue(v,f)}return[g.getBoundable(0).getItem(),g.getBoundable(1).getItem()]}}else if(arguments.length===3){var C=arguments[0],m=arguments[1],y=arguments[2],x=new $r(C,m),k=new Un(this.getRoot(),x,y);return this.nearestNeighbour(k)[0]}},e.prototype.interfaces_=function(){return[Ca,Cr]},e.prototype.getClass=function(){return e},e.centreX=function(r){return e.avg(r.getMinX(),r.getMaxX())},e.avg=function(r,s){return(r+s)/2},e.centreY=function(r){return e.avg(r.getMinY(),r.getMaxY())},t.STRtreeNode.get=function(){return Rg},t.serialVersionUID.get=function(){return 0x39920f7d5f261e0},t.xComparator.get=function(){return{interfaces_:function(){return[ll]},compare:function(n,r){return i.compareDoubles(e.centreX(n.getBounds()),e.centreX(r.getBounds()))}}},t.yComparator.get=function(){return{interfaces_:function(){return[ll]},compare:function(n,r){return i.compareDoubles(e.centreY(n.getBounds()),e.centreY(r.getBounds()))}}},t.intersectsOp.get=function(){return{interfaces_:function(){return[i.IntersectsOp]},intersects:function(n,r){return n.intersects(r)}}},t.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(e,t),e}(ri),Rg=function(i){function e(){var t=arguments[0];i.call(this,t)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var n=null,r=this.getChildBoundables().iterator();r.hasNext();){var s=r.next();n===null?n=new Ce(s.getBounds()):n.expandToInclude(s.getBounds())}return n},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Qn),Ni=function(){};Ni.prototype.interfaces_=function(){return[]};Ni.prototype.getClass=function(){return Ni};Ni.relativeSign=function(e,t){return e<t?-1:e>t?1:0};Ni.compare=function(e,t,n){if(t.equals2D(n))return 0;var r=Ni.relativeSign(t.x,n.x),s=Ni.relativeSign(t.y,n.y);switch(e){case 0:return Ni.compareValue(r,s);case 1:return Ni.compareValue(s,r);case 2:return Ni.compareValue(s,-r);case 3:return Ni.compareValue(-r,s);case 4:return Ni.compareValue(-r,-s);case 5:return Ni.compareValue(-s,-r);case 6:return Ni.compareValue(-s,r);case 7:return Ni.compareValue(r,-s)}return nt.shouldNeverReachHere("invalid octant value"),0};Ni.compareValue=function(e,t){return e<0?-1:e>0?1:t<0?-1:t>0?1:0};var mo=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var e=arguments[0],t=arguments[1],n=arguments[2],r=arguments[3];this._segString=e,this.coord=new j(t),this.segmentIndex=n,this._segmentOctant=r,this._isInterior=!t.equals2D(e.getCoordinate(n))};mo.prototype.getCoordinate=function(){return this.coord};mo.prototype.print=function(e){e.print(this.coord),e.print(" seg # = "+this.segmentIndex)};mo.prototype.compareTo=function(e){var t=e;return this.segmentIndex<t.segmentIndex?-1:this.segmentIndex>t.segmentIndex?1:this.coord.equals2D(t.coord)?0:Ni.compare(this._segmentOctant,this.coord,t.coord)};mo.prototype.isEndPoint=function(e){return this.segmentIndex===0&&!this._isInterior||this.segmentIndex===e};mo.prototype.isInterior=function(){return this._isInterior};mo.prototype.interfaces_=function(){return[_r]};mo.prototype.getClass=function(){return mo};var Ei=function(){this._nodeMap=new yi,this._edge=null;var e=arguments[0];this._edge=e};Ei.prototype.getSplitCoordinates=function(){var e=this,t=new $u;this.addEndpoints();for(var n=this.iterator(),r=n.next();n.hasNext();){var s=n.next();e.addEdgeCoordinates(r,s,t),r=s}return t.toCoordinateArray()};Ei.prototype.addCollapsedNodes=function(){var e=this,t=new le;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var n=t.iterator();n.hasNext();){var r=n.next().intValue();e.add(e._edge.getCoordinate(r),r)}};Ei.prototype.print=function(e){e.println("Intersections:");for(var t=this.iterator();t.hasNext();){var n=t.next();n.print(e)}};Ei.prototype.findCollapsesFromExistingVertices=function(e){for(var t=this,n=0;n<this._edge.size()-2;n++){var r=t._edge.getCoordinate(n),s=t._edge.getCoordinate(n+2);r.equals2D(s)&&e.add(new Hr(n+1))}};Ei.prototype.addEdgeCoordinates=function(e,t,n){var r=this,s=this._edge.getCoordinate(t.segmentIndex),o=t.isInterior()||!t.coord.equals2D(s);n.add(new j(e.coord),!1);for(var l=e.segmentIndex+1;l<=t.segmentIndex;l++)n.add(r._edge.getCoordinate(l));o&&n.add(new j(t.coord))};Ei.prototype.iterator=function(){return this._nodeMap.values().iterator()};Ei.prototype.addSplitEdges=function(e){var t=this;this.addEndpoints(),this.addCollapsedNodes();for(var n=this.iterator(),r=n.next();n.hasNext();){var s=n.next(),o=t.createSplitEdge(r,s);e.add(o),r=s}};Ei.prototype.findCollapseIndex=function(e,t,n){if(!e.coord.equals2D(t.coord))return!1;var r=t.segmentIndex-e.segmentIndex;return t.isInterior()||r--,r===1?(n[0]=e.segmentIndex+1,!0):!1};Ei.prototype.findCollapsesFromInsertedNodes=function(e){for(var t=this,n=new Array(1).fill(null),r=this.iterator(),s=r.next();r.hasNext();){var o=r.next(),l=t.findCollapseIndex(s,o,n);l&&e.add(new Hr(n[0])),s=o}};Ei.prototype.getEdge=function(){return this._edge};Ei.prototype.addEndpoints=function(){var e=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(e),e)};Ei.prototype.createSplitEdge=function(e,t){var n=this,r=t.segmentIndex-e.segmentIndex+2,s=this._edge.getCoordinate(t.segmentIndex),o=t.isInterior()||!t.coord.equals2D(s);o||r--;var l=new Array(r).fill(null),u=0;l[u++]=new j(e.coord);for(var c=e.segmentIndex+1;c<=t.segmentIndex;c++)l[u++]=n._edge.getCoordinate(c);return o&&(l[u]=new j(t.coord)),new Vn(l,this._edge.getData())};Ei.prototype.add=function(e,t){var n=new mo(this._edge,e,t,this._edge.getSegmentOctant(t)),r=this._nodeMap.get(n);return r!==null?(nt.isTrue(r.coord.equals2D(e),"Found equal nodes with different coordinates"),r):(this._nodeMap.put(n,n),n)};Ei.prototype.checkSplitEdgesCorrectness=function(e){var t=this._edge.getCoordinates(),n=e.get(0),r=n.getCoordinate(0);if(!r.equals2D(t[0]))throw new Gs("bad split edge start point at "+r);var s=e.get(e.size()-1),o=s.getCoordinates(),l=o[o.length-1];if(!l.equals2D(t[t.length-1]))throw new Gs("bad split edge end point at "+l)};Ei.prototype.interfaces_=function(){return[]};Ei.prototype.getClass=function(){return Ei};var Ta=function(){};Ta.prototype.interfaces_=function(){return[]};Ta.prototype.getClass=function(){return Ta};Ta.octant=function(){if(typeof arguments[0]=="number"&&typeof arguments[1]=="number"){var e=arguments[0],t=arguments[1];if(e===0&&t===0)throw new Nn("Cannot compute the octant for point ( "+e+", "+t+" )");var n=Math.abs(e),r=Math.abs(t);return e>=0?t>=0?n>=r?0:1:n>=r?7:6:t>=0?n>=r?3:2:n>=r?4:5}else if(arguments[0]instanceof j&&arguments[1]instanceof j){var s=arguments[0],o=arguments[1],l=o.x-s.x,u=o.y-s.y;if(l===0&&u===0)throw new Nn("Cannot compute the octant for two identical points "+s);return Ta.octant(l,u)}};var Cs=function(){};Cs.prototype.getCoordinates=function(){};Cs.prototype.size=function(){};Cs.prototype.getCoordinate=function(e){};Cs.prototype.isClosed=function(){};Cs.prototype.setData=function(e){};Cs.prototype.getData=function(){};Cs.prototype.interfaces_=function(){return[]};Cs.prototype.getClass=function(){return Cs};var mu=function(){};mu.prototype.addIntersection=function(e,t){};mu.prototype.interfaces_=function(){return[Cs]};mu.prototype.getClass=function(){return mu};var Vn=function(){this._nodeList=new Ei(this),this._pts=null,this._data=null;var e=arguments[0],t=arguments[1];this._pts=e,this._data=t};Vn.prototype.getCoordinates=function(){return this._pts};Vn.prototype.size=function(){return this._pts.length};Vn.prototype.getCoordinate=function(e){return this._pts[e]};Vn.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])};Vn.prototype.getSegmentOctant=function(e){return e===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(e),this.getCoordinate(e+1))};Vn.prototype.setData=function(e){this._data=e};Vn.prototype.safeOctant=function(e,t){return e.equals2D(t)?0:Ta.octant(e,t)};Vn.prototype.getData=function(){return this._data};Vn.prototype.addIntersection=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1];this.addIntersectionNode(e,t)}else if(arguments.length===4){var n=arguments[0],r=arguments[1],s=arguments[3],o=new j(n.getIntersection(s));this.addIntersection(o,r)}};Vn.prototype.toString=function(){return Dr.toLineString(new Bn(this._pts))};Vn.prototype.getNodeList=function(){return this._nodeList};Vn.prototype.addIntersectionNode=function(e,t){var n=t,r=n+1;if(r<this._pts.length){var s=this._pts[r];e.equals2D(s)&&(n=r)}var o=this._nodeList.add(e,n);return o};Vn.prototype.addIntersections=function(e,t,n){for(var r=this,s=0;s<e.getIntersectionNum();s++)r.addIntersection(e,t,n,s)};Vn.prototype.interfaces_=function(){return[mu]};Vn.prototype.getClass=function(){return Vn};Vn.getNodedSubstrings=function(){if(arguments.length===1){var e=arguments[0],t=new le;return Vn.getNodedSubstrings(e,t),t}else if(arguments.length===2)for(var n=arguments[0],r=arguments[1],s=n.iterator();s.hasNext();){var o=s.next();o.getNodeList().addSplitEdges(r)}};var Ae=function(){if(this.p0=null,this.p1=null,arguments.length===0)this.p0=new j,this.p1=new j;else if(arguments.length===1){var e=arguments[0];this.p0=new j(e.p0),this.p1=new j(e.p1)}else if(arguments.length===2)this.p0=arguments[0],this.p1=arguments[1];else if(arguments.length===4){var t=arguments[0],n=arguments[1],r=arguments[2],s=arguments[3];this.p0=new j(t,n),this.p1=new j(r,s)}},U0={serialVersionUID:{configurable:!0}};Ae.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)};Ae.prototype.orientationIndex=function(){if(arguments[0]instanceof Ae){var e=arguments[0],t=ce.orientationIndex(this.p0,this.p1,e.p0),n=ce.orientationIndex(this.p0,this.p1,e.p1);return t>=0&&n>=0||t<=0&&n<=0?Math.max(t,n):0}else if(arguments[0]instanceof j){var r=arguments[0];return ce.orientationIndex(this.p0,this.p1,r)}};Ae.prototype.toGeometry=function(e){return e.createLineString([this.p0,this.p1])};Ae.prototype.isVertical=function(){return this.p0.x===this.p1.x};Ae.prototype.equals=function(e){if(!(e instanceof Ae))return!1;var t=e;return this.p0.equals(t.p0)&&this.p1.equals(t.p1)};Ae.prototype.intersection=function(e){var t=new ia;return t.computeIntersection(this.p0,this.p1,e.p0,e.p1),t.hasIntersection()?t.getIntersection(0):null};Ae.prototype.project=function(){if(arguments[0]instanceof j){var e=arguments[0];if(e.equals(this.p0)||e.equals(this.p1))return new j(e);var t=this.projectionFactor(e),n=new j;return n.x=this.p0.x+t*(this.p1.x-this.p0.x),n.y=this.p0.y+t*(this.p1.y-this.p0.y),n}else if(arguments[0]instanceof Ae){var r=arguments[0],s=this.projectionFactor(r.p0),o=this.projectionFactor(r.p1);if(s>=1&&o>=1||s<=0&&o<=0)return null;var l=this.project(r.p0);s<0&&(l=this.p0),s>1&&(l=this.p1);var u=this.project(r.p1);return o<0&&(u=this.p0),o>1&&(u=this.p1),new Ae(l,u)}};Ae.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()};Ae.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)};Ae.prototype.getCoordinate=function(e){return e===0?this.p0:this.p1};Ae.prototype.distancePerpendicular=function(e){return ce.distancePointLinePerpendicular(e,this.p0,this.p1)};Ae.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)};Ae.prototype.midPoint=function(){return Ae.midPoint(this.p0,this.p1)};Ae.prototype.projectionFactor=function(e){if(e.equals(this.p0))return 0;if(e.equals(this.p1))return 1;var t=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,r=t*t+n*n;if(r<=0)return Ve.NaN;var s=((e.x-this.p0.x)*t+(e.y-this.p0.y)*n)/r;return s};Ae.prototype.closestPoints=function(e){var t=this.intersection(e);if(t!==null)return[t,t];var n=new Array(2).fill(null),r=Ve.MAX_VALUE,s=null,o=this.closestPoint(e.p0);r=o.distance(e.p0),n[0]=o,n[1]=e.p0;var l=this.closestPoint(e.p1);s=l.distance(e.p1),s<r&&(r=s,n[0]=l,n[1]=e.p1);var u=e.closestPoint(this.p0);s=u.distance(this.p0),s<r&&(r=s,n[0]=this.p0,n[1]=u);var c=e.closestPoint(this.p1);return s=c.distance(this.p1),s<r&&(r=s,n[0]=this.p1,n[1]=c),n};Ae.prototype.closestPoint=function(e){var t=this.projectionFactor(e);if(t>0&&t<1)return this.project(e);var n=this.p0.distance(e),r=this.p1.distance(e);return n<r?this.p0:this.p1};Ae.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)};Ae.prototype.getLength=function(){return this.p0.distance(this.p1)};Ae.prototype.compareTo=function(e){var t=e,n=this.p0.compareTo(t.p0);return n!==0?n:this.p1.compareTo(t.p1)};Ae.prototype.reverse=function(){var e=this.p0;this.p0=this.p1,this.p1=e};Ae.prototype.equalsTopo=function(e){return this.p0.equals(e.p0)&&(this.p1.equals(e.p1)||this.p0.equals(e.p1))&&this.p1.equals(e.p0)};Ae.prototype.lineIntersection=function(e){try{var t=Sr.intersection(this.p0,this.p1,e.p0,e.p1);return t}catch(n){if(!(n instanceof Ml))throw n}finally{}return null};Ae.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)};Ae.prototype.pointAlongOffset=function(e,t){var n=this.p0.x+e*(this.p1.x-this.p0.x),r=this.p0.y+e*(this.p1.y-this.p0.y),s=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,l=Math.sqrt(s*s+o*o),u=0,c=0;if(t!==0){if(l<=0)throw new Error("Cannot compute offset from zero-length line segment");u=t*s/l,c=t*o/l}var p=n-c,d=r+u,f=new j(p,d);return f};Ae.prototype.setCoordinates=function(){if(arguments.length===1){var e=arguments[0];this.setCoordinates(e.p0,e.p1)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];this.p0.x=t.x,this.p0.y=t.y,this.p1.x=n.x,this.p1.y=n.y}};Ae.prototype.segmentFraction=function(e){var t=this.projectionFactor(e);return t<0?t=0:(t>1||Ve.isNaN(t))&&(t=1),t};Ae.prototype.toString=function(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"};Ae.prototype.isHorizontal=function(){return this.p0.y===this.p1.y};Ae.prototype.distance=function(){if(arguments[0]instanceof Ae){var e=arguments[0];return ce.distanceLineLine(this.p0,this.p1,e.p0,e.p1)}else if(arguments[0]instanceof j){var t=arguments[0];return ce.distancePointLine(t,this.p0,this.p1)}};Ae.prototype.pointAlong=function(e){var t=new j;return t.x=this.p0.x+e*(this.p1.x-this.p0.x),t.y=this.p0.y+e*(this.p1.y-this.p0.y),t};Ae.prototype.hashCode=function(){var e=Ve.doubleToLongBits(this.p0.x);e^=Ve.doubleToLongBits(this.p0.y)*31;var t=Math.trunc(e)^Math.trunc(e>>32),n=Ve.doubleToLongBits(this.p1.x);n^=Ve.doubleToLongBits(this.p1.y)*31;var r=Math.trunc(n)^Math.trunc(n>>32);return t^r};Ae.prototype.interfaces_=function(){return[_r,Cr]};Ae.prototype.getClass=function(){return Ae};Ae.midPoint=function(e,t){return new j((e.x+t.x)/2,(e.y+t.y)/2)};U0.serialVersionUID.get=function(){return 0x2d2172135f411c00};Object.defineProperties(Ae,U0);var yu=function(){this.tempEnv1=new Ce,this.tempEnv2=new Ce,this._overlapSeg1=new Ae,this._overlapSeg2=new Ae};yu.prototype.overlap=function(){if(arguments.length!==2){if(arguments.length===4){var e=arguments[0],t=arguments[1],n=arguments[2],r=arguments[3];e.getLineSegment(t,this._overlapSeg1),n.getLineSegment(r,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}}};yu.prototype.interfaces_=function(){return[]};yu.prototype.getClass=function(){return yu};var Ui=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var e=arguments[0],t=arguments[1],n=arguments[2],r=arguments[3];this._pts=e,this._start=t,this._end=n,this._context=r};Ui.prototype.getLineSegment=function(e,t){t.p0=this._pts[e],t.p1=this._pts[e+1]};Ui.prototype.computeSelect=function(e,t,n,r){var s=this._pts[t],o=this._pts[n];if(r.tempEnv1.init(s,o),n-t===1)return r.select(this,t),null;if(!e.intersects(r.tempEnv1))return null;var l=Math.trunc((t+n)/2);t<l&&this.computeSelect(e,t,l,r),l<n&&this.computeSelect(e,l,n,r)};Ui.prototype.getCoordinates=function(){for(var e=this,t=new Array(this._end-this._start+1).fill(null),n=0,r=this._start;r<=this._end;r++)t[n++]=e._pts[r];return t};Ui.prototype.computeOverlaps=function(e,t){this.computeOverlapsInternal(this._start,this._end,e,e._start,e._end,t)};Ui.prototype.setId=function(e){this._id=e};Ui.prototype.select=function(e,t){this.computeSelect(e,this._start,this._end,t)};Ui.prototype.getEnvelope=function(){if(this._env===null){var e=this._pts[this._start],t=this._pts[this._end];this._env=new Ce(e,t)}return this._env};Ui.prototype.getEndIndex=function(){return this._end};Ui.prototype.getStartIndex=function(){return this._start};Ui.prototype.getContext=function(){return this._context};Ui.prototype.getId=function(){return this._id};Ui.prototype.computeOverlapsInternal=function(e,t,n,r,s,o){var l=this._pts[e],u=this._pts[t],c=n._pts[r],p=n._pts[s];if(t-e===1&&s-r===1)return o.overlap(this,e,n,r),null;if(o.tempEnv1.init(l,u),o.tempEnv2.init(c,p),!o.tempEnv1.intersects(o.tempEnv2))return null;var d=Math.trunc((e+t)/2),f=Math.trunc((r+s)/2);e<d&&(r<f&&this.computeOverlapsInternal(e,d,n,r,f,o),f<s&&this.computeOverlapsInternal(e,d,n,f,s,o)),d<t&&(r<f&&this.computeOverlapsInternal(d,t,n,r,f,o),f<s&&this.computeOverlapsInternal(d,t,n,f,s,o))};Ui.prototype.interfaces_=function(){return[]};Ui.prototype.getClass=function(){return Ui};var zr=function(){};zr.prototype.interfaces_=function(){return[]};zr.prototype.getClass=function(){return zr};zr.getChainStartIndices=function(e){var t=0,n=new le;n.add(new Hr(t));do{var r=zr.findChainEnd(e,t);n.add(new Hr(r)),t=r}while(t<e.length-1);var s=zr.toIntArray(n);return s};zr.findChainEnd=function(e,t){for(var n=t;n<e.length-1&&e[n].equals2D(e[n+1]);)n++;if(n>=e.length-1)return e.length-1;for(var r=Tn.quadrant(e[n],e[n+1]),s=t+1;s<e.length;){if(!e[s-1].equals2D(e[s])){var o=Tn.quadrant(e[s-1],e[s]);if(o!==r)break}s++}return s-1};zr.getChains=function(){if(arguments.length===1){var e=arguments[0];return zr.getChains(e,null)}else if(arguments.length===2){for(var t=arguments[0],n=arguments[1],r=new le,s=zr.getChainStartIndices(t),o=0;o<s.length-1;o++){var l=new Ui(t,s[o],s[o+1],n);r.add(l)}return r}};zr.toIntArray=function(e){for(var t=new Array(e.size()).fill(null),n=0;n<t.length;n++)t[n]=e.get(n).intValue();return t};var Ho=function(){};Ho.prototype.computeNodes=function(e){};Ho.prototype.getNodedSubstrings=function(){};Ho.prototype.interfaces_=function(){return[]};Ho.prototype.getClass=function(){return Ho};var bu=function(){if(this._segInt=null,arguments.length!==0){if(arguments.length===1){var e=arguments[0];this.setSegmentIntersector(e)}}};bu.prototype.setSegmentIntersector=function(e){this._segInt=e};bu.prototype.interfaces_=function(){return[Ho]};bu.prototype.getClass=function(){return bu};var Bp=function(i){function e(n){n?i.call(this,n):i.call(this),this._monoChains=new le,this._index=new G0,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e;var t={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return Vn.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(r){for(var s=this,o=zr.getChains(r.getCoordinates(),r),l=o.iterator();l.hasNext();){var u=l.next();u.setId(s._idCounter++),s._index.insert(u.getEnvelope(),u),s._monoChains.add(u)}},e.prototype.computeNodes=function(r){var s=this;this._nodedSegStrings=r;for(var o=r.iterator();o.hasNext();)s.add(o.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var r=this,s=new $g(this._segInt),o=this._monoChains.iterator();o.hasNext();)for(var l=o.next(),u=r._index.query(l.getEnvelope()),c=u.iterator();c.hasNext();){var p=c.next();if(p.getId()>l.getId()&&(l.computeOverlaps(p,s),r._nOverlaps++),r._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},t.SegmentOverlapAction.get=function(){return $g},Object.defineProperties(e,t),e}(bu),$g=function(i){function e(){i.call(this),this._si=null;var t=arguments[0];this._si=t}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(arguments.length===4){var n=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3],l=n.getContext(),u=s.getContext();this._si.processIntersections(l,r,u,o)}else return i.prototype.overlap.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(yu),mn=function i(){if(this._quadrantSegments=i.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=i.CAP_ROUND,this._joinStyle=i.JOIN_ROUND,this._mitreLimit=i.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=i.DEFAULT_SIMPLIFY_FACTOR,arguments.length!==0){if(arguments.length===1){var e=arguments[0];this.setQuadrantSegments(e)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];this.setQuadrantSegments(t),this.setEndCapStyle(n)}else if(arguments.length===4){var r=arguments[0],s=arguments[1],o=arguments[2],l=arguments[3];this.setQuadrantSegments(r),this.setEndCapStyle(s),this.setJoinStyle(o),this.setMitreLimit(l)}}},Ks={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};mn.prototype.getEndCapStyle=function(){return this._endCapStyle};mn.prototype.isSingleSided=function(){return this._isSingleSided};mn.prototype.setQuadrantSegments=function(e){this._quadrantSegments=e,this._quadrantSegments===0&&(this._joinStyle=mn.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=mn.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),e<=0&&(this._quadrantSegments=1),this._joinStyle!==mn.JOIN_ROUND&&(this._quadrantSegments=mn.DEFAULT_QUADRANT_SEGMENTS)};mn.prototype.getJoinStyle=function(){return this._joinStyle};mn.prototype.setJoinStyle=function(e){this._joinStyle=e};mn.prototype.setSimplifyFactor=function(e){this._simplifyFactor=e<0?0:e};mn.prototype.getSimplifyFactor=function(){return this._simplifyFactor};mn.prototype.getQuadrantSegments=function(){return this._quadrantSegments};mn.prototype.setEndCapStyle=function(e){this._endCapStyle=e};mn.prototype.getMitreLimit=function(){return this._mitreLimit};mn.prototype.setMitreLimit=function(e){this._mitreLimit=e};mn.prototype.setSingleSided=function(e){this._isSingleSided=e};mn.prototype.interfaces_=function(){return[]};mn.prototype.getClass=function(){return mn};mn.bufferDistanceError=function(e){var t=Math.PI/2/e;return 1-Math.cos(t/2)};Ks.CAP_ROUND.get=function(){return 1};Ks.CAP_FLAT.get=function(){return 2};Ks.CAP_SQUARE.get=function(){return 3};Ks.JOIN_ROUND.get=function(){return 1};Ks.JOIN_MITRE.get=function(){return 2};Ks.JOIN_BEVEL.get=function(){return 3};Ks.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8};Ks.DEFAULT_MITRE_LIMIT.get=function(){return 5};Ks.DEFAULT_SIMPLIFY_FACTOR.get=function(){return .01};Object.defineProperties(mn,Ks);var Fn=function(e){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=ce.COUNTERCLOCKWISE,this._inputLine=e||null},Mu={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Fn.prototype.isDeletable=function(e,t,n,r){var s=this._inputLine[e],o=this._inputLine[t],l=this._inputLine[n];return!this.isConcave(s,o,l)||!this.isShallow(s,o,l,r)?!1:this.isShallowSampled(s,o,e,n,r)};Fn.prototype.deleteShallowConcavities=function(){for(var e=this,t=1,n=this.findNextNonDeletedIndex(t),r=this.findNextNonDeletedIndex(n),s=!1;r<this._inputLine.length;){var o=!1;e.isDeletable(t,n,r,e._distanceTol)&&(e._isDeleted[n]=Fn.DELETE,o=!0,s=!0),o?t=r:t=n,n=e.findNextNonDeletedIndex(t),r=e.findNextNonDeletedIndex(n)}return s};Fn.prototype.isShallowConcavity=function(e,t,n,r){var s=ce.computeOrientation(e,t,n),o=s===this._angleOrientation;if(!o)return!1;var l=ce.distancePointLine(t,e,n);return l<r};Fn.prototype.isShallowSampled=function(e,t,n,r,s){var o=this,l=Math.trunc((r-n)/Fn.NUM_PTS_TO_CHECK);l<=0&&(l=1);for(var u=n;u<r;u+=l)if(!o.isShallow(e,t,o._inputLine[u],s))return!1;return!0};Fn.prototype.isConcave=function(e,t,n){var r=ce.computeOrientation(e,t,n),s=r===this._angleOrientation;return s};Fn.prototype.simplify=function(e){var t=this;this._distanceTol=Math.abs(e),e<0&&(this._angleOrientation=ce.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var n=!1;do n=t.deleteShallowConcavities();while(n);return this.collapseLine()};Fn.prototype.findNextNonDeletedIndex=function(e){for(var t=e+1;t<this._inputLine.length&&this._isDeleted[t]===Fn.DELETE;)t++;return t};Fn.prototype.isShallow=function(e,t,n,r){var s=ce.distancePointLine(t,e,n);return s<r};Fn.prototype.collapseLine=function(){for(var e=this,t=new $u,n=0;n<this._inputLine.length;n++)e._isDeleted[n]!==Fn.DELETE&&t.add(e._inputLine[n]);return t.toCoordinateArray()};Fn.prototype.interfaces_=function(){return[]};Fn.prototype.getClass=function(){return Fn};Fn.simplify=function(e,t){var n=new Fn(e);return n.simplify(t)};Mu.INIT.get=function(){return 0};Mu.DELETE.get=function(){return 1};Mu.KEEP.get=function(){return 1};Mu.NUM_PTS_TO_CHECK.get=function(){return 10};Object.defineProperties(Fn,Mu);var lr=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new le},z0={COORDINATE_ARRAY_TYPE:{configurable:!0}};lr.prototype.getCoordinates=function(){var e=this._ptList.toArray(lr.COORDINATE_ARRAY_TYPE);return e};lr.prototype.setPrecisionModel=function(e){this._precisionModel=e};lr.prototype.addPt=function(e){var t=new j(e);if(this._precisionModel.makePrecise(t),this.isRedundant(t))return null;this._ptList.add(t)};lr.prototype.revere=function(){};lr.prototype.addPts=function(e,t){var n=this;if(t)for(var r=0;r<e.length;r++)n.addPt(e[r]);else for(var s=e.length-1;s>=0;s--)n.addPt(e[s])};lr.prototype.isRedundant=function(e){if(this._ptList.size()<1)return!1;var t=this._ptList.get(this._ptList.size()-1),n=e.distance(t);return n<this._minimimVertexDistance};lr.prototype.toString=function(){var e=new Ot,t=e.createLineString(this.getCoordinates());return t.toString()};lr.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var e=new j(this._ptList.get(0)),t=this._ptList.get(this._ptList.size()-1);if(e.equals(t))return null;this._ptList.add(e)};lr.prototype.setMinimumVertexDistance=function(e){this._minimimVertexDistance=e};lr.prototype.interfaces_=function(){return[]};lr.prototype.getClass=function(){return lr};z0.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)};Object.defineProperties(lr,z0);var en=function(){},Fa={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};en.prototype.interfaces_=function(){return[]};en.prototype.getClass=function(){return en};en.toDegrees=function(e){return e*180/Math.PI};en.normalize=function(e){for(;e>Math.PI;)e-=en.PI_TIMES_2;for(;e<=-Math.PI;)e+=en.PI_TIMES_2;return e};en.angle=function(){if(arguments.length===1){var e=arguments[0];return Math.atan2(e.y,e.x)}else if(arguments.length===2){var t=arguments[0],n=arguments[1],r=n.x-t.x,s=n.y-t.y;return Math.atan2(s,r)}};en.isAcute=function(e,t,n){var r=e.x-t.x,s=e.y-t.y,o=n.x-t.x,l=n.y-t.y,u=r*o+s*l;return u>0};en.isObtuse=function(e,t,n){var r=e.x-t.x,s=e.y-t.y,o=n.x-t.x,l=n.y-t.y,u=r*o+s*l;return u<0};en.interiorAngle=function(e,t,n){var r=en.angle(t,e),s=en.angle(t,n);return Math.abs(s-r)};en.normalizePositive=function(e){if(e<0){for(;e<0;)e+=en.PI_TIMES_2;e>=en.PI_TIMES_2&&(e=0)}else{for(;e>=en.PI_TIMES_2;)e-=en.PI_TIMES_2;e<0&&(e=0)}return e};en.angleBetween=function(e,t,n){var r=en.angle(t,e),s=en.angle(t,n);return en.diff(r,s)};en.diff=function(e,t){var n=null;return e<t?n=t-e:n=e-t,n>Math.PI&&(n=2*Math.PI-n),n};en.toRadians=function(e){return e*Math.PI/180};en.getTurn=function(e,t){var n=Math.sin(t-e);return n>0?en.COUNTERCLOCKWISE:n<0?en.CLOCKWISE:en.NONE};en.angleBetweenOriented=function(e,t,n){var r=en.angle(t,e),s=en.angle(t,n),o=s-r;return o<=-Math.PI?o+en.PI_TIMES_2:o>Math.PI?o-en.PI_TIMES_2:o};Fa.PI_TIMES_2.get=function(){return 2*Math.PI};Fa.PI_OVER_2.get=function(){return Math.PI/2};Fa.PI_OVER_4.get=function(){return Math.PI/4};Fa.COUNTERCLOCKWISE.get=function(){return ce.COUNTERCLOCKWISE};Fa.CLOCKWISE.get=function(){return ce.CLOCKWISE};Fa.NONE.get=function(){return ce.COLLINEAR};Object.defineProperties(en,Fa);var Rn=function i(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new Ae,this._seg1=new Ae,this._offset0=new Ae,this._offset1=new Ae,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],t=arguments[1],n=arguments[2];this._precisionModel=e,this._bufParams=t,this._li=new ia,this._filletAngleQuantum=Math.PI/2/t.getQuadrantSegments(),t.getQuadrantSegments()>=8&&t.getJoinStyle()===mn.JOIN_ROUND&&(this._closingSegLengthFactor=i.MAX_CLOSING_SEG_LEN_FACTOR),this.init(n)},Ou={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Rn.prototype.addNextSegment=function(e,t){if(this._s0=this._s1,this._s1=this._s2,this._s2=e,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=ce.computeOrientation(this._s0,this._s1,this._s2),r=n===ce.CLOCKWISE&&this._side===ne.LEFT||n===ce.COUNTERCLOCKWISE&&this._side===ne.RIGHT;n===0?this.addCollinear(t):r?this.addOutsideTurn(n,t):this.addInsideTurn(n,t)};Rn.prototype.addLineEndCap=function(e,t){var n=new Ae(e,t),r=new Ae;this.computeOffsetSegment(n,ne.LEFT,this._distance,r);var s=new Ae;this.computeOffsetSegment(n,ne.RIGHT,this._distance,s);var o=t.x-e.x,l=t.y-e.y,u=Math.atan2(l,o);switch(this._bufParams.getEndCapStyle()){case mn.CAP_ROUND:this._segList.addPt(r.p1),this.addFilletArc(t,u+Math.PI/2,u-Math.PI/2,ce.CLOCKWISE,this._distance),this._segList.addPt(s.p1);break;case mn.CAP_FLAT:this._segList.addPt(r.p1),this._segList.addPt(s.p1);break;case mn.CAP_SQUARE:var c=new j;c.x=Math.abs(this._distance)*Math.cos(u),c.y=Math.abs(this._distance)*Math.sin(u);var p=new j(r.p1.x+c.x,r.p1.y+c.y),d=new j(s.p1.x+c.x,s.p1.y+c.y);this._segList.addPt(p),this._segList.addPt(d);break}};Rn.prototype.getCoordinates=function(){var e=this._segList.getCoordinates();return e};Rn.prototype.addMitreJoin=function(e,t,n,r){var s=!0,o=null;try{o=Sr.intersection(t.p0,t.p1,n.p0,n.p1);var l=r<=0?1:o.distance(e)/Math.abs(r);l>this._bufParams.getMitreLimit()&&(s=!1)}catch(u){if(u instanceof Ml)o=new j(0,0),s=!1;else throw u}finally{}s?this._segList.addPt(o):this.addLimitedMitreJoin(t,n,r,this._bufParams.getMitreLimit())};Rn.prototype.addFilletCorner=function(e,t,n,r,s){var o=t.x-e.x,l=t.y-e.y,u=Math.atan2(l,o),c=n.x-e.x,p=n.y-e.y,d=Math.atan2(p,c);r===ce.CLOCKWISE?u<=d&&(u+=2*Math.PI):u>=d&&(u-=2*Math.PI),this._segList.addPt(t),this.addFilletArc(e,u,d,r,s),this._segList.addPt(n)};Rn.prototype.addOutsideTurn=function(e,t){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Rn.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===mn.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===mn.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(t&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,e,this._distance),this._segList.addPt(this._offset1.p0))};Rn.prototype.createSquare=function(e){this._segList.addPt(new j(e.x+this._distance,e.y+this._distance)),this._segList.addPt(new j(e.x+this._distance,e.y-this._distance)),this._segList.addPt(new j(e.x-this._distance,e.y-this._distance)),this._segList.addPt(new j(e.x-this._distance,e.y+this._distance)),this._segList.closeRing()};Rn.prototype.addSegments=function(e,t){this._segList.addPts(e,t)};Rn.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)};Rn.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)};Rn.prototype.initSideSegments=function(e,t,n){this._s1=e,this._s2=t,this._side=n,this._seg1.setCoordinates(e,t),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)};Rn.prototype.addLimitedMitreJoin=function(e,t,n,r){var s=this._seg0.p1,o=en.angle(s,this._seg0.p0),l=en.angleBetweenOriented(this._seg0.p0,s,this._seg1.p1),u=l/2,c=en.normalize(o+u),p=en.normalize(c+Math.PI),d=r*n,f=d*Math.abs(Math.sin(u)),g=n-f,v=s.x+d*Math.cos(p),w=s.y+d*Math.sin(p),A=new j(v,w),C=new Ae(s,A),m=C.pointAlongOffset(1,g),y=C.pointAlongOffset(1,-g);this._side===ne.LEFT?(this._segList.addPt(m),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(m))};Rn.prototype.computeOffsetSegment=function(e,t,n,r){var s=t===ne.LEFT?1:-1,o=e.p1.x-e.p0.x,l=e.p1.y-e.p0.y,u=Math.sqrt(o*o+l*l),c=s*n*o/u,p=s*n*l/u;r.p0.x=e.p0.x-p,r.p0.y=e.p0.y+c,r.p1.x=e.p1.x-p,r.p1.y=e.p1.y+c};Rn.prototype.addFilletArc=function(e,t,n,r,s){var o=this,l=r===ce.CLOCKWISE?-1:1,u=Math.abs(t-n),c=Math.trunc(u/this._filletAngleQuantum+.5);if(c<1)return null;for(var p=0,d=u/c,f=p,g=new j;f<u;){var v=t+l*f;g.x=e.x+s*Math.cos(v),g.y=e.y+s*Math.sin(v),o._segList.addPt(g),f+=d}};Rn.prototype.addInsideTurn=function(e,t){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Rn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new j((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var r=new j((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(r)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}};Rn.prototype.createCircle=function(e){var t=new j(e.x+this._distance,e.y);this._segList.addPt(t),this.addFilletArc(e,0,2*Math.PI,-1,this._distance),this._segList.closeRing()};Rn.prototype.addBevelJoin=function(e,t){this._segList.addPt(e.p1),this._segList.addPt(t.p0)};Rn.prototype.init=function(e){this._distance=e,this._maxCurveSegmentError=e*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new lr,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(e*Rn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)};Rn.prototype.addCollinear=function(e){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);var t=this._li.getIntersectionNum();t>=2&&(this._bufParams.getJoinStyle()===mn.JOIN_BEVEL||this._bufParams.getJoinStyle()===mn.JOIN_MITRE?(e&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,ce.CLOCKWISE,this._distance))};Rn.prototype.closeRing=function(){this._segList.closeRing()};Rn.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle};Rn.prototype.interfaces_=function(){return[]};Rn.prototype.getClass=function(){return Rn};Ou.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return .001};Ou.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return .001};Ou.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6};Ou.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80};Object.defineProperties(Rn,Ou);var Oi=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var e=arguments[0],t=arguments[1];this._precisionModel=e,this._bufParams=t};Oi.prototype.getOffsetCurve=function(e,t){if(this._distance=t,t===0)return null;var n=t<0,r=Math.abs(t),s=this.getSegGen(r);e.length<=1?this.computePointCurve(e[0],s):this.computeOffsetCurve(e,n,s);var o=s.getCoordinates();return n&&Pt.reverse(o),o};Oi.prototype.computeSingleSidedBufferCurve=function(e,t,n){var r=this.simplifyTolerance(this._distance);if(t){n.addSegments(e,!0);var s=Fn.simplify(e,-r),o=s.length-1;n.initSideSegments(s[o],s[o-1],ne.LEFT),n.addFirstSegment();for(var l=o-2;l>=0;l--)n.addNextSegment(s[l],!0)}else{n.addSegments(e,!1);var u=Fn.simplify(e,r),c=u.length-1;n.initSideSegments(u[0],u[1],ne.LEFT),n.addFirstSegment();for(var p=2;p<=c;p++)n.addNextSegment(u[p],!0)}n.addLastSegment(),n.closeRing()};Oi.prototype.computeRingBufferCurve=function(e,t,n){var r=this.simplifyTolerance(this._distance);t===ne.RIGHT&&(r=-r);var s=Fn.simplify(e,r),o=s.length-1;n.initSideSegments(s[o-1],s[0],t);for(var l=1;l<=o;l++){var u=l!==1;n.addNextSegment(s[l],u)}n.closeRing()};Oi.prototype.computeLineBufferCurve=function(e,t){var n=this.simplifyTolerance(this._distance),r=Fn.simplify(e,n),s=r.length-1;t.initSideSegments(r[0],r[1],ne.LEFT);for(var o=2;o<=s;o++)t.addNextSegment(r[o],!0);t.addLastSegment(),t.addLineEndCap(r[s-1],r[s]);var l=Fn.simplify(e,-n),u=l.length-1;t.initSideSegments(l[u],l[u-1],ne.LEFT);for(var c=u-2;c>=0;c--)t.addNextSegment(l[c],!0);t.addLastSegment(),t.addLineEndCap(l[1],l[0]),t.closeRing()};Oi.prototype.computePointCurve=function(e,t){switch(this._bufParams.getEndCapStyle()){case mn.CAP_ROUND:t.createCircle(e);break;case mn.CAP_SQUARE:t.createSquare(e);break}};Oi.prototype.getLineCurve=function(e,t){if(this._distance=t,t<0&&!this._bufParams.isSingleSided()||t===0)return null;var n=Math.abs(t),r=this.getSegGen(n);if(e.length<=1)this.computePointCurve(e[0],r);else if(this._bufParams.isSingleSided()){var s=t<0;this.computeSingleSidedBufferCurve(e,s,r)}else this.computeLineBufferCurve(e,r);var o=r.getCoordinates();return o};Oi.prototype.getBufferParameters=function(){return this._bufParams};Oi.prototype.simplifyTolerance=function(e){return e*this._bufParams.getSimplifyFactor()};Oi.prototype.getRingCurve=function(e,t,n){if(this._distance=n,e.length<=2)return this.getLineCurve(e,n);if(n===0)return Oi.copyCoordinates(e);var r=this.getSegGen(n);return this.computeRingBufferCurve(e,t,r),r.getCoordinates()};Oi.prototype.computeOffsetCurve=function(e,t,n){var r=this.simplifyTolerance(this._distance);if(t){var s=Fn.simplify(e,-r),o=s.length-1;n.initSideSegments(s[o],s[o-1],ne.LEFT),n.addFirstSegment();for(var l=o-2;l>=0;l--)n.addNextSegment(s[l],!0)}else{var u=Fn.simplify(e,r),c=u.length-1;n.initSideSegments(u[0],u[1],ne.LEFT),n.addFirstSegment();for(var p=2;p<=c;p++)n.addNextSegment(u[p],!0)}n.addLastSegment()};Oi.prototype.getSegGen=function(e){return new Rn(this._precisionModel,this._bufParams,e)};Oi.prototype.interfaces_=function(){return[]};Oi.prototype.getClass=function(){return Oi};Oi.copyCoordinates=function(e){for(var t=new Array(e.length).fill(null),n=0;n<t.length;n++)t[n]=new j(e[n]);return t};var xa=function(){this._subgraphs=null,this._seg=new Ae,this._cga=new ce;var e=arguments[0];this._subgraphs=e},H0={DepthSegment:{configurable:!0}};xa.prototype.findStabbedSegments=function(){var e=this;if(arguments.length===1){for(var t=arguments[0],n=new le,r=this._subgraphs.iterator();r.hasNext();){var s=r.next(),o=s.getEnvelope();t.y<o.getMinY()||t.y>o.getMaxY()||e.findStabbedSegments(t,s.getDirectedEdges(),n)}return n}else if(arguments.length===3){if(Me(arguments[2],Er)&&arguments[0]instanceof j&&arguments[1]instanceof Od)for(var l=arguments[0],u=arguments[1],c=arguments[2],p=u.getEdge().getCoordinates(),d=0;d<p.length-1;d++){e._seg.p0=p[d],e._seg.p1=p[d+1],e._seg.p0.y>e._seg.p1.y&&e._seg.reverse();var f=Math.max(e._seg.p0.x,e._seg.p1.x);if(!(f<l.x)&&!e._seg.isHorizontal()&&!(l.y<e._seg.p0.y||l.y>e._seg.p1.y)&&ce.computeOrientation(e._seg.p0,e._seg.p1,l)!==ce.RIGHT){var g=u.getDepth(ne.LEFT);e._seg.p0.equals(p[d])||(g=u.getDepth(ne.RIGHT));var v=new Yo(e._seg,g);c.add(v)}}else if(Me(arguments[2],Er)&&arguments[0]instanceof j&&Me(arguments[1],Er))for(var w=arguments[0],A=arguments[1],C=arguments[2],m=A.iterator();m.hasNext();){var y=m.next();y.isForward()&&e.findStabbedSegments(w,y,C)}}};xa.prototype.getDepth=function(e){var t=this.findStabbedSegments(e);if(t.size()===0)return 0;var n=Nr.min(t);return n._leftDepth};xa.prototype.interfaces_=function(){return[]};xa.prototype.getClass=function(){return xa};H0.DepthSegment.get=function(){return Yo};Object.defineProperties(xa,H0);var Yo=function(){this._upwardSeg=null,this._leftDepth=null;var e=arguments[0],t=arguments[1];this._upwardSeg=new Ae(e),this._leftDepth=t};Yo.prototype.compareTo=function(e){var t=e;if(this._upwardSeg.minX()>=t._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=t._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(t._upwardSeg);return n!==0||(n=-1*t._upwardSeg.orientationIndex(this._upwardSeg),n!==0)?n:this._upwardSeg.compareTo(t._upwardSeg)};Yo.prototype.compareX=function(e,t){var n=e.p0.compareTo(t.p0);return n!==0?n:e.p1.compareTo(t.p1)};Yo.prototype.toString=function(){return this._upwardSeg.toString()};Yo.prototype.interfaces_=function(){return[_r]};Yo.prototype.getClass=function(){return Yo};var bn=function(e,t,n){this.p0=e||null,this.p1=t||null,this.p2=n||null};bn.prototype.area=function(){return bn.area(this.p0,this.p1,this.p2)};bn.prototype.signedArea=function(){return bn.signedArea(this.p0,this.p1,this.p2)};bn.prototype.interpolateZ=function(e){if(e===null)throw new Nn("Supplied point is null.");return bn.interpolateZ(e,this.p0,this.p1,this.p2)};bn.prototype.longestSideLength=function(){return bn.longestSideLength(this.p0,this.p1,this.p2)};bn.prototype.isAcute=function(){return bn.isAcute(this.p0,this.p1,this.p2)};bn.prototype.circumcentre=function(){return bn.circumcentre(this.p0,this.p1,this.p2)};bn.prototype.area3D=function(){return bn.area3D(this.p0,this.p1,this.p2)};bn.prototype.centroid=function(){return bn.centroid(this.p0,this.p1,this.p2)};bn.prototype.inCentre=function(){return bn.inCentre(this.p0,this.p1,this.p2)};bn.prototype.interfaces_=function(){return[]};bn.prototype.getClass=function(){return bn};bn.area=function(e,t,n){return Math.abs(((n.x-e.x)*(t.y-e.y)-(t.x-e.x)*(n.y-e.y))/2)};bn.signedArea=function(e,t,n){return((n.x-e.x)*(t.y-e.y)-(t.x-e.x)*(n.y-e.y))/2};bn.det=function(e,t,n,r){return e*r-t*n};bn.interpolateZ=function(e,t,n,r){var s=t.x,o=t.y,l=n.x-s,u=r.x-s,c=n.y-o,p=r.y-o,d=l*p-u*c,f=e.x-s,g=e.y-o,v=(p*f-u*g)/d,w=(-c*f+l*g)/d,A=t.z+v*(n.z-t.z)+w*(r.z-t.z);return A};bn.longestSideLength=function(e,t,n){var r=e.distance(t),s=t.distance(n),o=n.distance(e),l=r;return s>l&&(l=s),o>l&&(l=o),l};bn.isAcute=function(e,t,n){return!(!en.isAcute(e,t,n)||!en.isAcute(t,n,e)||!en.isAcute(n,e,t))};bn.circumcentre=function(e,t,n){var r=n.x,s=n.y,o=e.x-r,l=e.y-s,u=t.x-r,c=t.y-s,p=2*bn.det(o,l,u,c),d=bn.det(l,o*o+l*l,c,u*u+c*c),f=bn.det(o,o*o+l*l,u,u*u+c*c),g=r-d/p,v=s+f/p;return new j(g,v)};bn.perpendicularBisector=function(e,t){var n=t.x-e.x,r=t.y-e.y,s=new Sr(e.x+n/2,e.y+r/2,1),o=new Sr(e.x-r+n/2,e.y+n+r/2,1);return new Sr(s,o)};bn.angleBisector=function(e,t,n){var r=t.distance(e),s=t.distance(n),o=r/(r+s),l=n.x-e.x,u=n.y-e.y,c=new j(e.x+o*l,e.y+o*u);return c};bn.area3D=function(e,t,n){var r=t.x-e.x,s=t.y-e.y,o=t.z-e.z,l=n.x-e.x,u=n.y-e.y,c=n.z-e.z,p=s*c-o*u,d=o*l-r*c,f=r*u-s*l,g=p*p+d*d+f*f,v=Math.sqrt(g)/2;return v};bn.centroid=function(e,t,n){var r=(e.x+t.x+n.x)/3,s=(e.y+t.y+n.y)/3;return new j(r,s)};bn.inCentre=function(e,t,n){var r=t.distance(n),s=e.distance(n),o=e.distance(t),l=r+s+o,u=(r*e.x+s*t.x+o*n.x)/l,c=(r*e.y+s*t.y+o*n.y)/l;return new j(u,c)};var wr=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new le;var e=arguments[0],t=arguments[1],n=arguments[2];this._inputGeom=e,this._distance=t,this._curveBuilder=n};wr.prototype.addPoint=function(e){if(this._distance<=0)return null;var t=e.getCoordinates(),n=this._curveBuilder.getLineCurve(t,this._distance);this.addCurve(n,W.EXTERIOR,W.INTERIOR)};wr.prototype.addPolygon=function(e){var t=this,n=this._distance,r=ne.LEFT;this._distance<0&&(n=-this._distance,r=ne.RIGHT);var s=e.getExteriorRing(),o=Pt.removeRepeatedPoints(s.getCoordinates());if(this._distance<0&&this.isErodedCompletely(s,this._distance)||this._distance<=0&&o.length<3)return null;this.addPolygonRing(o,n,r,W.EXTERIOR,W.INTERIOR);for(var l=0;l<e.getNumInteriorRing();l++){var u=e.getInteriorRingN(l),c=Pt.removeRepeatedPoints(u.getCoordinates());t._distance>0&&t.isErodedCompletely(u,-t._distance)||t.addPolygonRing(c,n,ne.opposite(r),W.INTERIOR,W.EXTERIOR)}};wr.prototype.isTriangleErodedCompletely=function(e,t){var n=new bn(e[0],e[1],e[2]),r=n.inCentre(),s=ce.distancePointLine(r,n.p0,n.p1);return s<Math.abs(t)};wr.prototype.addLineString=function(e){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var t=Pt.removeRepeatedPoints(e.getCoordinates()),n=this._curveBuilder.getLineCurve(t,this._distance);this.addCurve(n,W.EXTERIOR,W.INTERIOR)};wr.prototype.addCurve=function(e,t,n){if(e===null||e.length<2)return null;var r=new Vn(e,new _n(0,W.BOUNDARY,t,n));this._curveList.add(r)};wr.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList};wr.prototype.addPolygonRing=function(e,t,n,r,s){if(t===0&&e.length<ws.MINIMUM_VALID_SIZE)return null;var o=r,l=s;e.length>=ws.MINIMUM_VALID_SIZE&&ce.isCCW(e)&&(o=s,l=r,n=ne.opposite(n));var u=this._curveBuilder.getRingCurve(e,n,t);this.addCurve(u,o,l)};wr.prototype.add=function(e){if(e.isEmpty())return null;e instanceof ei?this.addPolygon(e):e instanceof Pn?this.addLineString(e):e instanceof Vi?this.addPoint(e):e instanceof gl?this.addCollection(e):e instanceof zo?this.addCollection(e):e instanceof ms?this.addCollection(e):e instanceof qi&&this.addCollection(e)};wr.prototype.isErodedCompletely=function(e,t){var n=e.getCoordinates();if(n.length<4)return t<0;if(n.length===4)return this.isTriangleErodedCompletely(n,t);var r=e.getEnvelopeInternal(),s=Math.min(r.getHeight(),r.getWidth());return t<0&&2*Math.abs(t)>s};wr.prototype.addCollection=function(e){for(var t=this,n=0;n<e.getNumGeometries();n++){var r=e.getGeometryN(n);t.add(r)}};wr.prototype.interfaces_=function(){return[]};wr.prototype.getClass=function(){return wr};var vl=function(){};vl.prototype.locate=function(e){};vl.prototype.interfaces_=function(){return[]};vl.prototype.getClass=function(){return vl};var ys=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var e=arguments[0];this._parent=e,this._atStart=!0,this._index=0,this._max=e.getNumGeometries()};ys.prototype.next=function(){if(this._atStart)return this._atStart=!1,ys.isAtomic(this._parent)&&this._index++,this._parent;if(this._subcollectionIterator!==null){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new Pl;var e=this._parent.getGeometryN(this._index++);return e instanceof qi?(this._subcollectionIterator=new ys(e),this._subcollectionIterator.next()):e};ys.prototype.remove=function(){throw new Error(this.getClass().getName())};ys.prototype.hasNext=function(){if(this._atStart)return!0;if(this._subcollectionIterator!==null){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)};ys.prototype.interfaces_=function(){return[Ol]};ys.prototype.getClass=function(){return ys};ys.isAtomic=function(e){return!(e instanceof qi)};var rr=function(){this._geom=null;var e=arguments[0];this._geom=e};rr.prototype.locate=function(e){return rr.locate(e,this._geom)};rr.prototype.interfaces_=function(){return[vl]};rr.prototype.getClass=function(){return rr};rr.isPointInRing=function(e,t){return t.getEnvelopeInternal().intersects(e)?ce.isPointInRing(e,t.getCoordinates()):!1};rr.containsPointInPolygon=function(e,t){if(t.isEmpty())return!1;var n=t.getExteriorRing();if(!rr.isPointInRing(e,n))return!1;for(var r=0;r<t.getNumInteriorRing();r++){var s=t.getInteriorRingN(r);if(rr.isPointInRing(e,s))return!1}return!0};rr.containsPoint=function(e,t){if(t instanceof ei)return rr.containsPointInPolygon(e,t);if(t instanceof qi)for(var n=new ys(t);n.hasNext();){var r=n.next();if(r!==t&&rr.containsPoint(e,r))return!0}return!1};rr.locate=function(e,t){return t.isEmpty()?W.EXTERIOR:rr.containsPoint(e,t)?W.INTERIOR:W.EXTERIOR};var vi=function(){this._edgeMap=new yi,this._edgeList=null,this._ptInAreaLocation=[W.NONE,W.NONE]};vi.prototype.getNextCW=function(e){this.getEdges();var t=this._edgeList.indexOf(e),n=t-1;return t===0&&(n=this._edgeList.size()-1),this._edgeList.get(n)};vi.prototype.propagateSideLabels=function(e){for(var t=W.NONE,n=this.iterator();n.hasNext();){var r=n.next(),s=r.getLabel();s.isArea(e)&&s.getLocation(e,ne.LEFT)!==W.NONE&&(t=s.getLocation(e,ne.LEFT))}if(t===W.NONE)return null;for(var o=t,l=this.iterator();l.hasNext();){var u=l.next(),c=u.getLabel();if(c.getLocation(e,ne.ON)===W.NONE&&c.setLocation(e,ne.ON,o),c.isArea(e)){var p=c.getLocation(e,ne.LEFT),d=c.getLocation(e,ne.RIGHT);if(d!==W.NONE){if(d!==o)throw new zs("side location conflict",u.getCoordinate());p===W.NONE&&nt.shouldNeverReachHere("found single null side (at "+u.getCoordinate()+")"),o=p}else nt.isTrue(c.getLocation(e,ne.LEFT)===W.NONE,"found single null side"),c.setLocation(e,ne.RIGHT,o),c.setLocation(e,ne.LEFT,o)}}};vi.prototype.getCoordinate=function(){var e=this.iterator();if(!e.hasNext())return null;var t=e.next();return t.getCoordinate()};vi.prototype.print=function(e){hi.out.println("EdgeEndStar:   "+this.getCoordinate());for(var t=this.iterator();t.hasNext();){var n=t.next();n.print(e)}};vi.prototype.isAreaLabelsConsistent=function(e){return this.computeEdgeEndLabels(e.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)};vi.prototype.checkAreaLabelsConsistent=function(e){var t=this.getEdges();if(t.size()<=0)return!0;var n=t.size()-1,r=t.get(n).getLabel(),s=r.getLocation(e,ne.LEFT);nt.isTrue(s!==W.NONE,"Found unlabelled area edge");for(var o=s,l=this.iterator();l.hasNext();){var u=l.next(),c=u.getLabel();nt.isTrue(c.isArea(e),"Found non-area edge");var p=c.getLocation(e,ne.LEFT),d=c.getLocation(e,ne.RIGHT);if(p===d||d!==o)return!1;o=p}return!0};vi.prototype.findIndex=function(e){var t=this;this.iterator();for(var n=0;n<this._edgeList.size();n++){var r=t._edgeList.get(n);if(r===e)return n}return-1};vi.prototype.iterator=function(){return this.getEdges().iterator()};vi.prototype.getEdges=function(){return this._edgeList===null&&(this._edgeList=new le(this._edgeMap.values())),this._edgeList};vi.prototype.getLocation=function(e,t,n){return this._ptInAreaLocation[e]===W.NONE&&(this._ptInAreaLocation[e]=rr.locate(t,n[e].getGeometry())),this._ptInAreaLocation[e]};vi.prototype.toString=function(){var e=new ss;e.append("EdgeEndStar:   "+this.getCoordinate()),e.append(`
`);for(var t=this.iterator();t.hasNext();){var n=t.next();e.append(n),e.append(`
`)}return e.toString()};vi.prototype.computeEdgeEndLabels=function(e){for(var t=this.iterator();t.hasNext();){var n=t.next();n.computeLabel(e)}};vi.prototype.computeLabelling=function(e){var t=this;this.computeEdgeEndLabels(e[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var n=[!1,!1],r=this.iterator();r.hasNext();)for(var s=r.next(),o=s.getLabel(),l=0;l<2;l++)o.isLine(l)&&o.getLocation(l)===W.BOUNDARY&&(n[l]=!0);for(var u=this.iterator();u.hasNext();)for(var c=u.next(),p=c.getLabel(),d=0;d<2;d++)if(p.isAnyNull(d)){var f=W.NONE;if(n[d])f=W.EXTERIOR;else{var g=c.getCoordinate();f=t.getLocation(d,g,e)}p.setAllLocationsIfNull(d,f)}};vi.prototype.getDegree=function(){return this._edgeMap.size()};vi.prototype.insertEdgeEnd=function(e,t){this._edgeMap.put(e,t),this._edgeList=null};vi.prototype.interfaces_=function(){return[]};vi.prototype.getClass=function(){return vi};var Sw=function(i){function e(){i.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){var n=this;this.getResultAreaEdges();for(var r=null,s=null,o=this._SCANNING_FOR_INCOMING,l=0;l<this._resultAreaEdgeList.size();l++){var u=n._resultAreaEdgeList.get(l),c=u.getSym();if(u.getLabel().isArea())switch(r===null&&u.isInResult()&&(r=u),o){case n._SCANNING_FOR_INCOMING:if(!c.isInResult())continue;s=c,o=n._LINKING_TO_OUTGOING;break;case n._LINKING_TO_OUTGOING:if(!u.isInResult())continue;s.setNext(u),o=n._SCANNING_FOR_INCOMING;break}}if(o===this._LINKING_TO_OUTGOING){if(r===null)throw new zs("no outgoing dirEdge found",this.getCoordinate());nt.isTrue(r.isInResult(),"unable to link last incoming dirEdge"),s.setNext(r)}},e.prototype.insert=function(n){var r=n;this.insertEdgeEnd(r,r)},e.prototype.getRightmostEdge=function(){var n=this.getEdges(),r=n.size();if(r<1)return null;var s=n.get(0);if(r===1)return s;var o=n.get(r-1),l=s.getQuadrant(),u=o.getQuadrant();return Tn.isNorthern(l)&&Tn.isNorthern(u)?s:!Tn.isNorthern(l)&&!Tn.isNorthern(u)?o:s.getDy()!==0?s:o.getDy()!==0?o:(nt.shouldNeverReachHere("found two horizontal edges incident on node"),null)},e.prototype.print=function(n){hi.out.println("DirectedEdgeStar: "+this.getCoordinate());for(var r=this.iterator();r.hasNext();){var s=r.next();n.print("out "),s.print(n),n.println(),n.print("in "),s.getSym().print(n),n.println()}},e.prototype.getResultAreaEdges=function(){var n=this;if(this._resultAreaEdgeList!==null)return this._resultAreaEdgeList;this._resultAreaEdgeList=new le;for(var r=this.iterator();r.hasNext();){var s=r.next();(s.isInResult()||s.getSym().isInResult())&&n._resultAreaEdgeList.add(s)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(n){for(var r=this.iterator();r.hasNext();){var s=r.next(),o=s.getLabel();o.setAllLocationsIfNull(0,n.getLocation(0)),o.setAllLocationsIfNull(1,n.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){var n=this;this.getEdges();for(var r=null,s=null,o=this._edgeList.size()-1;o>=0;o--){var l=n._edgeList.get(o),u=l.getSym();s===null&&(s=u),r!==null&&u.setNext(r),r=l}s.setNext(r)},e.prototype.computeDepths=function(){var n=this;if(arguments.length===1){var r=arguments[0],s=this.findIndex(r),o=r.getDepth(ne.LEFT),l=r.getDepth(ne.RIGHT),u=this.computeDepths(s+1,this._edgeList.size(),o),c=this.computeDepths(0,s,u);if(c!==l)throw new zs("depth mismatch at "+r.getCoordinate())}else if(arguments.length===3){for(var p=arguments[0],d=arguments[1],f=arguments[2],g=f,v=p;v<d;v++){var w=n._edgeList.get(v);w.setEdgeDepths(ne.RIGHT,g),g=w.getDepth(ne.LEFT)}return g}},e.prototype.mergeSymLabels=function(){for(var n=this.iterator();n.hasNext();){var r=n.next(),s=r.getLabel();s.merge(r.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(n){for(var r=this,s=null,o=null,l=this._SCANNING_FOR_INCOMING,u=this._resultAreaEdgeList.size()-1;u>=0;u--){var c=r._resultAreaEdgeList.get(u),p=c.getSym();switch(s===null&&c.getEdgeRing()===n&&(s=c),l){case r._SCANNING_FOR_INCOMING:if(p.getEdgeRing()!==n)continue;o=p,l=r._LINKING_TO_OUTGOING;break;case r._LINKING_TO_OUTGOING:if(c.getEdgeRing()!==n)continue;o.setNextMin(c),l=r._SCANNING_FOR_INCOMING;break}}l===this._LINKING_TO_OUTGOING&&(nt.isTrue(s!==null,"found null for first outgoing dirEdge"),nt.isTrue(s.getEdgeRing()===n,"unable to link last incoming dirEdge"),o.setNextMin(s))},e.prototype.getOutgoingDegree=function(){if(arguments.length===0){for(var n=0,r=this.iterator();r.hasNext();){var s=r.next();s.isInResult()&&n++}return n}else if(arguments.length===1){for(var o=arguments[0],l=0,u=this.iterator();u.hasNext();){var c=u.next();c.getEdgeRing()===o&&l++}return l}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var n=W.NONE,r=this.iterator();r.hasNext();){var s=r.next(),o=s.getSym();if(!s.isLineEdge()){if(s.isInResult()){n=W.INTERIOR;break}if(o.isInResult()){n=W.EXTERIOR;break}}}if(n===W.NONE)return null;for(var l=n,u=this.iterator();u.hasNext();){var c=u.next(),p=c.getSym();c.isLineEdge()?c.getEdge().setCovered(l===W.INTERIOR):(c.isInResult()&&(l=W.EXTERIOR),p.isInResult()&&(l=W.INTERIOR))}},e.prototype.computeLabelling=function(n){var r=this;i.prototype.computeLabelling.call(this,n),this._label=new _n(W.NONE);for(var s=this.iterator();s.hasNext();)for(var o=s.next(),l=o.getEdge(),u=l.getLabel(),c=0;c<2;c++){var p=u.getLocation(c);(p===W.INTERIOR||p===W.BOUNDARY)&&r._label.setLocation(c,W.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(vi),Y0=function(i){function e(){i.apply(this,arguments)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.createNode=function(n){return new gc(n,new Sw)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(ml),yo=function i(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=i.orientation(e)};yo.prototype.compareTo=function(e){var t=e,n=yo.compareOriented(this._pts,this._orientation,t._pts,t._orientation);return n};yo.prototype.interfaces_=function(){return[_r]};yo.prototype.getClass=function(){return yo};yo.orientation=function(e){return Pt.increasingDirection(e)===1};yo.compareOriented=function(e,t,n,r){for(var s=t?1:-1,o=r?1:-1,l=t?e.length:-1,u=r?n.length:-1,c=t?0:e.length-1,p=r?0:n.length-1;;){var d=e[c].compareTo(n[p]);if(d!==0)return d;c+=s,p+=o;var f=c===l,g=p===u;if(f&&!g)return-1;if(!f&&g)return 1;if(f&&g)return 0}};var Lr=function(){this._edges=new le,this._ocaMap=new yi};Lr.prototype.print=function(e){var t=this;e.print("MULTILINESTRING ( ");for(var n=0;n<this._edges.size();n++){var r=t._edges.get(n);n>0&&e.print(","),e.print("(");for(var s=r.getCoordinates(),o=0;o<s.length;o++)o>0&&e.print(","),e.print(s[o].x+" "+s[o].y);e.println(")")}e.print(")  ")};Lr.prototype.addAll=function(e){for(var t=this,n=e.iterator();n.hasNext();)t.add(n.next())};Lr.prototype.findEdgeIndex=function(e){for(var t=this,n=0;n<this._edges.size();n++)if(t._edges.get(n).equals(e))return n;return-1};Lr.prototype.iterator=function(){return this._edges.iterator()};Lr.prototype.getEdges=function(){return this._edges};Lr.prototype.get=function(e){return this._edges.get(e)};Lr.prototype.findEqualEdge=function(e){var t=new yo(e.getCoordinates()),n=this._ocaMap.get(t);return n};Lr.prototype.add=function(e){this._edges.add(e);var t=new yo(e.getCoordinates());this._ocaMap.put(t,e)};Lr.prototype.interfaces_=function(){return[]};Lr.prototype.getClass=function(){return Lr};var Xo=function(){};Xo.prototype.processIntersections=function(e,t,n,r){};Xo.prototype.isDone=function(){};Xo.prototype.interfaces_=function(){return[]};Xo.prototype.getClass=function(){return Xo};var ur=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var e=arguments[0];this._li=e};ur.prototype.isTrivialIntersection=function(e,t,n,r){if(e===n&&this._li.getIntersectionNum()===1){if(ur.isAdjacentSegments(t,r))return!0;if(e.isClosed()){var s=e.size()-1;if(t===0&&r===s||r===0&&t===s)return!0}}return!1};ur.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint};ur.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior};ur.prototype.getLineIntersector=function(){return this._li};ur.prototype.hasProperIntersection=function(){return this._hasProper};ur.prototype.processIntersections=function(e,t,n,r){if(e===n&&t===r)return null;this.numTests++;var s=e.getCoordinates()[t],o=e.getCoordinates()[t+1],l=n.getCoordinates()[r],u=n.getCoordinates()[r+1];this._li.computeIntersection(s,o,l,u),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(e,t,n,r)||(this._hasIntersection=!0,e.addIntersections(this._li,t,0),n.addIntersections(this._li,r,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))};ur.prototype.hasIntersection=function(){return this._hasIntersection};ur.prototype.isDone=function(){return!1};ur.prototype.hasInteriorIntersection=function(){return this._hasInterior};ur.prototype.interfaces_=function(){return[Xo]};ur.prototype.getClass=function(){return ur};ur.isAdjacentSegments=function(e,t){return Math.abs(e-t)===1};var es=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var e=arguments[0],t=arguments[1],n=arguments[2];this.coord=new j(e),this.segmentIndex=t,this.dist=n};es.prototype.getSegmentIndex=function(){return this.segmentIndex};es.prototype.getCoordinate=function(){return this.coord};es.prototype.print=function(e){e.print(this.coord),e.print(" seg # = "+this.segmentIndex),e.println(" dist = "+this.dist)};es.prototype.compareTo=function(e){var t=e;return this.compare(t.segmentIndex,t.dist)};es.prototype.isEndPoint=function(e){return this.segmentIndex===0&&this.dist===0||this.segmentIndex===e};es.prototype.toString=function(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist};es.prototype.getDistance=function(){return this.dist};es.prototype.compare=function(e,t){return this.segmentIndex<e?-1:this.segmentIndex>e?1:this.dist<t?-1:this.dist>t?1:0};es.prototype.interfaces_=function(){return[_r]};es.prototype.getClass=function(){return es};var Ts=function(){this._nodeMap=new yi,this.edge=null;var e=arguments[0];this.edge=e};Ts.prototype.print=function(e){e.println("Intersections:");for(var t=this.iterator();t.hasNext();){var n=t.next();n.print(e)}};Ts.prototype.iterator=function(){return this._nodeMap.values().iterator()};Ts.prototype.addSplitEdges=function(e){var t=this;this.addEndpoints();for(var n=this.iterator(),r=n.next();n.hasNext();){var s=n.next(),o=t.createSplitEdge(r,s);e.add(o),r=s}};Ts.prototype.addEndpoints=function(){var e=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[e],e,0)};Ts.prototype.createSplitEdge=function(e,t){var n=this,r=t.segmentIndex-e.segmentIndex+2,s=this.edge.pts[t.segmentIndex],o=t.dist>0||!t.coord.equals2D(s);o||r--;var l=new Array(r).fill(null),u=0;l[u++]=new j(e.coord);for(var c=e.segmentIndex+1;c<=t.segmentIndex;c++)l[u++]=n.edge.pts[c];return o&&(l[u]=t.coord),new Dh(l,new _n(this.edge._label))};Ts.prototype.add=function(e,t,n){var r=new es(e,t,n),s=this._nodeMap.get(r);return s!==null?s:(this._nodeMap.put(r,r),r)};Ts.prototype.isIntersection=function(e){for(var t=this.iterator();t.hasNext();){var n=t.next();if(n.coord.equals(e))return!0}return!1};Ts.prototype.interfaces_=function(){return[]};Ts.prototype.getClass=function(){return Ts};var Zo=function(){};Zo.prototype.getChainStartIndices=function(e){var t=this,n=0,r=new le;r.add(new Hr(n));do{var s=t.findChainEnd(e,n);r.add(new Hr(s)),n=s}while(n<e.length-1);var o=Zo.toIntArray(r);return o};Zo.prototype.findChainEnd=function(e,t){for(var n=Tn.quadrant(e[t],e[t+1]),r=t+1;r<e.length;){var s=Tn.quadrant(e[r-1],e[r]);if(s!==n)break;r++}return r-1};Zo.prototype.interfaces_=function(){return[]};Zo.prototype.getClass=function(){return Zo};Zo.toIntArray=function(e){for(var t=new Array(e.size()).fill(null),n=0;n<t.length;n++)t[n]=e.get(n).intValue();return t};var Ys=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new Ce,this.env2=new Ce;var e=arguments[0];this.e=e,this.pts=e.getCoordinates();var t=new Zo;this.startIndex=t.getChainStartIndices(this.pts)};Ys.prototype.getCoordinates=function(){return this.pts};Ys.prototype.getMaxX=function(e){var t=this.pts[this.startIndex[e]].x,n=this.pts[this.startIndex[e+1]].x;return t>n?t:n};Ys.prototype.getMinX=function(e){var t=this.pts[this.startIndex[e]].x,n=this.pts[this.startIndex[e+1]].x;return t<n?t:n};Ys.prototype.computeIntersectsForChain=function(){if(arguments.length===4){var e=arguments[0],t=arguments[1],n=arguments[2],r=arguments[3];this.computeIntersectsForChain(this.startIndex[e],this.startIndex[e+1],t,t.startIndex[n],t.startIndex[n+1],r)}else if(arguments.length===6){var s=arguments[0],o=arguments[1],l=arguments[2],u=arguments[3],c=arguments[4],p=arguments[5],d=this.pts[s],f=this.pts[o],g=l.pts[u],v=l.pts[c];if(o-s===1&&c-u===1)return p.addIntersections(this.e,s,l.e,u),null;if(this.env1.init(d,f),this.env2.init(g,v),!this.env1.intersects(this.env2))return null;var w=Math.trunc((s+o)/2),A=Math.trunc((u+c)/2);s<w&&(u<A&&this.computeIntersectsForChain(s,w,l,u,A,p),A<c&&this.computeIntersectsForChain(s,w,l,A,c,p)),w<o&&(u<A&&this.computeIntersectsForChain(w,o,l,u,A,p),A<c&&this.computeIntersectsForChain(w,o,l,A,c,p))}};Ys.prototype.getStartIndexes=function(){return this.startIndex};Ys.prototype.computeIntersects=function(e,t){for(var n=this,r=0;r<this.startIndex.length-1;r++)for(var s=0;s<e.startIndex.length-1;s++)n.computeIntersectsForChain(r,e,s,t)};Ys.prototype.interfaces_=function(){return[]};Ys.prototype.getClass=function(){return Ys};var ui=function i(){var e=this;this._depth=Array(2).fill().map(function(){return Array(3)});for(var t=0;t<2;t++)for(var n=0;n<3;n++)e._depth[t][n]=i.NULL_VALUE},X0={NULL_VALUE:{configurable:!0}};ui.prototype.getDepth=function(e,t){return this._depth[e][t]};ui.prototype.setDepth=function(e,t,n){this._depth[e][t]=n};ui.prototype.isNull=function(){var e=this;if(arguments.length===0){for(var t=0;t<2;t++)for(var n=0;n<3;n++)if(e._depth[t][n]!==ui.NULL_VALUE)return!1;return!0}else if(arguments.length===1){var r=arguments[0];return this._depth[r][1]===ui.NULL_VALUE}else if(arguments.length===2){var s=arguments[0],o=arguments[1];return this._depth[s][o]===ui.NULL_VALUE}};ui.prototype.normalize=function(){for(var e=this,t=0;t<2;t++)if(!e.isNull(t)){var n=e._depth[t][1];e._depth[t][2]<n&&(n=e._depth[t][2]),n<0&&(n=0);for(var r=1;r<3;r++){var s=0;e._depth[t][r]>n&&(s=1),e._depth[t][r]=s}}};ui.prototype.getDelta=function(e){return this._depth[e][ne.RIGHT]-this._depth[e][ne.LEFT]};ui.prototype.getLocation=function(e,t){return this._depth[e][t]<=0?W.EXTERIOR:W.INTERIOR};ui.prototype.toString=function(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]};ui.prototype.add=function(){var e=this;if(arguments.length===1)for(var t=arguments[0],n=0;n<2;n++)for(var r=1;r<3;r++){var s=t.getLocation(n,r);(s===W.EXTERIOR||s===W.INTERIOR)&&(e.isNull(n,r)?e._depth[n][r]=ui.depthAtLocation(s):e._depth[n][r]+=ui.depthAtLocation(s))}else if(arguments.length===3){var o=arguments[0],l=arguments[1],u=arguments[2];u===W.INTERIOR&&this._depth[o][l]++}};ui.prototype.interfaces_=function(){return[]};ui.prototype.getClass=function(){return ui};ui.depthAtLocation=function(e){return e===W.EXTERIOR?0:e===W.INTERIOR?1:ui.NULL_VALUE};X0.NULL_VALUE.get=function(){return-1};Object.defineProperties(ui,X0);var Dh=function(i){function e(){if(i.call(this),this.pts=null,this._env=null,this.eiList=new Ts(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new ui,this._depthDelta=0,arguments.length===1){var t=arguments[0];e.call(this,t,null)}else if(arguments.length===2){var n=arguments[0],r=arguments[1];this.pts=n,this._label=r}}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var n=new Array(2).fill(null);n[0]=this.pts[0],n[1]=this.pts[1];var r=new e(n,_n.toLineLabel(this._label));return r},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(n){this._isIsolated=n},e.prototype.setName=function(n){this._name=n},e.prototype.equals=function(n){var r=this;if(!(n instanceof e))return!1;var s=n;if(this.pts.length!==s.pts.length)return!1;for(var o=!0,l=!0,u=this.pts.length,c=0;c<this.pts.length;c++)if(r.pts[c].equals2D(s.pts[c])||(o=!1),r.pts[c].equals2D(s.pts[--u])||(l=!1),!o&&!l)return!1;return!0},e.prototype.getCoordinate=function(){if(arguments.length===0)return this.pts.length>0?this.pts[0]:null;if(arguments.length===1){var n=arguments[0];return this.pts[n]}},e.prototype.print=function(n){var r=this;n.print("edge "+this._name+": "),n.print("LINESTRING (");for(var s=0;s<this.pts.length;s++)s>0&&n.print(","),n.print(r.pts[s].x+" "+r.pts[s].y);n.print(")  "+this._label+" "+this._depthDelta)},e.prototype.computeIM=function(n){e.updateIM(this._label,n)},e.prototype.isCollapsed=function(){return!this._label.isArea()||this.pts.length!==3?!1:!!this.pts[0].equals(this.pts[2])},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(n){var r=this;n.print("edge "+this._name+": ");for(var s=this.pts.length-1;s>=0;s--)n.print(r.pts[s]+" ");n.println("")},e.prototype.getMonotoneChainEdge=function(){return this._mce===null&&(this._mce=new Ys(this)),this._mce},e.prototype.getEnvelope=function(){var n=this;if(this._env===null){this._env=new Ce;for(var r=0;r<this.pts.length;r++)n._env.expandToInclude(n.pts[r])}return this._env},e.prototype.addIntersection=function(n,r,s,o){var l=new j(n.getIntersection(o)),u=r,c=n.getEdgeDistance(s,o),p=u+1;if(p<this.pts.length){var d=this.pts[p];l.equals2D(d)&&(u=p,c=0)}this.eiList.add(l,u,c)},e.prototype.toString=function(){var n=this,r=new ss;r.append("edge "+this._name+": "),r.append("LINESTRING (");for(var s=0;s<this.pts.length;s++)s>0&&r.append(","),r.append(n.pts[s].x+" "+n.pts[s].y);return r.append(")  "+this._label+" "+this._depthDelta),r.toString()},e.prototype.isPointwiseEqual=function(n){var r=this;if(this.pts.length!==n.pts.length)return!1;for(var s=0;s<this.pts.length;s++)if(!r.pts[s].equals2D(n.pts[s]))return!1;return!0},e.prototype.setDepthDelta=function(n){this._depthDelta=n},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(n,r,s){for(var o=this,l=0;l<n.getIntersectionNum();l++)o.addIntersection(n,r,s,l)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(arguments.length===2){var n=arguments[0],r=arguments[1];r.setAtLeastIfValid(n.getLocation(0,ne.ON),n.getLocation(1,ne.ON),1),n.isArea()&&(r.setAtLeastIfValid(n.getLocation(0,ne.LEFT),n.getLocation(1,ne.LEFT),2),r.setAtLeastIfValid(n.getLocation(0,ne.RIGHT),n.getLocation(1,ne.RIGHT),2))}else return i.prototype.updateIM.apply(this,arguments)},e}(ar),Ai=function(e){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Lr,this._bufParams=e||null};Ai.prototype.setWorkingPrecisionModel=function(e){this._workingPrecisionModel=e};Ai.prototype.insertUniqueEdge=function(e){var t=this._edgeList.findEqualEdge(e);if(t!==null){var n=t.getLabel(),r=e.getLabel();t.isPointwiseEqual(e)||(r=new _n(e.getLabel()),r.flip()),n.merge(r);var s=Ai.depthDelta(r),o=t.getDepthDelta(),l=o+s;t.setDepthDelta(l)}else this._edgeList.add(e),e.setDepthDelta(Ai.depthDelta(e.getLabel()))};Ai.prototype.buildSubgraphs=function(e,t){for(var n=new le,r=e.iterator();r.hasNext();){var s=r.next(),o=s.getRightmostCoordinate(),l=new xa(n),u=l.getDepth(o);s.computeDepth(u),s.findResultEdges(),n.add(s),t.add(s.getDirectedEdges(),s.getNodes())}};Ai.prototype.createSubgraphs=function(e){for(var t=new le,n=e.getNodes().iterator();n.hasNext();){var r=n.next();if(!r.isVisited()){var s=new Si;s.create(r),t.add(s)}}return Nr.sort(t,Nr.reverseOrder()),t};Ai.prototype.createEmptyResultGeometry=function(){var e=this._geomFact.createPolygon();return e};Ai.prototype.getNoder=function(e){if(this._workingNoder!==null)return this._workingNoder;var t=new Bp,n=new ia;return n.setPrecisionModel(e),t.setSegmentIntersector(new ur(n)),t};Ai.prototype.buffer=function(e,t){var n=this._workingPrecisionModel;n===null&&(n=e.getPrecisionModel()),this._geomFact=e.getFactory();var r=new Oi(n,this._bufParams),s=new wr(e,t,r),o=s.getCurves();if(o.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(o,n),this._graph=new Mn(new Y0),this._graph.addEdges(this._edgeList.getEdges());var l=this.createSubgraphs(this._graph),u=new Gi(this._geomFact);this.buildSubgraphs(l,u);var c=u.getPolygons();if(c.size()<=0)return this.createEmptyResultGeometry();var p=this._geomFact.buildGeometry(c);return p};Ai.prototype.computeNodedEdges=function(e,t){var n=this,r=this.getNoder(t);r.computeNodes(e);for(var s=r.getNodedSubstrings(),o=s.iterator();o.hasNext();){var l=o.next(),u=l.getCoordinates();if(!(u.length===2&&u[0].equals2D(u[1]))){var c=l.getData(),p=new Dh(l.getCoordinates(),new _n(c));n.insertUniqueEdge(p)}}};Ai.prototype.setNoder=function(e){this._workingNoder=e};Ai.prototype.interfaces_=function(){return[]};Ai.prototype.getClass=function(){return Ai};Ai.depthDelta=function(e){var t=e.getLocation(0,ne.LEFT),n=e.getLocation(0,ne.RIGHT);return t===W.INTERIOR&&n===W.EXTERIOR?1:t===W.EXTERIOR&&n===W.INTERIOR?-1:0};Ai.convertSegStrings=function(e){for(var t=new Ot,n=new le;e.hasNext();){var r=e.next(),s=t.createLineString(r.getCoordinates());n.add(s)}return t.buildGeometry(n)};var bo=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,arguments.length===2){var e=arguments[0],t=arguments[1];this._noder=e,this._scaleFactor=t,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(arguments.length===4){var n=arguments[0],r=arguments[1],s=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=r,this._offsetX=s,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};bo.prototype.rescale=function(){var e=this;if(Me(arguments[0],Xn))for(var t=arguments[0],n=t.iterator();n.hasNext();){var r=n.next();e.rescale(r.getCoordinates())}else if(arguments[0]instanceof Array){for(var s=arguments[0],o=0;o<s.length;o++)s[o].x=s[o].x/e._scaleFactor+e._offsetX,s[o].y=s[o].y/e._scaleFactor+e._offsetY;s.length===2&&s[0].equals2D(s[1])&&hi.out.println(s)}};bo.prototype.scale=function(){var e=this;if(Me(arguments[0],Xn)){for(var t=arguments[0],n=new le,r=t.iterator();r.hasNext();){var s=r.next();n.add(new Vn(e.scale(s.getCoordinates()),s.getData()))}return n}else if(arguments[0]instanceof Array){for(var o=arguments[0],l=new Array(o.length).fill(null),u=0;u<o.length;u++)l[u]=new j(Math.round((o[u].x-e._offsetX)*e._scaleFactor),Math.round((o[u].y-e._offsetY)*e._scaleFactor),o[u].z);var c=Pt.removeRepeatedPoints(l);return c}};bo.prototype.isIntegerPrecision=function(){return this._scaleFactor===1};bo.prototype.getNodedSubstrings=function(){var e=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(e),e};bo.prototype.computeNodes=function(e){var t=e;this._isScaled&&(t=this.scale(e)),this._noder.computeNodes(t)};bo.prototype.interfaces_=function(){return[Ho]};bo.prototype.getClass=function(){return bo};var ts=function(){this._li=new ia,this._segStrings=null;var e=arguments[0];this._segStrings=e},Z0={fact:{configurable:!0}};ts.prototype.checkEndPtVertexIntersections=function(){var e=this;if(arguments.length===0)for(var t=this._segStrings.iterator();t.hasNext();){var n=t.next(),r=n.getCoordinates();e.checkEndPtVertexIntersections(r[0],e._segStrings),e.checkEndPtVertexIntersections(r[r.length-1],e._segStrings)}else if(arguments.length===2){for(var s=arguments[0],o=arguments[1],l=o.iterator();l.hasNext();)for(var u=l.next(),c=u.getCoordinates(),p=1;p<c.length-1;p++)if(c[p].equals(s))throw new Gs("found endpt/interior pt intersection at index "+p+" :pt "+s)}};ts.prototype.checkInteriorIntersections=function(){var e=this;if(arguments.length===0)for(var t=this._segStrings.iterator();t.hasNext();)for(var n=t.next(),r=this._segStrings.iterator();r.hasNext();){var s=r.next();e.checkInteriorIntersections(n,s)}else if(arguments.length===2)for(var o=arguments[0],l=arguments[1],u=o.getCoordinates(),c=l.getCoordinates(),p=0;p<u.length-1;p++)for(var d=0;d<c.length-1;d++)e.checkInteriorIntersections(o,p,l,d);else if(arguments.length===4){var f=arguments[0],g=arguments[1],v=arguments[2],w=arguments[3];if(f===v&&g===w)return null;var A=f.getCoordinates()[g],C=f.getCoordinates()[g+1],m=v.getCoordinates()[w],y=v.getCoordinates()[w+1];if(this._li.computeIntersection(A,C,m,y),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,A,C)||this.hasInteriorIntersection(this._li,m,y)))throw new Gs("found non-noded intersection at "+A+"-"+C+" and "+m+"-"+y)}};ts.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()};ts.prototype.checkCollapses=function(){var e=this;if(arguments.length===0)for(var t=this._segStrings.iterator();t.hasNext();){var n=t.next();e.checkCollapses(n)}else if(arguments.length===1)for(var r=arguments[0],s=r.getCoordinates(),o=0;o<s.length-2;o++)e.checkCollapse(s[o],s[o+1],s[o+2])};ts.prototype.hasInteriorIntersection=function(e,t,n){for(var r=0;r<e.getIntersectionNum();r++){var s=e.getIntersection(r);if(!(s.equals(t)||s.equals(n)))return!0}return!1};ts.prototype.checkCollapse=function(e,t,n){if(e.equals(n))throw new Gs("found non-noded collapse at "+ts.fact.createLineString([e,t,n]))};ts.prototype.interfaces_=function(){return[]};ts.prototype.getClass=function(){return ts};Z0.fact.get=function(){return new Ot};Object.defineProperties(ts,Z0);var Pi=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var e=arguments[0],t=arguments[1],n=arguments[2];if(this._originalPt=e,this._pt=e,this._scaleFactor=t,this._li=n,t<=0)throw new Nn("Scale factor must be non-zero");t!==1&&(this._pt=new j(this.scale(e.x),this.scale(e.y)),this._p0Scaled=new j,this._p1Scaled=new j),this.initCorners(this._pt)},K0={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};Pi.prototype.intersectsScaled=function(e,t){var n=Math.min(e.x,t.x),r=Math.max(e.x,t.x),s=Math.min(e.y,t.y),o=Math.max(e.y,t.y),l=this._maxx<n||this._minx>r||this._maxy<s||this._miny>o;if(l)return!1;var u=this.intersectsToleranceSquare(e,t);return nt.isTrue(!(l&&u),"Found bad envelope test"),u};Pi.prototype.initCorners=function(e){var t=.5;this._minx=e.x-t,this._maxx=e.x+t,this._miny=e.y-t,this._maxy=e.y+t,this._corner[0]=new j(this._maxx,this._maxy),this._corner[1]=new j(this._minx,this._maxy),this._corner[2]=new j(this._minx,this._miny),this._corner[3]=new j(this._maxx,this._miny)};Pi.prototype.intersects=function(e,t){return this._scaleFactor===1?this.intersectsScaled(e,t):(this.copyScaled(e,this._p0Scaled),this.copyScaled(t,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))};Pi.prototype.scale=function(e){return Math.round(e*this._scaleFactor)};Pi.prototype.getCoordinate=function(){return this._originalPt};Pi.prototype.copyScaled=function(e,t){t.x=this.scale(e.x),t.y=this.scale(e.y)};Pi.prototype.getSafeEnvelope=function(){if(this._safeEnv===null){var e=Pi.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new Ce(this._originalPt.x-e,this._originalPt.x+e,this._originalPt.y-e,this._originalPt.y+e)}return this._safeEnv};Pi.prototype.intersectsPixelClosure=function(e,t){return this._li.computeIntersection(e,t,this._corner[0],this._corner[1]),!!(this._li.hasIntersection()||(this._li.computeIntersection(e,t,this._corner[1],this._corner[2]),this._li.hasIntersection())||(this._li.computeIntersection(e,t,this._corner[2],this._corner[3]),this._li.hasIntersection())||(this._li.computeIntersection(e,t,this._corner[3],this._corner[0]),this._li.hasIntersection()))};Pi.prototype.intersectsToleranceSquare=function(e,t){var n=!1,r=!1;return this._li.computeIntersection(e,t,this._corner[0],this._corner[1]),!!(this._li.isProper()||(this._li.computeIntersection(e,t,this._corner[1],this._corner[2]),this._li.isProper())||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(e,t,this._corner[2],this._corner[3]),this._li.isProper())||(this._li.hasIntersection()&&(r=!0),this._li.computeIntersection(e,t,this._corner[3],this._corner[0]),this._li.isProper())||n&&r||e.equals(this._pt)||t.equals(this._pt))};Pi.prototype.addSnappedNode=function(e,t){var n=e.getCoordinate(t),r=e.getCoordinate(t+1);return this.intersects(n,r)?(e.addIntersection(this.getCoordinate(),t),!0):!1};Pi.prototype.interfaces_=function(){return[]};Pi.prototype.getClass=function(){return Pi};K0.SAFE_ENV_EXPANSION_FACTOR.get=function(){return .75};Object.defineProperties(Pi,K0);var vu=function(){this.tempEnv1=new Ce,this.selectedSegment=new Ae};vu.prototype.select=function(){if(arguments.length!==1){if(arguments.length===2){var e=arguments[0],t=arguments[1];e.getLineSegment(t,this.selectedSegment),this.select(this.selectedSegment)}}};vu.prototype.interfaces_=function(){return[]};vu.prototype.getClass=function(){return vu};var wl=function(){this._index=null;var e=arguments[0];this._index=e},Q0={HotPixelSnapAction:{configurable:!0}};wl.prototype.snap=function(){if(arguments.length===1){var e=arguments[0];return this.snap(e,null,-1)}else if(arguments.length===3){var t=arguments[0],n=arguments[1],r=arguments[2],s=t.getSafeEnvelope(),o=new ey(t,n,r);return this._index.query(s,{interfaces_:function(){return[go]},visitItem:function(l){var u=l;u.select(s,o)}}),o.isNodeAdded()}};wl.prototype.interfaces_=function(){return[]};wl.prototype.getClass=function(){return wl};Q0.HotPixelSnapAction.get=function(){return ey};Object.defineProperties(wl,Q0);var ey=function(i){function e(){i.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var t=arguments[0],n=arguments[1],r=arguments[2];this._hotPixel=t,this._parentEdge=n,this._hotPixelVertexIndex=r}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(arguments.length===2){var n=arguments[0],r=arguments[1],s=n.getContext();if(this._parentEdge!==null&&s===this._parentEdge&&r===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(s,r)}else return i.prototype.select.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(vu),ka=function(){this._li=null,this._interiorIntersections=null;var e=arguments[0];this._li=e,this._interiorIntersections=new le};ka.prototype.processIntersections=function(e,t,n,r){var s=this;if(e===n&&t===r)return null;var o=e.getCoordinates()[t],l=e.getCoordinates()[t+1],u=n.getCoordinates()[r],c=n.getCoordinates()[r+1];if(this._li.computeIntersection(o,l,u,c),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var p=0;p<this._li.getIntersectionNum();p++)s._interiorIntersections.add(s._li.getIntersection(p));e.addIntersections(this._li,t,0),n.addIntersections(this._li,r,1)}};ka.prototype.isDone=function(){return!1};ka.prototype.getInteriorIntersections=function(){return this._interiorIntersections};ka.prototype.interfaces_=function(){return[Xo]};ka.prototype.getClass=function(){return ka};var xs=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var e=arguments[0];this._pm=e,this._li=new ia,this._li.setPrecisionModel(e),this._scaleFactor=e.getScale()};xs.prototype.checkCorrectness=function(e){var t=Vn.getNodedSubstrings(e),n=new ts(t);try{n.checkValid()}catch(r){if(r instanceof O0)r.printStackTrace();else throw r}finally{}};xs.prototype.getNodedSubstrings=function(){return Vn.getNodedSubstrings(this._nodedSegStrings)};xs.prototype.snapRound=function(e,t){var n=this.findInteriorIntersections(e,t);this.computeIntersectionSnaps(n),this.computeVertexSnaps(e)};xs.prototype.findInteriorIntersections=function(e,t){var n=new ka(t);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(e),n.getInteriorIntersections()};xs.prototype.computeVertexSnaps=function(){var e=this;if(Me(arguments[0],Xn))for(var t=arguments[0],n=t.iterator();n.hasNext();){var r=n.next();e.computeVertexSnaps(r)}else if(arguments[0]instanceof Vn)for(var s=arguments[0],o=s.getCoordinates(),l=0;l<o.length;l++){var u=new Pi(o[l],e._scaleFactor,e._li),c=e._pointSnapper.snap(u,s,l);c&&s.addIntersection(o[l],l)}};xs.prototype.computeNodes=function(e){this._nodedSegStrings=e,this._noder=new Bp,this._pointSnapper=new wl(this._noder.getIndex()),this.snapRound(e,this._li)};xs.prototype.computeIntersectionSnaps=function(e){for(var t=this,n=e.iterator();n.hasNext();){var r=n.next(),s=new Pi(r,t._scaleFactor,t._li);t._pointSnapper.snap(s)}};xs.prototype.interfaces_=function(){return[Ho]};xs.prototype.getClass=function(){return xs};var li=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new mn,this._resultGeometry=null,this._saveException=null,arguments.length===1){var e=arguments[0];this._argGeom=e}else if(arguments.length===2){var t=arguments[0],n=arguments[1];this._argGeom=t,this._bufParams=n}},Fl={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};li.prototype.bufferFixedPrecision=function(e){var t=new bo(new xs(new yn(1)),e.getScale()),n=new Ai(this._bufParams);n.setWorkingPrecisionModel(e),n.setNoder(t),this._resultGeometry=n.buffer(this._argGeom,this._distance)};li.prototype.bufferReducedPrecision=function(){var e=this;if(arguments.length===0){for(var t=li.MAX_PRECISION_DIGITS;t>=0;t--){try{e.bufferReducedPrecision(t)}catch(o){if(o instanceof zs)e._saveException=o;else throw o}finally{}if(e._resultGeometry!==null)return null}throw this._saveException}else if(arguments.length===1){var n=arguments[0],r=li.precisionScaleFactor(this._argGeom,this._distance,n),s=new yn(r);this.bufferFixedPrecision(s)}};li.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),this._resultGeometry!==null)return null;var e=this._argGeom.getFactory().getPrecisionModel();e.getType()===yn.FIXED?this.bufferFixedPrecision(e):this.bufferReducedPrecision()};li.prototype.setQuadrantSegments=function(e){this._bufParams.setQuadrantSegments(e)};li.prototype.bufferOriginalPrecision=function(){try{var e=new Ai(this._bufParams);this._resultGeometry=e.buffer(this._argGeom,this._distance)}catch(t){if(t instanceof Gs)this._saveException=t;else throw t}finally{}};li.prototype.getResultGeometry=function(e){return this._distance=e,this.computeGeometry(),this._resultGeometry};li.prototype.setEndCapStyle=function(e){this._bufParams.setEndCapStyle(e)};li.prototype.interfaces_=function(){return[]};li.prototype.getClass=function(){return li};li.bufferOp=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1],n=new li(e),r=n.getResultGeometry(t);return r}else if(arguments.length===3){if(Number.isInteger(arguments[2])&&arguments[0]instanceof $e&&typeof arguments[1]=="number"){var s=arguments[0],o=arguments[1],l=arguments[2],u=new li(s);u.setQuadrantSegments(l);var c=u.getResultGeometry(o);return c}else if(arguments[2]instanceof mn&&arguments[0]instanceof $e&&typeof arguments[1]=="number"){var p=arguments[0],d=arguments[1],f=arguments[2],g=new li(p,f),v=g.getResultGeometry(d);return v}}else if(arguments.length===4){var w=arguments[0],A=arguments[1],C=arguments[2],m=arguments[3],y=new li(w);y.setQuadrantSegments(C),y.setEndCapStyle(m);var x=y.getResultGeometry(A);return x}};li.precisionScaleFactor=function(e,t,n){var r=e.getEnvelopeInternal(),s=or.max(Math.abs(r.getMaxX()),Math.abs(r.getMaxY()),Math.abs(r.getMinX()),Math.abs(r.getMinY())),o=t>0?t:0,l=s+2*o,u=Math.trunc(Math.log(l)/Math.log(10)+1),c=n-u,p=Math.pow(10,c);return p};Fl.CAP_ROUND.get=function(){return mn.CAP_ROUND};Fl.CAP_BUTT.get=function(){return mn.CAP_FLAT};Fl.CAP_FLAT.get=function(){return mn.CAP_FLAT};Fl.CAP_SQUARE.get=function(){return mn.CAP_SQUARE};Fl.MAX_PRECISION_DIGITS.get=function(){return 12};Object.defineProperties(li,Fl);var Ti=function(){this._pt=[new j,new j],this._distance=Ve.NaN,this._isNull=!0};Ti.prototype.getCoordinates=function(){return this._pt};Ti.prototype.getCoordinate=function(e){return this._pt[e]};Ti.prototype.setMinimum=function(){if(arguments.length===1){var e=arguments[0];this.setMinimum(e._pt[0],e._pt[1])}else if(arguments.length===2){var t=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(t,n),null;var r=t.distance(n);r<this._distance&&this.initialize(t,n,r)}};Ti.prototype.initialize=function(){if(arguments.length===0)this._isNull=!0;else if(arguments.length===2){var e=arguments[0],t=arguments[1];this._pt[0].setCoordinate(e),this._pt[1].setCoordinate(t),this._distance=e.distance(t),this._isNull=!1}else if(arguments.length===3){var n=arguments[0],r=arguments[1],s=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=s,this._isNull=!1}};Ti.prototype.getDistance=function(){return this._distance};Ti.prototype.setMaximum=function(){if(arguments.length===1){var e=arguments[0];this.setMaximum(e._pt[0],e._pt[1])}else if(arguments.length===2){var t=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(t,n),null;var r=t.distance(n);r>this._distance&&this.initialize(t,n,r)}};Ti.prototype.interfaces_=function(){return[]};Ti.prototype.getClass=function(){return Ti};var ps=function(){};ps.prototype.interfaces_=function(){return[]};ps.prototype.getClass=function(){return ps};ps.computeDistance=function(){if(arguments[2]instanceof Ti&&arguments[0]instanceof Pn&&arguments[1]instanceof j)for(var e=arguments[0],t=arguments[1],n=arguments[2],r=e.getCoordinates(),s=new Ae,o=0;o<r.length-1;o++){s.setCoordinates(r[o],r[o+1]);var l=s.closestPoint(t);n.setMinimum(l,t)}else if(arguments[2]instanceof Ti&&arguments[0]instanceof ei&&arguments[1]instanceof j){var u=arguments[0],c=arguments[1],p=arguments[2];ps.computeDistance(u.getExteriorRing(),c,p);for(var d=0;d<u.getNumInteriorRing();d++)ps.computeDistance(u.getInteriorRingN(d),c,p)}else if(arguments[2]instanceof Ti&&arguments[0]instanceof $e&&arguments[1]instanceof j){var f=arguments[0],g=arguments[1],v=arguments[2];if(f instanceof Pn)ps.computeDistance(f,g,v);else if(f instanceof ei)ps.computeDistance(f,g,v);else if(f instanceof qi)for(var w=f,A=0;A<w.getNumGeometries();A++){var C=w.getGeometryN(A);ps.computeDistance(C,g,v)}else v.setMinimum(f.getCoordinate(),g)}else if(arguments[2]instanceof Ti&&arguments[0]instanceof Ae&&arguments[1]instanceof j){var m=arguments[0],y=arguments[1],x=arguments[2],k=m.closestPoint(y);x.setMinimum(k,y)}};var Ko=function(e){this._maxPtDist=new Ti,this._inputGeom=e||null},jp={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};Ko.prototype.computeMaxMidpointDistance=function(e){var t=new vo(this._inputGeom);e.apply(t),this._maxPtDist.setMaximum(t.getMaxPointDistance())};Ko.prototype.computeMaxVertexDistance=function(e){var t=new Aa(this._inputGeom);e.apply(t),this._maxPtDist.setMaximum(t.getMaxPointDistance())};Ko.prototype.findDistance=function(e){return this.computeMaxVertexDistance(e),this.computeMaxMidpointDistance(e),this._maxPtDist.getDistance()};Ko.prototype.getDistancePoints=function(){return this._maxPtDist};Ko.prototype.interfaces_=function(){return[]};Ko.prototype.getClass=function(){return Ko};jp.MaxPointDistanceFilter.get=function(){return Aa};jp.MaxMidpointDistanceFilter.get=function(){return vo};Object.defineProperties(Ko,jp);var Aa=function(e){this._maxPtDist=new Ti,this._minPtDist=new Ti,this._geom=e||null};Aa.prototype.filter=function(e){this._minPtDist.initialize(),ps.computeDistance(this._geom,e,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)};Aa.prototype.getMaxPointDistance=function(){return this._maxPtDist};Aa.prototype.interfaces_=function(){return[vs]};Aa.prototype.getClass=function(){return Aa};var vo=function(e){this._maxPtDist=new Ti,this._minPtDist=new Ti,this._geom=e||null};vo.prototype.filter=function(e,t){if(t===0)return null;var n=e.getCoordinate(t-1),r=e.getCoordinate(t),s=new j((n.x+r.x)/2,(n.y+r.y)/2);this._minPtDist.initialize(),ps.computeDistance(this._geom,s,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)};vo.prototype.isDone=function(){return!1};vo.prototype.isGeometryChanged=function(){return!1};vo.prototype.getMaxPointDistance=function(){return this._maxPtDist};vo.prototype.interfaces_=function(){return[Rr]};vo.prototype.getClass=function(){return vo};var Js=function(e){this._comps=e||null};Js.prototype.filter=function(e){e instanceof ei&&this._comps.add(e)};Js.prototype.interfaces_=function(){return[Xr]};Js.prototype.getClass=function(){return Js};Js.getPolygons=function(){if(arguments.length===1){var e=arguments[0];return Js.getPolygons(e,new le)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];return t instanceof ei?n.add(t):t instanceof qi&&t.apply(new Js(n)),n}};var ai=function(){if(this._lines=null,this._isForcedToLineString=!1,arguments.length===1){var e=arguments[0];this._lines=e}else if(arguments.length===2){var t=arguments[0],n=arguments[1];this._lines=t,this._isForcedToLineString=n}};ai.prototype.filter=function(e){if(this._isForcedToLineString&&e instanceof ws){var t=e.getFactory().createLineString(e.getCoordinateSequence());return this._lines.add(t),null}e instanceof Pn&&this._lines.add(e)};ai.prototype.setForceToLineString=function(e){this._isForcedToLineString=e};ai.prototype.interfaces_=function(){return[Us]};ai.prototype.getClass=function(){return ai};ai.getGeometry=function(){if(arguments.length===1){var e=arguments[0];return e.getFactory().buildGeometry(ai.getLines(e))}else if(arguments.length===2){var t=arguments[0],n=arguments[1];return t.getFactory().buildGeometry(ai.getLines(t,n))}};ai.getLines=function(){if(arguments.length===1){var e=arguments[0];return ai.getLines(e,!1)}else if(arguments.length===2){if(Me(arguments[0],Xn)&&Me(arguments[1],Xn)){for(var t=arguments[0],n=arguments[1],r=t.iterator();r.hasNext();){var s=r.next();ai.getLines(s,n)}return n}else if(arguments[0]instanceof $e&&typeof arguments[1]=="boolean"){var o=arguments[0],l=arguments[1],u=new le;return o.apply(new ai(u,l)),u}else if(arguments[0]instanceof $e&&Me(arguments[1],Xn)){var c=arguments[0],p=arguments[1];return c instanceof Pn?p.add(c):c.apply(new ai(p)),p}}else if(arguments.length===3){if(typeof arguments[2]=="boolean"&&Me(arguments[0],Xn)&&Me(arguments[1],Xn)){for(var d=arguments[0],f=arguments[1],g=arguments[2],v=d.iterator();v.hasNext();){var w=v.next();ai.getLines(w,f,g)}return f}else if(typeof arguments[2]=="boolean"&&arguments[0]instanceof $e&&Me(arguments[1],Xn)){var A=arguments[0],C=arguments[1],m=arguments[2];return A.apply(new ai(C,m)),C}}};var Mr=function(){if(this._boundaryRule=br.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,arguments.length!==0){if(arguments.length===1){var e=arguments[0];if(e===null)throw new Nn("Rule must be non-null");this._boundaryRule=e}}};Mr.prototype.locateInternal=function(){var e=this;if(arguments[0]instanceof j&&arguments[1]instanceof ei){var t=arguments[0],n=arguments[1];if(n.isEmpty())return W.EXTERIOR;var r=n.getExteriorRing(),s=this.locateInPolygonRing(t,r);if(s===W.EXTERIOR)return W.EXTERIOR;if(s===W.BOUNDARY)return W.BOUNDARY;for(var o=0;o<n.getNumInteriorRing();o++){var l=n.getInteriorRingN(o),u=e.locateInPolygonRing(t,l);if(u===W.INTERIOR)return W.EXTERIOR;if(u===W.BOUNDARY)return W.BOUNDARY}return W.INTERIOR}else if(arguments[0]instanceof j&&arguments[1]instanceof Pn){var c=arguments[0],p=arguments[1];if(!p.getEnvelopeInternal().intersects(c))return W.EXTERIOR;var d=p.getCoordinates();return!p.isClosed()&&(c.equals(d[0])||c.equals(d[d.length-1]))?W.BOUNDARY:ce.isOnLine(c,d)?W.INTERIOR:W.EXTERIOR}else if(arguments[0]instanceof j&&arguments[1]instanceof Vi){var f=arguments[0],g=arguments[1],v=g.getCoordinate();return v.equals2D(f)?W.INTERIOR:W.EXTERIOR}};Mr.prototype.locateInPolygonRing=function(e,t){return t.getEnvelopeInternal().intersects(e)?ce.locatePointInRing(e,t.getCoordinates()):W.EXTERIOR};Mr.prototype.intersects=function(e,t){return this.locate(e,t)!==W.EXTERIOR};Mr.prototype.updateLocationInfo=function(e){e===W.INTERIOR&&(this._isIn=!0),e===W.BOUNDARY&&this._numBoundaries++};Mr.prototype.computeLocation=function(e,t){var n=this;if(t instanceof Vi&&this.updateLocationInfo(this.locateInternal(e,t)),t instanceof Pn)this.updateLocationInfo(this.locateInternal(e,t));else if(t instanceof ei)this.updateLocationInfo(this.locateInternal(e,t));else if(t instanceof zo)for(var r=t,s=0;s<r.getNumGeometries();s++){var o=r.getGeometryN(s);n.updateLocationInfo(n.locateInternal(e,o))}else if(t instanceof ms)for(var l=t,u=0;u<l.getNumGeometries();u++){var c=l.getGeometryN(u);n.updateLocationInfo(n.locateInternal(e,c))}else if(t instanceof qi)for(var p=new ys(t);p.hasNext();){var d=p.next();d!==t&&n.computeLocation(e,d)}};Mr.prototype.locate=function(e,t){return t.isEmpty()?W.EXTERIOR:t instanceof Pn?this.locateInternal(e,t):t instanceof ei?this.locateInternal(e,t):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(e,t),this._boundaryRule.isInBoundary(this._numBoundaries)?W.BOUNDARY:this._numBoundaries>0||this._isIn?W.INTERIOR:W.EXTERIOR)};Mr.prototype.interfaces_=function(){return[]};Mr.prototype.getClass=function(){return Mr};var xi=function i(){if(this._component=null,this._segIndex=null,this._pt=null,arguments.length===2){var e=arguments[0],t=arguments[1];i.call(this,e,i.INSIDE_AREA,t)}else if(arguments.length===3){var n=arguments[0],r=arguments[1],s=arguments[2];this._component=n,this._segIndex=r,this._pt=s}},ty={INSIDE_AREA:{configurable:!0}};xi.prototype.isInsideArea=function(){return this._segIndex===xi.INSIDE_AREA};xi.prototype.getCoordinate=function(){return this._pt};xi.prototype.getGeometryComponent=function(){return this._component};xi.prototype.getSegmentIndex=function(){return this._segIndex};xi.prototype.interfaces_=function(){return[]};xi.prototype.getClass=function(){return xi};ty.INSIDE_AREA.get=function(){return-1};Object.defineProperties(xi,ty);var co=function(e){this._pts=e||null};co.prototype.filter=function(e){e instanceof Vi&&this._pts.add(e)};co.prototype.interfaces_=function(){return[Xr]};co.prototype.getClass=function(){return co};co.getPoints=function(){if(arguments.length===1){var e=arguments[0];return e instanceof Vi?Nr.singletonList(e):co.getPoints(e,new le)}else if(arguments.length===2){var t=arguments[0],n=arguments[1];return t instanceof Vi?n.add(t):t instanceof qi&&t.apply(new co(n)),n}};var qa=function(){this._locations=null;var e=arguments[0];this._locations=e};qa.prototype.filter=function(e){(e instanceof Vi||e instanceof Pn||e instanceof ei)&&this._locations.add(new xi(e,0,e.getCoordinate()))};qa.prototype.interfaces_=function(){return[Xr]};qa.prototype.getClass=function(){return qa};qa.getLocations=function(e){var t=new le;return e.apply(new qa(t)),t};var ci=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Mr,this._minDistanceLocation=null,this._minDistance=Ve.MAX_VALUE,arguments.length===2){var e=arguments[0],t=arguments[1];this._geom=[e,t],this._terminateDistance=0}else if(arguments.length===3){var n=arguments[0],r=arguments[1],s=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=r,this._terminateDistance=s}};ci.prototype.computeContainmentDistance=function(){var e=this;if(arguments.length===0){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(arguments.length===2){var n=arguments[0],r=arguments[1],s=1-n,o=Js.getPolygons(this._geom[n]);if(o.size()>0){var l=qa.getLocations(this._geom[s]);if(this.computeContainmentDistance(l,o,r),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[s]=r[0],this._minDistanceLocation[n]=r[1],null}}else if(arguments.length===3){if(arguments[2]instanceof Array&&Me(arguments[0],Er)&&Me(arguments[1],Er)){for(var u=arguments[0],c=arguments[1],p=arguments[2],d=0;d<u.size();d++)for(var f=u.get(d),g=0;g<c.size();g++)if(e.computeContainmentDistance(f,c.get(g),p),e._minDistance<=e._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof xi&&arguments[1]instanceof ei){var v=arguments[0],w=arguments[1],A=arguments[2],C=v.getCoordinate();if(W.EXTERIOR!==this._ptLocator.locate(C,w))return this._minDistance=0,A[0]=v,A[1]=new xi(w,C),null}}};ci.prototype.computeMinDistanceLinesPoints=function(e,t,n){for(var r=this,s=0;s<e.size();s++)for(var o=e.get(s),l=0;l<t.size();l++){var u=t.get(l);if(r.computeMinDistance(o,u,n),r._minDistance<=r._terminateDistance)return null}};ci.prototype.computeFacetDistance=function(){var e=new Array(2).fill(null),t=ai.getLines(this._geom[0]),n=ai.getLines(this._geom[1]),r=co.getPoints(this._geom[0]),s=co.getPoints(this._geom[1]);if(this.computeMinDistanceLines(t,n,e),this.updateMinDistance(e,!1),this._minDistance<=this._terminateDistance||(e[0]=null,e[1]=null,this.computeMinDistanceLinesPoints(t,s,e),this.updateMinDistance(e,!1),this._minDistance<=this._terminateDistance)||(e[0]=null,e[1]=null,this.computeMinDistanceLinesPoints(n,r,e),this.updateMinDistance(e,!0),this._minDistance<=this._terminateDistance))return null;e[0]=null,e[1]=null,this.computeMinDistancePoints(r,s,e),this.updateMinDistance(e,!1)};ci.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation};ci.prototype.updateMinDistance=function(e,t){if(e[0]===null)return null;t?(this._minDistanceLocation[0]=e[1],this._minDistanceLocation[1]=e[0]):(this._minDistanceLocation[0]=e[0],this._minDistanceLocation[1]=e[1])};ci.prototype.nearestPoints=function(){this.computeMinDistance();var e=[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()];return e};ci.prototype.computeMinDistance=function(){var e=this;if(arguments.length===0){if(this._minDistanceLocation!==null||(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance))return null;this.computeFacetDistance()}else if(arguments.length===3){if(arguments[2]instanceof Array&&arguments[0]instanceof Pn&&arguments[1]instanceof Vi){var t=arguments[0],n=arguments[1],r=arguments[2];if(t.getEnvelopeInternal().distance(n.getEnvelopeInternal())>this._minDistance)return null;for(var s=t.getCoordinates(),o=n.getCoordinate(),l=0;l<s.length-1;l++){var u=ce.distancePointLine(o,s[l],s[l+1]);if(u<e._minDistance){e._minDistance=u;var c=new Ae(s[l],s[l+1]),p=c.closestPoint(o);r[0]=new xi(t,l,p),r[1]=new xi(n,0,o)}if(e._minDistance<=e._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Pn&&arguments[1]instanceof Pn){var d=arguments[0],f=arguments[1],g=arguments[2];if(d.getEnvelopeInternal().distance(f.getEnvelopeInternal())>this._minDistance)return null;for(var v=d.getCoordinates(),w=f.getCoordinates(),A=0;A<v.length-1;A++)for(var C=0;C<w.length-1;C++){var m=ce.distanceLineLine(v[A],v[A+1],w[C],w[C+1]);if(m<e._minDistance){e._minDistance=m;var y=new Ae(v[A],v[A+1]),x=new Ae(w[C],w[C+1]),k=y.closestPoints(x);g[0]=new xi(d,A,k[0]),g[1]=new xi(f,C,k[1])}if(e._minDistance<=e._terminateDistance)return null}}}};ci.prototype.computeMinDistancePoints=function(e,t,n){for(var r=this,s=0;s<e.size();s++)for(var o=e.get(s),l=0;l<t.size();l++){var u=t.get(l),c=o.getCoordinate().distance(u.getCoordinate());if(c<r._minDistance&&(r._minDistance=c,n[0]=new xi(o,0,o.getCoordinate()),n[1]=new xi(u,0,u.getCoordinate())),r._minDistance<=r._terminateDistance)return null}};ci.prototype.distance=function(){if(this._geom[0]===null||this._geom[1]===null)throw new Nn("null geometries are not supported");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)};ci.prototype.computeMinDistanceLines=function(e,t,n){for(var r=this,s=0;s<e.size();s++)for(var o=e.get(s),l=0;l<t.size();l++){var u=t.get(l);if(r.computeMinDistance(o,u,n),r._minDistance<=r._terminateDistance)return null}};ci.prototype.interfaces_=function(){return[]};ci.prototype.getClass=function(){return ci};ci.distance=function(e,t){var n=new ci(e,t);return n.distance()};ci.isWithinDistance=function(e,t,n){var r=new ci(e,t,n);return r.distance()<=n};ci.nearestPoints=function(e,t){var n=new ci(e,t);return n.nearestPoints()};var mi=function(){this._pt=[new j,new j],this._distance=Ve.NaN,this._isNull=!0};mi.prototype.getCoordinates=function(){return this._pt};mi.prototype.getCoordinate=function(e){return this._pt[e]};mi.prototype.setMinimum=function(){if(arguments.length===1){var e=arguments[0];this.setMinimum(e._pt[0],e._pt[1])}else if(arguments.length===2){var t=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(t,n),null;var r=t.distance(n);r<this._distance&&this.initialize(t,n,r)}};mi.prototype.initialize=function(){if(arguments.length===0)this._isNull=!0;else if(arguments.length===2){var e=arguments[0],t=arguments[1];this._pt[0].setCoordinate(e),this._pt[1].setCoordinate(t),this._distance=e.distance(t),this._isNull=!1}else if(arguments.length===3){var n=arguments[0],r=arguments[1],s=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(r),this._distance=s,this._isNull=!1}};mi.prototype.toString=function(){return Dr.toLineString(this._pt[0],this._pt[1])};mi.prototype.getDistance=function(){return this._distance};mi.prototype.setMaximum=function(){if(arguments.length===1){var e=arguments[0];this.setMaximum(e._pt[0],e._pt[1])}else if(arguments.length===2){var t=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(t,n),null;var r=t.distance(n);r>this._distance&&this.initialize(t,n,r)}};mi.prototype.interfaces_=function(){return[]};mi.prototype.getClass=function(){return mi};var Vr=function(){};Vr.prototype.interfaces_=function(){return[]};Vr.prototype.getClass=function(){return Vr};Vr.computeDistance=function(){if(arguments[2]instanceof mi&&arguments[0]instanceof Pn&&arguments[1]instanceof j)for(var e=arguments[0],t=arguments[1],n=arguments[2],r=new Ae,s=e.getCoordinates(),o=0;o<s.length-1;o++){r.setCoordinates(s[o],s[o+1]);var l=r.closestPoint(t);n.setMinimum(l,t)}else if(arguments[2]instanceof mi&&arguments[0]instanceof ei&&arguments[1]instanceof j){var u=arguments[0],c=arguments[1],p=arguments[2];Vr.computeDistance(u.getExteriorRing(),c,p);for(var d=0;d<u.getNumInteriorRing();d++)Vr.computeDistance(u.getInteriorRingN(d),c,p)}else if(arguments[2]instanceof mi&&arguments[0]instanceof $e&&arguments[1]instanceof j){var f=arguments[0],g=arguments[1],v=arguments[2];if(f instanceof Pn)Vr.computeDistance(f,g,v);else if(f instanceof ei)Vr.computeDistance(f,g,v);else if(f instanceof qi)for(var w=f,A=0;A<w.getNumGeometries();A++){var C=w.getGeometryN(A);Vr.computeDistance(C,g,v)}else v.setMinimum(f.getCoordinate(),g)}else if(arguments[2]instanceof mi&&arguments[0]instanceof Ae&&arguments[1]instanceof j){var m=arguments[0],y=arguments[1],x=arguments[2],k=m.closestPoint(y);x.setMinimum(k,y)}};var mr=function(){this._g0=null,this._g1=null,this._ptDist=new mi,this._densifyFrac=0;var e=arguments[0],t=arguments[1];this._g0=e,this._g1=t},Wp={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};mr.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()};mr.prototype.setDensifyFraction=function(e){if(e>1||e<=0)throw new Nn("Fraction is not in range (0.0 - 1.0]");this._densifyFrac=e};mr.prototype.compute=function(e,t){this.computeOrientedDistance(e,t,this._ptDist),this.computeOrientedDistance(t,e,this._ptDist)};mr.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()};mr.prototype.computeOrientedDistance=function(e,t,n){var r=new Sa(t);if(e.apply(r),n.setMaximum(r.getMaxPointDistance()),this._densifyFrac>0){var s=new wo(t,this._densifyFrac);e.apply(s),n.setMaximum(s.getMaxPointDistance())}};mr.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()};mr.prototype.interfaces_=function(){return[]};mr.prototype.getClass=function(){return mr};mr.distance=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1],n=new mr(e,t);return n.distance()}else if(arguments.length===3){var r=arguments[0],s=arguments[1],o=arguments[2],l=new mr(r,s);return l.setDensifyFraction(o),l.distance()}};Wp.MaxPointDistanceFilter.get=function(){return Sa};Wp.MaxDensifiedByFractionDistanceFilter.get=function(){return wo};Object.defineProperties(mr,Wp);var Sa=function(){this._maxPtDist=new mi,this._minPtDist=new mi,this._euclideanDist=new Vr,this._geom=null;var e=arguments[0];this._geom=e};Sa.prototype.filter=function(e){this._minPtDist.initialize(),Vr.computeDistance(this._geom,e,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)};Sa.prototype.getMaxPointDistance=function(){return this._maxPtDist};Sa.prototype.interfaces_=function(){return[vs]};Sa.prototype.getClass=function(){return Sa};var wo=function(){this._maxPtDist=new mi,this._minPtDist=new mi,this._geom=null,this._numSubSegs=0;var e=arguments[0],t=arguments[1];this._geom=e,this._numSubSegs=Math.trunc(Math.round(1/t))};wo.prototype.filter=function(e,t){var n=this;if(t===0)return null;for(var r=e.getCoordinate(t-1),s=e.getCoordinate(t),o=(s.x-r.x)/this._numSubSegs,l=(s.y-r.y)/this._numSubSegs,u=0;u<this._numSubSegs;u++){var c=r.x+u*o,p=r.y+u*l,d=new j(c,p);n._minPtDist.initialize(),Vr.computeDistance(n._geom,d,n._minPtDist),n._maxPtDist.setMaximum(n._minPtDist)}};wo.prototype.isDone=function(){return!1};wo.prototype.isGeometryChanged=function(){return!1};wo.prototype.getMaxPointDistance=function(){return this._maxPtDist};wo.prototype.interfaces_=function(){return[Rr]};wo.prototype.getClass=function(){return wo};var Ji=function(e,t,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=e||null,this._bufDistance=t||null,this._result=n||null},Jp={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Ji.prototype.checkMaximumDistance=function(e,t,n){var r=new mr(t,e);if(r.setDensifyFraction(.25),this._maxDistanceFound=r.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var s=r.getCoordinates();this._errorLocation=s[1],this._errorIndicator=e.getFactory().createLineString(s),this._errMsg="Distance between buffer curve and input is too large ("+this._maxDistanceFound+" at "+Dr.toLineString(s[0],s[1])+")"}};Ji.prototype.isValid=function(){var e=Math.abs(this._bufDistance),t=Ji.MAX_DISTANCE_DIFF_FRAC*e;return this._minValidDistance=e-t,this._maxValidDistance=e+t,this._input.isEmpty()||this._result.isEmpty()?!0:(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Ji.VERBOSE&&hi.out.println("Min Dist= "+this._minDistanceFound+"  err= "+(1-this._minDistanceFound/this._bufDistance)+"  Max Dist= "+this._maxDistanceFound+"  err= "+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)};Ji.prototype.checkNegativeValid=function(){if(!(this._input instanceof ei||this._input instanceof ms||this._input instanceof qi))return null;var e=this.getPolygonLines(this._input);if(this.checkMinimumDistance(e,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(e,this._result,this._maxValidDistance)};Ji.prototype.getErrorIndicator=function(){return this._errorIndicator};Ji.prototype.checkMinimumDistance=function(e,t,n){var r=new ci(e,t,n);if(this._minDistanceFound=r.distance(),this._minDistanceFound<n){this._isValid=!1;var s=r.nearestPoints();this._errorLocation=r.nearestPoints()[1],this._errorIndicator=e.getFactory().createLineString(s),this._errMsg="Distance between buffer curve and input is too small ("+this._minDistanceFound+" at "+Dr.toLineString(s[0],s[1])+" )"}};Ji.prototype.checkPositiveValid=function(){var e=this._result.getBoundary();if(this.checkMinimumDistance(this._input,e,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,e,this._maxValidDistance)};Ji.prototype.getErrorLocation=function(){return this._errorLocation};Ji.prototype.getPolygonLines=function(e){for(var t=new le,n=new ai(t),r=Js.getPolygons(e),s=r.iterator();s.hasNext();){var o=s.next();o.apply(n)}return e.getFactory().buildGeometry(t)};Ji.prototype.getErrorMessage=function(){return this._errMsg};Ji.prototype.interfaces_=function(){return[]};Ji.prototype.getClass=function(){return Ji};Jp.VERBOSE.get=function(){return!1};Jp.MAX_DISTANCE_DIFF_FRAC.get=function(){return .012};Object.defineProperties(Ji,Jp);var di=function(e,t,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=e||null,this._distance=t||null,this._result=n||null},Vp={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};di.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid};di.prototype.checkEnvelope=function(){if(this._distance<0)return null;var e=this._distance*di.MAX_ENV_DIFF_FRAC;e===0&&(e=.001);var t=new Ce(this._input.getEnvelopeInternal());t.expandBy(this._distance);var n=new Ce(this._result.getEnvelopeInternal());n.expandBy(e),n.contains(t)||(this._isValid=!1,this._errorMsg="Buffer envelope is incorrect",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report("Envelope")};di.prototype.checkDistance=function(){var e=new Ji(this._input,this._distance,this._result);e.isValid()||(this._isValid=!1,this._errorMsg=e.getErrorMessage(),this._errorLocation=e.getErrorLocation(),this._errorIndicator=e.getErrorIndicator()),this.report("Distance")};di.prototype.checkArea=function(){var e=this._input.getArea(),t=this._result.getArea();this._distance>0&&e>t&&(this._isValid=!1,this._errorMsg="Area of positive buffer is smaller than input",this._errorIndicator=this._result),this._distance<0&&e<t&&(this._isValid=!1,this._errorMsg="Area of negative buffer is larger than input",this._errorIndicator=this._result),this.report("Area")};di.prototype.checkPolygonal=function(){this._result instanceof ei||this._result instanceof ms||(this._isValid=!1),this._errorMsg="Result is not polygonal",this._errorIndicator=this._result,this.report("Polygonal")};di.prototype.getErrorIndicator=function(){return this._errorIndicator};di.prototype.getErrorLocation=function(){return this._errorLocation};di.prototype.checkExpectedEmpty=function(){if(this._input.getDimension()>=2||this._distance>0)return null;this._result.isEmpty()||(this._isValid=!1,this._errorMsg="Result is non-empty",this._errorIndicator=this._result),this.report("ExpectedEmpty")};di.prototype.report=function(e){if(!di.VERBOSE)return null;hi.out.println("Check "+e+": "+(this._isValid?"passed":"FAILED"))};di.prototype.getErrorMessage=function(){return this._errorMsg};di.prototype.interfaces_=function(){return[]};di.prototype.getClass=function(){return di};di.isValidMsg=function(e,t,n){var r=new di(e,t,n);return r.isValid()?null:r.getErrorMessage()};di.isValid=function(e,t,n){var r=new di(e,t,n);return!!r.isValid()};Vp.VERBOSE.get=function(){return!1};Vp.MAX_ENV_DIFF_FRAC.get=function(){return .012};Object.defineProperties(di,Vp);var ns=function(){this._pts=null,this._data=null;var e=arguments[0],t=arguments[1];this._pts=e,this._data=t};ns.prototype.getCoordinates=function(){return this._pts};ns.prototype.size=function(){return this._pts.length};ns.prototype.getCoordinate=function(e){return this._pts[e]};ns.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])};ns.prototype.getSegmentOctant=function(e){return e===this._pts.length-1?-1:Ta.octant(this.getCoordinate(e),this.getCoordinate(e+1))};ns.prototype.setData=function(e){this._data=e};ns.prototype.getData=function(){return this._data};ns.prototype.toString=function(){return Dr.toLineString(new Bn(this._pts))};ns.prototype.interfaces_=function(){return[Cs]};ns.prototype.getClass=function(){return ns};var si=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new le,this._intersectionCount=0,this._keepIntersections=!0;var e=arguments[0];this._li=e,this._interiorIntersection=null};si.prototype.getInteriorIntersection=function(){return this._interiorIntersection};si.prototype.setCheckEndSegmentsOnly=function(e){this._isCheckEndSegmentsOnly=e};si.prototype.getIntersectionSegments=function(){return this._intSegments};si.prototype.count=function(){return this._intersectionCount};si.prototype.getIntersections=function(){return this._intersections};si.prototype.setFindAllIntersections=function(e){this._findAllIntersections=e};si.prototype.setKeepIntersections=function(e){this._keepIntersections=e};si.prototype.processIntersections=function(e,t,n,r){if(!this._findAllIntersections&&this.hasIntersection()||e===n&&t===r)return null;if(this._isCheckEndSegmentsOnly){var s=this.isEndSegment(e,t)||this.isEndSegment(n,r);if(!s)return null}var o=e.getCoordinates()[t],l=e.getCoordinates()[t+1],u=n.getCoordinates()[r],c=n.getCoordinates()[r+1];this._li.computeIntersection(o,l,u,c),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=o,this._intSegments[1]=l,this._intSegments[2]=u,this._intSegments[3]=c,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)};si.prototype.isEndSegment=function(e,t){return t===0||t>=e.size()-2};si.prototype.hasIntersection=function(){return this._interiorIntersection!==null};si.prototype.isDone=function(){return this._findAllIntersections?!1:this._interiorIntersection!==null};si.prototype.interfaces_=function(){return[Xo]};si.prototype.getClass=function(){return si};si.createAllIntersectionsFinder=function(e){var t=new si(e);return t.setFindAllIntersections(!0),t};si.createAnyIntersectionFinder=function(e){return new si(e)};si.createIntersectionCounter=function(e){var t=new si(e);return t.setFindAllIntersections(!0),t.setKeepIntersections(!1),t};var Or=function(){this._li=new ia,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var e=arguments[0];this._segStrings=e};Or.prototype.execute=function(){if(this._segInt!==null)return null;this.checkInteriorIntersections()};Or.prototype.getIntersections=function(){return this._segInt.getIntersections()};Or.prototype.isValid=function(){return this.execute(),this._isValid};Or.prototype.setFindAllIntersections=function(e){this._findAllIntersections=e};Or.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new si(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var e=new Bp;if(e.setSegmentIntersector(this._segInt),e.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null};Or.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new zs(this.getErrorMessage(),this._segInt.getInteriorIntersection())};Or.prototype.getErrorMessage=function(){if(this._isValid)return"no intersections found";var e=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+Dr.toLineString(e[0],e[1])+" and "+Dr.toLineString(e[2],e[3])};Or.prototype.interfaces_=function(){return[]};Or.prototype.getClass=function(){return Or};Or.computeIntersections=function(e){var t=new Or(e);return t.setFindAllIntersections(!0),t.isValid(),t.getIntersections()};var Qo=function i(){this._nv=null;var e=arguments[0];this._nv=new Or(i.toSegmentStrings(e))};Qo.prototype.checkValid=function(){this._nv.checkValid()};Qo.prototype.interfaces_=function(){return[]};Qo.prototype.getClass=function(){return Qo};Qo.toSegmentStrings=function(e){for(var t=new le,n=e.iterator();n.hasNext();){var r=n.next();t.add(new ns(r.getCoordinates(),r))}return t};Qo.checkValid=function(e){var t=new Qo(e);t.checkValid()};var Ea=function(e){this._mapOp=e};Ea.prototype.map=function(e){for(var t=this,n=new le,r=0;r<e.getNumGeometries();r++){var s=t._mapOp.map(e.getGeometryN(r));s.isEmpty()||n.add(s)}return e.getFactory().createGeometryCollection(Ot.toGeometryArray(n))};Ea.prototype.interfaces_=function(){return[]};Ea.prototype.getClass=function(){return Ea};Ea.map=function(e,t){var n=new Ea(t);return n.map(e)};var is=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new le,this._resultLineList=new le;var e=arguments[0],t=arguments[1],n=arguments[2];this._op=e,this._geometryFactory=t,this._ptLocator=n};is.prototype.collectLines=function(e){for(var t=this,n=this._op.getGraph().getEdgeEnds().iterator();n.hasNext();){var r=n.next();t.collectLineEdge(r,e,t._lineEdgesList),t.collectBoundaryTouchEdge(r,e,t._lineEdgesList)}};is.prototype.labelIsolatedLine=function(e,t){var n=this._ptLocator.locate(e.getCoordinate(),this._op.getArgGeometry(t));e.getLabel().setLocation(t,n)};is.prototype.build=function(e){return this.findCoveredLineEdges(),this.collectLines(e),this.buildLines(e),this._resultLineList};is.prototype.collectLineEdge=function(e,t,n){var r=e.getLabel(),s=e.getEdge();e.isLineEdge()&&!e.isVisited()&&He.isResultOfOp(r,t)&&!s.isCovered()&&(n.add(s),e.setVisitedEdge(!0))};is.prototype.findCoveredLineEdges=function(){for(var e=this,t=this._op.getGraph().getNodes().iterator();t.hasNext();){var n=t.next();n.getEdges().findCoveredLineEdges()}for(var r=this._op.getGraph().getEdgeEnds().iterator();r.hasNext();){var s=r.next(),o=s.getEdge();if(s.isLineEdge()&&!o.isCoveredSet()){var l=e._op.isCoveredByA(s.getCoordinate());o.setCovered(l)}}};is.prototype.labelIsolatedLines=function(e){for(var t=this,n=e.iterator();n.hasNext();){var r=n.next(),s=r.getLabel();r.isIsolated()&&(s.isNull(0)?t.labelIsolatedLine(r,0):t.labelIsolatedLine(r,1))}};is.prototype.buildLines=function(e){for(var t=this,n=this._lineEdgesList.iterator();n.hasNext();){var r=n.next(),s=t._geometryFactory.createLineString(r.getCoordinates());t._resultLineList.add(s),r.setInResult(!0)}};is.prototype.collectBoundaryTouchEdge=function(e,t,n){var r=e.getLabel();if(e.isLineEdge()||e.isVisited()||e.isInteriorAreaEdge()||e.getEdge().isInResult())return null;nt.isTrue(!(e.isInResult()||e.getSym().isInResult())||!e.getEdge().isInResult()),He.isResultOfOp(r,t)&&t===He.INTERSECTION&&(n.add(e.getEdge()),e.setVisitedEdge(!0))};is.prototype.interfaces_=function(){return[]};is.prototype.getClass=function(){return is};var Ia=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new le;var e=arguments[0],t=arguments[1];this._op=e,this._geometryFactory=t};Ia.prototype.filterCoveredNodeToPoint=function(e){var t=e.getCoordinate();if(!this._op.isCoveredByLA(t)){var n=this._geometryFactory.createPoint(t);this._resultPointList.add(n)}};Ia.prototype.extractNonCoveredResultNodes=function(e){for(var t=this,n=this._op.getGraph().getNodes().iterator();n.hasNext();){var r=n.next();if(!r.isInResult()&&!r.isIncidentEdgeInResult()&&(r.getEdges().getDegree()===0||e===He.INTERSECTION)){var s=r.getLabel();He.isResultOfOp(s,e)&&t.filterCoveredNodeToPoint(r)}}};Ia.prototype.build=function(e){return this.extractNonCoveredResultNodes(e),this._resultPointList};Ia.prototype.interfaces_=function(){return[]};Ia.prototype.getClass=function(){return Ia};var Fi=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Fi.prototype.transformPoint=function(e,t){return this._factory.createPoint(this.transformCoordinates(e.getCoordinateSequence(),e))};Fi.prototype.transformPolygon=function(e,t){var n=this,r=!0,s=this.transformLinearRing(e.getExteriorRing(),e);(s===null||!(s instanceof ws)||s.isEmpty())&&(r=!1);for(var o=new le,l=0;l<e.getNumInteriorRing();l++){var u=n.transformLinearRing(e.getInteriorRingN(l),e);u===null||u.isEmpty()||(u instanceof ws||(r=!1),o.add(u))}if(r)return this._factory.createPolygon(s,o.toArray([]));var c=new le;return s!==null&&c.add(s),c.addAll(o),this._factory.buildGeometry(c)};Fi.prototype.createCoordinateSequence=function(e){return this._factory.getCoordinateSequenceFactory().create(e)};Fi.prototype.getInputGeometry=function(){return this._inputGeom};Fi.prototype.transformMultiLineString=function(e,t){for(var n=this,r=new le,s=0;s<e.getNumGeometries();s++){var o=n.transformLineString(e.getGeometryN(s),e);o!==null&&(o.isEmpty()||r.add(o))}return this._factory.buildGeometry(r)};Fi.prototype.transformCoordinates=function(e,t){return this.copy(e)};Fi.prototype.transformLineString=function(e,t){return this._factory.createLineString(this.transformCoordinates(e.getCoordinateSequence(),e))};Fi.prototype.transformMultiPoint=function(e,t){for(var n=this,r=new le,s=0;s<e.getNumGeometries();s++){var o=n.transformPoint(e.getGeometryN(s),e);o!==null&&(o.isEmpty()||r.add(o))}return this._factory.buildGeometry(r)};Fi.prototype.transformMultiPolygon=function(e,t){for(var n=this,r=new le,s=0;s<e.getNumGeometries();s++){var o=n.transformPolygon(e.getGeometryN(s),e);o!==null&&(o.isEmpty()||r.add(o))}return this._factory.buildGeometry(r)};Fi.prototype.copy=function(e){return e.copy()};Fi.prototype.transformGeometryCollection=function(e,t){for(var n=this,r=new le,s=0;s<e.getNumGeometries();s++){var o=n.transform(e.getGeometryN(s));o!==null&&(n._pruneEmptyGeometry&&o.isEmpty()||r.add(o))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(Ot.toGeometryArray(r)):this._factory.buildGeometry(r)};Fi.prototype.transform=function(e){if(this._inputGeom=e,this._factory=e.getFactory(),e instanceof Vi)return this.transformPoint(e,null);if(e instanceof gl)return this.transformMultiPoint(e,null);if(e instanceof ws)return this.transformLinearRing(e,null);if(e instanceof Pn)return this.transformLineString(e,null);if(e instanceof zo)return this.transformMultiLineString(e,null);if(e instanceof ei)return this.transformPolygon(e,null);if(e instanceof ms)return this.transformMultiPolygon(e,null);if(e instanceof qi)return this.transformGeometryCollection(e,null);throw new Nn("Unknown Geometry subtype: "+e.getClass().getName())};Fi.prototype.transformLinearRing=function(e,t){var n=this.transformCoordinates(e.getCoordinateSequence(),e);if(n===null)return this._factory.createLinearRing(null);var r=n.size();return r>0&&r<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)};Fi.prototype.interfaces_=function(){return[]};Fi.prototype.getClass=function(){return Fi};var ks=function i(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new Ae,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Pn&&typeof arguments[1]=="number"){var e=arguments[0],t=arguments[1];i.call(this,e.getCoordinates(),t)}else if(arguments[0]instanceof Array&&typeof arguments[1]=="number"){var n=arguments[0],r=arguments[1];this._srcPts=n,this._isClosed=i.isClosed(n),this._snapTolerance=r}};ks.prototype.snapVertices=function(e,t){for(var n=this,r=this._isClosed?e.size()-1:e.size(),s=0;s<r;s++){var o=e.get(s),l=n.findSnapForVertex(o,t);l!==null&&(e.set(s,new j(l)),s===0&&n._isClosed&&e.set(e.size()-1,new j(l)))}};ks.prototype.findSnapForVertex=function(e,t){for(var n=this,r=0;r<t.length;r++){if(e.equals2D(t[r]))return null;if(e.distance(t[r])<n._snapTolerance)return t[r]}return null};ks.prototype.snapTo=function(e){var t=new $u(this._srcPts);this.snapVertices(t,e),this.snapSegments(t,e);var n=t.toCoordinateArray();return n};ks.prototype.snapSegments=function(e,t){var n=this;if(t.length===0)return null;var r=t.length;t[0].equals2D(t[t.length-1])&&(r=t.length-1);for(var s=0;s<r;s++){var o=t[s],l=n.findSegmentIndexToSnap(o,e);l>=0&&e.add(l+1,new j(o),!1)}};ks.prototype.findSegmentIndexToSnap=function(e,t){for(var n=this,r=Ve.MAX_VALUE,s=-1,o=0;o<t.size()-1;o++){if(n._seg.p0=t.get(o),n._seg.p1=t.get(o+1),n._seg.p0.equals2D(e)||n._seg.p1.equals2D(e)){if(n._allowSnappingToSourceVertices)continue;return-1}var l=n._seg.distance(e);l<n._snapTolerance&&l<r&&(r=l,s=o)}return s};ks.prototype.setAllowSnappingToSourceVertices=function(e){this._allowSnappingToSourceVertices=e};ks.prototype.interfaces_=function(){return[]};ks.prototype.getClass=function(){return ks};ks.isClosed=function(e){return e.length<=1?!1:e[0].equals2D(e[e.length-1])};var jn=function(e){this._srcGeom=e||null},ny={SNAP_PRECISION_FACTOR:{configurable:!0}};jn.prototype.snapTo=function(e,t){var n=this.extractTargetCoordinates(e),r=new iy(t,n);return r.transform(this._srcGeom)};jn.prototype.snapToSelf=function(e,t){var n=this.extractTargetCoordinates(this._srcGeom),r=new iy(e,n,!0),s=r.transform(this._srcGeom),o=s;return t&&Me(o,fo)&&(o=s.buffer(0)),o};jn.prototype.computeSnapTolerance=function(e){var t=this.computeMinimumSegmentLength(e),n=t/10;return n};jn.prototype.extractTargetCoordinates=function(e){for(var t=new Yr,n=e.getCoordinates(),r=0;r<n.length;r++)t.add(n[r]);return t.toArray(new Array(0).fill(null))};jn.prototype.computeMinimumSegmentLength=function(e){for(var t=Ve.MAX_VALUE,n=0;n<e.length-1;n++){var r=e[n].distance(e[n+1]);r<t&&(t=r)}return t};jn.prototype.interfaces_=function(){return[]};jn.prototype.getClass=function(){return jn};jn.snap=function(e,t,n){var r=new Array(2).fill(null),s=new jn(e);r[0]=s.snapTo(t,n);var o=new jn(t);return r[1]=o.snapTo(r[0],n),r};jn.computeOverlaySnapTolerance=function(){if(arguments.length===1){var e=arguments[0],t=jn.computeSizeBasedSnapTolerance(e),n=e.getPrecisionModel();if(n.getType()===yn.FIXED){var r=1/n.getScale()*2/1.415;r>t&&(t=r)}return t}else if(arguments.length===2){var s=arguments[0],o=arguments[1];return Math.min(jn.computeOverlaySnapTolerance(s),jn.computeOverlaySnapTolerance(o))}};jn.computeSizeBasedSnapTolerance=function(e){var t=e.getEnvelopeInternal(),n=Math.min(t.getHeight(),t.getWidth()),r=n*jn.SNAP_PRECISION_FACTOR;return r};jn.snapToSelf=function(e,t,n){var r=new jn(e);return r.snapToSelf(t,n)};ny.SNAP_PRECISION_FACTOR.get=function(){return 1e-9};Object.defineProperties(jn,ny);var iy=function(i){function e(t,n,r){i.call(this),this._snapTolerance=t||null,this._snapPts=n||null,this._isSelfSnap=r!==void 0?r:!1}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(n,r){var s=new ks(n,this._snapTolerance);return s.setAllowSnappingToSourceVertices(this._isSelfSnap),s.snapTo(r)},e.prototype.transformCoordinates=function(n,r){var s=n.toCoordinateArray(),o=this.snapLine(s,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(o)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fi),Ci=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};Ci.prototype.getCommon=function(){return Ve.longBitsToDouble(this._commonBits)};Ci.prototype.add=function(e){var t=Ve.doubleToLongBits(e);if(this._isFirst)return this._commonBits=t,this._commonSignExp=Ci.signExpBits(this._commonBits),this._isFirst=!1,null;var n=Ci.signExpBits(t);if(n!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=Ci.numCommonMostSigMantissaBits(this._commonBits,t),this._commonBits=Ci.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))};Ci.prototype.toString=function(){if(arguments.length===1){var e=arguments[0],t=Ve.longBitsToDouble(e),n=Ve.toBinaryString(e),r="0000000000000000000000000000000000000000000000000000000000000000"+n,s=r.substring(r.length-64),o=s.substring(0,1)+"  "+s.substring(1,12)+"(exp) "+s.substring(12)+" [ "+t+" ]";return o}};Ci.prototype.interfaces_=function(){return[]};Ci.prototype.getClass=function(){return Ci};Ci.getBit=function(e,t){var n=1<<t;return e&n?1:0};Ci.signExpBits=function(e){return e>>52};Ci.zeroLowerBits=function(e,t){var n=(1<<t)-1,r=~n,s=e&r;return s};Ci.numCommonMostSigMantissaBits=function(e,t){for(var n=0,r=52;r>=0;r--){if(Ci.getBit(e,r)!==Ci.getBit(t,r))return n;n++}return 52};var _o=function(){this._commonCoord=null,this._ccFilter=new Da},Gp={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};_o.prototype.addCommonBits=function(e){var t=new Co(this._commonCoord);e.apply(t),e.geometryChanged()};_o.prototype.removeCommonBits=function(e){if(this._commonCoord.x===0&&this._commonCoord.y===0)return e;var t=new j(this._commonCoord);t.x=-t.x,t.y=-t.y;var n=new Co(t);return e.apply(n),e.geometryChanged(),e};_o.prototype.getCommonCoordinate=function(){return this._commonCoord};_o.prototype.add=function(e){e.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()};_o.prototype.interfaces_=function(){return[]};_o.prototype.getClass=function(){return _o};Gp.CommonCoordinateFilter.get=function(){return Da};Gp.Translater.get=function(){return Co};Object.defineProperties(_o,Gp);var Da=function(){this._commonBitsX=new Ci,this._commonBitsY=new Ci};Da.prototype.filter=function(e){this._commonBitsX.add(e.x),this._commonBitsY.add(e.y)};Da.prototype.getCommonCoordinate=function(){return new j(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())};Da.prototype.interfaces_=function(){return[vs]};Da.prototype.getClass=function(){return Da};var Co=function(){this.trans=null;var e=arguments[0];this.trans=e};Co.prototype.filter=function(e,t){var n=e.getOrdinate(t,0)+this.trans.x,r=e.getOrdinate(t,1)+this.trans.y;e.setOrdinate(t,0,n),e.setOrdinate(t,1,r)};Co.prototype.isDone=function(){return!1};Co.prototype.isGeometryChanged=function(){return!0};Co.prototype.interfaces_=function(){return[Rr]};Co.prototype.getClass=function(){return Co};var oi=function(e,t){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=e,this._geom[1]=t,this.computeSnapTolerance()};oi.prototype.selfSnap=function(e){var t=new jn(e),n=t.snapTo(e,this._snapTolerance);return n};oi.prototype.removeCommonBits=function(e){this._cbr=new _o,this._cbr.add(e[0]),this._cbr.add(e[1]);var t=new Array(2).fill(null);return t[0]=this._cbr.removeCommonBits(e[0].copy()),t[1]=this._cbr.removeCommonBits(e[1].copy()),t};oi.prototype.prepareResult=function(e){return this._cbr.addCommonBits(e),e};oi.prototype.getResultGeometry=function(e){var t=this.snap(this._geom),n=He.overlayOp(t[0],t[1],e);return this.prepareResult(n)};oi.prototype.checkValid=function(e){e.isValid()||hi.out.println("Snapped geometry is invalid")};oi.prototype.computeSnapTolerance=function(){this._snapTolerance=jn.computeOverlaySnapTolerance(this._geom[0],this._geom[1])};oi.prototype.snap=function(e){var t=this.removeCommonBits(e),n=jn.snap(t[0],t[1],this._snapTolerance);return n};oi.prototype.interfaces_=function(){return[]};oi.prototype.getClass=function(){return oi};oi.overlayOp=function(e,t,n){var r=new oi(e,t);return r.getResultGeometry(n)};oi.union=function(e,t){return oi.overlayOp(e,t,He.UNION)};oi.intersection=function(e,t){return oi.overlayOp(e,t,He.INTERSECTION)};oi.symDifference=function(e,t){return oi.overlayOp(e,t,He.SYMDIFFERENCE)};oi.difference=function(e,t){return oi.overlayOp(e,t,He.DIFFERENCE)};var Ii=function(e,t){this._geom=new Array(2).fill(null),this._geom[0]=e,this._geom[1]=t};Ii.prototype.getResultGeometry=function(e){var t=null,n=!1,r=null;try{t=He.overlayOp(this._geom[0],this._geom[1],e);var s=!0;s&&(n=!0)}catch(o){if(o instanceof Gs)r=o;else throw o}finally{}if(!n)try{t=oi.overlayOp(this._geom[0],this._geom[1],e)}catch(o){throw o instanceof Gs?r:o}finally{}return t};Ii.prototype.interfaces_=function(){return[]};Ii.prototype.getClass=function(){return Ii};Ii.overlayOp=function(e,t,n){var r=new Ii(e,t);return r.getResultGeometry(n)};Ii.union=function(e,t){return Ii.overlayOp(e,t,He.UNION)};Ii.intersection=function(e,t){return Ii.overlayOp(e,t,He.INTERSECTION)};Ii.symDifference=function(e,t){return Ii.overlayOp(e,t,He.SYMDIFFERENCE)};Ii.difference=function(e,t){return Ii.overlayOp(e,t,He.DIFFERENCE)};var wu=function(){this.mce=null,this.chainIndex=null;var e=arguments[0],t=arguments[1];this.mce=e,this.chainIndex=t};wu.prototype.computeIntersections=function(e,t){this.mce.computeIntersectsForChain(this.chainIndex,e.mce,e.chainIndex,t)};wu.prototype.interfaces_=function(){return[]};wu.prototype.getClass=function(){return wu};var zi=function i(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,arguments.length===2){var e=arguments[0],t=arguments[1];this._eventType=i.DELETE,this._xValue=e,this._insertEvent=t}else if(arguments.length===3){var n=arguments[0],r=arguments[1],s=arguments[2];this._eventType=i.INSERT,this._label=n,this._xValue=r,this._obj=s}},Up={INSERT:{configurable:!0},DELETE:{configurable:!0}};zi.prototype.isDelete=function(){return this._eventType===zi.DELETE};zi.prototype.setDeleteEventIndex=function(e){this._deleteEventIndex=e};zi.prototype.getObject=function(){return this._obj};zi.prototype.compareTo=function(e){var t=e;return this._xValue<t._xValue?-1:this._xValue>t._xValue?1:this._eventType<t._eventType?-1:this._eventType>t._eventType?1:0};zi.prototype.getInsertEvent=function(){return this._insertEvent};zi.prototype.isInsert=function(){return this._eventType===zi.INSERT};zi.prototype.isSameLabel=function(e){return this._label===null?!1:this._label===e._label};zi.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex};zi.prototype.interfaces_=function(){return[_r]};zi.prototype.getClass=function(){return zi};Up.INSERT.get=function(){return 1};Up.DELETE.get=function(){return 2};Object.defineProperties(zi,Up);var Rh=function(){};Rh.prototype.interfaces_=function(){return[]};Rh.prototype.getClass=function(){return Rh};var pi=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var e=arguments[0],t=arguments[1],n=arguments[2];this._li=e,this._includeProper=t,this._recordIsolated=n};pi.prototype.isTrivialIntersection=function(e,t,n,r){if(e===n&&this._li.getIntersectionNum()===1){if(pi.isAdjacentSegments(t,r))return!0;if(e.isClosed()){var s=e.getNumPoints()-1;if(t===0&&r===s||r===0&&t===s)return!0}}return!1};pi.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint};pi.prototype.setIsDoneIfProperInt=function(e){this._isDoneWhenProperInt=e};pi.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior};pi.prototype.isBoundaryPointInternal=function(e,t){for(var n=t.iterator();n.hasNext();){var r=n.next(),s=r.getCoordinate();if(e.isIntersection(s))return!0}return!1};pi.prototype.hasProperIntersection=function(){return this._hasProper};pi.prototype.hasIntersection=function(){return this._hasIntersection};pi.prototype.isDone=function(){return this._isDone};pi.prototype.isBoundaryPoint=function(e,t){return t===null?!1:!!(this.isBoundaryPointInternal(e,t[0])||this.isBoundaryPointInternal(e,t[1]))};pi.prototype.setBoundaryNodes=function(e,t){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=e,this._bdyNodes[1]=t};pi.prototype.addIntersections=function(e,t,n,r){if(e===n&&t===r)return null;this.numTests++;var s=e.getCoordinates()[t],o=e.getCoordinates()[t+1],l=n.getCoordinates()[r],u=n.getCoordinates()[r+1];this._li.computeIntersection(s,o,l,u),this._li.hasIntersection()&&(this._recordIsolated&&(e.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(e,t,n,r)||(this._hasIntersection=!0,(this._includeProper||!this._li.isProper())&&(e.addIntersections(this._li,t,0),n.addIntersections(this._li,r,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))};pi.prototype.interfaces_=function(){return[]};pi.prototype.getClass=function(){return pi};pi.isAdjacentSegments=function(e,t){return Math.abs(e-t)===1};var Ew=function(i){function e(){i.call(this),this.events=new le,this.nOverlaps=null}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){var n=this;Nr.sort(this.events);for(var r=0;r<this.events.size();r++){var s=n.events.get(r);s.isDelete()&&s.getInsertEvent().setDeleteEventIndex(r)}},e.prototype.computeIntersections=function(){var n=this;if(arguments.length===1){var r=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var s=0;s<this.events.size();s++){var o=n.events.get(s);if(o.isInsert()&&n.processOverlaps(s,o.getDeleteEventIndex(),o,r),r.isDone())break}}else if(arguments.length===3){if(arguments[2]instanceof pi&&Me(arguments[0],Er)&&Me(arguments[1],Er)){var l=arguments[0],u=arguments[1],c=arguments[2];this.addEdges(l,l),this.addEdges(u,u),this.computeIntersections(c)}else if(typeof arguments[2]=="boolean"&&Me(arguments[0],Er)&&arguments[1]instanceof pi){var p=arguments[0],d=arguments[1],f=arguments[2];f?this.addEdges(p,null):this.addEdges(p),this.computeIntersections(d)}}},e.prototype.addEdge=function(n,r){for(var s=this,o=n.getMonotoneChainEdge(),l=o.getStartIndexes(),u=0;u<l.length-1;u++){var c=new wu(o,u),p=new zi(r,o.getMinX(u),c);s.events.add(p),s.events.add(new zi(o.getMaxX(u),p))}},e.prototype.processOverlaps=function(n,r,s,o){for(var l=this,u=s.getObject(),c=n;c<r;c++){var p=l.events.get(c);if(p.isInsert()){var d=p.getObject();s.isSameLabel(p)||(u.computeIntersections(d,o),l.nOverlaps++)}}},e.prototype.addEdges=function(){var n=this;if(arguments.length===1)for(var r=arguments[0],s=r.iterator();s.hasNext();){var o=s.next();n.addEdge(o,o)}else if(arguments.length===2)for(var l=arguments[0],u=arguments[1],c=l.iterator();c.hasNext();){var p=c.next();n.addEdge(p,u)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Rh),As=function(){this._min=Ve.POSITIVE_INFINITY,this._max=Ve.NEGATIVE_INFINITY},ry={NodeComparator:{configurable:!0}};As.prototype.getMin=function(){return this._min};As.prototype.intersects=function(e,t){return!(this._min>t||this._max<e)};As.prototype.getMax=function(){return this._max};As.prototype.toString=function(){return Dr.toLineString(new j(this._min,0),new j(this._max,0))};As.prototype.interfaces_=function(){return[]};As.prototype.getClass=function(){return As};ry.NodeComparator.get=function(){return _u};Object.defineProperties(As,ry);var _u=function(){};_u.prototype.compare=function(e,t){var n=e,r=t,s=(n._min+n._max)/2,o=(r._min+r._max)/2;return s<o?-1:s>o?1:0};_u.prototype.interfaces_=function(){return[ll]};_u.prototype.getClass=function(){return _u};var Iw=function(i){function e(){i.call(this),this._item=null;var t=arguments[0],n=arguments[1],r=arguments[2];this._min=t,this._max=n,this._item=r}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.query=function(n,r,s){if(!this.intersects(n,r))return null;s.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(As),Dw=function(i){function e(){i.call(this),this._node1=null,this._node2=null;var t=arguments[0],n=arguments[1];this._node1=t,this._node2=n,this.buildExtent(this._node1,this._node2)}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(n,r){this._min=Math.min(n._min,r._min),this._max=Math.max(n._max,r._max)},e.prototype.query=function(n,r,s){if(!this.intersects(n,r))return null;this._node1!==null&&this._node1.query(n,r,s),this._node2!==null&&this._node2.query(n,r,s)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(As),qs=function(){this._leaves=new le,this._root=null,this._level=0};qs.prototype.buildTree=function(){var e=this;Nr.sort(this._leaves,new As.NodeComparator);for(var t=this._leaves,n=null,r=new le;;){if(e.buildLevel(t,r),r.size()===1)return r.get(0);n=t,t=r,r=n}};qs.prototype.insert=function(e,t,n){if(this._root!==null)throw new Error("Index cannot be added to once it has been queried");this._leaves.add(new Iw(e,t,n))};qs.prototype.query=function(e,t,n){this.init(),this._root.query(e,t,n)};qs.prototype.buildRoot=function(){if(this._root!==null)return null;this._root=this.buildTree()};qs.prototype.printNode=function(e){hi.out.println(Dr.toLineString(new j(e._min,this._level),new j(e._max,this._level)))};qs.prototype.init=function(){if(this._root!==null)return null;this.buildRoot()};qs.prototype.buildLevel=function(e,t){this._level++,t.clear();for(var n=0;n<e.size();n+=2){var r=e.get(n),s=n+1<e.size()?e.get(n):null;if(s===null)t.add(r);else{var o=new Dw(e.get(n),e.get(n+1));t.add(o)}}};qs.prototype.interfaces_=function(){return[]};qs.prototype.getClass=function(){return qs};var _l=function(){this._items=new le};_l.prototype.visitItem=function(e){this._items.add(e)};_l.prototype.getItems=function(){return this._items};_l.prototype.interfaces_=function(){return[go]};_l.prototype.getClass=function(){return _l};var Cl=function(){this._index=null;var e=arguments[0];if(!Me(e,fo))throw new Nn("Argument must be Polygonal");this._index=new ea(e)},zp={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};Cl.prototype.locate=function(e){var t=new Ur(e),n=new Tl(t);return this._index.query(e.y,e.y,n),t.getLocation()};Cl.prototype.interfaces_=function(){return[vl]};Cl.prototype.getClass=function(){return Cl};zp.SegmentVisitor.get=function(){return Tl};zp.IntervalIndexedGeometry.get=function(){return ea};Object.defineProperties(Cl,zp);var Tl=function(){this._counter=null;var e=arguments[0];this._counter=e};Tl.prototype.visitItem=function(e){var t=e;this._counter.countSegment(t.getCoordinate(0),t.getCoordinate(1))};Tl.prototype.interfaces_=function(){return[go]};Tl.prototype.getClass=function(){return Tl};var ea=function(){this._index=new qs;var e=arguments[0];this.init(e)};ea.prototype.init=function(e){for(var t=this,n=ai.getLines(e),r=n.iterator();r.hasNext();){var s=r.next(),o=s.getCoordinates();t.addLine(o)}};ea.prototype.addLine=function(e){for(var t=this,n=1;n<e.length;n++){var r=new Ae(e[n-1],e[n]),s=Math.min(r.p0.y,r.p1.y),o=Math.max(r.p0.y,r.p1.y);t._index.insert(s,o,r)}};ea.prototype.query=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1],n=new _l;return this._index.query(e,t,n),n.getItems()}else if(arguments.length===3){var r=arguments[0],s=arguments[1],o=arguments[2];this._index.query(r,s,o)}};ea.prototype.interfaces_=function(){return[]};ea.prototype.getClass=function(){return ea};var Ul=function(i){function e(){if(i.call(this),this._parentGeom=null,this._lineEdgeMap=new j0,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Mr,arguments.length===2){var t=arguments[0],n=arguments[1],r=br.OGC_SFS_BOUNDARY_RULE;this._argIndex=t,this._parentGeom=n,this._boundaryNodeRule=r,n!==null&&this.add(n)}else if(arguments.length===3){var s=arguments[0],o=arguments[1],l=arguments[2];this._argIndex=s,this._parentGeom=o,this._boundaryNodeRule=l,o!==null&&this.add(o)}}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(n,r){var s=this._nodes.addNode(r),o=s.getLabel(),l=1,u=W.NONE;u=o.getLocation(n,ne.ON),u===W.BOUNDARY&&l++;var c=e.determineBoundary(this._boundaryNodeRule,l);o.setLocation(n,c)},e.prototype.computeSelfNodes=function(){if(arguments.length===2){var n=arguments[0],r=arguments[1];return this.computeSelfNodes(n,r,!1)}else if(arguments.length===3){var s=arguments[0],o=arguments[1],l=arguments[2],u=new pi(s,!0,!1);u.setIsDoneIfProperInt(l);var c=this.createEdgeSetIntersector(),p=this._parentGeom instanceof ws||this._parentGeom instanceof ei||this._parentGeom instanceof ms,d=o||!p;return c.computeIntersections(this._edges,u,d),this.addSelfIntersectionNodes(this._argIndex),u}},e.prototype.computeSplitEdges=function(n){for(var r=this._edges.iterator();r.hasNext();){var s=r.next();s.eiList.addSplitEdges(n)}},e.prototype.computeEdgeIntersections=function(n,r,s){var o=new pi(r,s,!0);o.setBoundaryNodes(this.getBoundaryNodes(),n.getBoundaryNodes());var l=this.createEdgeSetIntersector();return l.computeIntersections(this._edges,n._edges,o),o},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Vi){var n=arguments[0],r=n.getCoordinate();this.insertPoint(this._argIndex,r,W.INTERIOR)}else if(arguments[0]instanceof j){var s=arguments[0];this.insertPoint(this._argIndex,s,W.INTERIOR)}},e.prototype.addPolygon=function(n){var r=this;this.addPolygonRing(n.getExteriorRing(),W.EXTERIOR,W.INTERIOR);for(var s=0;s<n.getNumInteriorRing();s++){var o=n.getInteriorRingN(s);r.addPolygonRing(o,W.INTERIOR,W.EXTERIOR)}},e.prototype.addEdge=function(n){this.insertEdge(n);var r=n.getCoordinates();this.insertPoint(this._argIndex,r[0],W.BOUNDARY),this.insertPoint(this._argIndex,r[r.length-1],W.BOUNDARY)},e.prototype.addLineString=function(n){var r=Pt.removeRepeatedPoints(n.getCoordinates());if(r.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=r[0],null;var s=new Dh(r,new _n(this._argIndex,W.INTERIOR));this._lineEdgeMap.put(n,s),this.insertEdge(s),nt.isTrue(r.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,r[0]),this.insertBoundaryPoint(this._argIndex,r[r.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var n=this.getBoundaryNodes(),r=new Array(n.size()).fill(null),s=0,o=n.iterator();o.hasNext();){var l=o.next();r[s++]=l.getCoordinate().copy()}return r},e.prototype.getBoundaryNodes=function(){return this._boundaryNodes===null&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(n,r,s){if(this.isBoundaryNode(n,r))return null;s===W.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(n,r):this.insertPoint(n,r,s)},e.prototype.addPolygonRing=function(n,r,s){if(n.isEmpty())return null;var o=Pt.removeRepeatedPoints(n.getCoordinates());if(o.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=o[0],null;var l=r,u=s;ce.isCCW(o)&&(l=s,u=r);var c=new Dh(o,new _n(this._argIndex,W.BOUNDARY,l,u));this._lineEdgeMap.put(n,c),this.insertEdge(c),this.insertPoint(this._argIndex,o[0],W.BOUNDARY)},e.prototype.insertPoint=function(n,r,s){var o=this._nodes.addNode(r),l=o.getLabel();l===null?o._label=new _n(n,s):l.setLocation(n,s)},e.prototype.createEdgeSetIntersector=function(){return new Ew},e.prototype.addSelfIntersectionNodes=function(n){for(var r=this,s=this._edges.iterator();s.hasNext();)for(var o=s.next(),l=o.getLabel().getLocation(n),u=o.eiList.iterator();u.hasNext();){var c=u.next();r.addSelfIntersectionNode(n,c.coord,l)}},e.prototype.add=function(){if(arguments.length===1){var n=arguments[0];if(n.isEmpty())return null;if(n instanceof ms&&(this._useBoundaryDeterminationRule=!1),n instanceof ei)this.addPolygon(n);else if(n instanceof Pn)this.addLineString(n);else if(n instanceof Vi)this.addPoint(n);else if(n instanceof gl)this.addCollection(n);else if(n instanceof zo)this.addCollection(n);else if(n instanceof ms)this.addCollection(n);else if(n instanceof qi)this.addCollection(n);else throw new Error(n.getClass().getName())}else return i.prototype.add.apply(this,arguments)},e.prototype.addCollection=function(n){for(var r=this,s=0;s<n.getNumGeometries();s++){var o=n.getGeometryN(s);r.add(o)}},e.prototype.locate=function(n){return Me(this._parentGeom,fo)&&this._parentGeom.getNumGeometries()>50?(this._areaPtLocator===null&&(this._areaPtLocator=new Cl(this._parentGeom)),this._areaPtLocator.locate(n)):this._ptLocator.locate(n,this._parentGeom)},e.prototype.findEdge=function(){if(arguments.length===1){var n=arguments[0];return this._lineEdgeMap.get(n)}else return i.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(n,r){return n.isInBoundary(r)?W.BOUNDARY:W.INTERIOR},e}(Mn),xl=function(){if(this._li=new ia,this._resultPrecisionModel=null,this._arg=null,arguments.length===1){var e=arguments[0];this.setComputationPrecision(e.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Ul(0,e)}else if(arguments.length===2){var t=arguments[0],n=arguments[1],r=br.OGC_SFS_BOUNDARY_RULE;t.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(t.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Ul(0,t,r),this._arg[1]=new Ul(1,n,r)}else if(arguments.length===3){var s=arguments[0],o=arguments[1],l=arguments[2];s.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(s.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Ul(0,s,l),this._arg[1]=new Ul(1,o,l)}};xl.prototype.getArgGeometry=function(e){return this._arg[e].getGeometry()};xl.prototype.setComputationPrecision=function(e){this._resultPrecisionModel=e,this._li.setPrecisionModel(this._resultPrecisionModel)};xl.prototype.interfaces_=function(){return[]};xl.prototype.getClass=function(){return xl};var Bo=function(){};Bo.prototype.interfaces_=function(){return[]};Bo.prototype.getClass=function(){return Bo};Bo.map=function(){if(arguments[0]instanceof $e&&Me(arguments[1],Bo.MapOp)){for(var e=arguments[0],t=arguments[1],n=new le,r=0;r<e.getNumGeometries();r++){var s=t.map(e.getGeometryN(r));s!==null&&n.add(s)}return e.getFactory().buildGeometry(n)}else if(Me(arguments[0],Xn)&&Me(arguments[1],Bo.MapOp)){for(var o=arguments[0],l=arguments[1],u=new le,c=o.iterator();c.hasNext();){var p=c.next(),d=l.map(p);d!==null&&u.add(d)}return u}};Bo.MapOp=function(){};var He=function(i){function e(){var t=arguments[0],n=arguments[1];i.call(this,t,n),this._ptLocator=new Mr,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Lr,this._resultPolyList=new le,this._resultLineList=new le,this._resultPointList=new le,this._graph=new Mn(new Y0),this._geomFact=t.getFactory()}return i&&(e.__proto__=i),e.prototype=Object.create(i&&i.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(n){var r=this._edgeList.findEqualEdge(n);if(r!==null){var s=r.getLabel(),o=n.getLabel();r.isPointwiseEqual(n)||(o=new _n(n.getLabel()),o.flip());var l=r.getDepth();l.isNull()&&l.add(s),l.add(o),s.merge(o)}else this._edgeList.add(n)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var r=n.next(),s=r.getSym();r.isInResult()&&s.isInResult()&&(r.setInResult(!1),s.setInResult(!1))}},e.prototype.isCoveredByLA=function(n){return!!(this.isCovered(n,this._resultLineList)||this.isCovered(n,this._resultPolyList))},e.prototype.computeGeometry=function(n,r,s,o){var l=new le;return l.addAll(n),l.addAll(r),l.addAll(s),l.isEmpty()?e.createEmptyResult(o,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(l)},e.prototype.mergeSymLabels=function(){for(var n=this._graph.getNodes().iterator();n.hasNext();){var r=n.next();r.getEdges().mergeSymLabels()}},e.prototype.isCovered=function(n,r){for(var s=this,o=r.iterator();o.hasNext();){var l=o.next(),u=s._ptLocator.locate(n,l);if(u!==W.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var n=new le,r=this._edgeList.iterator();r.hasNext();){var s=r.next();s.isCollapsed()&&(r.remove(),n.add(s.getCollapsedEdge()))}this._edgeList.addAll(n)},e.prototype.updateNodeLabelling=function(){for(var n=this._graph.getNodes().iterator();n.hasNext();){var r=n.next(),s=r.getEdges().getLabel();r.getLabel().merge(s)}},e.prototype.getResultGeometry=function(n){return this.computeOverlay(n),this._resultGeom},e.prototype.insertUniqueEdges=function(n){for(var r=this,s=n.iterator();s.hasNext();){var o=s.next();r.insertUniqueEdge(o)}},e.prototype.computeOverlay=function(n){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var r=new le;this._arg[0].computeSplitEdges(r),this._arg[1].computeSplitEdges(r),this.insertUniqueEdges(r),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Qo.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(n),this.cancelDuplicateResultEdges();var s=new Gi(this._geomFact);s.add(this._graph),this._resultPolyList=s.getPolygons();var o=new is(this,this._geomFact,this._ptLocator);this._resultLineList=o.build(n);var l=new Ia(this,this._geomFact,this._ptLocator);this._resultPointList=l.build(n),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,n)},e.prototype.labelIncompleteNode=function(n,r){var s=this._ptLocator.locate(n.getCoordinate(),this._arg[r].getGeometry());n.getLabel().setLocation(r,s)},e.prototype.copyPoints=function(n){for(var r=this,s=this._arg[n].getNodeIterator();s.hasNext();){var o=s.next(),l=r._graph.addNode(o.getCoordinate());l.setLabel(n,o.getLabel().getLocation(n))}},e.prototype.findResultAreaEdges=function(n){for(var r=this._graph.getEdgeEnds().iterator();r.hasNext();){var s=r.next(),o=s.getLabel();o.isArea()&&!s.isInteriorAreaEdge()&&e.isResultOfOp(o.getLocation(0,ne.RIGHT),o.getLocation(1,ne.RIGHT),n)&&s.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var n=this._edgeList.iterator();n.hasNext();){var r=n.next(),s=r.getLabel(),o=r.getDepth();if(!o.isNull()){o.normalize();for(var l=0;l<2;l++)!s.isNull(l)&&s.isArea()&&!o.isNull(l)&&(o.getDelta(l)===0?s.toLine(l):(nt.isTrue(!o.isNull(l,ne.LEFT),"depth of LEFT side has not been initialized"),s.setLocation(l,ne.LEFT,o.getLocation(l,ne.LEFT)),nt.isTrue(!o.isNull(l,ne.RIGHT),"depth of RIGHT side has not been initialized"),s.setLocation(l,ne.RIGHT,o.getLocation(l,ne.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var n=this,r=this._graph.getNodes().iterator();r.hasNext();){var s=r.next();s.getEdges().computeLabelling(n._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var n=this,r=this._graph.getNodes().iterator();r.hasNext();){var s=r.next(),o=s.getLabel();s.isIsolated()&&(o.isNull(0)?n.labelIncompleteNode(s,0):n.labelIncompleteNode(s,1)),s.getEdges().updateLabelling(o)}},e.prototype.isCoveredByA=function(n){return!!this.isCovered(n,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(xl);He.overlayOp=function(i,e,t){var n=new He(i,e),r=n.getResultGeometry(t);return r};He.intersection=function(i,e){if(i.isEmpty()||e.isEmpty())return He.createEmptyResult(He.INTERSECTION,i,e,i.getFactory());if(i.isGeometryCollection()){var t=e;return Ea.map(i,{interfaces_:function(){return[Bo.MapOp]},map:function(n){return n.intersection(t)}})}return i.checkNotGeometryCollection(i),i.checkNotGeometryCollection(e),Ii.overlayOp(i,e,He.INTERSECTION)};He.symDifference=function(i,e){if(i.isEmpty()||e.isEmpty()){if(i.isEmpty()&&e.isEmpty())return He.createEmptyResult(He.SYMDIFFERENCE,i,e,i.getFactory());if(i.isEmpty())return e.copy();if(e.isEmpty())return i.copy()}return i.checkNotGeometryCollection(i),i.checkNotGeometryCollection(e),Ii.overlayOp(i,e,He.SYMDIFFERENCE)};He.resultDimension=function(i,e,t){var n=e.getDimension(),r=t.getDimension(),s=-1;switch(i){case He.INTERSECTION:s=Math.min(n,r);break;case He.UNION:s=Math.max(n,r);break;case He.DIFFERENCE:s=n;break;case He.SYMDIFFERENCE:s=Math.max(n,r);break}return s};He.createEmptyResult=function(i,e,t,n){var r=null;switch(He.resultDimension(i,e,t)){case-1:r=n.createGeometryCollection(new Array(0).fill(null));break;case 0:r=n.createPoint();break;case 1:r=n.createLineString();break;case 2:r=n.createPolygon();break}return r};He.difference=function(i,e){return i.isEmpty()?He.createEmptyResult(He.DIFFERENCE,i,e,i.getFactory()):e.isEmpty()?i.copy():(i.checkNotGeometryCollection(i),i.checkNotGeometryCollection(e),Ii.overlayOp(i,e,He.DIFFERENCE))};He.isResultOfOp=function(){if(arguments.length===2){var i=arguments[0],e=arguments[1],t=i.getLocation(0),n=i.getLocation(1);return He.isResultOfOp(t,n,e)}else if(arguments.length===3){var r=arguments[0],s=arguments[1],o=arguments[2];switch(r===W.BOUNDARY&&(r=W.INTERIOR),s===W.BOUNDARY&&(s=W.INTERIOR),o){case He.INTERSECTION:return r===W.INTERIOR&&s===W.INTERIOR;case He.UNION:return r===W.INTERIOR||s===W.INTERIOR;case He.DIFFERENCE:return r===W.INTERIOR&&s!==W.INTERIOR;case He.SYMDIFFERENCE:return r===W.INTERIOR&&s!==W.INTERIOR||r!==W.INTERIOR&&s===W.INTERIOR}return!1}};He.INTERSECTION=1;He.UNION=2;He.DIFFERENCE=3;He.SYMDIFFERENCE=4;var po=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Mr,this._seg=new Ae;var e=arguments[0],t=arguments[1];this._g=e,this._boundaryDistanceTolerance=t,this._linework=this.extractLinework(e)};po.prototype.isWithinToleranceOfBoundary=function(e){for(var t=this,n=0;n<this._linework.getNumGeometries();n++)for(var r=t._linework.getGeometryN(n),s=r.getCoordinateSequence(),o=0;o<s.size()-1;o++){s.getCoordinate(o,t._seg.p0),s.getCoordinate(o+1,t._seg.p1);var l=t._seg.distance(e);if(l<=t._boundaryDistanceTolerance)return!0}return!1};po.prototype.getLocation=function(e){return this.isWithinToleranceOfBoundary(e)?W.BOUNDARY:this._ptLocator.locate(e,this._g)};po.prototype.extractLinework=function(e){var t=new kl;e.apply(t);var n=t.getLinework(),r=Ot.toLineStringArray(n);return e.getFactory().createMultiLineString(r)};po.prototype.interfaces_=function(){return[]};po.prototype.getClass=function(){return po};var kl=function(){this._linework=null,this._linework=new le};kl.prototype.getLinework=function(){return this._linework};kl.prototype.filter=function(e){var t=this;if(e instanceof ei){var n=e;this._linework.add(n.getExteriorRing());for(var r=0;r<n.getNumInteriorRing();r++)t._linework.add(n.getInteriorRingN(r))}};kl.prototype.interfaces_=function(){return[Xr]};kl.prototype.getClass=function(){return kl};var ta=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var e=arguments[0];this._g=e};ta.prototype.extractPoints=function(e,t,n){for(var r=this,s=e.getCoordinates(),o=0;o<s.length-1;o++)r.computeOffsetPoints(s[o],s[o+1],t,n)};ta.prototype.setSidesToGenerate=function(e,t){this._doLeft=e,this._doRight=t};ta.prototype.getPoints=function(e){for(var t=this,n=new le,r=ai.getLines(this._g),s=r.iterator();s.hasNext();){var o=s.next();t.extractPoints(o,e,n)}return n};ta.prototype.computeOffsetPoints=function(e,t,n,r){var s=t.x-e.x,o=t.y-e.y,l=Math.sqrt(s*s+o*o),u=n*s/l,c=n*o/l,p=(t.x+e.x)/2,d=(t.y+e.y)/2;if(this._doLeft){var f=new j(p-c,d+u);r.add(f)}if(this._doRight){var g=new j(p+c,d-u);r.add(g)}};ta.prototype.interfaces_=function(){return[]};ta.prototype.getClass=function(){return ta};var hr=function i(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=i.TOLERANCE,this._testCoords=new le;var e=arguments[0],t=arguments[1],n=arguments[2];this._boundaryDistanceTolerance=i.computeBoundaryDistanceTolerance(e,t),this._geom=[e,t,n],this._locFinder=[new po(this._geom[0],this._boundaryDistanceTolerance),new po(this._geom[1],this._boundaryDistanceTolerance),new po(this._geom[2],this._boundaryDistanceTolerance)]},sy={TOLERANCE:{configurable:!0}};hr.prototype.reportResult=function(e,t,n){hi.out.println("Overlay result invalid - A:"+W.toLocationSymbol(t[0])+" B:"+W.toLocationSymbol(t[1])+" expected:"+(n?"i":"e")+" actual:"+W.toLocationSymbol(t[2]))};hr.prototype.isValid=function(e){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var t=this.checkValid(e);return t};hr.prototype.checkValid=function(){var e=this;if(arguments.length===1){for(var t=arguments[0],n=0;n<this._testCoords.size();n++){var r=e._testCoords.get(n);if(!e.checkValid(t,r))return e._invalidLocation=r,!1}return!0}else if(arguments.length===2){var s=arguments[0],o=arguments[1];return this._location[0]=this._locFinder[0].getLocation(o),this._location[1]=this._locFinder[1].getLocation(o),this._location[2]=this._locFinder[2].getLocation(o),hr.hasLocation(this._location,W.BOUNDARY)?!0:this.isValidResult(s,this._location)}};hr.prototype.addTestPts=function(e){var t=new ta(e);this._testCoords.addAll(t.getPoints(5*this._boundaryDistanceTolerance))};hr.prototype.isValidResult=function(e,t){var n=He.isResultOfOp(t[0],t[1],e),r=t[2]===W.INTERIOR,s=!(n^r);return s||this.reportResult(e,t,n),s};hr.prototype.getInvalidLocation=function(){return this._invalidLocation};hr.prototype.interfaces_=function(){return[]};hr.prototype.getClass=function(){return hr};hr.hasLocation=function(e,t){for(var n=0;n<3;n++)if(e[n]===t)return!0;return!1};hr.computeBoundaryDistanceTolerance=function(e,t){return Math.min(jn.computeSizeBasedSnapTolerance(e),jn.computeSizeBasedSnapTolerance(t))};hr.isValid=function(e,t,n,r){var s=new hr(e,t,r);return s.isValid(n)};sy.TOLERANCE.get=function(){return 1e-6};Object.defineProperties(hr,sy);var Ki=function i(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=i.extractFactory(e),this._inputGeoms=e};Ki.prototype.extractElements=function(e,t){var n=this;if(e===null)return null;for(var r=0;r<e.getNumGeometries();r++){var s=e.getGeometryN(r);n._skipEmpty&&s.isEmpty()||t.add(s)}};Ki.prototype.combine=function(){for(var e=this,t=new le,n=this._inputGeoms.iterator();n.hasNext();){var r=n.next();e.extractElements(r,t)}return t.size()===0?this._geomFactory!==null?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)};Ki.prototype.interfaces_=function(){return[]};Ki.prototype.getClass=function(){return Ki};Ki.combine=function(){if(arguments.length===1){var e=arguments[0],t=new Ki(e);return t.combine()}else if(arguments.length===2){var n=arguments[0],r=arguments[1],s=new Ki(Ki.createList(n,r));return s.combine()}else if(arguments.length===3){var o=arguments[0],l=arguments[1],u=arguments[2],c=new Ki(Ki.createList(o,l,u));return c.combine()}};Ki.extractFactory=function(e){return e.isEmpty()?null:e.iterator().next().getFactory()};Ki.createList=function(){if(arguments.length===2){var e=arguments[0],t=arguments[1],n=new le;return n.add(e),n.add(t),n}else if(arguments.length===3){var r=arguments[0],s=arguments[1],o=arguments[2],l=new le;return l.add(r),l.add(s),l.add(o),l}};var zn=function(){this._inputPolys=null,this._geomFactory=null;var e=arguments[0];this._inputPolys=e,this._inputPolys===null&&(this._inputPolys=new le)},oy={STRTREE_NODE_CAPACITY:{configurable:!0}};zn.prototype.reduceToGeometries=function(e){for(var t=this,n=new le,r=e.iterator();r.hasNext();){var s=r.next(),o=null;Me(s,Er)?o=t.unionTree(s):s instanceof $e&&(o=s),n.add(o)}return n};zn.prototype.extractByEnvelope=function(e,t,n){for(var r=new le,s=0;s<t.getNumGeometries();s++){var o=t.getGeometryN(s);o.getEnvelopeInternal().intersects(e)?r.add(o):n.add(o)}return this._geomFactory.buildGeometry(r)};zn.prototype.unionOptimized=function(e,t){var n=e.getEnvelopeInternal(),r=t.getEnvelopeInternal();if(!n.intersects(r)){var s=Ki.combine(e,t);return s}if(e.getNumGeometries()<=1&&t.getNumGeometries()<=1)return this.unionActual(e,t);var o=n.intersection(r);return this.unionUsingEnvelopeIntersection(e,t,o)};zn.prototype.union=function(){if(this._inputPolys===null)throw new Error("union() method cannot be called twice");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var e=new G0(zn.STRTREE_NODE_CAPACITY),t=this._inputPolys.iterator();t.hasNext();){var n=t.next();e.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var r=e.itemsTree(),s=this.unionTree(r);return s};zn.prototype.binaryUnion=function(){if(arguments.length===1){var e=arguments[0];return this.binaryUnion(e,0,e.size())}else if(arguments.length===3){var t=arguments[0],n=arguments[1],r=arguments[2];if(r-n<=1){var s=zn.getGeometry(t,n);return this.unionSafe(s,null)}else{if(r-n===2)return this.unionSafe(zn.getGeometry(t,n),zn.getGeometry(t,n+1));var o=Math.trunc((r+n)/2),l=this.binaryUnion(t,n,o),u=this.binaryUnion(t,o,r);return this.unionSafe(l,u)}}};zn.prototype.repeatedUnion=function(e){for(var t=null,n=e.iterator();n.hasNext();){var r=n.next();t===null?t=r.copy():t=t.union(r)}return t};zn.prototype.unionSafe=function(e,t){return e===null&&t===null?null:e===null?t.copy():t===null?e.copy():this.unionOptimized(e,t)};zn.prototype.unionActual=function(e,t){return zn.restrictToPolygons(e.union(t))};zn.prototype.unionTree=function(e){var t=this.reduceToGeometries(e),n=this.binaryUnion(t);return n};zn.prototype.unionUsingEnvelopeIntersection=function(e,t,n){var r=new le,s=this.extractByEnvelope(n,e,r),o=this.extractByEnvelope(n,t,r),l=this.unionActual(s,o);r.add(l);var u=Ki.combine(r);return u};zn.prototype.bufferUnion=function(){if(arguments.length===1){var e=arguments[0],t=e.get(0).getFactory(),n=t.buildGeometry(e),r=n.buffer(0);return r}else if(arguments.length===2){var s=arguments[0],o=arguments[1],l=s.getFactory(),u=l.createGeometryCollection([s,o]),c=u.buffer(0);return c}};zn.prototype.interfaces_=function(){return[]};zn.prototype.getClass=function(){return zn};zn.restrictToPolygons=function(e){if(Me(e,fo))return e;var t=Js.getPolygons(e);return t.size()===1?t.get(0):e.getFactory().createMultiPolygon(Ot.toPolygonArray(t))};zn.getGeometry=function(e,t){return t>=e.size()?null:e.get(t)};zn.union=function(e){var t=new zn(e);return t.union()};oy.STRTREE_NODE_CAPACITY.get=function(){return 4};Object.defineProperties(zn,oy);var $h=function(){};$h.prototype.interfaces_=function(){return[]};$h.prototype.getClass=function(){return $h};$h.union=function(e,t){if(e.isEmpty()||t.isEmpty()){if(e.isEmpty()&&t.isEmpty())return He.createEmptyResult(He.UNION,e,t,e.getFactory());if(e.isEmpty())return t.copy();if(t.isEmpty())return e.copy()}return e.checkNotGeometryCollection(e),e.checkNotGeometryCollection(t),Ii.overlayOp(e,t,He.UNION)};function ra(){return new Nh}function Nh(){this.reset()}Nh.prototype={constructor:Nh,reset:function(){this.s=this.t=0},add:function(i){Ng(rh,i,this.t),Ng(this,rh.s,this.s),this.s?this.t+=rh.t:this.s=rh.t},valueOf:function(){return this.s}};var rh=new Nh;function Ng(i,e,t){var n=i.s=e+t,r=n-e,s=n-r;i.t=e-s+(t-r)}var On=1e-6,xn=Math.PI,Bs=xn/2,Lg=xn/4,Xs=xn*2,Io=180/xn,jr=xn/180,ki=Math.abs,Rw=Math.atan,Al=Math.atan2,Zn=Math.cos,Kn=Math.sin,Bl=Math.sqrt;function ay(i){return i>1?0:i<-1?xn:Math.acos(i)}function Ra(i){return i>1?Bs:i<-1?-Bs:Math.asin(i)}function Kl(){}function Lh(i,e){i&&Og.hasOwnProperty(i.type)&&Og[i.type](i,e)}var Mg={Feature:function(i,e){Lh(i.geometry,e)},FeatureCollection:function(i,e){for(var t=i.features,n=-1,r=t.length;++n<r;)Lh(t[n].geometry,e)}},Og={Sphere:function(i,e){e.sphere()},Point:function(i,e){i=i.coordinates,e.point(i[0],i[1],i[2])},MultiPoint:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)i=t[n],e.point(i[0],i[1],i[2])},LineString:function(i,e){Pd(i.coordinates,e,0)},MultiLineString:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)Pd(t[n],e,0)},Polygon:function(i,e){Pg(i.coordinates,e)},MultiPolygon:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)Pg(t[n],e)},GeometryCollection:function(i,e){for(var t=i.geometries,n=-1,r=t.length;++n<r;)Lh(t[n],e)}};function Pd(i,e,t){var n=-1,r=i.length-t,s;for(e.lineStart();++n<r;)s=i[n],e.point(s[0],s[1],s[2]);e.lineEnd()}function Pg(i,e){var t=-1,n=i.length;for(e.polygonStart();++t<n;)Pd(i[t],e,1);e.polygonEnd()}function $w(i,e){i&&Mg.hasOwnProperty(i.type)?Mg[i.type](i,e):Lh(i,e)}ra();ra();function Fd(i){return[Al(i[1],i[0]),Ra(i[2])]}function ql(i){var e=i[0],t=i[1],n=Zn(t);return[n*Zn(e),n*Kn(e),Kn(t)]}function sh(i,e){return i[0]*e[0]+i[1]*e[1]+i[2]*e[2]}function Mh(i,e){return[i[1]*e[2]-i[2]*e[1],i[2]*e[0]-i[0]*e[2],i[0]*e[1]-i[1]*e[0]]}function ed(i,e){i[0]+=e[0],i[1]+=e[1],i[2]+=e[2]}function oh(i,e){return[i[0]*e,i[1]*e,i[2]*e]}function Bd(i){var e=Bl(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]);i[0]/=e,i[1]/=e,i[2]/=e}ra();function ly(i,e){function t(n,r){return n=i(n,r),e(n[0],n[1])}return i.invert&&e.invert&&(t.invert=function(n,r){return n=e.invert(n,r),n&&i.invert(n[0],n[1])}),t}function jd(i,e){return[i>xn?i-Xs:i<-xn?i+Xs:i,e]}jd.invert=jd;function Nw(i,e,t){return(i%=Xs)?e||t?ly(Bg(i),jg(e,t)):Bg(i):e||t?jg(e,t):jd}function Fg(i){return function(e,t){return e+=i,[e>xn?e-Xs:e<-xn?e+Xs:e,t]}}function Bg(i){var e=Fg(i);return e.invert=Fg(-i),e}function jg(i,e){var t=Zn(i),n=Kn(i),r=Zn(e),s=Kn(e);function o(l,u){var c=Zn(u),p=Zn(l)*c,d=Kn(l)*c,f=Kn(u),g=f*t+p*n;return[Al(d*r-g*s,p*t-f*n),Ra(g*r+d*s)]}return o.invert=function(l,u){var c=Zn(u),p=Zn(l)*c,d=Kn(l)*c,f=Kn(u),g=f*r-d*s;return[Al(d*r+f*s,p*t+g*n),Ra(g*t-p*n)]},o}function Lw(i,e,t,n,r,s){if(t){var o=Zn(e),l=Kn(e),u=n*t;r==null?(r=e+n*Xs,s=e-u/2):(r=Wg(o,r),s=Wg(o,s),(n>0?r<s:r>s)&&(r+=n*Xs));for(var c,p=r;n>0?p>s:p<s;p-=u)c=Fd([o,-l*Zn(p),-l*Kn(p)]),i.point(c[0],c[1])}}function Wg(i,e){e=ql(e),e[0]-=i,Bd(e);var t=ay(-e[1]);return((-e[2]<0?-t:t)+Xs-On)%Xs}function uy(){var i=[],e;return{point:function(t,n){e.push([t,n])},lineStart:function(){i.push(e=[])},lineEnd:Kl,rejoin:function(){i.length>1&&i.push(i.pop().concat(i.shift()))},result:function(){var t=i;return i=[],e=null,t}}}function Mw(i,e,t,n,r,s){var o=i[0],l=i[1],u=e[0],c=e[1],p=0,d=1,f=u-o,g=c-l,v;if(v=t-o,!(!f&&v>0)){if(v/=f,f<0){if(v<p)return;v<d&&(d=v)}else if(f>0){if(v>d)return;v>p&&(p=v)}if(v=r-o,!(!f&&v<0)){if(v/=f,f<0){if(v>d)return;v>p&&(p=v)}else if(f>0){if(v<p)return;v<d&&(d=v)}if(v=n-l,!(!g&&v>0)){if(v/=g,g<0){if(v<p)return;v<d&&(d=v)}else if(g>0){if(v>d)return;v>p&&(p=v)}if(v=s-l,!(!g&&v<0)){if(v/=g,g<0){if(v>d)return;v>p&&(p=v)}else if(g>0){if(v<p)return;v<d&&(d=v)}return p>0&&(i[0]=o+p*f,i[1]=l+p*g),d<1&&(e[0]=o+d*f,e[1]=l+d*g),!0}}}}}function yh(i,e){return ki(i[0]-e[0])<On&&ki(i[1]-e[1])<On}function ah(i,e,t,n){this.x=i,this.z=e,this.o=t,this.e=n,this.v=!1,this.n=this.p=null}function hy(i,e,t,n,r){var s=[],o=[],l,u;if(i.forEach(function(v){if(!((w=v.length-1)<=0)){var w,A=v[0],C=v[w],m;if(yh(A,C)){for(r.lineStart(),l=0;l<w;++l)r.point((A=v[l])[0],A[1]);r.lineEnd();return}s.push(m=new ah(A,v,null,!0)),o.push(m.o=new ah(A,null,m,!1)),s.push(m=new ah(C,v,null,!1)),o.push(m.o=new ah(C,null,m,!0))}}),!!s.length){for(o.sort(e),Jg(s),Jg(o),l=0,u=o.length;l<u;++l)o[l].e=t=!t;for(var c=s[0],p,d;;){for(var f=c,g=!0;f.v;)if((f=f.n)===c)return;p=f.z,r.lineStart();do{if(f.v=f.o.v=!0,f.e){if(g)for(l=0,u=p.length;l<u;++l)r.point((d=p[l])[0],d[1]);else n(f.x,f.n.x,1,r);f=f.n}else{if(g)for(p=f.p.z,l=p.length-1;l>=0;--l)r.point((d=p[l])[0],d[1]);else n(f.x,f.p.x,-1,r);f=f.p}f=f.o,p=f.z,g=!g}while(!f.v);r.lineEnd()}}}function Jg(i){if(e=i.length){for(var e,t=0,n=i[0],r;++t<e;)n.n=r=i[t],r.p=n,n=r;n.n=r=i[0],r.p=n}}function cy(i,e){return i<e?-1:i>e?1:i>=e?0:NaN}function Ow(i){return i.length===1&&(i=Pw(i)),{left:function(e,t,n,r){for(n==null&&(n=0),r==null&&(r=e.length);n<r;){var s=n+r>>>1;i(e[s],t)<0?n=s+1:r=s}return n},right:function(e,t,n,r){for(n==null&&(n=0),r==null&&(r=e.length);n<r;){var s=n+r>>>1;i(e[s],t)>0?r=s:n=s+1}return n}}}function Pw(i){return function(e,t){return cy(i(e),t)}}Ow(cy);function dy(i){for(var e=i.length,t,n=-1,r=0,s,o;++n<e;)r+=i[n].length;for(s=new Array(r);--e>=0;)for(o=i[e],t=o.length;--t>=0;)s[--r]=o[t];return s}var Ql=1e9,lh=-Ql;function Fw(i,e,t,n){function r(c,p){return i<=c&&c<=t&&e<=p&&p<=n}function s(c,p,d,f){var g=0,v=0;if(c==null||(g=o(c,d))!==(v=o(p,d))||u(c,p)<0^d>0)do f.point(g===0||g===3?i:t,g>1?n:e);while((g=(g+d+4)%4)!==v);else f.point(p[0],p[1])}function o(c,p){return ki(c[0]-i)<On?p>0?0:3:ki(c[0]-t)<On?p>0?2:1:ki(c[1]-e)<On?p>0?1:0:p>0?3:2}function l(c,p){return u(c.x,p.x)}function u(c,p){var d=o(c,1),f=o(p,1);return d!==f?d-f:d===0?p[1]-c[1]:d===1?c[0]-p[0]:d===2?c[1]-p[1]:p[0]-c[0]}return function(c){var p=c,d=uy(),f,g,v,w,A,C,m,y,x,k,q,I={point:S,lineStart:N,lineEnd:O,polygonStart:B,polygonEnd:D};function S(V,X){r(V,X)&&p.point(V,X)}function $(){for(var V=0,X=0,K=g.length;X<K;++X)for(var ee=g[X],z=1,J=ee.length,H=ee[0],Y,se,Q=H[0],ie=H[1];z<J;++z)Y=Q,se=ie,H=ee[z],Q=H[0],ie=H[1],se<=n?ie>n&&(Q-Y)*(n-se)>(ie-se)*(i-Y)&&++V:ie<=n&&(Q-Y)*(n-se)<(ie-se)*(i-Y)&&--V;return V}function B(){p=d,f=[],g=[],q=!0}function D(){var V=$(),X=q&&V,K=(f=dy(f)).length;(X||K)&&(c.polygonStart(),X&&(c.lineStart(),s(null,null,1,c),c.lineEnd()),K&&hy(f,l,V,s,c),c.polygonEnd()),p=c,f=g=v=null}function N(){I.point=L,g&&g.push(v=[]),k=!0,x=!1,m=y=NaN}function O(){f&&(L(w,A),C&&x&&d.rejoin(),f.push(d.result())),I.point=S,x&&p.lineEnd()}function L(V,X){var K=r(V,X);if(g&&v.push([V,X]),k)w=V,A=X,C=K,k=!1,K&&(p.lineStart(),p.point(V,X));else if(K&&x)p.point(V,X);else{var ee=[m=Math.max(lh,Math.min(Ql,m)),y=Math.max(lh,Math.min(Ql,y))],z=[V=Math.max(lh,Math.min(Ql,V)),X=Math.max(lh,Math.min(Ql,X))];Mw(ee,z,i,e,t,n)?(x||(p.lineStart(),p.point(ee[0],ee[1])),p.point(z[0],z[1]),K||p.lineEnd(),q=!1):K&&(p.lineStart(),p.point(V,X),q=!1)}m=V,y=X,x=K}return I}}var td=ra();function Bw(i,e){var t=e[0],n=e[1],r=[Kn(t),-Zn(t),0],s=0,o=0;td.reset();for(var l=0,u=i.length;l<u;++l)if(p=(c=i[l]).length)for(var c,p,d=c[p-1],f=d[0],g=d[1]/2+Lg,v=Kn(g),w=Zn(g),A=0;A<p;++A,f=m,v=x,w=k,d=C){var C=c[A],m=C[0],y=C[1]/2+Lg,x=Kn(y),k=Zn(y),q=m-f,I=q>=0?1:-1,S=I*q,$=S>xn,B=v*x;if(td.add(Al(B*I*Kn(S),w*k+B*Zn(S))),s+=$?q+I*Xs:q,$^f>=t^m>=t){var D=Mh(ql(d),ql(C));Bd(D);var N=Mh(r,D);Bd(N);var O=($^q>=0?-1:1)*Ra(N[2]);(n>O||n===O&&(D[0]||D[1]))&&(o+=$^q>=0?1:-1)}}return(s<-On||s<On&&td<-On)^o&1}ra();function Vg(i){return i}ra();ra();var Sl=1/0,Oh=Sl,Cu=-Sl,Ph=Cu,Gg={point:jw,lineStart:Kl,lineEnd:Kl,polygonStart:Kl,polygonEnd:Kl,result:function(){var i=[[Sl,Oh],[Cu,Ph]];return Cu=Ph=-(Oh=Sl=1/0),i}};function jw(i,e){i<Sl&&(Sl=i),i>Cu&&(Cu=i),e<Oh&&(Oh=e),e>Ph&&(Ph=e)}ra();function py(i,e,t,n){return function(r,s){var o=e(s),l=r.invert(n[0],n[1]),u=uy(),c=e(u),p=!1,d,f,g,v={point:w,lineStart:C,lineEnd:m,polygonStart:function(){v.point=y,v.lineStart=x,v.lineEnd=k,f=[],d=[]},polygonEnd:function(){v.point=w,v.lineStart=C,v.lineEnd=m,f=dy(f);var q=Bw(d,l);f.length?(p||(s.polygonStart(),p=!0),hy(f,Jw,q,t,s)):q&&(p||(s.polygonStart(),p=!0),s.lineStart(),t(null,null,1,s),s.lineEnd()),p&&(s.polygonEnd(),p=!1),f=d=null},sphere:function(){s.polygonStart(),s.lineStart(),t(null,null,1,s),s.lineEnd(),s.polygonEnd()}};function w(q,I){var S=r(q,I);i(q=S[0],I=S[1])&&s.point(q,I)}function A(q,I){var S=r(q,I);o.point(S[0],S[1])}function C(){v.point=A,o.lineStart()}function m(){v.point=w,o.lineEnd()}function y(q,I){g.push([q,I]);var S=r(q,I);c.point(S[0],S[1])}function x(){c.lineStart(),g=[]}function k(){y(g[0][0],g[0][1]),c.lineEnd();var q=c.clean(),I=u.result(),S,$=I.length,B,D,N;if(g.pop(),d.push(g),g=null,!!$){if(q&1){if(D=I[0],(B=D.length-1)>0){for(p||(s.polygonStart(),p=!0),s.lineStart(),S=0;S<B;++S)s.point((N=D[S])[0],N[1]);s.lineEnd()}return}$>1&&q&2&&I.push(I.pop().concat(I.shift())),f.push(I.filter(Ww))}}return v}}function Ww(i){return i.length>1}function Jw(i,e){return((i=i.x)[0]<0?i[1]-Bs-On:Bs-i[1])-((e=e.x)[0]<0?e[1]-Bs-On:Bs-e[1])}const Ug=py(function(){return!0},Vw,Uw,[-xn,-Bs]);function Vw(i){var e=NaN,t=NaN,n=NaN,r;return{lineStart:function(){i.lineStart(),r=1},point:function(s,o){var l=s>0?xn:-xn,u=ki(s-e);ki(u-xn)<On?(i.point(e,t=(t+o)/2>0?Bs:-Bs),i.point(n,t),i.lineEnd(),i.lineStart(),i.point(l,t),i.point(s,t),r=0):n!==l&&u>=xn&&(ki(e-n)<On&&(e-=n*On),ki(s-l)<On&&(s-=l*On),t=Gw(e,t,s,o),i.point(n,t),i.lineEnd(),i.lineStart(),i.point(l,t),r=0),i.point(e=s,t=o),n=l},lineEnd:function(){i.lineEnd(),e=t=NaN},clean:function(){return 2-r}}}function Gw(i,e,t,n){var r,s,o=Kn(i-t);return ki(o)>On?Rw((Kn(e)*(s=Zn(n))*Kn(t)-Kn(n)*(r=Zn(e))*Kn(i))/(r*s*o)):(e+n)/2}function Uw(i,e,t,n){var r;if(i==null)r=t*Bs,n.point(-xn,r),n.point(0,r),n.point(xn,r),n.point(xn,0),n.point(xn,-r),n.point(0,-r),n.point(-xn,-r),n.point(-xn,0),n.point(-xn,r);else if(ki(i[0]-e[0])>On){var s=i[0]<e[0]?xn:-xn;r=t*s/2,n.point(-s,r),n.point(0,r),n.point(s,r)}else n.point(e[0],e[1])}function zw(i,e){var t=Zn(i),n=t>0,r=ki(t)>On;function s(p,d,f,g){Lw(g,i,e,f,p,d)}function o(p,d){return Zn(p)*Zn(d)>t}function l(p){var d,f,g,v,w;return{lineStart:function(){v=g=!1,w=1},point:function(A,C){var m=[A,C],y,x=o(A,C),k=n?x?0:c(A,C):x?c(A+(A<0?xn:-xn),C):0;if(!d&&(v=g=x)&&p.lineStart(),x!==g&&(y=u(d,m),(!y||yh(d,y)||yh(m,y))&&(m[0]+=On,m[1]+=On,x=o(m[0],m[1]))),x!==g)w=0,x?(p.lineStart(),y=u(m,d),p.point(y[0],y[1])):(y=u(d,m),p.point(y[0],y[1]),p.lineEnd()),d=y;else if(r&&d&&n^x){var q;!(k&f)&&(q=u(m,d,!0))&&(w=0,n?(p.lineStart(),p.point(q[0][0],q[0][1]),p.point(q[1][0],q[1][1]),p.lineEnd()):(p.point(q[1][0],q[1][1]),p.lineEnd(),p.lineStart(),p.point(q[0][0],q[0][1])))}x&&(!d||!yh(d,m))&&p.point(m[0],m[1]),d=m,g=x,f=k},lineEnd:function(){g&&p.lineEnd(),d=null},clean:function(){return w|(v&&g)<<1}}}function u(p,d,f){var g=ql(p),v=ql(d),w=[1,0,0],A=Mh(g,v),C=sh(A,A),m=A[0],y=C-m*m;if(!y)return!f&&p;var x=t*C/y,k=-t*m/y,q=Mh(w,A),I=oh(w,x),S=oh(A,k);ed(I,S);var $=q,B=sh(I,$),D=sh($,$),N=B*B-D*(sh(I,I)-1);if(!(N<0)){var O=Bl(N),L=oh($,(-B-O)/D);if(ed(L,I),L=Fd(L),!f)return L;var V=p[0],X=d[0],K=p[1],ee=d[1],z;X<V&&(z=V,V=X,X=z);var J=X-V,H=ki(J-xn)<On,Y=H||J<On;if(!H&&ee<K&&(z=K,K=ee,ee=z),Y?H?K+ee>0^L[1]<(ki(L[0]-V)<On?K:ee):K<=L[1]&&L[1]<=ee:J>xn^(V<=L[0]&&L[0]<=X)){var se=oh($,(-B+O)/D);return ed(se,I),[L,Fd(se)]}}}function c(p,d){var f=n?i:xn-i,g=0;return p<-f?g|=1:p>f&&(g|=2),d<-f?g|=4:d>f&&(g|=8),g}return py(o,l,s,n?[0,-i]:[-xn,i-xn])}function fy(i){return function(e){var t=new Wd;for(var n in i)t[n]=i[n];return t.stream=e,t}}function Wd(){}Wd.prototype={constructor:Wd,point:function(i,e){this.stream.point(i,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};function gy(i,e,t){var n=e[1][0]-e[0][0],r=e[1][1]-e[0][1],s=i.clipExtent&&i.clipExtent();i.scale(150).translate([0,0]),s!=null&&i.clipExtent(null),$w(t,i.stream(Gg));var o=Gg.result(),l=Math.min(n/(o[1][0]-o[0][0]),r/(o[1][1]-o[0][1])),u=+e[0][0]+(n-l*(o[1][0]+o[0][0]))/2,c=+e[0][1]+(r-l*(o[1][1]+o[0][1]))/2;return s!=null&&i.clipExtent(s),i.scale(l*150).translate([u,c])}function Hw(i,e,t){return gy(i,[[0,0],e],t)}var zg=16,Yw=Zn(30*jr);function Hg(i,e){return+e?Zw(i,e):Xw(i)}function Xw(i){return fy({point:function(e,t){e=i(e,t),this.stream.point(e[0],e[1])}})}function Zw(i,e){function t(n,r,s,o,l,u,c,p,d,f,g,v,w,A){var C=c-n,m=p-r,y=C*C+m*m;if(y>4*e&&w--){var x=o+f,k=l+g,q=u+v,I=Bl(x*x+k*k+q*q),S=Ra(q/=I),$=ki(ki(q)-1)<On||ki(s-d)<On?(s+d)/2:Al(k,x),B=i($,S),D=B[0],N=B[1],O=D-n,L=N-r,V=m*O-C*L;(V*V/y>e||ki((C*O+m*L)/y-.5)>.3||o*f+l*g+u*v<Yw)&&(t(n,r,s,o,l,u,D,N,$,x/=I,k/=I,q,w,A),A.point(D,N),t(D,N,$,x,k,q,c,p,d,f,g,v,w,A))}}return function(n){var r,s,o,l,u,c,p,d,f,g,v,w,A={point:C,lineStart:m,lineEnd:x,polygonStart:function(){n.polygonStart(),A.lineStart=k},polygonEnd:function(){n.polygonEnd(),A.lineStart=m}};function C(S,$){S=i(S,$),n.point(S[0],S[1])}function m(){d=NaN,A.point=y,n.lineStart()}function y(S,$){var B=ql([S,$]),D=i(S,$);t(d,f,p,g,v,w,d=D[0],f=D[1],p=S,g=B[0],v=B[1],w=B[2],zg,n),n.point(d,f)}function x(){A.point=C,n.lineEnd()}function k(){m(),A.point=q,A.lineEnd=I}function q(S,$){y(r=S,$),s=d,o=f,l=g,u=v,c=w,A.point=y}function I(){t(d,f,p,g,v,w,s,o,r,l,u,c,zg,n),A.lineEnd=x,x()}return A}}var Kw=fy({point:function(i,e){this.stream.point(i*jr,e*jr)}});function Qw(i){return e3(function(){return i})()}function e3(i){var e,t=150,n=480,r=250,s,o,l=0,u=0,c=0,p=0,d=0,f,g,v=null,w=Ug,A=null,C,m,y,x=Vg,k=.5,q=Hg(D,k),I,S;function $(L){return L=g(L[0]*jr,L[1]*jr),[L[0]*t+s,o-L[1]*t]}function B(L){return L=g.invert((L[0]-s)/t,(o-L[1])/t),L&&[L[0]*Io,L[1]*Io]}function D(L,V){return L=e(L,V),[L[0]*t+s,o-L[1]*t]}$.stream=function(L){return I&&S===L?I:I=Kw(w(f,q(x(S=L))))},$.clipAngle=function(L){return arguments.length?(w=+L?zw(v=L*jr,6*jr):(v=null,Ug),O()):v*Io},$.clipExtent=function(L){return arguments.length?(x=L==null?(A=C=m=y=null,Vg):Fw(A=+L[0][0],C=+L[0][1],m=+L[1][0],y=+L[1][1]),O()):A==null?null:[[A,C],[m,y]]},$.scale=function(L){return arguments.length?(t=+L,N()):t},$.translate=function(L){return arguments.length?(n=+L[0],r=+L[1],N()):[n,r]},$.center=function(L){return arguments.length?(l=L[0]%360*jr,u=L[1]%360*jr,N()):[l*Io,u*Io]},$.rotate=function(L){return arguments.length?(c=L[0]%360*jr,p=L[1]%360*jr,d=L.length>2?L[2]%360*jr:0,N()):[c*Io,p*Io,d*Io]},$.precision=function(L){return arguments.length?(q=Hg(D,k=L*L),O()):Bl(k)},$.fitExtent=function(L,V){return gy($,L,V)},$.fitSize=function(L,V){return Hw($,L,V)};function N(){g=ly(f=Nw(c,p,d),e);var L=e(l,u);return s=n-L[0]*t,o=r+L[1]*t,O()}function O(){return I=S=null,$}return function(){return e=i.apply(this,arguments),$.invert=e.invert&&B,N()}}function my(i){return function(e,t){var n=Zn(e),r=Zn(t),s=i(n*r);return[s*r*Kn(e),s*Kn(t)]}}function yy(i){return function(e,t){var n=Bl(e*e+t*t),r=i(n),s=Kn(r),o=Zn(r);return[Al(e*s,n*o),Ra(n&&t*s/n)]}}var t3=my(function(i){return Bl(2/(1+i))});t3.invert=yy(function(i){return 2*Ra(i/2)});var by=my(function(i){return(i=ay(i))&&i/Kn(i)});by.invert=yy(function(i){return i});function n3(){return Qw(by).scale(79.4188).clipAngle(180-.001)}function Yg(i,e){return[i,e]}Yg.invert=Yg;function i3(i,e,t){t=t||{};var n=t.units||"kilometers",r=t.steps||8;if(!i)throw new Error("geojson is required");if(typeof t!="object")throw new Error("options must be an object");if(typeof r!="number")throw new Error("steps must be an number");if(e===void 0)throw new Error("radius is required");if(r<=0)throw new Error("steps must be greater than 0");var s=[];switch(i.type){case"GeometryCollection":return Iu(i,function(o){var l=bh(o,e,n,r);l&&s.push(l)}),ir(s);case"FeatureCollection":return Vo(i,function(o){var l=bh(o,e,n,r);l&&Vo(l,function(u){u&&s.push(u)})}),ir(s)}return bh(i,e,n,r)}function bh(i,e,t,n){var r=i.properties||{},s=i.type==="Feature"?i.geometry:i;if(s.type==="GeometryCollection"){var o=[];return Iu(i,function(w){var A=bh(w,e,t,n);A&&o.push(A)}),ir(o)}var l=r3(s),u={type:s.type,coordinates:wy(s.coordinates,l)},c=new Fp,p=c.read(u),d=ic(Eu(e,t),"meters"),f=li.bufferOp(p,d,n),g=new J0;if(f=g.write(f),!vy(f.coordinates)){var v={type:f.type,coordinates:_y(f.coordinates,l)};return Ir(v,r)}}function vy(i){return Array.isArray(i[0])?vy(i[0]):isNaN(i[0])}function wy(i,e){return typeof i[0]!="object"?e(i):i.map(function(t){return wy(t,e)})}function _y(i,e){return typeof i[0]!="object"?e.invert(i):i.map(function(t){return _y(t,e)})}function r3(i){var e=qd(i).geometry.coordinates,t=[-e[0],-e[1]];return n3().rotate(t).scale($i)}function s3(i,e,t){t===void 0&&(t={});var n=Go(i),r=Go(e),s=$0.union(n.coordinates,r.coordinates);return s.length===0?null:s.length===1?Ll(s[0],t.properties):nc(s,t.properties)}function uh(i,e,t){t===void 0&&(t={});var n=Go(i),r=Go(e),s=$0.intersection(n.coordinates,r.coordinates);return s.length===0?null:s.length===1?Ll(s[0],t.properties):nc(s,t.properties)}class En{static MapRange(e,t){const n=[];if(e.total>1e5)throw`Tilerange too big (z is ${e.zoomlevel}, total tiles needed: ${e.total})`;for(let s=e.xstart;s<=e.xend;s++)for(let o=e.ystart;o<=e.yend;o++){const l=t(s,o);n.push(l)}return n}static tile_bounds(e,t,n){return[[En.tile2lat(n,e),En.tile2long(t,e)],[En.tile2lat(n+1,e),En.tile2long(t+1,e)]]}static tile_bounds_lon_lat(e,t,n){return[[En.tile2long(t,e),En.tile2lat(n,e)],[En.tile2long(t+1,e),En.tile2lat(n+1,e)]]}static centerPointOf(e,t,n){return[(En.tile2long(t,e)+En.tile2long(t+1,e))/2,(En.tile2lat(n,e)+En.tile2lat(n+1,e))/2]}static tile_index(e,t,n){return(t*(2<<e)+n)*100+e}static tile_from_index(e){const t=e%100,n=2<<t;e=Math.floor(e/100);const r=Math.floor(e/n);return[t,r,e%n]}static embedded_tile(e,t,n){return{x:En.lon2tile(t,n),y:En.lat2tile(e,n),z:n}}static tileRangeFrom(e,t){return En.TileRangeBetween(t,e.getNorth(),e.getWest(),e.getSouth(),e.getEast())}static TileRangeBetween(e,t,n,r,s){const o=En.embedded_tile(t,n,e),l=En.embedded_tile(r,s,e),u=Math.min(o.x,l.x),c=Math.max(o.x,l.x),p=Math.min(o.y,l.y),d=Math.max(o.y,l.y),f=(1+c-u)*(1+d-p);return{xstart:u,xend:c,ystart:p,yend:d,total:f,zoomlevel:e}}static tile2long(e,t){return e/Math.pow(2,t)*360-180}static tile2lat(e,t){const n=Math.PI-2*Math.PI*e/Math.pow(2,t);return 180/Math.PI*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))}static lon2tile(e,t){return Math.floor((e+180)/360*Math.pow(2,t))}static lat2tile(e,t){return Math.floor((1-Math.log(Math.tan(e*Math.PI/180)+1/Math.cos(e*Math.PI/180))/Math.PI)/2*Math.pow(2,t))}}const Yi=class Yi{constructor(e){R(this,"maxLat");R(this,"maxLon");R(this,"minLat");R(this,"minLon");this.maxLat=-90,this.maxLon=-180,this.minLat=90,this.minLon=180;for(const t of e)this.maxLon=Math.max(this.maxLon,t[0]),this.maxLat=Math.max(this.maxLat,t[1]),this.minLon=Math.min(this.minLon,t[0]),this.minLat=Math.min(this.minLat,t[1]);this.maxLon=Math.min(this.maxLon,180),this.maxLat=Math.min(this.maxLat,90),this.minLon=Math.max(this.minLon,-180),this.minLat=Math.max(this.minLat,-90),this.check()}static fromLeafletBounds(e){return new Yi([[e.getWest(),e.getNorth()],[e.getEast(),e.getSouth()]])}static get(e){var n;const t=e;if(((n=t.bbox)==null?void 0:n.overlapsWith)===void 0){const r=bs(e);t.bbox=new Yi([[r[0],r[1]],[r[2],r[3]]])}return t.bbox}static bboxAroundAll(e){let t=-90,n=-180,r=80,s=180;for(const o of e)t=Math.max(t,o.maxLat),n=Math.max(n,o.maxLon),r=Math.min(r,o.minLat),s=Math.min(s,o.minLon);return new Yi([[n,t],[s,r]])}static fromTile(e,t,n){return new Yi(En.tile_bounds_lon_lat(e,t,n))}static fromTileIndex(e){return e===0?Yi.global:Yi.fromTile(...En.tile_from_index(e))}unionWith(e){return new Yi([[Math.max(this.maxLon,e.maxLon),Math.max(this.maxLat,e.maxLat)],[Math.min(this.minLon,e.minLon),Math.min(this.minLat,e.minLat)]])}containingTileRange(e){return En.TileRangeBetween(e,this.minLat,this.minLon,this.maxLat,this.maxLon)}overlapsWith(e){return this.maxLon<e.minLon||this.maxLat<e.minLat||this.minLon>e.maxLon?!1:this.minLat<=e.maxLat}isContainedIn(e){return!(this.maxLon>e.maxLon||this.maxLat>e.maxLat||this.minLon<e.minLon||this.minLat<e.minLat)}squarify(){const e=this.maxLon-this.minLon,t=this.maxLat-this.minLat,n=Math.sqrt(e*t),r=(this.maxLon+this.minLon)/2,s=(this.maxLat+this.minLat)/2;return new Yi([[r-n/2,s-n/2],[r+n/2,s+n/2]])}isNearby(e,t){if(this.contains(e))return!0;const[n,r]=e;return this.minLat<=r&&this.maxLat>=r&&so.distanceBetween(e,[n,this.minLat])<=t||so.distanceBetween(e,[n,this.maxLat])<=t?this.minLon<=n&&this.maxLon>=n&&so.distanceBetween(e,[this.minLon,r])<=t||so.distanceBetween(e,[this.maxLon,r])<=t:!1}getEast(){return this.maxLon}getNorth(){return this.maxLat}getWest(){return this.minLon}getSouth(){return this.minLat}contains(e){return this.minLat<=e[1]&&e[1]<=this.maxLat&&this.minLon<=e[0]&&e[0]<=this.maxLon}pad(e,t=2){const n=Math.min(t/2,Math.abs(this.maxLat-this.minLat)*e),r=Math.min(t/2,Math.abs(this.maxLon-this.minLon)*e);return new Yi([[this.minLon-r,this.minLat-n],[this.maxLon+r,this.maxLat+n]])}padAbsolute(e){return new Yi([[this.minLon-e,this.minLat-e],[this.maxLon+e,this.maxLat+e]])}toLngLat(){return[[this.minLon,this.minLat],[this.maxLon,this.maxLat]]}asGeojsonCached(){return this.geojsonCache===void 0&&(this.geojsonCache=this.asGeoJson({})),this.geojsonCache}asGeoJson(e){return{type:"Feature",properties:e,geometry:this.asGeometry()}}asGeometry(){return{type:"Polygon",coordinates:[[[this.minLon,this.minLat],[this.maxLon,this.minLat],[this.maxLon,this.maxLat],[this.minLon,this.maxLat],[this.minLon,this.minLat]]]}}expandToTileBounds(e){if(e===void 0)return this;const t=En.embedded_tile(this.minLat,this.minLon,e),n=En.embedded_tile(this.maxLat,this.maxLon,e),r=En.tile_bounds_lon_lat(t.z,t.x,t.y),s=En.tile_bounds_lon_lat(n.z,n.x,n.y);return new Yi([].concat(r,s))}toMercator(){const[e,t]=so.ConvertWgs84To900913([this.minLon,this.minLat]),[n,r]=so.ConvertWgs84To900913([this.maxLon,this.maxLat]);return{minLon:e,maxLon:n,minLat:t,maxLat:r}}check(){if(isNaN(this.maxLon)||isNaN(this.maxLat)||isNaN(this.minLon)||isNaN(this.minLat))throw console.trace("BBox with NaN detected:",this),"BBOX has NAN"}overlapsWithFeature(e){return so.calculateOverlap(this.asGeoJson({}),[e]).length>0}};R(Yi,"global",new Yi([[-180,-90],[180,90]]));let fa=Yi;const vn=class vn{static union(e,t){return s3(e,t)}static intersect(e,t){return uh(e,t)}static surfaceAreaInSqMeters(e){return Yc(e)}static centerpoint(e){const t=qd(e);return t.properties=e.properties,t.id=e.id,t}static centerpointCoordinates(e){return qd(e).geometry.coordinates}static distanceBetween(e,t){return Fs(e,t,{units:"meters"})}static convexHull(e,t){return fv(e,t)}static calculateOverlap(e,t){const n=fa.get(e),r=[];if(e.geometry.type==="Point"){const s=e.geometry.coordinates;for(const o of t)if(!(e.properties.id!==void 0&&e.properties.id===o.properties.id)){if(o.geometry===void 0)throw console.error("No geometry for feature ",e),"List of other features contains a feature without geometry an undefined";vn.inside(s,o)&&r.push({feat:o,overlap:void 0})}return r}if(e.geometry.type==="LineString"){for(const s of t){if(e.properties.id!==void 0&&e.properties.id===s.properties.id)continue;const o=vn.calculateIntersection(e,s,n);o!==null&&r.push({feat:s,overlap:o})}return r}if(e.geometry.type==="Polygon"||e.geometry.type==="MultiPolygon"){for(const s of t){if(e.properties.id!==void 0&&e.properties.id===s.properties.id)continue;if(s.geometry.type==="Point"){this.inside(s,e)&&r.push({feat:s,overlap:void 0});continue}const o=this.calculateIntersection(e,s,n);o!==null&&r.push({feat:s,overlap:o})}return r}return console.error("Could not correctly calculate the overlap of ",e,": unsupported type"),r}static inside(e,t){if(t.geometry.type==="Point")return!1;e.geometry!==void 0&&(e=e.geometry.coordinates);const n=e[0],r=e[1];if(t.geometry.type==="MultiPolygon"){const s=t.geometry.coordinates;for(const o of s)if(vn.pointInPolygonCoordinates(n,r,o))return!0;return!1}if(t.geometry.type==="Polygon")return vn.pointInPolygonCoordinates(n,r,t.geometry.coordinates);throw"GeoOperations.inside: unsupported geometry type "+t.geometry.type}static lengthInMeters(e){return gg(e)*1e3}static buffer(e,t){return i3(e,t/1e3,{units:"kilometers"})}static bbox(e){const[t,n,r,s]=bs(e);return{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[t,n],[r,n],[r,s],[t,s],[t,n]]}}}static nearestPoint(e,t){return kh(e,t,{units:"kilometers"})}static forceLineString(e){return e.geometry.type==="Polygon"?(e={...e},e.geometry={...e.geometry},e.geometry.type="LineString",e.geometry.coordinates=e.geometry.coordinates[0]):e.geometry.type==="MultiPolygon"&&(e={...e},e.geometry={...e.geometry},e.geometry.type="MultiLineString",e.geometry.coordinates=e.geometry.coordinates[0]),e}static toCSV(e,t){const n=new Set,r=[];function s(u){t!=null&&t.ignoreTags&&u.match(t.ignoreTags)||n.has(u)||(n.add(u),r.push(u))}s("_lat"),s("_lon");const o=[];let l;Array.isArray(e)?l=e:l=e.features;for(const u of l){const c=u.properties;for(const p in c)c.hasOwnProperty(p)&&s(p)}r.sort();for(const u of l){const c=u.properties;let p="";for(const d of r){const f=c[d];f===void 0?p+=",":p+=JSON.stringify(f)+","}o.push(p)}return r.map(u=>JSON.stringify(u)).join(",")+`
`+o.join(`
`)}static ConvertWgs84To900913(e){const t=e[0],n=e[1],r=t*vn._originShift/180;let s=Math.log(Math.tan((90+n)*Math.PI/360))/(Math.PI/180);return s=s*vn._originShift/180,[r,s]}static Convert900913ToWgs84(e){const t=e[0],n=e[1],r=180*t/vn._originShift;let s=180*n/vn._originShift;return s=180/Math.PI*(2*Math.atan(Math.exp(s*Math.PI/180))-Math.PI/2),[r,s]}static GeoJsonToWGS84(e){return Jv(e)}static SimplifyCoordinates(e){const t=[];for(let n=1;n<e.length-1;n++){const r=e[n],s=e[n-1],o=e[n+1],l=Lo(s,r,{final:!0}),u=Lo(r,o);Math.abs(u-l)<2||t.push(r)}return t}static LineIntersections(e,t){return xh(e,t).features.map(n=>n.geometry.coordinates)}static spreadIntoBboxes(e,t){const n=new Map;for(const r of e){const o=fa.get(r).expandToTileBounds(t).containingTileRange(t);En.MapRange(o,(l,u)=>{const c=En.tile_index(t,l,u);let p=n.get(c);p===void 0&&(p=[],n.set(c,p)),p.push(r)})}return n}static toGpx(e,t){t=t==null?void 0:t.trim(),(t===void 0||t==="")&&(t="Uploaded with MapComplete"),t=ke.EncodeXmlValue(t);const n=[];let r;Array.isArray(e)?r=e:r=e.geometry.coordinates.map(o=>({type:"Feature",properties:{},geometry:{type:"Point",coordinates:o}}));for(const o of r){let l=`    <trkpt lat="${o.geometry.coordinates[1]}" lon="${o.geometry.coordinates[0]}">`;o.properties.date&&(l+=`        <time>${o.properties.date}</time>`),o.properties.altitude&&(l+=`        <ele>${o.properties.altitude}</ele>`),l+="    </trkpt>",n.push(l)}return'<gpx version="1.1" creator="mapcomplete.org" xmlns="http://www.topografix.com/GPX/1/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd">'+`
<name>`+t+`</name>
<trk><trkseg>
`+n.join(`
`)+`
</trkseg></trk></gpx>`}static toGpxPoints(e,t){t=t==null?void 0:t.trim(),(t===void 0||t==="")&&(t="Created with MapComplete"),t=ke.EncodeXmlValue(t);const n=[];for(const s of e){let o=`    <wpt lat="${s.geometry.coordinates[1]}" lon="${s.geometry.coordinates[0]}">`;for(const l in s.properties){const u=l.replaceAll(":","__");o+=`        <${u}>${s.properties[l]}</${u}>
`,l==="website"&&(o+=`        <link>${s.properties[l]}</link>
`)}o+=`    </wpt>
`,n.push(o)}return'<gpx version="1.1" creator="mapcomplete.org" xmlns="http://www.topografix.com/GPX/1/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd">'+`
<name>`+t+`</name>
<trk><trkseg>
`+n.join(`
`)+`
</trkseg></trk></gpx>`}static removeOvernoding(e){if(e.geometry.type!=="LineString"&&e.geometry.type!=="Polygon")throw"Overnode removal is only supported on linestrings and polygons";const t={...e,geometry:{...e.geometry}};let n;e.geometry.type==="LineString"?(n=[...e.geometry.coordinates],t.geometry.coordinates=n):(n=[...e.geometry.coordinates[0]],t.geometry.coordinates[0]=n);for(let r=n.length-2;r>=1;r--){const s=n[r],o=n[r+1],l=n[r-1];if(vn.distanceBetween(s,l)<.1){n.splice(r,1);continue}if(r==n.length-2&&vn.distanceBetween(s,o)<.1){n.splice(r,1);continue}const c=Lo(s,o),p=Lo(l,s),d=Math.abs(c-p);(d<4||360-d<4)&&n.splice(r,1)}return t}static bearing(e,t){return Lo(e,t)}static along(e,t,n){return Iv({type:"Feature",geometry:{type:"LineString",coordinates:[e,t]}},n,{units:"meters"}).geometry.coordinates}static completelyWithin(e,t){return $v(e,t)}static clipWith(e,t){if(e.geometry.type==="Point"){const n=e;return vn.inside(n.geometry.coordinates,t)?[n]:[]}if(e.geometry.type==="LineString"){const n=mg(e,t),r=[];for(const s of n.features)vn.inside(vn.centerpointCoordinates(s),t)&&(s.properties={...e.properties},r.push(s));return r}if(e.geometry.type==="MultiLineString"){const n=e.geometry.coordinates.map(o=>mg({type:"LineString",coordinates:o},t).features),r=[].concat(...n),s=[];for(const o of r)console.log("Checking",o),vn.inside(vn.centerpointCoordinates(o),t)&&(o.properties={...e.properties},s.push(o));return s}if(e.geometry.type==="Polygon"||e.geometry.type=="MultiPolygon"){const n=uh(e,t);return n.properties={...e.properties},[n]}throw"Invalid geometry type with GeoOperations.clipWith: "+e.geometry.type}static featureToCoordinateWithRenderingType(e,t){switch(t){case"point":return e.geometry.type==="Point"?e.geometry.coordinates:void 0;case"centroid":return e.geometry.type==="Point"?void 0:vn.centerpointCoordinates(e);case"polygon_centroid":return e.geometry.type==="Polygon"?vn.centerpointCoordinates(e):void 0;case"projected_centerpoint":if(e.geometry.type==="LineString"||e.geometry.type==="MultiLineString"){const n=vn.centerpointCoordinates(e);return vn.nearestPoint(e,n).geometry.coordinates}return;case"start":return e.geometry.type==="LineString"?e.geometry.coordinates[0]:void 0;case"end":return e.geometry.type==="LineString"?e.geometry.coordinates.at(-1):void 0;default:throw"Unkown location type: "+t+" for feature "+e.properties.id}}static slice(e,t){const n=new Map;for(const r of t){const s=fa.get(r);En.MapRange(En.tileRangeFrom(s,e),(o,l)=>{const u=En.tile_index(e,o,l);let c=n.get(u);c===void 0&&(c=[],n.set(u,c)),c.push(r)})}return n}static outerRing(e){return e.geometry.type!=="Polygon"?e:{type:"Feature",properties:e.properties,geometry:{type:"LineString",coordinates:e.geometry.coordinates[0]}}}static centerpointCoordinatesObj(e){const[t,n]=vn.centerpointCoordinates(e);return{lon:t,lat:n}}static SplitSelfIntersectingWays(e){const t=[];for(const n of e)if(n.geometry.type==="LineString"){let r=n.geometry.coordinates;for(let s=r.length-1;s>=0;s--){const o=r[s];for(let l=s+1;l<r.length;l++){const u=r[l];if(Math.abs(o[0]-u[0])<=1e-6&&Math.abs(o[1]-u[1])<=1e-7){console.debug("SPlitting way",n.properties.id),t.push({...n,geometry:{...n.geometry,coordinates:r.slice(s+1)}}),r=r.slice(0,s+1);break}}}t.push({...n,geometry:{...n.geometry,coordinates:r}})}return t}static distanceToHuman(e){if(e===void 0)return"";if(e=Math.round(e),e<1e3)return e+"m";if(e>=1e4)return Math.round(e/1e3)+"km";e=Math.round(e/100);const t=""+e;return t.substring(0,t.length-1)+"."+t.substring(t.length-1)+"km"}static parseBearing(e){let t;if(typeof e=="string"?(e=e.trim(),e.endsWith("°")&&(e=e.substring(0,e.length-1).trim()),t=Number(e)):t=e,!isNaN(t)){for(;t<0;)t+=360;return t%360}return vn.reverseBearing[e]}static bearingToHuman(e){for(;e<0;)e+=360;e%=360,e+=22.5;const t=Math.floor(e/45)%vn.directions.length;return vn.directions[t]}static bearingToHumanRelative(e){for(;e<0;)e+=360;e%=360,e+=22.5;const t=Math.floor(e/45)%vn.directionsRelative.length;return vn.directionsRelative[t]}static attemptLinearize(e){const t=e.geometry.coordinates;if(t.length===0)throw console.error(e.geometry),"Error: got degenerate multilinestring";e:for(let n=t.length-1;n>=0;n--){const r=t[n][0];for(let s=0;s<t.length;s++){if(n==s)continue;const o=t[s].at(-1);if(Math.abs(r[0]-o[0])<1e-6&&Math.abs(r[1]-o[1])<1e-7){t[s].splice(t.length-1,1),t[s].push(...t[n]),t.splice(n,1);continue e}}}if(t.length===0)throw"No more coordinates found";return t.length===1?{type:"Feature",properties:e.properties,geometry:{type:"LineString",coordinates:t[0]}}:{type:"Feature",properties:e.properties,geometry:{type:"MultiLineString",coordinates:t}}}static pointInPolygonCoordinates(e,t,n){if(!vn.pointWithinRing(e,t,n[0]))return!1;for(let s=1;s<n.length;s++)if(vn.pointWithinRing(e,t,n[s]))return!1;return!0}static pointWithinRing(e,t,n){let r=!1;for(let s=0,o=n.length-1;s<n.length;o=s++){const l=n[s],u=n[o],c=l[0],p=l[1],d=u[0],f=u[1];p>t!=f>t&&e<(d-c)*(t-p)/(f-p)+c&&(r=!r)}return r}static calculateIntersection(e,t,n,r){if(e.geometry.type==="LineString"){if(r=r??fa.get(t),!n.overlapsWith(r))return null;let o=xh(e,t);if(o.features.length==0){const d=e.geometry.coordinates[0];return this.inside(d,t)?this.lengthInMeters(e):null}let l=o.features.map(p=>p.geometry.coordinates);if(t.geometry.type==="LineString")return l.length>0?0:null;if(l.length==1){const p=e.geometry.coordinates,d=p[0];this.inside(d,t)?l.push(d):l.push(p[p.length-1])}let u=Dv(gi(l[0]),gi(l[1]),e);return u==null?null:gg(u)*1e3}if(e.geometry.type==="Polygon"||e.geometry.type==="MultiPolygon"){const s=fa.get(t);if(!n.overlapsWith(s))return null;if(t.geometry.type==="LineString")return this.calculateIntersection(t,e,s,n);try{const l=uh(e,t);return l==null?null:Yc(l)}catch(l){if(l.message==="Each LinearRing of a Polygon must have 4 or more Positions.")return null;if(l.message.indexOf("SweepLine tree")>=0){console.log("Applying fallback intersection...");const u=uh(Ed(e),Ed(t));return u==null?null:Yc(u)}throw l}}throw"CalculateIntersection fallthrough: can not calculate an intersection between features"}};R(vn,"_earthRadius",6378137),R(vn,"_originShift",2*Math.PI*vn._earthRadius/2),R(vn,"directions",["N","NE","E","SE","S","SW","W","NW"]),R(vn,"directionsRelative",["straight","slight_right","right","sharp_right","behind","sharp_left","left","slight_left"]),R(vn,"reverseBearing",{N:0,NNE:22.5,NE:45,ENE:67.5,E:90,ESE:112.5,SE:135,SSE:157.5,S:180,SSW:202.5,SW:225,WSW:247.5,W:270,WNW:292.5,NW:315,NNW:337.5});let so=vn;const Xh=class Xh extends qu{constructor(t,n=3){var s,o,l;super();R(this,"title");R(this,"level");R(this,"id");t===void 0&&(console.warn("A title should have some content. Undefined is not allowed"),t=""),typeof t=="string"?this.title=new Zi(t):this.title=t,this.level=n;let r;typeof t=="string"?r=t:t instanceof Zi?r=t.content:ke.runningFromConsole||(r=(s=t.ConstructElement())==null?void 0:s.textContent),this.id=((l=(o=r==null?void 0:r.replace(/ /g,"-"))==null?void 0:o.replace(/[?#.;:/]/,""))==null?void 0:l.toLowerCase())??"",this.SetClass(Xh.defaultClassesPerLevel[n]??"")}AsMarkdown(){const t=" "+this.title.AsMarkdown()+" ";return this.level==1?`

`+t+`
`+"=".repeat(t.length)+`

`:this.level==2?`

`+t+`
`+"-".repeat(t.length)+`

`:`

`+"#".repeat(this.level)+t+`

`}InnerConstructElement(){const t=this.title.ConstructElement();if(t===void 0)return;const n=document.createElement("h"+this.level);return n.appendChild(t),t.id=this.id,n}};R(Xh,"defaultClassesPerLevel",["","text-3xl font-bold","text-2xl font-bold","text-xl font-bold","text-lg font-bold"]);let tr=Xh;class jl{applyOn(e){const t={...e},n=this.asChange(e);for(const{k:r,v:s}of n)t[r]=s;return t}}class Li extends jl{constructor(t,n){super();R(this,"key");R(this,"value");if(this.key=t,this.value=n,t===void 0||t==="")throw"Invalid key: undefined or empty";if(n===void 0)throw`Invalid value while constructing a Tag with key '${t}': value is undefined`;n==="*"&&console.warn(`Got suspicious tag ${t}=*   ; did you mean ${t}~* ?`)}matchesProperties(t){let n=t[this.key];if(n===void 0&&(this.value===""||this.value===void 0))return!0;if(typeof n!="string"){if(n===!0&&(this.value==="true"||this.value==="yes")||n===!1&&(this.value==="false"||this.value==="no"))return!0;n=""+n}return n===this.value}asOverpass(){return this.value===""?['[!"'+this.key+'"]']:[`["${this.key}"="${this.value}"]`]}asJson(){return this.key+"="+this.value}asHumanString(t,n,r){let s=this.value;return typeof s!="string"&&(s=JSON.stringify(s)),n&&(s=ke.EllipsesAfter(s,25)),(s===""||s===void 0)&&r!==void 0?!r||Object.keys(r).length===0?this.key+"=":(r[this.key]??"")===""?"":"<span class='line-through'>"+this.key+"</span>":t?`<a href='https://wiki.openstreetmap.org/wiki/Key:${this.key}' target='_blank'>${this.key}</a>=<a href='https://wiki.openstreetmap.org/wiki/Tag:${this.key}%3D${this.value}' target='_blank'>${s}</a>`:this.key+"="+s}isUsableAsAnswer(){return!0}shadows(t){return t.key!==void 0&&t.key!==this.key?!1:t.matchesProperties({[this.key]:this.value})}usedKeys(){return[this.key]}usedTags(){return this.value==""?[]:[this]}asChange(){return[{k:this.key,v:this.value}]}optimize(){return this}isNegative(){return!1}visit(t){t(this)}asMapboxExpression(){return this.value===""?["any",["!",["has",this.key]],["==",["get",this.key],""]]:["==",["get",this.key],this.value]}}class Qi extends jl{constructor(t){super();R(this,"or");this.or=t}static construct(t){return t.length===1?t[0]:new Qi(t)}matchesProperties(t){for(const n of this.or)if(n.matchesProperties(t))return!0;return!1}asJson(){return{or:this.or.map(t=>t.asJson())}}asOverpass(){const t=[];for(const n of this.or){const r=n.asOverpass();t.push(...r)}return t}asHumanString(t,n,r){return this.or.map(s=>{let o=s.asHumanString(t,n,r);return s.and&&(o="("+o+")"),o}).join(" | ")}isUsableAsAnswer(){return!1}shadows(t){if(t instanceof Qi){for(const n of this.or){let r=!1;for(let s=0;s<t.or.length&&!r;s++){let o=t.or[s];r=n.shadows(o)}if(!r)return!1}return!0}return!1}usedKeys(){return[].concat(...this.or.map(t=>t.usedKeys()))}usedTags(){return[].concat(...this.or.map(t=>t.usedTags()))}asChange(t){const n=[];for(const r of this.or)n.push(...r.asChange(t));return n}removePhraseConsideredKnown(t,n){const r=[];for(const s of this.or){if(s instanceof Qi)throw"Optimize expressions before using removePhraseConsideredKnown";if(s instanceof qn){const o=s.removePhraseConsideredKnown(t,n);if(o===!1)continue;if(o===!0)return!0;r.push(o);continue}if(n&&t.shadows(s))return!0;!n&&s.shadows(t)||r.push(s)}return r.length===0?!1:Qi.construct(r)}optimize(){if(this.or.length===0)return!1;const t=this.or.map(o=>o.optimize()).filter(o=>o!==!1);if(t.some(o=>o===!0))return!0;const n=t,r=[];let s=[];for(const o of n)o.or?r.push(...o.or):o instanceof qn?s.push(o):r.push(o);{let o=!1;do{const l=[];e:for(let u of s){for(const c of r){const p=u.removePhraseConsideredKnown(c,!1);if(p===!1)continue e;if(p===!0)return!0;if(p instanceof qn){u=p;continue}r.push(p),o=!0;continue e}l.push(u)}s=l}while(o)}if(s.length===1)r.push(s[0]);else if(s.length>1){let o=s[0].and;for(let l=1;l<s.length&&o.length>0;l++){const u=s[l];o=o.filter(c=>u.and.some(p=>p.shadows(c)))}if(o.length===0)r.push(...s);else{const l=[];for(const c of s){const p=c.and.filter(d=>!o.some(f=>f.shadows(d)));p.length!=0&&l.push(qn.construct(p))}l.length>0&&o.push(Qi.construct(l));const u=new qn(o).optimize();if(u===!0)return!0;u===!1||o.length>0&&r.push(qn.construct(o))}}return r.length===0?!1:In.ContainsOppositeTags(r)?!0:(In.sortFilters(r,!1),Qi.construct(r))}isNegative(){return this.or.some(t=>t.isNegative())}visit(t){t(this),this.or.forEach(n=>n.visit(t))}asMapboxExpression(){return["any",...this.or.map(t=>t.asMapboxExpression())]}}class Dn extends jl{constructor(t,n,r=!1){super();R(this,"key");R(this,"value");R(this,"invert");R(this,"matchesEmpty");if(this.key=t,this.value=n,this.value instanceof RegExp&&(""+this.value).startsWith("^(^("))throw"Detected a duplicate start marker ^(^( in a regextag:"+this.value;this.invert=r,this.matchesEmpty=Dn.doesMatch("",this.value)}static doesMatch(t,n){if(t!==void 0)return typeof t=="number"&&(t=""+t),typeof n=="string"?t===n:n.test(t)}static source(t,n=!0){if(typeof t=="string")return t;if(t===void 0)return;const r=t.source;return n?r:r.startsWith("^(")&&r.endsWith(")$")?r.substring(2,r.length-2):r}asOverpass(){const t=this.invert?"!":"";if(typeof this.key!="string")return[`[~"${this.key.source}"${t}~"${Dn.source(this.value)}"]`];if(this.value instanceof RegExp){const n=this.value.source;if(n==="^..*$"||n===".+")return[`[${t}"${this.key}"]`];const r=this.value.ignoreCase?",i":"";return[`["${this.key}"${t}~"${n}"${r}]`]}else return[`["${this.key}"${t}="${this.value}"]`]}asJson(){const t=Dn.source(this.value,!1);if(typeof this.key=="string"){const n=typeof this.value=="string"?"=":"~";return`${this.key}${this.invert?"!":""}${n}${t}`}return`${this.key.source}${this.invert?"!":""}~~${t}`}isUsableAsAnswer(){return!1}matchesProperties(t){if(typeof this.key=="string"){let n=t[this.key];return!n||n===""?this.invert!==this.matchesEmpty:typeof n=="string"?Dn.doesMatch(n,this.value)!=this.invert:typeof this.value!="string"&&this.value.source===".*"?!this.invert:(typeof n!="string"&&(n=JSON.stringify(n)),Dn.doesMatch(n,this.value)!=this.invert)}for(const n in t)if(n!==void 0&&Dn.doesMatch(n,this.key)){let r=t[n]??"";return typeof r!="string"&&(r=JSON.stringify(r)),Dn.doesMatch(r,this.value)!=this.invert}return this.matchesEmpty?!this.invert:this.invert}asHumanString(){if(typeof this.key=="string"){const t=typeof this.value=="string"?"=":"~";return`${this.key}${this.invert?"!":""}${t}${Dn.source(this.value)}`}return`${this.key.source}${this.invert?"!":""}~~${Dn.source(this.value)}`}shadows(t){if(t instanceof Dn){if((t.key.source??t.key)!==(this.key.source??this.key))return!1;if((t.value.source??t.key)===(this.value.source??this.key)&&this.invert==t.invert)return!0;if(typeof t.value=="string"){const n=Dn.doesMatch(t.value,this.value);if(!this.invert&&!t.invert)return n;if(this.invert&&!t.invert||!this.invert&&t.invert)return!n;if(!this.invert&&!t.invert)return n}return!1}return t instanceof Li&&Dn.doesMatch(t.key,this.key)?this.value.source==="^..*$"?this.invert?t.value==="":!1:this.invert?!1:(this.value.source??this.value)===t.value:!1}usedKeys(){return typeof this.key=="string"?[this.key]:[]}usedTags(){return[]}asChange(){return this.invert?[]:typeof this.key=="string"?typeof this.value=="string"?[{k:this.key,v:this.value}]:[{k:this.key,v:void 0}]:(console.error("Cannot export regex tag to asChange; ",this.key,this.value),[])}optimize(){return this}isNegative(){return this.invert}visit(t){t(this)}asMapboxExpression(){if(typeof this.key=="string"&&typeof this.value=="string")return[this.invert?"!=":"==",["get",this.key],this.value];throw"TODO"}}class qn extends jl{constructor(t){super();R(this,"and");this.and=t}static construct(t){return t.length===1?t[0]:new qn(t)}static combine(t,n){const r=[];for(const s of n)r.push(t+s);return r}normalize(){const t=[];for(const n of this.and)n instanceof qn?t.push(...n.and):t.push(n);return new qn(t)}matchesProperties(t){for(const n of this.and)if(!n.matchesProperties(t))return!1;return!0}asOverpass(){let t=null;for(const n of this.and){const r=n.asOverpass();if(t===null){t=r;continue}const s=[];for(const o of t)s.push(...qn.combine(o,r));t=s}return t}asJson(){return{and:this.and.map(t=>t.asJson())}}asHumanString(t,n,r){return this.and.map(s=>{let o=s.asHumanString(t,n,r);return s.or&&(o="("+o+")"),o}).filter(s=>s!=="").join(" & ")}isUsableAsAnswer(){for(const t of this.and)if(!t.isUsableAsAnswer())return!1;return!0}shadows(t){if(!(t instanceof qn))return!1;for(const n of this.and){let r=!1;for(const s of t.and)if(r=n.shadows(s),r)break;if(!r)return!1}for(const n of t.and){let r=!1;for(const s of this.and)if(r=s.shadows(n),r)break;if(!r)return!1}return!0}usedKeys(){return[].concat(...this.and.map(t=>t.usedKeys()))}usedTags(){return[].concat(...this.and.map(t=>t.usedTags()))}asChange(t){const n=[];for(const r of this.and)n.push(...r.asChange(t));return n}removePhraseConsideredKnown(t,n){const r=[];for(const s of this.and){if(s instanceof qn)throw"Optimize expressions before using removePhraseConsideredKnown";if(s instanceof Qi){const o=s.removePhraseConsideredKnown(t,n);if(o===!0)continue;if(o===!1)return!1;r.push(o);continue}if(!(n&&t.shadows(s))){if(!n&&s.shadows(t))return!1;r.push(s)}}return r.length===0?!0:qn.construct(r)}optimize(){if(this.and.length===0)return!0;const t=this.and.map(o=>o.optimize()).filter(o=>o!==!0);if(t.some(o=>o===!1))return!1;const n=t;{const o={};for(const l of n)l instanceof Li&&(o[l.key]=l.value);for(let l=0;l<n.length;l++){const u=n[l];if(u instanceof Li){const c=u.key,p=o[c];if(p===void 0)continue;if(p!==u.value)return!1}if(u instanceof Dn){const c=u.key;if(typeof c!="string")continue;const p=o[c];if(p===void 0)continue;if(u.invert){if(typeof u.value=="string"&&p===u.value||p.match(u.value)!==null)return!1;n.splice(l,1),l--}else if(p.match(u.value))n.splice(l,1),l--;else return!1}}}const r=[];let s=[];for(const o of n)o instanceof qn?r.push(...o.and):o instanceof Qi?s.push(o):r.push(o);{let o=!1;do{const l=[];e:for(let u of s){for(const c of r){const p=u.removePhraseConsideredKnown(c,!0);if(p===!0)continue e;if(p===!1)return!1;if(p instanceof Qi){u=p;continue}r.push(p),o=!0;continue e}l.push(u)}s=l}while(o)}if(s=s.filter(o=>!In.containsEquivalents(r,o.or)),s.length===1)r.push(s[0]);else if(s.length>1){let o=s[0].or;for(let l=1;l<s.length&&o.length>0;l++){const u=s[l];o=o.filter(c=>u.or.some(p=>p.shadows(c)))}if(o.length===0)r.push(...s);else{const l=[];for(const c of s){const p=c.or.filter(d=>!o.some(f=>f.shadows(d)));p.length>0&&l.push(Qi.construct(p))}l.length>0&&o.push(qn.construct(l));const u=new Qi(o).optimize();if(u===!1)return!1;u===!0||r.push(u)}}return r.length===0?!0:In.ContainsOppositeTags(r)?!1:(In.sortFilters(r,!0),qn.construct(r))}isNegative(){return!this.and.some(t=>!t.isNegative())}visit(t){t(this),this.and.forEach(n=>n.visit(t))}asMapboxExpression(){return["all",...this.and.map(t=>t.asMapboxExpression())]}}class Hp extends jl{constructor(t,n,r,s){super();R(this,"_key");R(this,"_predicate");R(this,"_representation");R(this,"_boundary");this._key=t,this._predicate=n,this._representation=r,this._boundary=s}asChange(t){throw"A comparable tag can not be used to be uploaded to OSM"}asHumanString(){return this._key+this._representation+this._boundary}asOverpass(){throw"A comparable tag can not be used as overpass filter"}shadows(t){if(t===this)return!0;if(t instanceof Hp){if(t._key!==this._key)return!1;const n=this._representation==="<"||this._representation==="<=",r=t._representation==="<"||t._representation==="<=";return n!==r?!1:!!(this._boundary===t._boundary&&this._representation===t._representation||this._predicate(t._boundary))}if(t instanceof Li){if(t.key!==this._key)return!1;if(this.matchesProperties({[t.key]:t.value}))return!0}return!1}isUsableAsAnswer(){return!1}matchesProperties(t){return this._predicate(t[this._key])}usedKeys(){return[this._key]}usedTags(){return[]}asJson(){return this._key+this._representation}optimize(){return this}isNegative(){return!0}visit(t){t(this)}asMapboxExpression(){return[this._representation,["get",this._key],this._boundary]}}class uo extends jl{constructor(t,n,r=!1){super();R(this,"_key");R(this,"_value");R(this,"_invert");this._key=t,this._value=n,this._invert=r}asMapboxExpression(){throw new Error("Method not implemented.")}static substituteString(t,n){for(const r in n)t=t.replace(new RegExp("\\{"+r+"\\}","g"),n[r]);return t.replace(/{.*}/g,"")}asTag(t){if(this._invert)throw"Cannot convert an inverted substituting tag";return new Li(this._key,ke.SubstituteKeys(this._value,t))}asHumanString(t,n,r){return this._key+(this._invert?"!":"")+"="+uo.substituteString(this._value,r)}asJson(){return this._key+(this._invert?"!":"")+":="+this._value}asOverpass(){throw"A variable with substitution can not be used to query overpass"}shadows(t){return t instanceof uo?t._key===this._key&&t._value===this._value&&t._invert===this._invert:!1}isUsableAsAnswer(){return!this._invert}matchesProperties(t){const n=t[this._key];if(n===void 0||n==="")return!1;const r=uo.substituteString(this._value,t);return n===r!==this._invert}usedKeys(){return[this._key]}usedTags(){return[]}asChange(t){if(this._invert)throw"An inverted substituting tag can not be used to create a change";const n=uo.substituteString(this._value,t);if(n.match(/{.*}/)!==null)throw"Could not calculate all the substitutions: still have "+n;return[{k:this._key,v:n}]}optimize(){return this}isNegative(){return!1}visit(t){t(this)}}const o3="2023-12-04T14:42:01.299Z",a3={FIXME:119237,access:20023328,"addr:housenumber":146524978,"addr:street":137485111,advertising:158347,amenity:25340913,area:1803451,association:757,barrier:23634152,bench:1300789,bicycle:7507086,bicycle_rental:26948,boundary:2366033,brand:2317628,building:585543589,"camera:direction":61201,climbing:9051,club:53046,"construction:amenity":1943,conveying:27311,craft:296376,crossing:8736722,cyclestreet:12505,cycleway:1016837,direction:2978834,"disused:amenity":63413,dog:95086,door:280843,drinking_water:136067,emergency:2542692,entrance:3769592,fixme:1746318,footway:7540651,"generator:source":2387982,healthcare:790125,highway:249307936,indoor:562051,information:1073014,"isced:2011:level":27,"isced:level:2011":74,landuse:41730047,leisure:8955744,man_made:6799900,memorial:209327,motorcar:621864,name:98684655,"name:etymology":56375,"name:etymology:wikidata":1174439,"name:nl":80468,natural:64176097,ngo:57,office:1092855,parking_space:600707,"planned:amenity":237,playground:182188,post_office:16379,protect_class:83815,pub:324,public_transport:5111577,railway:7068070,recycling_type:385569,ref:18607577,rental:13611,route:1075802,"service:bicycle:cleaning":1179,"service:bicycle:pump":14053,"service:bicycle:pump:operational_status":344,"service:bicycle:rental":4599,"service:bicycle:repair":15470,"service:bicycle:retail":11467,"service:bicycle:tools":6227,shelter:1647743,shop:5860878,species:1656206,"species:wikidata":107778,sport:2580042,subject:40076,"surface:colour":17851,"surveillance:type":171923,theme:906,toilets:90842,tourism:3211694,"tower:type":596349,type:11757856,vending:252016},l3={advertising:{billboard:76420,board:15040,column:21212,flag:4264,poster_box:22932,screen:1352,sculpture:145,sign:6172,tarp:407,totem:7097,wall_painting:132},amenity:{animal_shelter:6056,atm:207899,bank:389470,bar:219208,bench:2313183,bicycle_library:46,bicycle_parking:616881,bicycle_rental:63710,bicycle_repair_station:14026,bicycle_wash:79,biergarten:10323,bike_wash:1,binoculars:1109,cafe:530066,car_rental:26726,charging_station:111996,childcare:50390,clinic:179739,clock:25274,college:64379,dentist:122076,doctors:166850,drinking_water:294750,fast_food:533335,fire_station:131842,hospital:204756,ice_cream:48853,kindergarten:294441,nightclub:22779,parcel_locker:44270,parking:5158899,parking_space:2292063,pharmacy:383181,post_box:370286,post_office:198908,pub:185475,public_bookcase:21608,reception_desk:2426,recycling:417512,restaurant:1346895,school:1286594,shelter:494594,shower:27029,ticket_validator:7730,toilets:417991,university:54299,vending_machine:247257,veterinary:52813,waste_basket:759718,waste_disposal:219245},association:{bicycle:47,cycling:5},barrier:{bollard:668017,cycle_barrier:122201,kerb:1178769,retaining_wall:472454,wall:4448788},bench:{stand_up_bench:212,yes:778144},bicycle:{designated:1499247,no:1614544,yes:3753651},boundary:{protected_area:111282},climbing:{area:191,crag:2873,route:1040,site:14},club:{bicycle:60,climbing:1,cycling:7},"construction:amenity":{charging_station:259},conveying:{yes:12153},craft:{key_cutter:3711,shoe_repair:64},crossing:{traffic_signals:1408141},cyclestreet:{yes:12480},cycleway:{lane:300810,shared_lane:71051,track:77166},"disused:amenity":{charging_station:289,drinking_water:2758},dog:{unleashed:727},drinking_water:{yes:74561},emergency:{ambulance_station:13020,defibrillator:80699,fire_extinguisher:11605,fire_hydrant:1928477},footway:{crossing:3111184},"generator:source":{wind:390537},healthcare:{physiotherapist:17548},highway:{bridleway:107507,bus_stop:3459595,corridor:46847,crossing:8505991,cycleway:1693405,elevator:39221,footway:21573091,living_street:1753722,motorway:1182914,motorway_link:829035,path:13690001,pedestrian:767066,primary:3462637,primary_link:433106,residential:65553821,secondary:5008689,secondary_link:340521,service:54202864,speed_camera:61915,speed_display:2621,steps:1618344,street_lamp:3879570,tertiary:7809143,tertiary_link:245867,track:25718176,traffic_signals:1709993,trunk:1679773,trunk_link:519826,unclassified:16914480},indoor:{area:25332,corridor:17609,door:19157,level:4253,room:157006,wall:32366},information:{board:321201,guidepost:520873,map:108166,office:27749,route_marker:59596,visitor_centre:523},"isced:level:2011":{early_childhood:0},landuse:{village_green:102589},leisure:{bird_hide:6607,dog_park:21993,fitness_centre:72920,fitness_station:62923,hackerspace:1537,nature_reserve:129575,park:1168747,picnic_table:302582,pitch:2307262,playground:821692,sports_centre:231823,track:124600},man_made:{surveillance:205953},memorial:{ghost_bike:748,plaque:45536},motorcar:{no:270350,yes:190966},natural:{cliff:761375,rock:229114,stone:52141,tree:23309774},ngo:{bicycle:0,cycling:0},office:{government:250353},parking_space:{disabled:161162},"planned:amenity":{charging_station:72},playground:{forest:77},post_office:{post_partner:7560},pub:{bicycle:0,cycling:12},public_transport:{platform:3254387},railway:{platform:167408},recycling_type:{centre:29508,container:355016},route:{bus:272174},"service:bicycle:cleaning":{diy:4,yes:909},"service:bicycle:pump":{no:1548,yes:12452},"service:bicycle:pump:operational_status":{broken:122},"service:bicycle:rental":{yes:3902},"service:bicycle:repair":{yes:15134},"service:bicycle:tools":{no:354,yes:5872},shelter:{yes:884942},shop:{bicycle:51336,bicycle_rental:1,rental:5206,sports:40802},sport:{bicycle:114,climbing:29028,cycling:8225},"surface:colour":{rainbow:217},"surveillance:type":{ALPR:4424,ANPR:3,camera:165247},theme:{bicycle:16,cycling:7},toilets:{yes:70811},tourism:{artwork:245861,hotel:407208,map:51,viewpoint:219932},"tower:type":{observation:23057},type:{route:1005677},vending:{elongated_coin:816,"parcel_pickup;parcel_mail_in":522,parking_tickets:70753,public_transport_tickets:26895}},u3={"#":"Generated with generateStats.ts",date:o3,keys:a3,tags:l3},Cn=class Cn{static KVtoProperties(e){const t={};for(const n of e)t[n.key]=n.value;return t}static changeAsProperties(e){const t={};for(const n of e)t[n.k]=n.v;return t}static SplitKeys(e){return this.SplitKeysRegex(e,!1)}static SplitKeysRegex(e,t){const n={};for(e=[...e];e.length>0;){const r=e.shift();if(r!==void 0){if(r instanceof qn){e.push(...r.and);continue}if(r instanceof Li){n[r.key]===void 0&&(n[r.key]=[]),n[r.key].push(...r.value.split(";").map(s=>s.trim()));continue}if(t&&r instanceof Dn){const s=r.key;if(typeof s!="string")throw console.error("Invalid type to flatten the multiAnswer: key is a regex too",r),"Invalid type to FlattenMultiAnswer: key is a regex too";const o=s;n[o]===void 0&&(n[o]=[]),n[o].push(r);continue}throw console.error("Invalid type to flatten the multiAnswer",r),`Invalid type to FlattenMultiAnswer, not one of ${t?"RegexTag, ":""}Tag or And: ${r.asHumanString(!1,!1,{})}`}}return n}static FlattenAnd(e,t){const n=[];return e.visit(r=>{r instanceof Li&&n.push(r),r instanceof uo&&n.push(r.asTag(t))}),n}static optimzeJson(e){const t=Cn.Tag(e).optimize();return t===!0||t===!1?t:t.asJson()}static FlattenMultiAnswer(e){if(e===void 0)return new qn([]);const t=Cn.SplitKeys(e),n=[];for(const r in t){const s=ke.Dedup(t[r]).filter(o=>o!=="");s.sort(),n.push(new Li(r,s.join(";")))}return new qn(n)}static MatchesMultiAnswer(e,t){const n=Cn.SplitKeysRegex([e],!0);for(const r in n){const s=n[r];if(t[r]===void 0)return!1;const o=t[r].split(";").map(l=>l.trim());for(const l of s){if(l instanceof Dn){if(!l.matchesProperties(t))return!1;continue}if(o.indexOf(l)<0)return!1}}return!0}static SimpleTag(e,t){const n=ke.SplitFirst(e,"=");if(n.length!==2)throw`Invalid tag: no (or too much) '=' found (in ${t??"unkown context"})`;return new Li(n[0],n[1])}static isValidKey(e){return e.match(/^[a-z][a-z0-9:_]{2,253}[a-z0-9]$/)!==null}static Tag(e,t=""){try{const n=typeof t=="string"?t:t.path.join(".");return this.ParseTagUnsafe(e,n)}catch(n){if(typeof t=="string")throw console.error("Could not parse tag",e,"in context",t,"due to ",n),n;t.err(n);return}}static ParseUploadableTag(e,t=""){const n=this.Tag(e,t);return n.visit(r=>{if(!(r instanceof qn)&&!(r instanceof Li)&&!(r instanceof uo))throw`Error at ${t}: detected a non-uploadable tag at a location where this is not supported: ${r.asHumanString(!1,!1,{})}`}),n}static TagD(e,t=""){if(e!==void 0)return Cn.Tag(e,t)}static sortFilters(e,t){e.sort((n,r)=>Cn.order(n,r,t))}static toString(e,t=!0){let n;return e instanceof Qi?n=Cn.joinL(e.or,"|",t):e instanceof qn?n=Cn.joinL(e.and,"&",t):n=e.asHumanString(!1,!1,{}),t&&(n=n.trim()),n}static parseRegexOperator(e){const t=e.match(/^([_|a-zA-Z0-9: -]+)(!)?~([i]~)?(.*)$/);if(t==null)return null;const[n,r,s,o,l]=t;return{key:r,value:l,invert:s=="!",modifier:o=="i~"?"i":""}}static ContainsOppositeTags(e){for(let t=0;t<e.length;t++){const n=e[t];if(n instanceof Li||n instanceof Dn)for(let r=t+1;r<e.length;r++){const s=e[r];if((s instanceof Li||s instanceof Dn)&&s.key===n.key&&(s.value.source??s.value)===(n.value.source??n.value)&&(s.invert??!1)!==(n.invert??!1))return!0}}return!1}static removeShadowedElementsFrom(e,t){return t.filter(n=>!e.some(r=>r.shadows(n)))}static removeEquivalents(e){const t=[];e:for(let n=0;n<e.length;n++){const r=e[n];for(let s=0;s<e.length;s++){if(n===s)continue;if(e[s].shadows(r))continue e}t.push(r)}return t}static containsEquivalents(e,t){return t.some(n=>e.some(r=>r.shadows(n)))}static LevelsParser(e){if(e==null)return[];let t=ke.NoNull([e]);return t=[].concat(...t.map(n=>n==null?void 0:n.split(";"))),t=[].concat(...t.map(n=>{if(n=n.trim(),n==="")return;if(n.indexOf("-")<0||n.startsWith("-"))return n;const[r,s]=n.split("-").map(l=>Number(l.trim()));if(isNaN(r)||isNaN(s))return;const o=[];for(let l=r;l<=s;l++)o.push(l+"");return o})),ke.NoNull(t)}static ParseTagUnsafe(e,t=""){if(e===void 0)throw new Error(`Error while parsing a tag: 'json' is undefined in ${t}. Make sure all the tags are defined and at least one tag is present in a complex expression`);if(typeof e!="string"){if(e.and!==void 0&&e.or!==void 0)throw`${t}: Error while parsing a TagConfig: got an object where both 'and' and 'or' are defined. Did you override a value? Perhaps use \`"=parent": { ... }\` instead of "parent": {...}\` to trigger a replacement and not a fuse of values. The value is ${JSON.stringify(e)}`;if(e.and!==void 0)return new qn(e.and.map(s=>Cn.Tag(s,t)));if(e.or!==void 0)return new Qi(e.or.map(s=>Cn.Tag(s,t)));throw`At ${t}: unrecognized tag: ${JSON.stringify(e)}`}const n=e;for(const[s,o]of Cn.comparators)if(n.indexOf(s)>=0){const l=ke.SplitFirst(n,s).map(p=>p.trim());let u=Number(l[1]);isNaN(u)&&(u=new Date(l[1]).getTime());const c=p=>{if(p===void 0)return!1;let d;return typeof p=="number"?d=p:typeof d=="string"?d=Number(p==null?void 0:p.trim()):d=Number(p),isNaN(d)&&typeof p=="string"&&(d=ke.ParseDate(p).getTime(),isNaN(d))?!1:o(d,u)};return new Hp(l[0],c,s,""+u)}if(n.indexOf("~~")>=0){const s=ke.SplitFirst(n,"~~");let o;s[0]==="*"?o=new RegExp(".+","i"):o=new RegExp("^("+s[0]+")$");let l;return s[1]==="*"?l=new RegExp(".+","si"):l=new RegExp("^("+s[1]+")$","s"),new Dn(o,l)}const r=Cn.parseRegexOperator(n);if(r!=null){if(r.value==="*"&&r.invert)throw`Don't use 'key!~*' - use 'key=' instead (empty string as value (in the tag ${n} while parsing ${t})`;if(r.value==="")throw"Detected a regextag with an empty regex; this is not allowed. Use '"+r.key+"='instead (at "+t+")";const s=r.value;return s==="*"?new Dn(r.key,new RegExp(".+","si"+r.modifier),r.invert):new Dn(r.key,new RegExp("^("+s+")$","s"+r.modifier),r.invert)}if(n.indexOf("!:=")>=0){const s=ke.SplitFirst(n,"!:=");return new uo(s[0],s[1],!0)}if(n.indexOf(":=")>=0){const s=ke.SplitFirst(n,":=");return new uo(s[0],s[1])}if(n.indexOf("!=")>=0){const s=ke.SplitFirst(n,"!=");if(s[1]==="*")throw"At "+t+": invalid tag "+n+". To indicate a missing tag, use '"+s[0]+"!=' instead";return s[1]===""?new Dn(s[0],/.+/is):new Dn(s[0],s[1],!0)}if(n.indexOf("=")>=0){const s=ke.SplitFirst(n,"=");if(s[1]=="*")throw`Error while parsing tag '${n}' in ${t}: detected a wildcard on a normal value. Use a regex pattern instead`;return new Li(s[0],s[1])}throw`Error while parsing tag '${n}' in ${t}: no key part and value part were found`}static GetCount(e,t){if(e===void 0)return;const n=Cn.keyCounts.tags[e];return n!==void 0&&n[t]!==void 0?n[t]:Cn.keyCounts.keys[e]}static GetPopularity(e){if(e instanceof qn)return Math.min(...ke.NoNull(e.and.map(t=>Cn.GetPopularity(t))))-1;if(e instanceof Qi)return Math.max(...ke.NoNull(e.or.map(t=>Cn.GetPopularity(t))))+1;if(e instanceof Li)return Cn.GetCount(e.key,e.value);if(e instanceof Dn){const t=e.key;return t instanceof RegExp||e.invert||e.isNegative()?void 0:Cn.GetCount(t)}}static order(e,t,n){const r=e instanceof Dn,s=t instanceof Dn;if(r!==s)return r?1:-1;if(e.key!==void 0&&t.key!==void 0){if(n){const o=Cn.GetCount(e.key,e.value),l=Cn.GetCount(t.key,t.value);if(o!==void 0&&l!==void 0)return o-l}return e.key===t.key?0:e.key<t.key?-1:1}return 0}static joinL(e,t,n){const r=e.map(s=>Cn.toString(s,!1)).join(t);return n?r:" ("+r+") "}static generateDocs(){return[Cn.intro,...Object.keys(Cn.modeDocumentation).map(e=>{const t=Cn.modeDocumentation[e];return["","## `"+e+"` "+t.name,"",t.docs,"",""].join(`
`)}),"## "+Cn.comparators.map(e=>"`"+e[0]+"`").join(" ")+" Logical comparators",Cn.numberAndDateComparisonDocs,Cn.logicalOperator].join(`
`)}};R(Cn,"comparators",[["<=",(e,t)=>e<=t],[">=",(e,t)=>e>=t],["<",(e,t)=>e<t],[">",(e,t)=>e>t]]),R(Cn,"modeDocumentation",{"=":{name:"strict equality",uploadable:!0,overpassSupport:!0,docs:"Strict equality is denoted by `key=value`. This key matches __only if__ the keypair is present exactly as stated.\n\n**Only normal tags (eventually in an `and`) can be used in places where they are uploaded**. Normal tags are used in the `mappings` of a [TagRendering] (unless `hideInAnswer` is specified), they are used in `addExtraTags` of [Freeform] and are used in the `tags`-list of a preset.\n\nIf a different kind of tag specification is given, your theme will fail to parse.\n\n### If key is not present\n\nIf you want to check if a key is not present, use `key=` (pronounce as *key is empty*). A tag collection will match this\nif `key` is missing or if `key` is a literal empty value.\n\n### Removing a key\n\nIf a key should be deleted in the OpenStreetMap-database, specify `key=` as well. This can be used e.g. to remove a\nfixme or value from another mapping if another field is filled out."},"!=":{name:"strict not equals",overpassSupport:!0,docs:"To check if a key does _not_ equal a certain value, use `key!=value`. This is converted behind the scenes\nto `key!~^value$`\n\nIf `key` is not present or empty, this will match too.\n\n### If key is present\n\nThis implies that, to check if a key is present, `key!=` can be used. This will only match if the key is present and not\nempty."},"~":{name:"Value matches regex",overpassSupport:!0,docs:"A tag can also be tested against a regex with `key~regex`. Note that this regex __must match__ the entire value. If the\nvalue is allowed to appear anywhere as substring, use `key~.*regex.*`.\nThe regex is put within braces as to prevent runaway values.\n\nUse `key~*` to indicate that any value is allowed. This is effectively the check that the attribute is present (defined _and_ not empty).\nRegexes will match the newline character with `.` too - the `s`-flag is enabled by default."},"~i~":{name:"Value matches case-invariant regex",overpassSupport:!0,docs:"A tag can also be tested against a regex with `key~i~regex`, where the case of the value will be ignored. The regex is still matched against the _entire_ value"},"!~":{name:"Value should _not_ match regex",overpassSupport:!0,docs:"A tag can also be tested against a regex with `key!~regex`. This filter will match if the value does *not* match the regex. \n If the\nvalue is allowed to appear anywhere as substring, use `key~.*regex.*`.\nThe regex is put within braces as to prevent runaway values.\n"},"!~i~":{name:"Value does *not* match case-invariant regex",overpassSupport:!0,docs:"A tag can also be tested against a regex with `key~i~regex`, where the case of the value will be ignored. The regex is still matched against the _entire_ value. This filter returns true if the value does *not* match"},"~~":{name:"Key and value should match given regex",overpassSupport:!0,docs:"Both the `key` and `value` part of this specification are interpreted as regexes, both the key and value musth completely match their respective regexes"},":=":{name:"Substitute `... {some_key} ...` and match `key`",overpassSupport:!1,uploadable:!0,docs:`**This is an advanced feature - use with caution**

Some tags are automatically set or calculated - see [CalculatedTags](CalculatedTags.md) for an entire overview. If one
wants to apply such a value as tag, use a substituting-tag such, for example\`survey:date:={_date:now}\`. Note that the
separator between key and value here is \`:=\`. The text between \`{\` and \`}\` is interpreted as a key, and the respective
value is substituted into the string.

One can also append, e.g. \`key:={some_key} fixed text {some_other_key}\`.

An assigning tag _cannot_ be used to query OpenStreetMap/Overpass.

If using a key or variable which might not be defined, add a condition in the mapping to hide the option. This is
because, if \`some_other_key\` is not defined, one might actually upload the literal text \`key={some_other_key}\` to OSM -
which we do not want.

To mitigate this, use:

\`\`\`json
{
    "mappings": [
        {
            "if":"key:={some_other_key}",
            "then": "...",
            "hideInAnswer": "some_other_key="
        }
    ]
}
\`\`\`

One can use \`key!:=prefix-{other_key}-postfix\` as well, to match if \`key\` is _not_ the same
as \`prefix-{other_key}-postfix\` (with \`other_key\` substituted by the value)`},"!:=":{name:"Substitute `{some_key}` should not match `key`",overpassSupport:!1,docs:"See `:=`, except that this filter is inverted"}}),R(Cn,"keyCounts",u3),R(Cn,"numberAndDateComparisonDocs","If the value of a tag is a number (e.g. `key=42`), one can use a filter `key<=42`, `key>=35`, `key>40` or `key<50` to\nmatch this, e.g. in conditions for renderings. These tags cannot be used to generate an answer nor can they be used to\nrequest data upstream from overpass.\n\nNote that the value coming from OSM will first be stripped by removing all non-numeric characters. For\nexample, `length=42 meter` will be interpreted as `length=42` and will thus match `length<=42` and `length>=42`. In\nspecial circumstances (e.g. `surface_area=42 m2` or `length=100 feet`), this will result in erronous\nvalues (`surface=422` or if a length in meters is compared to). However, this can be partially alleviated by using '\nUnits' to rewrite to a default format.\n\nDates can be compared with the same expression: `somekey<2022-06-22` will match if `somekey` is a date and is smaller\nthen 22nd june '22."),R(Cn,"logicalOperator",`
## Logical operators

One can combine multiple tags by using \`and\` or \`or\`, e.g.:

\`\`\`json
{
  "osmTags": {
    "or": [
      "amenity=school",
      "amenity=kindergarten"
    ]
  }
}
\`\`\`
`),R(Cn,"intro",`Tags format
=============

When creating the \`json\` file describing your layer or theme, you'll have to add a few tags to describe what you want.
This document gives an overview of what every expression means and how it behaves in edge cases.

If the schema-files note a type [\`TagConfigJson\`](https://github.com/pietervdvn/MapComplete/blob/develop/src/Models/ThemeConfig/Json/TagConfigJson.ts), you can use one of these values.

In some cases, not every type of tags-filter can be used. For example,  _rendering_ an option with a regex is
fine (\`"if": "brand~[Bb]randname", "then":" The brand is Brandname"\`); but this regex can not be used to write a value
into the database. The theme loader will however refuse to work with such inconsistencies and notify you of this while
you are building your theme.

Example
-------

This example shows the most common options on how to specify tags:

\`\`\`json
{
  "and": [
    "key=value",
    {
      "or": [
        "other_key=value",
        "other_key=some_other_value"
      ]
    },
    "key_which_should_be_missing=",
    "key_which_should_have_a_value~*",
    "key~.*some_regex_a*_b+_[a-z]?",
    "height<1"
  ]
}
\`\`\`


`);let In=Cn;class El extends qu{constructor(t,n,r){super();R(this,"_header");R(this,"_contents");R(this,"_contentStyle");R(this,"_sortable");this._contentStyle=(r==null?void 0:r.contentStyle)??[["min-width: 9rem"]],this._header=t==null?void 0:t.map(De.W),this._contents=n.map(s=>s.map(De.W)),this._sortable=(r==null?void 0:r.sortable)??!1}AsMarkdown(){const t=this._header.map(o=>(o==null?void 0:o.AsMarkdown())??" "),n=ke.NoNull(t).join(" | "),r=t.map(o=>"-".repeat(o.length+2)).join(" | "),s=this._contents.map(o=>o.map(l=>{var u,c;return((c=(u=l==null?void 0:l.AsMarkdown())==null?void 0:u.replaceAll("\\","\\\\"))==null?void 0:c.replaceAll("|","\\|"))??" "}).join(" | ")).join(`
`);return`

`+[n,r,s,""].join(`
`)}InnerConstructElement(){const t=document.createElement("table"),n=new xr(void 0),r=this,s=ke.NoNull((this._header??[]).map((o,l)=>(r._sortable&&o.onClick(()=>{n.data==l?n.setData(-1-l):n.setData(l)}),o.ConstructElement())));if(s.length>0){const o=document.createElement("thead"),l=document.createElement("tr");s.forEach(u=>{const c=document.createElement("th");c.appendChild(u),l.appendChild(c)}),o.appendChild(l),t.appendChild(o)}for(let o=0;o<this._contents.length;o++){let l=this._contents[o];const u=document.createElement("tr");for(let c=0;c<l.length;c++)try{let p=l[c];if((p==null?void 0:p.ConstructElement)===void 0)continue;const d=p==null?void 0:p.ConstructElement();if(d===void 0)continue;let f;this._contentStyle!==void 0&&this._contentStyle[o]!==void 0&&this._contentStyle[c]!==void 0&&(f=this._contentStyle[o][c]);const g=document.createElement("td");g.style.cssText=f,g.appendChild(d),u.appendChild(g)}catch(p){console.error("Could not render an element in a table due to",p,l[c])}t.appendChild(u)}return n.addCallback(o=>{if(o===void 0)return;const l=o<0,u=l?-o-1:o;let c=Array.from(t.rows);c.splice(0,1),c=c.sort((p,d)=>{var v,w,A,C;const f=(w=(v=p.cells[u])==null?void 0:v.textContent)==null?void 0:w.toLowerCase(),g=(C=(A=d.cells[u])==null?void 0:A.textContent)==null?void 0:C.toLowerCase();return f===g?0:f<g!==l?-1:1});for(let p=c.length;p>1;p--)t.deleteRow(p);for(const p of c)t.appendChild(p)}),t}}const h3={},c3=Object.freeze(Object.defineProperty({__proto__:null,default:h3},Symbol.toStringTag,{value:"Module"})),d3=Nl(c3);class p3{constructor(e,t){R(this,"osmTags");R(this,"geojsonSource");R(this,"geojsonZoomLevel");R(this,"isOsmCacheLayer");R(this,"mercatorCrs");R(this,"idKey");let n=0;if(e.osmTags&&n++,e.overpassScript&&n++,e.geojsonSource&&n++,n==0)throw`Source: nothing correct defined in the source (in ${t}) (the params are ${JSON.stringify(e)})`;if(e.isOsmCache&&e.geojsonSource==null)throw console.error(e),`Source said it is a OSM-cached layer, but didn't define the actual source of the cache (in context ${t})`;if(e.geojsonSource!==void 0&&e.geojsonSourceLevel!==void 0&&!["x","y","x_min","x_max","y_min","Y_max"].some(r=>e.geojsonSource.indexOf(r)>0))throw`Source defines a geojson-zoomLevel, but does not specify {x} nor {y} (or equivalent), this is probably a bug (in context ${t})`;if(e.osmTags!==void 0){const r=e.osmTags.optimize();if(r===!1)throw"Error at "+t+`: the specified tags are conflicting with each other: they will never match anything at all.
	The offending tags are: `+e.osmTags.asHumanString(!1,!1,{})+"	They optmize into 'false' ";if(r===!0)throw"Error at "+t+": the specified tags are very wide: they will always match everything"}this.osmTags=e.osmTags??new Dn("id",/.*/),this.geojsonSource=e.geojsonSource,this.geojsonZoomLevel=e.geojsonSourceLevel,this.isOsmCacheLayer=e.isOsmCache??!1,this.mercatorCrs=e.mercatorCrs??!1,this.idKey=e.idKey}}class Jd extends qu{constructor(t,n=!1){super();R(this,"uiElements");R(this,"_ordered");this._ordered=n,this.uiElements=ke.NoNull(t).map(r=>De.W(r))}AsMarkdown(){return this._ordered?`

`+this.uiElements.map((t,n)=>"  "+n+". "+t.AsMarkdown().replace(/\n/g,`  
`)).join(`
`)+`
`:`

`+this.uiElements.map(t=>"  - "+t.AsMarkdown().replace(/\n/g,`  
`)).join(`
`)+`
`}InnerConstructElement(){const t=document.createElement(this._ordered?"ol":"ul");for(const n of this.uiElements){if(n==null)continue;const r=n.ConstructElement();if(r!==void 0){const s=document.createElement("li");s.appendChild(r),t.appendChild(s)}}return t}}class fi{constructor(e,t,n,r){R(this,"name");R(this,"explanation");R(this,"inputmode");R(this,"textArea");R(this,"isMeta");this.name=e,this.inputmode=n,this.textArea=r??!1,this.name.endsWith("textfield")&&(this.name=this.name.substr(0,this.name.length-9)),this.name.endsWith("textfielddef")&&(this.name=this.name.substr(0,this.name.length-12)),typeof t=="string"?this.explanation=t:this.explanation=t.AsMarkdown()}getFeedback(e,t){if(this.isValid(e,t))return;const n=De.t.validation[this.name];if(n!==void 0)return n.feedback}getPlaceholder(){return De.t.validation[this.name].description}isValid(e,t){return!0}reformat(e,t){return e}}class f3 extends fi{constructor(){super("string","A simple piece of text")}}class g3 extends fi{constructor(){super("text","A longer piece of text. Uses an textArea instead of a textField","text",!0)}}class m3 extends fi{constructor(){super("date","A date with date picker")}isValid(e){return!isNaN(new Date(e).getTime())}reformat(e){if(console.log("Reformatting",e),!this.isValid(e))return e;const t=new Date(e);let n=""+(t.getMonth()+1),r=""+t.getDate();const s=t.getFullYear();return n.length<2&&(n="0"+n),r.length<2&&(r="0"+r),[s,n,r].join("-")}}class Yp extends fi{constructor(e,t){super(e??"int",t??"A whole number, either positive, negative or zero","numeric")}isValid(e){return e=""+e,e!==void 0&&e.indexOf(".")<0&&!isNaN(Number(e))}getFeedback(e){const t=Number(e);if(isNaN(t))return De.t.validation.nat.notANumber;if(Math.floor(t)!==t)return De.t.validation.nat.mustBeWhole}}class Cy extends Yp{constructor(e,t){super(e??"nat",t??"A  whole, positive number or zero")}isValid(e){return e===void 0?!1:(e=""+e,e.indexOf(".")<0&&!isNaN(Number(e))&&Number(e)>=0)}getFeedback(e){console.log("Getting feedback for",e);const t=Number(e);if(!isNaN(t)&&t<0)return De.t.validation.nat.mustBePositive;const n=super.getFeedback(e);if(n!==void 0)return n}}class y3 extends fi{constructor(){super("distance",'A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]',"decimal");R(this,"isValid",t=>{const n=Number(t);return!isNaN(n)})}}class b3 extends Yp{constructor(){super("direction",["A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl).","### Input helper","This element has an input helper showing a map and 'viewport' indicating the direction. By default, this map is zoomed to zoomlevel 17, but this can be changed with the first argument"].join(`

`))}isValid(e){return e.endsWith("°")&&(e=e.substring(0,e.length-1)),super.isValid(e)}reformat(e){return e.endsWith("°")&&(e=e.substring(0,e.length-1)),""+Number(e)%360}}var as={shortLang:i=>i.toLowerCase().split("_")[0],forceArray:i=>(typeof i=="string"&&(i=[i]),i||[]),isPlainObject:i=>!(!i||typeof i!="object"||i instanceof Array),fixedEncodeURIComponent:i=>encodeURIComponent(i).replace(/[!'()*]/g,v3),replaceSpaceByUnderscores:i=>i.replace(/\s/g,"_"),uniq:i=>Array.from(new Set(i))};const v3=i=>"%"+i.charCodeAt(0).toString(16),Ty=i=>e=>{const t={};return Object.keys(e).forEach(n=>{const r=e[n];r!=null?t[n]=i?r.map(w3):r.value:t[n]=i?[]:null}),t},w3=i=>i.value,zl=Ty(!1);var Xp={labels:zl,descriptions:zl,aliases:Ty(!0),lemmas:zl,representations:zl,glosses:zl},_3=i=>{typeof i=="object"&&(i=i.time);const e=i[0];let[t,n]=i.slice(1).split("T");t=t.replace(/-00/g,"-01");const r=`${t}T${n}`;return C3(e,r)};const C3=(i,e)=>{const t=e.split("-")[0];return i==="-"||t.length>4?T3(i,e,t):new Date(e)},T3=(i,e,t)=>{let n;return t.length===4?n=`${i}00${e}`:t.length===5?n=`${i}0${e}`:n=i+e,new Date(n)},Zp=_3,Jn={};Jn.isNumericId=i=>/^[1-9][0-9]*$/.test(i);Jn.isEntityId=i=>/^((Q|P|L)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)$/.test(i);Jn.isEntitySchemaId=i=>/^E[1-9][0-9]*$/.test(i);Jn.isItemId=i=>/^Q[1-9][0-9]*$/.test(i);Jn.isPropertyId=i=>/^P[1-9][0-9]*$/.test(i);Jn.isLexemeId=i=>/^L[1-9][0-9]*$/.test(i);Jn.isFormId=i=>/^L[1-9][0-9]*-F[1-9][0-9]*$/.test(i);Jn.isSenseId=i=>/^L[1-9][0-9]*-S[1-9][0-9]*$/.test(i);Jn.isGuid=i=>/^((Q|P|L)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)\$[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(i);Jn.isHash=i=>/^[0-9a-f]{40}$/.test(i);Jn.isPropertyClaimsId=i=>{const[e,t]=i.split("#");return Jn.isEntityId(e)&&Jn.isPropertyId(t)};Jn.isRevisionId=i=>/^\d+$/.test(i);Jn.isEntityPageTitle=i=>{if(typeof i!="string")return!1;let[e,t]=i.split(":");return e&&t?k3(e)&&Jn[`is${e}Id`](t):(t=e,Jn.isItemId(t))};const x3=["Item","Property","Lexeme"],k3=i=>x3.includes(i),A3=i=>/^(Q|P|L)[1-9][0-9]*$/.test(i);Jn.getNumericId=i=>{if(!A3(i))throw new Error(`invalid entity id: ${i}`);return i.replace(/^(Q|P|L)/,"")};Jn.wikibaseTimeToDateObject=Zp;const Kp=i=>e=>{try{return i(e)}catch{e=e.time||e;const n=e[0];let[r,s]=e.slice(1).split("T");return r=r.replace(/-00/g,"-01"),`${n}${r}T${s}`}},q3=i=>Zp(i).getTime(),S3=i=>Zp(i).toISOString(),E3=i=>{if(typeof i=="object"){const{time:e,precision:t}=i;t===9?i=e.replace("-01-01T","-00-00T"):t===10?i=e.replace("-01T","-00T"):i=e}return i.split("T")[0].replace(/^\+/,"").replace(/^(-?)0+/,"$1").replace(/-00$/,"").replace(/-00$/,"")};Jn.wikibaseTimeToEpochTime=Kp(q3);Jn.wikibaseTimeToISOString=Kp(S3);Jn.wikibaseTimeToSimpleDay=Kp(E3);Jn.getImageUrl=(i,e)=>{let t=`https://commons.wikimedia.org/wiki/Special:FilePath/${i}`;return typeof e=="number"&&(t+=`?width=${e}`),t};Jn.getEntityIdFromGuid=i=>{const e=i.split(/[$-]/);if(e.length===6)return e[0].toUpperCase();if(e.length===7)return e.slice(0,2).join("-").toUpperCase();throw new Error(`invalid guid: ${i}`)};var Ba=Jn;const{wikibaseTimeToISOString:I3,wikibaseTimeToEpochTime:D3,wikibaseTimeToSimpleDay:R3}=Ba,Do=i=>i.value,$3=(i,e)=>e.keepRichValues?i.value:i.value.text,Xa=(i,e)=>L3(i,e.entityPrefix),N3={item:"Q",lexeme:"L",property:"P"},L3=(i,e)=>{const{value:t}=i,n=t.id||N3[t["entity-type"]]+t["numeric-id"];return typeof e=="string"?`${e}:${n}`:n},M3=(i,e)=>{const{value:t}=i,n=parseFloat(t.amount);if(e.keepRichValues){const r={amount:parseFloat(t.amount),unit:t.unit.replace(/^https?:\/\/.*\/entity\//,"")};return t.upperBound!=null&&(r.upperBound=parseFloat(t.upperBound)),t.lowerBound!=null&&(r.lowerBound=parseFloat(t.lowerBound)),r}else return n},O3=(i,e)=>e.keepRichValues?i.value:[i.value.latitude,i.value.longitude],P3=(i,e)=>{let t;if(typeof e.timeConverter=="function"?t=e.timeConverter(i.value):t=F3(e.timeConverter)(i.value),e.keepRichValues){const{timezone:n,before:r,after:s,precision:o,calendarmodel:l}=i.value;return{time:t,timezone:n,before:r,after:s,precision:o,calendarmodel:l}}else return t},F3=(i="iso")=>{const e=B3[i];if(!e)throw new Error(`invalid converter key: ${JSON.stringify(i).substring(0,100)}`);return e},B3={iso:I3,epoch:D3,"simple-day":R3,none:i=>i.time||i},Xg={commonsMedia:Do,"external-id":Do,"geo-shape":Do,"globe-coordinate":O3,math:Do,monolingualtext:$3,"musical-notation":Do,quantity:M3,string:Do,"tabular-data":Do,time:P3,url:Do,"wikibase-entityid":Xa,"wikibase-form":Xa,"wikibase-item":Xa,"wikibase-lexeme":Xa,"wikibase-property":Xa,"wikibase-sense":Xa};var j3={parsers:Xg,parse:(i,e,t,n)=>{i=i||e.type,i=i.replace(" ","-");try{return Xg[i](e,t)}catch(r){throw r.message==="parsers[datatype] is not a function"&&(r.message=`${i} claim parser isn't implemented
        Claim id: ${n}
        Please report to https://github.com/maxlath/wikibase-sdk/issues`),r}}};const xy=i=>{const e=i.reduce(J3,{});return e.preferred||e.normal||[]},W3=i=>i.filter(e=>e.rank!=="deprecated"),J3=(i,e)=>{const{rank:t}=e;return i[t]||(i[t]=[]),i[t].push(e),i},V3=i=>{const e={};return Object.keys(i).forEach(t=>{e[t]=xy(i[t])}),e};var ky={truthyClaims:V3,truthyPropertyClaims:xy,nonDeprecatedPropertyClaims:W3};const{parse:G3}=j3,{uniq:U3}=as,{truthyPropertyClaims:z3,nonDeprecatedPropertyClaims:H3}=ky,Qp=(i,...e)=>{const{propertyPrefix:t}=tf(e),n={};for(let r in i){const s=i[r];t&&(r=t+":"+r),n[r]=ef(s,...e)}return n},ef=(i,...e)=>{if(i==null||i.length===0)return[];const{keepNonTruthy:t,keepNonDeprecated:n,areSubSnaks:r}=tf(e);return n?i=H3(i):t||r||(i=z3(i)),i=i.map(s=>Vd(s,...e)).filter(Y3),i[0]&&typeof i[0]!="object"?U3(i):i},Y3=i=>i!==void 0,Vd=(i,...e)=>{e=tf(e);const{keepQualifiers:t,keepReferences:n,keepIds:r,keepHashes:s,keepTypes:o,keepSnaktypes:l,keepRanks:u}=Q3(e),{mainsnak:c,rank:p}=i;let d,f,g,v,w,A;if(c?(f=c.datatype,g=c.datavalue,v=c.snaktype):(g=i.datavalue,f=i.datatype,v=i.snaktype,i.hash?w=!0:A=!0),g)d=G3(f,g,e,i.id);else if(v==="somevalue")d=e.somevalueValue;else if(v==="novalue")d=e.novalueValue;else throw new Error("no datavalue or special snaktype found");if(w){if(!(s||o||l))return d;const y={value:d};return s&&(y.hash=i.hash),o&&(y.type=f),l&&(y.snaktype=v),y}if(A)return o?{type:f,value:d}:d;if(!(t||n||r||o||l||u))return d;const C={value:d};o&&(C.type=f),l&&(C.snaktype=v),u&&(C.rank=p);const m=yc(e);return m.keepHashes=s,t&&(C.qualifiers=Ay(i.qualifiers,m)),n&&(i.references=i.references||[],C.references=qy(i.references,m)),r&&(C.id=i.id),C},tf=i=>{if(i==null)return{};if(i[0]&&typeof i[0]=="object")return i[0];const[e,t,n]=i;return{entityPrefix:e,propertyPrefix:t,keepQualifiers:n}},Ay=(i,e)=>Qp(i,yc(e)),X3=(i,e)=>ef(i,yc(e)),qy=(i,e)=>i.map(t=>Z3(t,e)),Z3=(i,e)=>{const t=yc(e),n=Qp(i.snaks,t);return t.keepHashes?{snaks:n,hash:i.hash}:n},yc=(i={})=>i.areSubSnaks?i:Object.assign({},i,{areSubSnaks:!0}),K3=["keepQualifiers","keepReferences","keepIds","keepHashes","keepTypes","keepSnaktypes","keepRanks","keepRichValues"],Q3=i=>(i.keepAll&&K3.forEach(e=>{i[e]==null&&(i[e]=!0)}),i);var nf={simplifyClaims:Qp,simplifyPropertyClaims:ef,simplifyClaim:Vd,simplifyQualifiers:Ay,simplifyPropertyQualifiers:X3,simplifyQualifier:Vd,simplifyReferences:qy};const{isFormId:e_}=Ba,{representations:t_}=Xp,{simplifyClaims:n_}=nf,Sy=(i,e)=>{const{id:t,representations:n,grammaticalFeatures:r,claims:s}=i;if(!e_(t))throw new Error("invalid form object");return{id:t,representations:t_(n),grammaticalFeatures:r,claims:n_(s,e)}},i_=(i,e)=>i.map(t=>Sy(t,e));var r_={simplifyForm:Sy,simplifyForms:i_};const{isSenseId:s_}=Ba,{glosses:o_}=Xp,{simplifyClaims:a_}=nf,Ey=(i,e)=>{const{id:t,glosses:n,claims:r}=i;if(!s_(t))throw new Error("invalid sense object");return{id:t,glosses:o_(n),claims:a_(r,e)}},l_=(i,e)=>i.map(t=>Ey(t,e));var u_={simplifySense:Ey,simplifySenses:l_},h_=["aa","ab","ace","ady","af","ak","als","alt","ami","am","ang","an","arc","ar","ary","arz","ast","as","atj","avk","av","awa","ay","azb","az","ban","bar","bat_smg","ba","bcl","be_x_old","be","bg","bh","bi","bjn","bm","bn","bo","bpy","br","bs","bug","bxr","ca","cbk_zam","cdo","ceb","ce","cho","chr","ch","chy","ckb","co","crh","cr","csb","cs","cu","cv","cy","dag","da","de","din","diq","dsb","dty","dv","dz","ee","el","eml","en","eo","es","et","eu","ext","fa","ff","fiu_vro","fi","fj","fo","frp","frr","fr","fur","fy","gag","gan","ga","gcr","gd","glk","gl","gn","gom","gor","got","gu","gv","hak","ha","haw","he","hif","hi","ho","hr","hsb","ht","hu","hy","hyw","hz","ia","id","ie","ig","ii","ik","ilo","inh","io","is","it","iu","jam","ja","jbo","jv","kaa","kab","ka","kbd","kbp","kg","ki","kj","kk","kl","km","kn","koi","ko","krc","kr","ksh","ks","ku","kv","kw","ky","lad","la","lbe","lb","lez","lfn","lg","lij","li","lld","lmo","ln","lo","lrc","ltg","lt","lv","mad","mai","map_bms","mdf","mg","mhr","mh","min","mi","mk","ml","mni","mn","mnw","mo","mrj","mr","ms","mt","mus","mwl","myv","my","mzn","nah","nap","na","nds_nl","nds","ne","new","ng","nia","nl","nn","nov","no","nqo","nrm","nso","nv","ny","oc","olo","om","or","os","pag","pam","pap","pa","pcd","pdc","pfl","pih","pi","pl","pms","pnb","pnt","ps","pt","pwn","qu","rm","rmy","rn","roa_rup","roa_tara","ro","rue","ru","rw","sah","sat","sa","scn","sco","sc","sd","se","sg","shi","shn","sh","shy","simple","si","skr","sk","sl","smn","sm","sn","sources","so","sq","srn","sr","ss","stq","st","su","sv","sw","szl","szy","ta","tay","tcy","tet","te","tg","th","ti","tk","tl","tn","to","tpi","trv","tr","ts","tt","tum","tw","tyv","ty","udm","ug","uk","ur","uz","vec","vep","ve","vi","vls","vo","war","wa","wo","wuu","xal","xh","xmf","yi","yo","yue","za","zea","zh_classical","zh_min_nan","zh_yue","zh","zu"];const{fixedEncodeURIComponent:c_,replaceSpaceByUnderscores:d_,isPlainObject:p_}=as,{isPropertyId:f_}=Ba,Zg="https://www.wikidata.org/wiki/",g_=h_,m_=(i,e)=>{if(p_(i)&&(e=i.title,i=i.site),!i)throw new Error("missing a site");if(!e)throw new Error("missing a title");const t=i.replace(/wiki$/,""),n=Kg[t]||Kg[i];if(n)return n(e);const{lang:r,project:s}=rf(i);return e=c_(d_(e)),`https://${r}.${s}.org/wiki/${e}`},hh=i=>e=>`https://${i}.wikimedia.org/wiki/${e}`,Kg={commons:hh("commons"),mediawiki:i=>`https://www.mediawiki.org/wiki/${i}`,meta:hh("meta"),species:hh("species"),wikidata:i=>f_(i)?`${Zg}Property:${i}`:`${Zg}${i}`,wikimania:hh("wikimania")},y_=/^https?:\/\/([\w-]{2,10})\.(\w+)\.org\/\w+\/(.*)/,rf=i=>{if(i.startsWith("http")){const e=i,t=e.match(y_);if(!t)throw new Error(`invalid sitelink url: ${e}`);let[n,r,s]=t.slice(1);s=decodeURIComponent(s);let o;return n==="www"?(n="en",o=r):n==="commons"?(n="en",r=o="commons"):o=`${n}${r}`.replace("wikipedia","wiki"),{lang:n,project:r,key:o,title:s,url:e}}else{const e=i,t=b_[e];if(t)return{lang:"en",project:t,key:e};const[n,r,s]=e.split("wik");if(s!=null)throw new Error(`invalid sitelink key: ${e}`);if(g_.indexOf(n)===-1)throw new Error(`sitelink lang not found: ${n}`);const o=w_[r];if(!o)throw new Error(`sitelink project not found: ${o}`);return{lang:n,project:o,key:e}}},b_={commonswiki:"commons",mediawikiwiki:"mediawiki",metawiki:"meta",specieswiki:"specieswiki",wikidatawiki:"wikidata",wikimaniawiki:"wikimania"},v_=i=>{try{return rf(i),!0}catch{return!1}},w_={i:"wikipedia",isource:"wikisource",iquote:"wikiquote",tionary:"wiktionary",ibooks:"wikibooks",iversity:"wikiversity",ivoyage:"wikivoyage",inews:"wikinews"};var Iy={getSitelinkUrl:m_,getSitelinkData:rf,isSitelinkKey:v_};const{getSitelinkUrl:__}=Iy;var C_=(i,e={})=>{const{addUrl:t}=e;return Object.keys(i).reduce(T_(i,t),{})};const T_=(i,e)=>(t,n)=>{if(i[n]==null)return t[n]=i[n],t;const{title:r}=i[n];return e?t[n]={title:r,url:__(n,r)}:t[n]=r,t};var x_=(i,e={})=>{typeof i=="string"&&(i=JSON.parse(i));const{vars:t}=i.head,n=i.results.bindings;if(t.length===1&&e.minimize===!0){const l=t[0];return n.map(u=>Gd(u[l])).filter(u=>u!=null)}const{richVars:r,associatedVars:s,standaloneVars:o}=D_(t);return n.map($_(r,s,o))};const Gd=i=>{if(!i)return;let{datatype:e}=i;return e=e&&e.replace("http://www.w3.org/2001/XMLSchema#",""),(k_[i.type]||A_(e))(i)},k_={uri:i=>E_(i.value),bnode:()=>null},ch=i=>parseFloat(i.value),A_=i=>(i=i&&i.replace("http://www.w3.org/2001/XMLSchema#",""),q_[i]||S_),q_={decimal:ch,integer:ch,float:ch,double:ch,boolean:i=>i.value==="true"},S_=i=>i.value,E_=i=>i.match(/http.*\/entity\/statement\//)?I_(i):i.replace(/^https?:\/\/.*\/entity\//,"").replace(/^https?:\/\/.*\/prop\/direct\//,""),I_=i=>{i=i.replace(/^https?:\/\/.*\/entity\/statement\//,"");const e=i.split("-");return e[0]+"$"+e.slice(1).join("-")},D_=i=>{let e=i.filter(s=>i.some(R_(s)));e=e.filter(s=>!e.some(o=>s!==o&&s.startsWith(o)));const t=new RegExp(`^(${e.join("|")})[A-Z]`),n=i.filter(s=>t.test(s)),r=i.filter(s=>!e.includes(s)&&!t.test(s));return{richVars:e,associatedVars:n,standaloneVars:r}},R_=i=>{const e=new RegExp(`^${i}[A-Z]\\w+`);return e.test.bind(e)},$_=(i,e,t)=>n=>{const r={};for(const s of i){const o={},l=Gd(n[s]);l!=null&&(o.value=l);for(const u of e)u.startsWith(s)&&N_(n,s,u,o);Object.keys(o).length>0&&(r[s]=o)}for(const s of t)r[s]=Gd(n[s]);return r},N_=(i,e,t,n)=>{let r=t.split(e)[1];r=r[0].toLowerCase()+r.slice(1),r=L_[r]||r;const s=i[t];s!=null&&(n[r]=s.value)},L_={altLabel:"aliases"},{labels:M_,descriptions:O_,aliases:P_,lemmas:F_,glosses:B_}=Xp,{simplifyClaim:Qg,simplifyPropertyClaims:em,simplifyClaims:tm,simplifyQualifier:j_,simplifyPropertyQualifiers:W_,simplifyQualifiers:J_,simplifyReferences:V_}=nf,{simplifyForm:G_,simplifyForms:U_}=r_,{simplifySense:z_,simplifySenses:H_}=u_,Y_=C_,X_=x_;var Dy={labels:M_,descriptions:O_,aliases:P_,claim:Qg,propertyClaims:em,claims:tm,qualifier:j_,propertyQualifiers:W_,qualifiers:J_,references:V_,sitelinks:Y_,snak:Qg,propertySnaks:em,snaks:tm,lemmas:F_,glosses:B_,form:G_,forms:U_,sense:z_,senses:H_,sparqlResults:X_};const sf=Dy,of=(i,e)=>{const{type:t}=i,n={id:i.id,type:t,modified:i.modified};return i.datatype&&(n.datatype=i.datatype),t==="item"?(Tr(i,n,"labels"),Tr(i,n,"descriptions"),Tr(i,n,"aliases"),Tr(i,n,"claims",e),Tr(i,n,"sitelinks",e)):t==="property"?(n.datatype=i.datatype,Tr(i,n,"labels"),Tr(i,n,"descriptions"),Tr(i,n,"aliases"),Tr(i,n,"claims",e)):t==="lexeme"&&(Tr(i,n,"lemmas"),n.lexicalCategory=i.lexicalCategory,n.language=i.language,Tr(i,n,"claims",e),Tr(i,n,"forms",e),Tr(i,n,"senses",e)),n},Tr=(i,e,t,n)=>{i[t]!=null&&(e[t]=sf[t](i[t],n))},Ry=(i,e={})=>{i.entities&&(i=i.entities);const{entityPrefix:t}=e;return Object.keys(i).reduce((n,r)=>{const s=i[r];return t&&(r=`${t}:${r}`),n[r]=of(s,e),n},{})};sf.entity=of;sf.entities=Ry;var Z_={simplifyEntity:of,simplifyEntities:Ry};const{simplifyEntity:K_}=Z_,nm={entities:i=>{i=i.body||i;const{entities:e}=i;return Object.keys(e).forEach(t=>{e[t]=K_(e[t])}),e},pagesTitles:i=>(i=i.body||i,i.query.search.map(e=>e.title))};var Q_={wb:nm,wd:nm},nd,im;function e5(){if(im)return nd;im=1;const i=typeof location<"u"&&typeof document<"u";let e;return i?e=t=>new URLSearchParams(t).toString():e=d3.stringify,nd=t=>n=>(i&&(n.origin="*"),Object.keys(n).forEach(r=>{n[r]==null&&delete n[r]}),t+"?"+e(n)),nd}var id,rm;function t5(){if(rm)return id;rm=1;const{isPlainObject:i}=as,e=["item","property","lexeme","form","sense"];return id=t=>(n,r,s,o,l)=>{let u,c;if(i(n)){const p=n;n=p.search,r=p.language,s=p.limit,c=p.continue,o=p.format,l=p.uselang,u=p.type}if(!(n&&n.length>0))throw new Error("search can't be empty");if(r=r||"en",l=l||r,s=s||"20",o=o||"json",u=u||"item",c=c||"0",!e.includes(u))throw new Error(`invalid type: ${u}`);return t({action:"wbsearchentities",search:n,language:r,limit:s,continue:c,format:o,uselang:l,type:u})},id}var rd,sm;function n5(){if(sm)return rd;sm=1;const{isPlainObject:i}=as,e=/^\d+[|\d]*$/;return rd=t=>n=>{if(!i(n))throw new Error(`expected parameters to be passed as an object, got ${n} (${typeof n})`);for(const v in n)if(v.startsWith("sr")){const w=v.replace(/^sr/,"");if(n[w]!=null)throw new Error(`${w} and ${v} are the same`);n[w]=n[v]}const{search:r,haswbstatement:s,format:o="json",limit:l,offset:u,profile:c,sort:p}=n;let{namespace:d,prop:f}=n;if(!(r||s))throw new Error('missing "search" or "haswbstatement" parameter');let g="";if(r&&(g+=r),s){const v=s instanceof Array?s:[s];for(const w of v)w[0]==="-"?g+=` -haswbstatement:${w.slice(1)}`:g+=` haswbstatement:${w}`}if(l!=null&&(typeof l!="number"||l<1))throw new Error(`invalid limit: ${l}`);if(u!=null&&(typeof u!="number"||u<0))throw new Error(`invalid offset: ${u}`);if(d instanceof Array?d=d.join("|"):typeof d=="number"&&(d=d.toString()),d&&!e.test(d))throw new Error(`invalid namespace: ${d}`);if(c!=null&&typeof c!="string")throw new Error(`invalid profile: ${c} (${typeof c}, expected string)`);if(p!=null&&typeof p!="string")throw new Error(`invalid sort: ${p} (${typeof p}, expected string)`);if(f!=null&&(d instanceof Array&&(f=f.join("|")),typeof f!="string"))throw new Error(`invalid prop: ${f} (${typeof f}, expected string)`);return t({action:"query",list:"search",srsearch:g.trim(),format:o,srnamespace:d,srlimit:l,sroffset:u,srqiprofile:c,srsort:p,srprop:f})},rd}var sd,om;function bc(){if(om)return sd;om=1;const i=Ba,e=(t,n)=>r=>{if(!i[n](r))throw new Error(`invalid ${t}: ${r}`)};return sd={entityId:e("entity id","isEntityId"),propertyId:e("property id","isPropertyId"),entityPageTitle:e("entity page title","isEntityPageTitle"),revisionId:e("revision id","isRevisionId")},sd}var od,am;function $y(){if(am)return od;am=1;const{isPlainObject:i,forceArray:e,shortLang:t}=as,n=bc();return od=r=>(s,o,l,u,c)=>{if(i(s)&&({ids:s,languages:o,props:l,format:u,redirects:c}=s),u=u||"json",!(s&&s.length>0))throw new Error("no id provided");s=e(s),s.forEach(n.entityId),s.length>50&&console.warn(`getEntities accepts 50 ids max to match Wikidata API limitations:
      this request won't get all the desired entities.
      You can use getManyEntities instead to generate several request urls
      to work around this limitation`);const p={action:"wbgetentities",ids:s.join("|"),format:u};return c===!1&&(p.redirects="no"),o&&(o=e(o).map(t),p.languages=o.join("|")),l&&l.length>0&&(p.props=e(l).join("|")),r(p)},od}var ad,lm;function i5(){if(lm)return ad;lm=1;const{isPlainObject:i}=as;ad=t=>{const n=$y()(t);return(r,s,o,l,u)=>{if(i(r)&&({ids:r,languages:s,props:o,format:l,redirects:u}=r),!(r instanceof Array))throw new Error("getManyEntities expects an array of ids");return e(r).map(c=>n(c,s,o,l,u))}};const e=t=>{const n=[];for(;t.length>0;){const r=t.slice(0,50);t=t.slice(50),n.push(r)}return n};return ad}var ld,um;function r5(){if(um)return ld;um=1;const{forceArray:i}=as,e=bc();ld=r=>(s,o={})=>{s=i(s),s.forEach(e.entityPageTitle);const l=s.length===1,u={action:"query",prop:"revisions"};u.titles=s.join("|"),u.format=o.format||"json",l&&(u.rvlimit=o.limit||"max"),l&&o.start&&(u.rvstart=t(o.start)),l&&o.end&&(u.rvend=t(o.end));const{prop:c,user:p,excludeuser:d,tag:f}=o;return c?u.rvprop=i(c).join("|"):u.rvprop="ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores",u.rvslots="*",p&&(u.rvuser=p),d&&(u.rvexcludeuser=d),f&&(u.rvtag=f),r(u)};const t=r=>typeof r=="number"&&r<n?r:Math.trunc(new Date(r).getTime()/1e3),n=new Date("2000-01-01").getTime();return ld}var ud,hm;function s5(){if(hm)return ud;hm=1;const i=bc(),{isPlainObject:e}=as;return ud=(t,n)=>(r,s)=>(e(r)&&(s=r.revision,r=r.id),i.entityId(r),i.revisionId(s),`${t}/${n}/index.php?title=Special:EntityData/${r}.json&revision=${s}`),ud}var hd,cm;function o5(){if(cm)return hd;cm=1;const{isPlainObject:i,forceArray:e,shortLang:t}=as;hd=r=>(s,o,l,u,c,p)=>{if(i(s)){const f=s;s=f.titles,o=f.sites,l=f.languages,u=f.props,c=f.format,p=f.redirects}if(c=c||"json",!(s&&s.length>0))throw new Error("no titles provided");o&&o.length>0||(o=["enwiki"]),s=e(s),o=e(o).map(n),u=e(u);const d={action:"wbgetentities",titles:s.join("|"),sites:o.join("|"),format:c};return o.length===1&&s.length===1&&(d.normalize=!0),l&&(l=e(l).map(t),d.languages=l.join("|")),u&&u.length>0&&(d.props=u.join("|")),p===!1&&(d.redirects="no"),r(d)};const n=r=>r.length===2?`${r}wiki`:r;return hd}var cd,dm;function Ny(){if(dm)return cd;dm=1;const{fixedEncodeURIComponent:i}=as;return cd=e=>t=>{const n=i(t);return`${e}?format=json&query=${n}`},cd}var dd,pm;function a5(){if(pm)return dd;pm=1;const{forceArray:i}=as,{isItemId:e}=Ba,t=bc(),n="FILTER NOT EXISTS { ?subject rdf:type wikibase:Property . } ";dd=c=>{const p=Ny()(c);return(d,f,g={})=>{const{limit:v,caseInsensitive:w,keepProperties:A}=g,C=w?l:o,m=A?"":n;let y=i(d);y.forEach(t.propertyId),y=y.map(u).join("|");let k=`SELECT DISTINCT ?subject WHERE { ${r(f,C,y,m)} }`;return v&&(k+=` LIMIT ${v}`),p(k)}};const r=(c,p,d,f)=>c instanceof Array?"{ "+c.map(s).map(v=>p(d,v,f)).join("} UNION {")+" }":p(d,s(c),f),s=c=>(e(c)?c=`wd:${c}`:typeof c=="string"&&(c=`'${c}'`),c),o=(c,p,d,f)=>`?subject ${c} ${p} .
    ${d}`,l=(c,p,d,f)=>`?subject ${c} ?value .
    FILTER (lcase(?value) = ${p.toLowerCase()})
    ${d}`,u=c=>"wdt:"+c;return dd}const{isPlainObject:l5}=as,u5=Dy,h5=Q_,c5=Ba,d5=Iy,p5=ky,f5=`Tip: if you just want to access functions that don't need an instance or a sparqlEndpoint,
those are also exposed directly on the module object. Exemple:
const { isItemId, simplify } = require('wikibase-sdk')`,Ly=Object.assign({simplify:u5,parse:h5},c5,d5,p5),My=i=>{if(!l5(i))throw new Error("invalid config");const{instance:e,sparqlEndpoint:t}=i;let{wgScriptPath:n="w"}=i;if(n=n.replace(/^\//,""),!(e||t))throw new Error(`one of instance or sparqlEndpoint should be set at initialization.
${f5}`);let r,s,o;if(e){fm("instance",e),s=e.replace(/\/$/,"").replace(`/${n}/api.php`,""),o=`${s}/${n}/api.php`;const c=e5()(o);r={searchEntities:t5()(c),cirrusSearchPages:n5()(c),getEntities:$y()(c),getManyEntities:i5()(c),getRevisions:r5()(c),getEntityRevision:s5()(e,n),getEntitiesFromSitelinks:o5()(c)}}else r={searchEntities:da("searchEntities"),cirrusSearchPages:da("cirrusSearchPages"),getEntities:da("getEntities"),getManyEntities:da("getManyEntities"),getRevisions:da("getRevisions"),getEntityRevision:da("getEntityRevision"),getEntitiesFromSitelinks:da("getEntitiesFromSitelinks")};let l;return t?(fm("sparqlEndpoint",t),l={sparqlQuery:Ny()(t),getReverseClaims:a5()(t)}):l={sparqlQuery:gm("sparqlQuery"),getReverseClaims:gm("getReverseClaims")},Object.assign({instance:{root:s,apiEndpoint:o}},Ly,r,l)};Object.assign(My,Ly);const fm=(i,e)=>{if(!(typeof e=="string"&&e.startsWith("http")))throw new Error(`invalid ${i}: ${e}`)},Oy=i=>e=>()=>{throw new Error(`${e} requires ${i} to be set at initialization`)},gm=Oy("a sparqlEndpoint"),da=Oy("an instance");var g5=My,Ud=g5({instance:"https://www.wikidata.org",sparqlEndpoint:"https://query.wikidata.org/sparql"});class Il{constructor(e,t,n,r,s,o){R(this,"id");R(this,"labels");R(this,"descriptions");R(this,"claims");R(this,"wikisites");R(this,"commons");this.id=e,this.labels=t,this.descriptions=n,this.claims=r,this.wikisites=s,this.commons=o}static fromJson(e){const t=new Map;for(const l in e.labels)t.set(l,e.labels[l].value);const n=new Map;for(const l in e.descriptions)n.set(l,e.descriptions[l].value);const r=new Map;for(const l in e.sitelinks){const u=l.substring(0,l.length-4),c=e.sitelinks[l].title;r.set(u,c)}const s=r.get("commons");r.delete("commons");const o=Il.extractClaims(e.claims);return new Il(e.id,t,n,o,r,s)}static extractClaims(e){const t=Ud.simplify.claims(e,{timeConverter:"simple-day"}),n=new Map;for(const r in t){const s=t[r];n.set(r,new Set(s))}return n}}class m5{constructor(e){R(this,"id");R(this,"lemma");R(this,"senses");R(this,"claims");this.id=e.id,this.claims=Il.extractClaims(e.claims),this.lemma=new Map;for(const t in e.lemmas)this.lemma.set(t,e.lemmas[t].value);this.senses=new Map;for(const t of e.senses){const n=t.glosses;for(const r in n){let s=this.senses.get(r);s===void 0?s="":s=s+"; ",this.senses.set(r,s+n[r].value)}}}asWikidataResponse(){return new Il(this.id,this.lemma,this.senses,this.claims,new Map,void 0)}}var ii;let Tu=(ii=class{static LoadWikidataEntry(e){const t=this.ExtractKey(e),n=ii._storeCache.get(t);if(n)return n;const r=xr.FromPromiseWithErr(ii.LoadWikidataEntryAsync(t));return ii._storeCache.set(t,r),r}static async searchAdvanced(e,t){let n="";(t==null?void 0:t.instanceOf)!==void 0&&t.instanceOf.length>0&&(n="{"+t.instanceOf.map(p=>`{ ?item wdt:P31/wdt:P279* wd:Q${p}. }`).join(" UNION ")+"}");const s=((t==null?void 0:t.notInstanceOf)??[]).concat([17379835]).map(c=>`MINUS {?item wdt:P31/wdt:P279* wd:Q${c} .}`),o=`SELECT * WHERE {
            SERVICE wikibase:mwapi {
                bd:serviceParam wikibase:api "EntitySearch" .
                bd:serviceParam wikibase:endpoint "www.wikidata.org" .
                bd:serviceParam mwapi:search "${e.replace(/\\/g,"\\\\").replace(/"/g,'\\"')}" .
                bd:serviceParam mwapi:language "${t.lang}" .
                ?item wikibase:apiOutputItem mwapi:item .
                ?num wikibase:apiOrdinal true .
                bd:serviceParam wikibase:limit ${Math.round(((t==null?void 0:t.maxCount)??20)*1.5)} .
                ?label wikibase:apiOutput mwapi:label .
                ?description wikibase:apiOutput "@description" .
            }
            ${n}
            ${s.join(`
    `)}
        } ORDER BY ASC(?num) LIMIT ${(t==null?void 0:t.maxCount)??20}`,l=Ud.sparqlQuery(o);return(await ke.downloadJson(l)).results.bindings.map(({item:c,label:p,description:d,num:f})=>({relevance:f==null?void 0:f.value,id:c==null?void 0:c.value,label:p==null?void 0:p.value,description:d==null?void 0:d.value}))}static async search(e,t,n=1){const r=(t==null?void 0:t.maxCount)??20;let s=Math.min(r,50);const o=n*s-s,l=(t==null?void 0:t.lang)??"en",u="https://www.wikidata.org/w/api.php?action=wbsearchentities&search="+e+"&language="+l+"&limit="+s+"&continue="+o+"&format=json&uselang="+l+"&type=item&origin=*&props=",p=(await ke.downloadJsonCached(u,1e4)).search;if(p.length<s)return p;if(p.length<r){const d={...t};d.maxCount=r-p.length,p.push(...await ii.search(e,d,n+1))}return p}static async searchAndFetch(e,t){const n=await ii.searchAdvanced(e,t),r=await Promise.all(n.map(async s=>{try{return console.log("Loading ",s.id),await ii.LoadWikidataEntry(s.id).AsPromise()}catch(o){console.error(o);return}}));return ke.NoNull(r.map(s=>s.success))}static ExtractKey(e){if(typeof e=="number")return"Q"+e;if(e===void 0){console.error("ExtractKey: value is undefined");return}e=e.trim().toLowerCase();for(const t of ii._prefixesToRemove)e.startsWith(t)&&(e=e.substring(t.length));if(!(e.startsWith("http")&&e==="")){for(const t of ii._identifierPrefixes)if(e.startsWith(t)){const n=e.substring(t.length);if(n==="")return;const r=Number(n);return isNaN(r)?void 0:e.toUpperCase()}if(e!==""&&!isNaN(Number(e)))return"Q"+e}}static QIdToNumber(e){if(e==null)return;if(typeof e=="number")return e;if(e=e.trim(),!e.startsWith("Q"))return;e=e.substr(1);const t=Number(e);if(!isNaN(t))return t}static IdToArticle(e){if(e.startsWith("Q"))return"https://wikidata.org/wiki/"+e;if(e.startsWith("L"))return"https://wikidata.org/wiki/Lexeme:"+e;throw"Unknown id type: "+e}static async Sparql(e,t){const n="SELECT "+e.map(o=>o.startsWith("?")?o:"?"+o).join(" ")+`
WHERE
{
`+t.map(o=>o.endsWith(".")?o:o+".").join(`
`)+`  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE]". }
}`,r=Ud.sparqlQuery(n);return(await ke.downloadJsonCached(r,24*60*60*1e3)).results.bindings}static async LoadWikidataEntryAsync(e){const t=""+e,n=ii._cache.get(t);if(n)return n;const r=ii.LoadWikidataEntryUncachedAsync(e);return ii._cache.set(t,r),r}static async LoadWikidataEntryUncachedAsync(e){const t=ii.ExtractKey(e);if(t===void 0){console.warn("Could not extract a wikidata entry from",e);return}const n="https://www.wikidata.org/wiki/Special:EntityData/"+t+".json",r=(await ke.downloadJsonCached(n,1e4)).entities,s=Array.from(Object.keys(r))[0],o=r[s];return t.startsWith("L")?new m5(o).asWikidataResponse():Il.fromJson(o)}},R(ii,"neededUrls",["https://www.wikidata.org/","https://wikidata.org/","https://query.wikidata.org","https://m.wikidata.org"]),R(ii,"_identifierPrefixes",["Q","L"].map(e=>e.toLowerCase())),R(ii,"_prefixesToRemove",["https://www.wikidata.org/wiki/Lexeme:","https://www.wikidata.org/wiki/","http://www.wikidata.org/entity/","Lexeme:"].map(e=>e.toLowerCase())),R(ii,"_storeCache",new Map),R(ii,"_cache",new Map),ii);class Py extends qu{}class af extends Py{constructor(t){super();R(this,"enterPressed",new xr(void 0));R(this,"value");R(this,"_actualField");R(this,"_isValid");R(this,"_rawValue");R(this,"_isFocused",!1);R(this,"_options");this._options=t??{},t=t??{},this.value=(t==null?void 0:t.value)??new xr(void 0),this._rawValue=new xr(""),this._isValid=t.isValid??(n=>!0)}static SetCursorPosition(t,n){t!=null&&(n===-1&&(n=t.value.length),t.focus(),t.setSelectionRange(n,n))}GetValue(){return this.value}IsValid(t){return t==null?!1:this._isValid(t)}InnerConstructElement(){const t=this._options,n=this;let r,s="";t.placeholder&&(typeof t.placeholder=="string"?(s=t.placeholder,r=void 0):(t.placeholder instanceof y2&&t.placeholder.data!==void 0?r=t.placeholder:t.placeholder instanceof js&&t.placeholder.translations!==void 0&&(r=a0.language.map(c=>t.placeholder.textFor(c))),s=(r==null?void 0:r.data)??s??"")),this.SetClass("form-text-field");let o;if(t.htmlType==="area"){this.SetClass("w-full box-border max-w-full");const c=document.createElement("textarea");c.placeholder=s,c.rows=t.textAreaRows,c.cols=50,c.style.width="100%",c.dir="auto",o=c,r&&r.addCallbackAndRunD(p=>c.placeholder=p)}else{const c=document.createElement("input");c.type=t.htmlType??"text",c.inputMode=t.inputMode,c.placeholder=s,c.style.cssText=t.inputStyle??"width: 100%;",c.dir="auto",o=c,r&&r.addCallbackAndRunD(p=>c.placeholder=p)}const l=document.createElement("form");l.appendChild(o),l.onsubmit=()=>!1,t.label&&l.appendChild(t.label.ConstructElement());const u=o;return this.value.addCallbackAndRunD(c=>{u.value=c}),u.oninput=()=>{const c=u.value.substring(u.selectionEnd).replace(/ /g,"").length;let p=u.value;n._rawValue.setData(p),n.IsValid(p)?n.value.setData(p):n.value.setData(void 0),p=u.value;let d=p.length-c;for(;d>=0&&p.substr(d).replace(/ /g,"").length<c;)d--;af.SetCursorPosition(u,d)},u.addEventListener("keyup",function(c){c.key==="Enter"&&n.enterPressed.setData(u.value)}),this._isFocused&&u.focus(),this._actualField=u,l}focus(){this._actualField===void 0?this._isFocused=!0:this._actualField.focus()}}class ds extends qu{constructor(t,n=!1,r){super();R(this,"_src");R(this,"_rawSvg");R(this,"_options");if(t===void 0||t==="undefined")throw"Undefined src for image";this._src=t,this._rawSvg=n,this._options=r}static AsData(t){if(ke.runningFromConsole)return t;try{return`data:image/svg+xml;base64,${btoa(t)}`}catch(n){return console.error("Cannot create an image for",t.slice(0,100)),console.trace("Cannot create an image for the given source string due to ",n),""}}static AsImageElement(t,n="",r=""){return`<img class="${n}" style="${r}" alt="" src="${ds.AsData(t)}">`}AsMarkdown(){if(this._rawSvg===!0){console.warn("Converting raw svgs to markdown is not supported");return}let t=this._src;return this._src.startsWith("./")&&(t="https://mapcomplete.org/"+t),"![]("+t+")"}InnerConstructElement(){const t=this;if(this._rawSvg){const r=document.createElement("div");return r.innerHTML=this._src,r}const n=document.createElement("img");return n.src=this._src,n.onload=()=>{n.style.opacity="1"},n.onerror=()=>{var r;if((r=t._options)!=null&&r.fallbackImage){if(n.src===t._options.fallbackImage)return;n.src=t._options.fallbackImage}},n}}const wi=class wi{static delete_icon_svg(){return new ds(wi.delete_icon,!0)}static download_svg(){return new ds(wi.download,!0)}static invalid_svg(){return new ds(wi.invalid,!0)}static layers_svg(){return new ds(wi.layers,!0)}static loading_svg(){return new ds(wi.loading,!0)}static login_svg(){return new ds(wi.login,!0)}static note_svg(){return new ds(wi.note,!0)}static pop_out_svg(){return new ds(wi.pop_out,!0)}};R(wi,"delete_icon",' <svg xmlns="http://www.w3.org/2000/svg" width="375px" height="375px" viewBox="0 0 375 375" version="1.1">   <g id="surface1">     <path style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,0%,0%);fill-opacity:1;" d="M 148.457031 148.796875 L 148.457031 269.332031 C 148.457031 271.285156 147.828125 272.890625 146.574219 274.144531 C 145.316406 275.402344 143.714844 276.027344 141.761719 276.027344 L 128.367188 276.027344 C 126.414062 276.027344 124.808594 275.402344 123.554688 274.144531 C 122.296875 272.890625 121.671875 271.285156 121.671875 269.332031 L 121.671875 148.796875 C 121.671875 146.84375 122.296875 145.238281 123.554688 143.984375 C 124.808594 142.726562 126.414062 142.101562 128.367188 142.101562 L 141.761719 142.101562 C 143.714844 142.101562 145.316406 142.726562 146.574219 143.984375 C 147.828125 145.238281 148.457031 146.84375 148.457031 148.796875 Z M 202.027344 148.796875 L 202.027344 269.332031 C 202.027344 271.285156 201.398438 272.890625 200.144531 274.144531 C 198.890625 275.402344 197.285156 276.027344 195.332031 276.027344 L 181.9375 276.027344 C 179.984375 276.027344 178.382812 275.402344 177.125 274.144531 C 175.871094 272.890625 175.242188 271.285156 175.242188 269.332031 L 175.242188 148.796875 C 175.242188 146.84375 175.871094 145.238281 177.125 143.984375 C 178.382812 142.726562 179.984375 142.101562 181.9375 142.101562 L 195.332031 142.101562 C 197.285156 142.101562 198.890625 142.726562 200.144531 143.984375 C 201.398438 145.238281 202.027344 146.84375 202.027344 148.796875 Z M 255.597656 148.796875 L 255.597656 269.332031 C 255.597656 271.285156 254.972656 272.890625 253.714844 274.144531 C 252.460938 275.402344 250.855469 276.027344 248.902344 276.027344 L 235.511719 276.027344 C 233.558594 276.027344 231.953125 275.402344 230.695312 274.144531 C 229.441406 272.890625 228.8125 271.285156 228.8125 269.332031 L 228.8125 148.796875 C 228.8125 146.84375 229.441406 145.238281 230.695312 143.984375 C 231.953125 142.726562 233.558594 142.101562 235.511719 142.101562 L 248.902344 142.101562 C 250.855469 142.101562 252.460938 142.726562 253.714844 143.984375 C 254.972656 145.238281 255.597656 146.84375 255.597656 148.796875 Z M 282.386719 300.304688 L 282.386719 101.921875 L 94.886719 101.921875 L 94.886719 300.304688 C 94.886719 303.371094 95.375 306.199219 96.351562 308.777344 C 97.328125 311.359375 98.335938 313.242188 99.382812 314.429688 C 100.429688 315.613281 101.164062 316.207031 101.582031 316.207031 L 275.6875 316.207031 C 276.105469 316.207031 276.839844 315.613281 277.886719 314.429688 C 278.933594 313.242188 279.945312 311.359375 280.921875 308.777344 C 281.898438 306.199219 282.386719 303.371094 282.386719 300.304688 Z M 141.761719 75.136719 L 235.511719 75.136719 L 225.464844 50.652344 C 224.488281 49.398438 223.304688 48.628906 221.90625 48.351562 L 155.570312 48.351562 C 154.175781 48.628906 152.992188 49.398438 152.015625 50.652344 Z M 335.957031 81.832031 L 335.957031 95.226562 C 335.957031 97.179688 335.328125 98.78125 334.074219 100.039062 C 332.816406 101.292969 331.214844 101.921875 329.261719 101.921875 L 309.171875 101.921875 L 309.171875 300.304688 C 309.171875 311.882812 305.890625 321.894531 299.335938 330.332031 C 292.777344 338.773438 284.894531 342.992188 275.6875 342.992188 L 101.582031 342.992188 C 92.375 342.992188 84.492188 338.914062 77.933594 330.75 C 71.378906 322.589844 68.097656 312.71875 68.097656 301.140625 L 68.097656 101.921875 L 48.011719 101.921875 C 46.058594 101.921875 44.453125 101.292969 43.195312 100.039062 C 41.941406 98.78125 41.3125 97.179688 41.3125 95.226562 L 41.3125 81.832031 C 41.3125 79.878906 41.941406 78.273438 43.195312 77.019531 C 44.453125 75.765625 46.058594 75.136719 48.011719 75.136719 L 112.671875 75.136719 L 127.320312 40.1875 C 129.414062 35.027344 133.179688 30.632812 138.621094 27.003906 C 144.0625 23.378906 149.574219 21.566406 155.152344 21.566406 L 222.117188 21.566406 C 227.699219 21.566406 233.207031 23.378906 238.648438 27.003906 C 244.089844 30.632812 247.855469 35.027344 249.949219 40.1875 L 264.597656 75.136719 L 329.261719 75.136719 C 331.214844 75.136719 332.816406 75.765625 334.074219 77.019531 C 335.328125 78.273438 335.957031 79.878906 335.957031 81.832031 Z M 335.957031 81.832031 "/>   </g> </svg>'),R(wi,"download",' <svg xmlns="http://www.w3.org/2000/svg" width="375px" height="375px" viewBox="0 0 375 375" version="1.1">   <g id="surface1">     <path d="M 280.75 123.625 L 218.375 123.625 L 218.375 27.8125 C 218.375 19.0625 211.375 11.875 202.75 11.875 L 171.5625 11.875 C 163 11.875 155.9375 19.0625 155.9375 27.8125 L 155.9375 123.625 L 93.5625 123.625 L 187.125 251.375 Z M 351 171.5625 C 338.0625 171.5625 327.625 182.3125 327.625 195.5 L 327.625 315.25 L 46.8125 315.25 L 46.8125 195.5 C 46.8125 182.25 36.3125 171.5625 23.4375 171.5625 C 10.5 171.5625 0 182.25 0 195.5 L 0 339.1875 C 0 352.375 10.5 363.125 23.375 363.125 L 350.9375 363.125 C 363.875 363.125 374.3125 352.375 374.3125 339.1875 L 374.3125 195.5 C 374.375 182.25 363.875 171.5625 351 171.5625 Z M 351 171.5625 "/>   </g> </svg> '),R(wi,"invalid",'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 36 36"><path fill="#DD2E44" d="M18 0C8.059 0 0 8.059 0 18s8.059 18 18 18 18-8.059 18-18S27.941 0 18 0zm13 18c0 2.565-.753 4.95-2.035 6.965L11.036 7.036C13.05 5.753 15.435 5 18 5c7.18 0 13 5.821 13 13zM5 18c0-2.565.753-4.95 2.036-6.964l17.929 17.929C22.95 30.247 20.565 31 18 31c-7.179 0-13-5.82-13-13z"/></svg>'),R(wi,"layers",' <svg xmlns="http://www.w3.org/2000/svg" width="375px" height="375px" viewBox="0 0 375 375" version="1.1">   <g id="surface1">     <path style=" stroke:none;fill-rule:nonzero;fill:rgb(1.176471%,0%,0%);fill-opacity:1;" d="M 371.707031 112.410156 C 370.386719 115.515625 367.917969 117.234375 365.007812 118.78125 C 307.3125 149.324219 249.660156 179.914062 192.054688 210.617188 C 188.816406 212.335938 186.484375 212.261719 183.273438 210.546875 C 125.675781 179.835938 68.011719 149.253906 10.359375 118.648438 C 2.105469 114.269531 1.507812 103.796875 9.210938 98.316406 C 10.472656 97.417969 11.863281 96.691406 13.230469 95.945312 C 68.351562 66.171875 123.507812 36.453125 178.558594 6.550781 C 185.027344 3.03125 190.667969 3.136719 197.097656 6.636719 C 251.9375 36.433594 306.863281 66.074219 361.816406 95.648438 C 366.335938 98.085938 369.945312 101.015625 371.707031 105.925781 C 371.707031 108.089844 371.707031 110.246094 371.707031 112.410156 Z M 371.707031 112.410156 "/>     <path style=" stroke:none;fill-rule:nonzero;fill:rgb(1.176471%,0%,0%);fill-opacity:1;" d="M 184.140625 372.59375 C 167.671875 363.679688 151.207031 354.757812 134.730469 345.851562 C 94.003906 323.847656 53.28125 301.863281 12.558594 279.851562 C 5 275.769531 1.757812 269.359375 4.652344 262.824219 C 5.921875 259.953125 8.363281 257.074219 11.035156 255.457031 C 18.792969 250.75 26.894531 246.574219 35 242.472656 C 36.214844 241.855469 38.425781 242.300781 39.773438 243.015625 C 86.078125 267.503906 132.367188 292.023438 178.546875 316.734375 C 184.882812 320.117188 190.425781 320.203125 196.769531 316.808594 C 242.855469 292.167969 289.0625 267.746094 335.167969 243.140625 C 337.847656 241.710938 339.757812 241.769531 342.300781 243.246094 C 348.394531 246.796875 354.605469 250.171875 360.917969 253.324219 C 365.671875 255.699219 369.558594 258.773438 371.699219 263.761719 C 371.699219 265.929688 371.699219 268.085938 371.699219 270.25 C 369.855469 275.277344 366.097656 278.226562 361.488281 280.699219 C 321.488281 302.171875 281.5625 323.78125 241.621094 345.359375 C 224.84375 354.417969 208.085938 363.515625 191.332031 372.59375 C 188.929688 372.59375 186.53125 372.59375 184.140625 372.59375 Z M 184.140625 372.59375 "/>     <path style=" stroke:none;fill-rule:nonzero;fill:rgb(1.176471%,0%,0%);fill-opacity:1;" d="M 369.769531 191.6875 C 368.304688 194.867188 365.566406 196.492188 362.589844 198.066406 C 304.789062 228.683594 247.019531 259.34375 189.296875 290.105469 C 186.609375 291.535156 184.738281 291.359375 182.175781 289.996094 C 124.230469 259.136719 66.25 228.375 8.269531 197.582031 C 0.816406 193.628906 -0.484375 184.949219 5.578125 178.914062 C 6.910156 177.589844 8.585938 176.546875 10.246094 175.628906 C 17.359375 171.703125 24.609375 167.992188 31.65625 163.941406 C 34.058594 162.558594 35.8125 162.710938 38.183594 163.980469 C 84.191406 188.496094 130.285156 212.847656 176.234375 237.472656 C 182.964844 241.078125 188.703125 241.050781 195.421875 237.445312 C 241.371094 212.820312 287.472656 188.476562 333.480469 163.949219 C 335.863281 162.683594 337.628906 162.566406 340.007812 163.9375 C 346.207031 167.542969 352.503906 171.015625 358.933594 174.1875 C 363.6875 176.527344 367.554688 179.550781 369.78125 184.464844 C 369.769531 186.882812 369.769531 189.289062 369.769531 191.6875 Z M 369.769531 191.6875 "/>   </g> </svg>'),R(wi,"loading",' <svg xmlns="http://www.w3.org/2000/svg" width="375px" height="375px" viewBox="0 0 375 375" version="1.1">   <g id="surface1">     <path style="fill: none !important;stroke-width:3.262002;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:0.266355;stroke-miterlimit:4;" d="M 22.390901 12.010996 C 22.390901 17.743283 17.744366 22.390319 12.012079 22.391069 C 6.279792 22.39157 1.632005 17.745285 1.631004 12.012998 C 1.630003 6.280711 6.275788 1.632674 12.008075 1.630922 C 17.740362 1.629421 22.388899 6.274705 22.390901 12.006992 " transform="matrix(15.610589,0,0,15.610589,0,0.00128032)"/>     <path style="fill: none !important;stroke-width:3.262002;stroke-linecap:round;stroke-linejoin:round;stroke:rgb(0%,0%,0%);stroke-opacity:1;stroke-miterlimit:4;" d="M 22.390901 12.010996 C 22.390901 14.870133 21.211564 17.602903 19.130895 19.564212 C 17.050476 21.525521 14.252896 22.541458 11.398763 22.372803 " transform="matrix(15.610589,0,0,15.610589,0,0.00128032)"/>   </g> </svg>'),R(wi,"login",' <svg    width="375px"    height="375px"    viewBox="0 0 375 375"    version="1.1"    id="svg11"    xmlns="http://www.w3.org/2000/svg"    xmlns:svg="http://www.w3.org/2000/svg">   <defs      id="defs15" />   <path      id="path2"      style="color:#000000;fill:#000000;stroke-linecap:round;stroke-linejoin:round;-inkscape-stroke:none"      d="M 53.929688 27.095703 C 32.119816 27.095703 16.970068 40.812733 11.746094 53.177734 C 7.106544 64.159419 7.5344948 73.99011 7.6914062 76.158203 L 8.4628906 188.625 L 7.6914062 301.08984 C 7.5344948 303.25794 7.106544 313.08863 11.746094 324.07031 C 16.970068 336.43531 32.119816 350.1543 53.929688 350.1543 C 87.406 350.1543 140.12695 349.40625 140.12695 349.40625 A 15.663316 15.663316 0 0 0 140.16602 349.40625 C 140.16602 349.40625 151.12665 349.32365 161.72266 342.59961 C 172.31866 335.87554 182.41602 320.93277 182.41602 300.11719 L 182.41602 294.41016 A 15.66175 15.66175 0 0 0 166.75391 278.74805 A 15.66175 15.66175 0 0 0 151.0918 294.41016 L 151.0918 300.11719 C 151.0918 312.48521 147.76532 314.35785 144.9375 316.15234 C 142.10968 317.94684 139.64648 318.08594 139.64648 318.08594 C 139.59848 318.08661 86.922647 318.83008 53.929688 318.83008 C 42.493509 318.83008 42.353165 316.03148 40.599609 311.88086 C 38.846054 307.73024 38.962891 302.7207 38.962891 302.7207 A 15.663316 15.663316 0 0 0 39.013672 301.56836 L 39.787109 188.73242 A 15.66175 15.66175 0 0 0 39.78125 188.625 A 15.66175 15.66175 0 0 0 39.787109 188.51758 L 39.013672 75.681641 A 15.663316 15.663316 0 0 0 38.962891 74.527344 C 38.962891 74.527344 38.846054 69.517805 40.599609 65.367188 C 42.353165 61.216571 42.493508 58.419922 53.929688 58.419922 C 86.922646 58.419922 139.59847 59.161432 139.64648 59.162109 C 139.64648 59.162109 142.10968 59.303163 144.9375 61.097656 C 147.76532 62.892149 151.0918 64.762835 151.0918 77.130859 L 151.0918 82.839844 A 15.66175 15.66175 0 0 0 166.75391 98.5 A 15.66175 15.66175 0 0 0 182.41602 82.839844 L 182.41602 77.130859 C 182.41602 56.315277 172.31866 41.374459 161.72266 34.650391 C 151.12665 27.926322 140.16602 27.84375 140.16602 27.84375 A 15.663316 15.663316 0 0 0 140.12695 27.841797 C 140.12695 27.841797 87.406001 27.095703 53.929688 27.095703 z M 234.94336 74.408203 A 19.8664 19.8664 0 0 0 225.36719 78.158203 C 225.36719 78.158203 201.76359 95.524722 177.85938 116.39258 C 165.90727 126.82651 153.84111 138.11038 144.11523 149.23828 C 134.38936 160.36618 124.82118 169.15316 124.58594 187.41211 A 19.868386 19.868386 0 0 0 124.58594 187.41406 C 124.34949 205.98477 134.08341 214.90837 143.80273 226.0918 C 153.52206 237.27522 165.61857 248.59181 177.61914 259.06055 C 201.62029 279.99802 225.39648 297.42578 225.39648 297.42578 A 19.8664 19.8664 0 0 0 253.16602 293.16406 A 19.8664 19.8664 0 0 0 248.9043 265.39453 C 248.9043 265.39453 226.16776 248.68556 203.73828 229.11914 C 194.28077 220.86885 185.03853 212.15104 177.75586 204.33594 L 359.47461 204.33594 A 16.875 16.875 0 0 0 376.34961 187.46094 A 16.875 16.875 0 0 0 359.47461 170.58594 L 178.46289 170.58594 C 185.70519 162.89528 194.75718 154.38471 203.98828 146.32617 C 226.3516 126.80349 248.93359 110.14648 248.93359 110.14648 A 19.8664 19.8664 0 0 0 253.14453 82.369141 A 19.8664 19.8664 0 0 0 234.94336 74.408203 z " /> </svg> '),R(wi,"note",' <svg    width="275px"    height="374px"    viewBox="0 0 275 374"    version="1.1"    id="svg7"    sodipodi:docname="note.svg"    inkscape:version="1.1.1 (1:1.1+202109281949+c3084ef5ed)"    xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"    xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"    xmlns="http://www.w3.org/2000/svg"    xmlns:svg="http://www.w3.org/2000/svg">   <defs      id="defs11" />   <path      id="path2"      class="selectable"      style="fill:#c60000;fill-opacity:1;fill-rule:nonzero;stroke:#950000;stroke-width:5;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"      d="M 135.55664,1.9765625 C 74.593645,2.1922681 20.084472,43.910648 7.2773438,104.37109 4.936895,115.41704 4.1435422,126.42334 4.7265625,137.18555 2.5821353,205.89923 56.815085,269.30423 107.08203,335.96094 c 12.32031,15.26562 30.35156,34.07422 30.35156,34.07422 l 27.64453,-32.61328 C 227.98632,255.40992 319.84389,135.74148 238.04492,49.080078 219.42005,26.853995 193.07863,10.556457 161.97656,4.4921875 153.10693,2.7626953 144.26564,1.9457474 135.55664,1.9765625 Z"/>   <path      id="path5936"      style="color:#000000;fill:#fffffd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none"      d="m 202.54602,49.933374 a 19.846225,19.846225 0 0 0 -14.03347,5.812789 L 137.36365,106.89506 86.838795,56.370195 a 19.845967,19.845967 0 0 0 -14.033473,-5.812787 19.845967,19.845967 0 0 0 -14.033471,5.812787 19.845967,19.845967 0 0 0 0,28.066944 l 50.524859,50.524871 -50.328371,50.32837 a 19.846225,19.846225 0 0 0 0,28.06695 19.846225,19.846225 0 0 0 28.066944,0 l 50.328367,-50.32838 50.95423,50.95424 a 19.845967,19.845967 0 0 0 28.06694,0 19.845967,19.845967 0 0 0 0,-28.06695 L 165.4306,134.96201 216.57949,83.813106 a 19.846225,19.846225 0 0 0 0,-28.066943 19.846225,19.846225 0 0 0 -14.03347,-5.812789 z" /> </svg> '),R(wi,"pop_out",' <svg xmlns="http://www.w3.org/2000/svg" width="375px" height="375px" viewBox="0 0 375 375" version="1.1">   <g id="surface1">     <path style=" stroke:none;fill-rule:nonzero;fill:rgb(0%,0%,0%);fill-opacity:1;" d="M 181.875 142.3125 L 230.851562 191.289062 L 323.023438 99.113281 L 370.613281 146.699219 L 370.6875 4.574219 L 227.664062 3.75 L 274.085938 50.136719 Z M 369.898438 204.863281 L 334.613281 169.085938 L 335.25 334.574219 L 40.988281 334.726562 L 41.289062 41.210938 L 205.875 40.460938 L 169.125 3.710938 L 40.5 3.710938 C 20.210938 3.75 3.75 20.25 3.75 40.5 L 3.75 334.5 C 3.75 354.789062 20.210938 371.25 40.5 371.25 L 334.5 371.25 C 354.789062 371.25 371.25 354.789062 371.25 334.5 Z M 369.898438 204.863281 "/>   </g> </svg>');let zd=wi;class Fy extends Qt{constructor(e){const t=De.W(e)??De.t.general.loading;t.SetClass("pl-2"),super([zd.loading_svg().SetClass("animate-spin self-center").SetStyle("width: 1.5rem; height: 1.5rem; min-width: 1.5rem;"),t]),this.SetClass("flex p-1")}}class y5{GetRelevantUrls(e,t){const n=(t==null?void 0:t.prefixes)??this.defaultKeyPrefixes;if(n===void 0)throw"No `defaultKeyPrefixes` defined by this image provider";const r=new xr([]),s=new Set;return e.addCallbackAndRunD(o=>{var l,u;for(const c in o){if(!n.some(d=>c.startsWith(d)))continue;const p=ke.NoEmpty(((u=(l=o[c])==null?void 0:l.split(";"))==null?void 0:u.map(d=>d.trim()))??[]);for(const d of p)s.has(d)||(s.add(d),this.ExtractUrls(c,d).then(f=>{for(const g of f??[])g!==void 0&&g.then(v=>{v!==void 0&&(r.data.push(v),r.ping())})}))}}),r}backlink(){}}class b5{constructor(){R(this,"title","");R(this,"artist","");R(this,"license");R(this,"licenseShortName","");R(this,"usageTerms","");R(this,"attributionRequired",!1);R(this,"copyrighted",!1);R(this,"credit","");R(this,"description","");R(this,"informationLocation");R(this,"date");R(this,"views")}}class lf{static async GetCategoryContents(e,t=10,n=void 0){var c;if(e==null||e==="")return[];e.startsWith("Category:")||(e="Category:"+e);let r="https://commons.wikimedia.org/w/api.php?action=query&list=categorymembers&format=json&&origin=*&cmtitle="+encodeURIComponent(e);n!==void 0&&(r=`${r}&cmcontinue=${n}`);const s=await ke.downloadJson(r),l=(((c=s.query)==null?void 0:c.categorymembers)??[]).map(p=>p.title);if(s.continue===void 0)return l;if(t-l.length<=0)return console.debug(`Recursive wikimedia category load stopped for ${e}`),l;const u=await lf.GetCategoryContents(e,t-l.length,s.continue.cmcontinue);return l.push(...u),l}}function v5(i){let e,t,n,r,s,o,l,u,c,p,d,f,g,v,w,A,C,m,y,x,k,q,I,S,$,B,D,N,O,L,V,X,K,ee,z,J,H,Y,se,Q,ie,te,oe,ve,be,ye,re,he,Se,Re,we,Ee,qe,Be,Je,_e,Fe,Ge,Te,je,Ne,Oe,Le,Ye,Xe,at,it,Ze,ze,Ke,Qe,rt,bt,vt,ct,wt,dt,pt,Pe,_t,et,Ft,ft,$t,gt,mt,Bt,Nt,Ct,Lt,jt,yt,Mt,Tt,tt,xt,kt,lt,ut,Wt,At,Jt,Vt,qt,Zt,Gt,St=[i[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"279px"},{height:"374px"},{viewBox:"0 0 279 374"},{version:"1.1"}],Ut={};for(let fe=0;fe<St.length;fe+=1)Ut=Z(Ut,St[fe]);return{c(){e=_("svg"),t=_("defs"),n=_("clipPath"),r=_("path"),s=_("clipPath"),o=_("path"),l=_("clipPath"),u=_("path"),c=_("clipPath"),p=_("path"),d=_("clipPath"),f=_("path"),g=_("clipPath"),v=_("path"),w=_("clipPath"),A=_("path"),C=_("clipPath"),m=_("path"),y=_("clipPath"),x=_("path"),k=_("clipPath"),q=_("path"),I=_("clipPath"),S=_("path"),$=_("clipPath"),B=_("path"),D=_("clipPath"),N=_("path"),O=_("clipPath"),L=_("path"),V=_("clipPath"),X=_("path"),K=_("clipPath"),ee=_("path"),z=_("clipPath"),J=_("path"),H=_("clipPath"),Y=_("path"),se=_("clipPath"),Q=_("path"),ie=_("clipPath"),te=_("path"),oe=_("clipPath"),ve=_("path"),be=_("clipPath"),ye=_("path"),re=_("clipPath"),he=_("path"),Se=_("clipPath"),Re=_("path"),we=_("clipPath"),Ee=_("path"),qe=_("clipPath"),Be=_("path"),Je=_("clipPath"),_e=_("path"),Fe=_("clipPath"),Ge=_("path"),Te=_("g"),je=_("path"),Ne=_("path"),Oe=_("path"),Le=_("g"),Ye=_("g"),Xe=_("path"),at=_("g"),it=_("g"),Ze=_("path"),ze=_("g"),Ke=_("g"),Qe=_("path"),rt=_("g"),bt=_("g"),vt=_("path"),ct=_("g"),wt=_("g"),dt=_("path"),pt=_("g"),Pe=_("g"),_t=_("path"),et=_("g"),Ft=_("g"),ft=_("path"),$t=_("g"),gt=_("g"),mt=_("path"),Bt=_("g"),Nt=_("g"),Ct=_("path"),Lt=_("g"),jt=_("g"),yt=_("path"),Mt=_("g"),Tt=_("g"),tt=_("path"),xt=_("g"),kt=_("g"),lt=_("path"),ut=_("g"),Wt=_("g"),At=_("path"),Jt=_("g"),Vt=_("g"),qt=_("path"),h(r,"d","M 134 317 L 145 317 L 145 372 L 134 372 Z M 134 317 "),h(n,"id","clip1"),h(o,"d","M 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 Z M 275.746094 235.347656 "),h(s,"id","clip2"),h(u,"d","M 119 285 L 160 285 L 160 320 L 119 320 Z M 119 285 "),h(l,"id","clip3"),h(p,"d","M 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 Z M 275.746094 235.347656 "),h(c,"id","clip4"),h(f,"d","M 39 289 L 85 289 L 85 335 L 39 335 Z M 39 289 "),h(d,"id","clip5"),h(v,"d","M 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 Z M 235.839844 331.453125 "),h(g,"id","clip6"),h(A,"d","M 65 270 L 104 270 L 104 309 L 65 309 Z M 65 270 "),h(w,"id","clip7"),h(m,"d","M 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 Z M 235.839844 331.453125 "),h(C,"id","clip8"),h(x,"d","M 3 230 L 58 230 L 58 241 L 3 241 Z M 3 230 "),h(y,"id","clip9"),h(q,"d","M 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 Z M 139.5 371.261719 "),h(k,"id","clip10"),h(S,"d","M 54 215 L 90 215 L 90 255 L 54 255 Z M 54 215 "),h(I,"id","clip11"),h(B,"d","M 139.5 371.261719 C 64.253906 371.261719 3.253906 310.410156 3.253906 235.347656 C 3.253906 160.28125 64.253906 99.429688 139.5 99.429688 C 214.746094 99.429688 275.746094 160.28125 275.746094 235.347656 C 275.746094 310.410156 214.746094 371.261719 139.5 371.261719 Z M 139.5 371.261719 "),h($,"id","clip12"),h(N,"d","M 39 135 L 85 135 L 85 181 L 39 181 Z M 39 135 "),h(D,"id","clip13"),h(L,"d","M 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 Z M 43.160156 331.453125 "),h(O,"id","clip14"),h(X,"d","M 65 161 L 104 161 L 104 200 L 65 200 Z M 65 161 "),h(V,"id","clip15"),h(ee,"d","M 43.160156 331.453125 C -10.046875 278.375 -10.046875 192.316406 43.160156 139.238281 C 96.367188 86.160156 182.632812 86.160156 235.839844 139.238281 C 289.046875 192.316406 289.046875 278.375 235.839844 331.453125 C 182.632812 384.53125 96.367188 384.53125 43.160156 331.453125 Z M 43.160156 331.453125 "),h(K,"id","clip16"),h(J,"d","M 194 289 L 240 289 L 240 335 L 194 335 Z M 194 289 "),h(z,"id","clip17"),h(Y,"d","M 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 Z M 43.160156 331.453125 "),h(H,"id","clip18"),h(Q,"d","M 175 270 L 214 270 L 214 309 L 175 309 Z M 175 270 "),h(se,"id","clip19"),h(te,"d","M 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 Z M 43.160156 331.453125 "),h(ie,"id","clip20"),h(ve,"d","M 221 230 L 276 230 L 276 241 L 221 241 Z M 221 230 "),h(oe,"id","clip21"),h(ye,"d","M 139.5 371.261719 C 214.746094 371.261719 275.746094 310.410156 275.746094 235.347656 C 275.746094 160.28125 214.746094 99.429688 139.5 99.429688 C 64.253906 99.429688 3.253906 160.28125 3.253906 235.347656 C 3.253906 310.410156 64.253906 371.261719 139.5 371.261719 Z M 139.5 371.261719 "),h(be,"id","clip22"),h(he,"d","M 189 215 L 225 215 L 225 255 L 189 255 Z M 189 215 "),h(re,"id","clip23"),h(Re,"d","M 139.5 371.261719 C 214.746094 371.261719 275.746094 310.410156 275.746094 235.347656 C 275.746094 160.28125 214.746094 99.429688 139.5 99.429688 C 64.253906 99.429688 3.253906 160.28125 3.253906 235.347656 C 3.253906 310.410156 64.253906 371.261719 139.5 371.261719 Z M 139.5 371.261719 "),h(Se,"id","clip24"),h(Ee,"d","M 194 135 L 240 135 L 240 181 L 194 181 Z M 194 135 "),h(we,"id","clip25"),h(Be,"d","M 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 Z M 235.839844 331.453125 "),h(qe,"id","clip26"),h(_e,"d","M 175 161 L 214 161 L 214 200 L 175 200 Z M 175 161 "),h(Je,"id","clip27"),h(Ge,"d","M 235.839844 331.453125 C 289.046875 278.375 289.046875 192.316406 235.839844 139.238281 C 182.632812 86.160156 96.367188 86.160156 43.160156 139.238281 C -10.046875 192.316406 -10.046875 278.375 43.160156 331.453125 C 96.367188 384.53125 182.632812 384.53125 235.839844 331.453125 Z M 235.839844 331.453125 "),h(Fe,"id","clip28"),a(je,"stroke","none"),a(je,"fill-rule","nonzero"),a(je,"fill","rgb(100%,100%,100%)"),a(je,"fill-opacity","1"),h(je,"d","M 185.21875 235.347656 C 185.21875 260.535156 164.75 280.957031 139.5 280.957031 C 114.25 280.957031 93.78125 260.535156 93.78125 235.347656 C 93.78125 210.15625 114.25 189.738281 139.5 189.738281 C 164.75 189.738281 185.21875 210.15625 185.21875 235.347656 Z M 185.21875 235.347656 "),a(Ne,"fill","none",1),a(Ne,"stroke-width","84"),a(Ne,"stroke-linecap","butt"),a(Ne,"stroke-linejoin","miter"),a(Ne,"stroke","rgb(100%,100%,100%)"),a(Ne,"stroke-opacity","1"),a(Ne,"stroke-miterlimit","4"),h(Ne,"d","M -0.000738017 -255.996731 C -141.388895 -256.001049 -256.005126 -141.384818 -256.000807 0.00333872 C -256.00253 141.385454 -141.385454 256.00253 -0.00333872 256.000807 C 141.384818 256.005126 256.001049 141.388895 255.996731 0.000738017 C 256.002819 -100.002285 155.001784 -149.999521 250.002579 -275.001813 "),h(Ne,"transform","matrix(0.323291,-0.32251,0.323291,0.32251,139.5,235.346341)"),a(Oe,"stroke","none"),a(Oe,"fill-rule","nonzero"),a(Oe,"fill","rgb(100%,100%,100%)"),a(Oe,"fill-opacity","1"),h(Oe,"d","M 128.984375 0.457031 C 128.984375 0.457031 112.523438 62.027344 92.40625 84.835938 C 72.292969 107.640625 145.445312 56.554688 170.132812 82.554688 C 194.820312 108.550781 128.984375 0.457031 128.984375 0.457031 Z M 128.984375 0.457031 "),a(Xe,"stroke","none"),a(Xe,"fill-rule","nonzero"),a(Xe,"fill","rgb(100%,100%,100%)"),a(Xe,"fill-opacity","1"),h(Xe,"d","M 134.472656 317.445312 L 134.472656 371.261719 L 144.527344 371.261719 L 144.527344 317.445312 "),h(Ye,"clip-path","url(#clip2)"),h(Ye,"clip-rule","nonzero"),h(Le,"clip-path","url(#clip1)"),h(Le,"clip-rule","nonzero"),a(Ze,"stroke","none"),a(Ze,"fill-rule","nonzero"),a(Ze,"fill","rgb(100%,100%,100%)"),a(Ze,"fill-opacity","1"),h(Ze,"d","M 119.839844 319.722656 L 139.5 285.515625 L 159.160156 319.722656 "),h(it,"clip-path","url(#clip4)"),h(it,"clip-rule","nonzero"),h(at,"clip-path","url(#clip3)"),h(at,"clip-rule","nonzero"),a(Qe,"stroke","none"),a(Qe,"fill-rule","nonzero"),a(Qe,"fill","rgb(100%,100%,100%)"),a(Qe,"fill-opacity","1"),h(Qe,"d","M 77.75 289.851562 L 39.601562 327.90625 L 46.714844 335 L 84.863281 296.945312 "),h(Ke,"clip-path","url(#clip6)"),h(Ke,"clip-rule","nonzero"),h(ze,"clip-path","url(#clip5)"),h(ze,"clip-rule","nonzero"),a(vt,"stroke","none"),a(vt,"fill-rule","nonzero"),a(vt,"fill","rgb(100%,100%,100%)"),a(vt,"fill-opacity","1"),h(vt,"d","M 65.789062 281.144531 L 103.9375 270.824219 L 93.59375 308.878906 "),h(bt,"clip-path","url(#clip8)"),h(bt,"clip-rule","nonzero"),h(rt,"clip-path","url(#clip7)"),h(rt,"clip-rule","nonzero"),a(dt,"stroke","none"),a(dt,"fill-rule","nonzero"),a(dt,"fill","rgb(100%,100%,100%)"),a(dt,"fill-opacity","1"),h(dt,"d","M 57.203125 230.328125 L 3.253906 230.328125 L 3.253906 240.363281 L 57.203125 240.363281 "),h(wt,"clip-path","url(#clip10)"),h(wt,"clip-rule","nonzero"),h(ct,"clip-path","url(#clip9)"),h(ct,"clip-rule","nonzero"),a(_t,"stroke","none"),a(_t,"fill-rule","nonzero"),a(_t,"fill","rgb(100%,100%,100%)"),a(_t,"fill-opacity","1"),h(_t,"d","M 54.917969 215.734375 L 89.207031 235.347656 L 54.917969 254.957031 "),h(Pe,"clip-path","url(#clip12)"),h(Pe,"clip-rule","nonzero"),h(pt,"clip-path","url(#clip11)"),h(pt,"clip-rule","nonzero"),a(ft,"stroke","none"),a(ft,"fill-rule","nonzero"),a(ft,"fill","rgb(100%,100%,100%)"),a(ft,"fill-opacity","1"),h(ft,"d","M 84.863281 173.746094 L 46.714844 135.691406 L 39.601562 142.785156 L 77.75 180.84375 "),h(Ft,"clip-path","url(#clip14)"),h(Ft,"clip-rule","nonzero"),h(et,"clip-path","url(#clip13)"),h(et,"clip-rule","nonzero"),a(mt,"stroke","none"),a(mt,"fill-rule","nonzero"),a(mt,"fill","rgb(100%,100%,100%)"),a(mt,"fill-opacity","1"),h(mt,"d","M 93.59375 161.8125 L 103.9375 199.871094 L 65.789062 189.550781 "),h(gt,"clip-path","url(#clip16)"),h(gt,"clip-rule","nonzero"),h($t,"clip-path","url(#clip15)"),h($t,"clip-rule","nonzero"),a(Ct,"stroke","none"),a(Ct,"fill-rule","nonzero"),a(Ct,"fill","rgb(100%,100%,100%)"),a(Ct,"fill-opacity","1"),h(Ct,"d","M 201.25 289.851562 L 239.398438 327.90625 L 232.285156 335 L 194.136719 296.945312 "),h(Nt,"clip-path","url(#clip18)"),h(Nt,"clip-rule","nonzero"),h(Bt,"clip-path","url(#clip17)"),h(Bt,"clip-rule","nonzero"),a(yt,"stroke","none"),a(yt,"fill-rule","nonzero"),a(yt,"fill","rgb(100%,100%,100%)"),a(yt,"fill-opacity","1"),h(yt,"d","M 213.210938 281.144531 L 175.0625 270.824219 L 185.40625 308.878906 "),h(jt,"clip-path","url(#clip20)"),h(jt,"clip-rule","nonzero"),h(Lt,"clip-path","url(#clip19)"),h(Lt,"clip-rule","nonzero"),a(tt,"stroke","none"),a(tt,"fill-rule","nonzero"),a(tt,"fill","rgb(100%,100%,100%)"),a(tt,"fill-opacity","1"),h(tt,"d","M 221.796875 230.328125 L 275.746094 230.328125 L 275.746094 240.363281 L 221.796875 240.363281 "),h(Tt,"clip-path","url(#clip22)"),h(Tt,"clip-rule","nonzero"),h(Mt,"clip-path","url(#clip21)"),h(Mt,"clip-rule","nonzero"),a(lt,"stroke","none"),a(lt,"fill-rule","nonzero"),a(lt,"fill","rgb(100%,100%,100%)"),a(lt,"fill-opacity","1"),h(lt,"d","M 224.082031 215.734375 L 189.792969 235.347656 L 224.082031 254.957031 "),h(kt,"clip-path","url(#clip24)"),h(kt,"clip-rule","nonzero"),h(xt,"clip-path","url(#clip23)"),h(xt,"clip-rule","nonzero"),a(At,"stroke","none"),a(At,"fill-rule","nonzero"),a(At,"fill","rgb(100%,100%,100%)"),a(At,"fill-opacity","1"),h(At,"d","M 194.136719 173.746094 L 232.285156 135.691406 L 239.398438 142.785156 L 201.25 180.84375 "),h(Wt,"clip-path","url(#clip26)"),h(Wt,"clip-rule","nonzero"),h(ut,"clip-path","url(#clip25)"),h(ut,"clip-rule","nonzero"),a(qt,"stroke","none"),a(qt,"fill-rule","nonzero"),a(qt,"fill","rgb(100%,100%,100%)"),a(qt,"fill-opacity","1"),h(qt,"d","M 185.40625 161.8125 L 175.0625 199.871094 L 213.210938 189.550781 "),h(Vt,"clip-path","url(#clip28)"),h(Vt,"clip-rule","nonzero"),h(Jt,"clip-path","url(#clip27)"),h(Jt,"clip-rule","nonzero"),h(Te,"id","surface1"),de(e,Ut)},m(fe,ht){st(fe,e,ht),T(e,t),T(t,n),T(n,r),T(t,s),T(s,o),T(t,l),T(l,u),T(t,c),T(c,p),T(t,d),T(d,f),T(t,g),T(g,v),T(t,w),T(w,A),T(t,C),T(C,m),T(t,y),T(y,x),T(t,k),T(k,q),T(t,I),T(I,S),T(t,$),T($,B),T(t,D),T(D,N),T(t,O),T(O,L),T(t,V),T(V,X),T(t,K),T(K,ee),T(t,z),T(z,J),T(t,H),T(H,Y),T(t,se),T(se,Q),T(t,ie),T(ie,te),T(t,oe),T(oe,ve),T(t,be),T(be,ye),T(t,re),T(re,he),T(t,Se),T(Se,Re),T(t,we),T(we,Ee),T(t,qe),T(qe,Be),T(t,Je),T(Je,_e),T(t,Fe),T(Fe,Ge),T(e,Te),T(Te,je),T(Te,Ne),T(Te,Oe),T(Te,Le),T(Le,Ye),T(Ye,Xe),T(Te,at),T(at,it),T(it,Ze),T(Te,ze),T(ze,Ke),T(Ke,Qe),T(Te,rt),T(rt,bt),T(bt,vt),T(Te,ct),T(ct,wt),T(wt,dt),T(Te,pt),T(pt,Pe),T(Pe,_t),T(Te,et),T(et,Ft),T(Ft,ft),T(Te,$t),T($t,gt),T(gt,mt),T(Te,Bt),T(Bt,Nt),T(Nt,Ct),T(Te,Lt),T(Lt,jt),T(jt,yt),T(Te,Mt),T(Mt,Tt),T(Tt,tt),T(Te,xt),T(xt,kt),T(kt,lt),T(Te,ut),T(ut,Wt),T(Wt,At),T(Te,Jt),T(Jt,Vt),T(Vt,qt),Zt||(Gt=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],Zt=!0)},p(fe,[ht]){de(e,Ut=Ht(St,[ht&1&&fe[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"279px"},{height:"374px"},{viewBox:"0 0 279 374"},{version:"1.1"}]))},i:ge,o:ge,d(fe){fe&&ot(e),Zt=!1,Yt(Gt)}}}function w5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class _5 extends It{constructor(e){super(),Dt(this,e,w5,v5,Rt,{color:1})}}const ji=class ji extends y5{constructor(){super();R(this,"commons_key","wikimedia_commons");R(this,"defaultKeyPrefixes",[this.commons_key,"image"])}static ExtractFileName(t){if(!t.startsWith("http"))return t;const n=new URL(t).pathname;return n.substring(n.lastIndexOf("/")+1)}static PrepareUrl(t,n=!1){if(t.toLowerCase().startsWith("https://commons.wikimedia.org/wiki/"))return t;const r=`https://commons.wikimedia.org/wiki/Special:FilePath/${encodeURIComponent(t)}`;return n?r:r+"?width=500&height=400"}static startsWithCommonsPrefix(t){return ji.commonsPrefixes.some(n=>t.startsWith(n))}static removeCommonsPrefix(t){if(t.startsWith("https://upload.wikimedia.org/"))return t=t.substring(t.lastIndexOf("/")+1),t=decodeURIComponent(t),t.startsWith("File:")||(t="File:"+t),t;for(const n of ji.commonsPrefixes)if(t.startsWith(n)){let r=t.substr(n.length);return n.startsWith("http")&&(r=decodeURIComponent(r)),r}return t}apiUrls(){return ji.apiUrls}SourceIcon(){return new Jr(_5).SetStyle("width:2em;height: 2em")}PrepUrl(t){return t=ji.removeCommonsPrefix(t),t.startsWith("File:")?this.UrlForImage(t):this.UrlForImage("File:"+t)}async ExtractUrls(t,n){const r=ji.startsWithCommonsPrefix(n);return t!==void 0&&t!==this.commons_key&&!r?[]:(n=ji.removeCommonsPrefix(n),n.startsWith("Category:")?(await lf.GetCategoryContents(n)).filter(o=>o.startsWith("File:")).map(o=>Promise.resolve(this.UrlForImage(o))):n.startsWith("File:")?[Promise.resolve(this.UrlForImage(n))]:n.startsWith("http")?[]:[Promise.resolve(this.UrlForImage("File:"+n))])}async DownloadAttribution(t){var p,d,f,g,v,w,A,C,m;const n=ji.ExtractFileName(t.url);if(n==="")return;const r="https://en.wikipedia.org/w/api.php?action=query&prop=imageinfo&iiprop=extmetadata&titles="+n+"&format=json&origin=*",s=await ke.downloadJsonCached(r,365*24*60*60),o=new b5,l=s.query.pages[-1];if(l===void 0)return;const u=(p=(l.imageinfo??[])[0])==null?void 0:p.extmetadata;if(u===void 0){console.warn("The file",n,"has no usable metedata or license attached... Please fix the license info file yourself!");return}let c=l.title;return c.startsWith("File:")&&(c=c.substr(5)),(c.endsWith(".jpg")||c.endsWith(".png"))&&(c=c.substring(0,c.length-4)),o.title=c,o.artist=(d=u.Artist)==null?void 0:d.value,o.license=(f=u.License)==null?void 0:f.value,o.copyrighted=(g=u.Copyrighted)==null?void 0:g.value,o.attributionRequired=(v=u.AttributionRequired)==null?void 0:v.value,o.usageTerms=(w=u.UsageTerms)==null?void 0:w.value,o.licenseShortName=(A=u.LicenseShortName)==null?void 0:A.value,o.credit=(C=u.Credit)==null?void 0:C.value,o.description=(m=u.ImageDescription)==null?void 0:m.value,o.informationLocation=new URL("https://en.wikipedia.org/wiki/"+l.title),o}UrlForImage(t){return t.startsWith("File:")||(t="File:"+t),{url:ji.PrepareUrl(t),url_hd:ji.PrepareUrl(t,!0),key:void 0,provider:this,id:t}}};R(ji,"singleton",new ji),R(ji,"apiUrls",["https://commons.wikimedia.org/wiki/","https://upload.wikimedia.org"]),R(ji,"commonsPrefixes",[...ji.apiUrls,"File:"]);let Hd=ji;function C5(i){let e,t,n,r,s,o,l,u=[i[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"373px"},{height:"210px"},{viewBox:"0 0 373 210"},{version:"1.1"}],c={};for(let p=0;p<u.length;p+=1)c=Z(c,u[p]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),s=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill","rgb(60.000002%,0%,0%)"),a(n,"fill-opacity","1"),h(n,"d","M 42.628906 193.984375 L 53.285156 193.984375 L 53.285156 16.015625 L 42.628906 16.015625 Z M 63.941406 193.984375 L 95.914062 193.984375 L 95.914062 16.015625 L 63.941406 16.015625 Z M 106.570312 16.015625 L 106.570312 193.984375 L 138.542969 193.984375 L 138.542969 16.015625 Z M 106.570312 16.015625 "),a(r,"stroke","none"),a(r,"fill-rule","nonzero"),a(r,"fill","rgb(20%,60.000002%,40.000001%)"),a(r,"fill-opacity","1"),h(r,"d","M 298.398438 193.984375 L 309.058594 193.984375 L 309.058594 16.015625 L 298.398438 16.015625 Z M 319.714844 16.015625 L 319.714844 193.984375 L 330.371094 193.984375 L 330.371094 16.015625 Z M 149.199219 193.984375 L 159.855469 193.984375 L 159.855469 16.015625 L 149.199219 16.015625 Z M 170.515625 16.015625 L 170.515625 193.984375 L 181.171875 193.984375 L 181.171875 16.015625 Z M 170.515625 16.015625 "),a(s,"stroke","none"),a(s,"fill-rule","nonzero"),a(s,"fill","rgb(0%,40.000001%,60.000002%)"),a(s,"fill-opacity","1"),h(s,"d","M 191.828125 193.984375 L 223.800781 193.984375 L 223.800781 16.015625 L 191.828125 16.015625 Z M 234.457031 193.984375 L 245.113281 193.984375 L 245.113281 16.015625 L 234.457031 16.015625 Z M 255.769531 16.015625 L 255.769531 193.984375 L 287.742188 193.984375 L 287.742188 16.015625 Z M 255.769531 16.015625 "),h(t,"id","surface1"),de(e,c)},m(p,d){st(p,e,d),T(e,t),T(t,n),T(t,r),T(t,s),o||(l=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],o=!0)},p(p,[d]){de(e,c=Ht(u,[d&1&&p[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"373px"},{height:"210px"},{viewBox:"0 0 373 210"},{version:"1.1"}]))},i:ge,o:ge,d(p){p&&ot(e),o=!1,Yt(l)}}}function T5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class x5 extends It{constructor(e){super(),Dt(this,e,T5,C5,Rt,{color:1})}}const k5=Object.freeze(Object.defineProperty({__proto__:null,default:x5},Symbol.toStringTag,{value:"Module"}));function A5(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 254.679688 2.875 L 254.679688 27.652344 L 329.832031 27.652344 L 240.109375 117.371094 C 214.984375 96.203125 182.582031 83.410156 147.230469 83.410156 C 67.632812 83.414062 2.875 148.171875 2.875 227.769531 C 2.875 307.367188 67.632812 372.125 147.230469 372.125 C 226.828125 372.125 291.585938 307.367188 291.585938 227.769531 C 291.585938 192.417969 278.792969 160.015625 257.625 134.890625 L 347.347656 45.167969 L 347.347656 120.320312 L 372.125 120.320312 L 372.125 2.875 Z M 147.230469 347.347656 C 81.296875 347.347656 27.648438 293.703125 27.648438 227.769531 C 27.648438 161.832031 81.292969 108.1875 147.230469 108.1875 C 213.171875 108.1875 266.8125 161.828125 266.8125 227.769531 C 266.8125 293.703125 213.171875 347.347656 147.230469 347.347656 Z M 147.230469 347.347656 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function q5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class S5 extends It{constructor(e){super(),Dt(this,e,q5,A5,Rt,{color:0})}}function E5(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 273.230469 209.789062 C 320.503906 162.519531 320.503906 85.601562 273.230469 38.328125 C 225.964844 -8.941406 149.039062 -8.941406 101.769531 38.328125 C 54.496094 85.601562 54.496094 162.515625 101.769531 209.789062 C 122.273438 230.300781 148.363281 241.898438 175.191406 244.609375 L 175.191406 294.210938 L 123.847656 294.210938 L 123.847656 318.832031 L 175.191406 318.832031 L 175.191406 372.125 L 199.808594 372.125 L 199.808594 318.835938 L 251.148438 318.835938 L 251.148438 294.214844 L 199.808594 294.214844 L 199.808594 244.609375 C 226.636719 241.898438 252.726562 230.300781 273.230469 209.789062 Z M 119.175781 55.742188 C 138.015625 36.90625 162.757812 27.484375 187.5 27.484375 C 212.242188 27.484375 236.984375 36.902344 255.824219 55.738281 C 293.496094 93.410156 293.496094 154.707031 255.824219 192.382812 C 218.148438 230.054688 156.847656 230.050781 119.179688 192.382812 C 81.503906 154.710938 81.503906 93.410156 119.175781 55.742188 Z M 119.175781 55.742188 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function I5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class D5 extends It{constructor(e){super(),Dt(this,e,I5,E5,Rt,{color:0})}}function R5(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 244 216.746094 L 364.355469 337.101562 L 364.355469 212.675781 L 339.773438 212.675781 L 339.773438 277.761719 L 257.871094 195.851562 C 267.695312 177.457031 273.289062 156.472656 273.289062 134.199219 C 273.289062 61.789062 214.378906 2.875 141.964844 2.875 C 69.550781 2.875 10.644531 61.789062 10.644531 134.199219 C 10.644531 206.605469 69.554688 265.519531 141.964844 265.519531 C 164.238281 265.519531 185.222656 259.925781 203.621094 250.097656 L 240.511719 286.992188 L 197.96875 329.523438 L 215.347656 346.902344 L 257.886719 304.371094 L 325.640625 372.125 L 343.019531 354.742188 L 224.511719 236.230469 C 231.664062 230.433594 238.199219 223.898438 244 216.746094 Z M 35.226562 134.199219 C 35.226562 75.34375 83.109375 27.460938 141.964844 27.460938 C 200.820312 27.460938 248.703125 75.34375 248.703125 134.199219 C 248.703125 193.050781 200.820312 240.933594 141.964844 240.933594 C 83.105469 240.933594 35.226562 193.054688 35.226562 134.199219 Z M 35.226562 134.199219 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function $5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class N5 extends It{constructor(e){super(),Dt(this,e,$5,R5,Rt,{color:0})}}function L5(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 278.738281 2.875 L 278.738281 27.492188 L 309.691406 27.492188 L 250.769531 86.417969 C 233.425781 73.042969 211.722656 65.0625 188.179688 65.0625 C 164.289062 65.0625 142.296875 73.285156 124.832031 87.015625 L 106.859375 69.046875 L 128.496094 47.414062 L 111.089844 30.007812 L 89.457031 51.640625 L 65.308594 27.492188 L 96.261719 27.492188 L 96.261719 2.875 L 23.289062 2.875 L 23.289062 75.855469 L 47.90625 75.855469 L 47.90625 44.902344 L 72.050781 69.046875 L 50.414062 90.675781 L 67.820312 108.078125 L 89.453125 86.445312 L 107.421875 104.414062 C 93.691406 121.882812 85.46875 143.875 85.46875 167.765625 C 85.46875 220.230469 125.023438 263.605469 175.871094 269.710938 L 175.871094 300.851562 L 145.277344 300.851562 L 145.277344 325.464844 L 175.871094 325.464844 L 175.871094 372.125 L 200.488281 372.125 L 200.488281 325.476562 L 231.078125 325.476562 L 231.078125 300.859375 L 200.488281 300.859375 L 200.488281 269.71875 C 251.339844 263.613281 290.890625 220.234375 290.890625 167.769531 C 290.890625 143.53125 282.429688 121.246094 268.335938 103.65625 L 327.09375 44.898438 L 327.09375 75.851562 L 351.710938 75.851562 L 351.710938 2.875 Z M 188.179688 245.867188 C 145.117188 245.867188 110.085938 210.832031 110.085938 167.773438 C 110.085938 124.710938 145.117188 89.679688 188.179688 89.679688 C 231.238281 89.679688 266.273438 124.710938 266.273438 167.773438 C 266.273438 210.832031 231.238281 245.867188 188.179688 245.867188 Z M 188.179688 245.867188 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function M5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class mm extends It{constructor(e){super(),Dt(this,e,M5,L5,Rt,{color:0})}}function O5(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 273.230469 165.210938 C 252.726562 144.699219 226.636719 133.105469 199.808594 130.390625 L 199.808594 79.359375 L 234.339844 98.398438 L 246.226562 76.832031 L 213 58.515625 L 246.226562 40.195312 L 234.339844 18.632812 L 199.808594 37.671875 L 199.808594 2.875 L 175.191406 2.875 L 175.191406 37.671875 L 140.660156 18.636719 L 128.773438 40.199219 L 162 58.519531 L 128.773438 76.835938 L 140.660156 98.402344 L 175.191406 79.359375 L 175.191406 130.390625 C 148.367188 133.105469 122.277344 144.699219 101.773438 165.207031 C 78.871094 188.105469 66.261719 218.550781 66.261719 250.9375 C 66.261719 283.324219 78.871094 313.769531 101.773438 336.667969 C 125.40625 360.308594 156.449219 372.125 187.5 372.125 C 218.550781 372.125 249.59375 360.308594 273.230469 336.667969 C 296.132812 313.769531 308.742188 283.324219 308.742188 250.9375 C 308.742188 218.550781 296.132812 188.105469 273.230469 165.210938 Z M 255.824219 319.257812 C 218.152344 356.925781 156.855469 356.929688 119.175781 319.257812 C 100.929688 301.011719 90.875 276.746094 90.875 250.9375 C 90.875 225.128906 100.929688 200.867188 119.175781 182.617188 C 138.015625 163.78125 162.757812 154.367188 187.5 154.367188 C 212.242188 154.367188 236.984375 163.78125 255.824219 182.621094 C 274.070312 200.871094 284.125 225.132812 284.125 250.941406 C 284.121094 276.746094 274.070312 301.011719 255.824219 319.257812 Z M 255.824219 319.257812 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function P5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class F5 extends It{constructor(e){super(),Dt(this,e,P5,O5,Rt,{color:0})}}const Ms=class Ms extends _h{constructor(e,t){let n=!1;const r=e.stabilized(250).bind(s=>s===void 0||s===""||s==="Q"?null:(n=!0,Tu.LoadWikidataEntry(s)));super(r.map(s=>{if(s===null||!n)return t==null?void 0:t.whileLoading;if(s===void 0)return new Fy(De.t.general.loading);if(s.error!==void 0)return new Zi(s.error).SetClass("alert");const o=s.success;return Ms.WikidataResponsePreview(o,t)}))}static WikidataResponsePreview(e,t){var o,l,u;let n=(o=new $s(new Qt([e.id,t!=null&&t.noImages?e.id:new Jr(k5).SetStyle("width: 2.5rem").SetClass("block")]).SetClass("flex"),Tu.IdToArticle(e.id),!0))==null?void 0:o.SetClass("must-link"),r=new Qt([new Qt([(l=js.fromMap(e.labels))==null?void 0:l.SetClass("font-bold"),n]).SetClass("flex justify-between flex-wrap-reverse"),js.fromMap(e.descriptions),Ms.QuickFacts(e,t),...(t==null?void 0:t.extraItems)??[]]).SetClass("flex flex-col link-underline"),s;return((u=e.claims.get("P18"))==null?void 0:u.size)>0&&(s=Array.from(e.claims.get("P18"))[0]),s&&!(t!=null&&t.noImages)&&(s=Hd.singleton.PrepUrl(s).url,r=new Qt([new ds(s).SetStyle((t==null?void 0:t.imageStyle)??"max-width: 5rem; width: unset; height: 4rem").SetClass("rounded-xl mr-2"),r.SetClass("w-full")]).SetClass("flex")),r.SetClass("p-2 w-full"),r}static QuickFacts(e,t){var r,s,o;const n=[];for(const l of Ms.extraProperties){let u=!0;for(const v of l.requires){if(!((r=e.claims)!=null&&r.has("P"+v.p))){u=!1;break}if(!((s=e.claims)!=null&&s.get("P"+v.p).has("Q"+v.q))){u=!1;break}}if(!u)continue;const c=l.property,p=(t!=null&&t.noImages?l.textMode:l.display)??l.display;if(((o=e.claims)==null?void 0:o.get(c))===void 0)continue;const d=Array.from(e.claims.get(c));if(p instanceof js){n.push(p.Subs({value:d.join(", ")}).SetClass("m-2"));continue}const g=ke.NoNull(d.map(v=>p.get(v))).map(v=>typeof v=="string"?new Zi(v):v());n.push(new Qt(g).SetClass("flex m-2"))}if(n.length!==0)return new Qt(n).SetClass("flex")}};R(Ms,"isHuman",[{p:31,q:5}]),R(Ms,"extraProperties",[{requires:Ms.isHuman,property:"P21",display:new Map([["Q6581097",()=>new Jr(S5).SetStyle("width: 1rem; height: auto")],["Q6581072",()=>new Jr(D5).SetStyle("width: 1rem; height: auto")],["Q1097630",()=>new Jr(N5).SetStyle("width: 1rem; height: auto")],["Q1052281",()=>new Jr(mm).SetStyle("width: 1rem; height: auto")],["Q2449503",()=>new Jr(mm).SetStyle("width: 1rem; height: auto")],["Q48270",()=>new Jr(F5).SetStyle("width: 1rem; height: auto")]]),textMode:new Map([["Q6581097","♂️"],["Q6581072","♀️"],["Q1097630","⚥️"],["Q1052281","🏳️‍⚧️"],["Q2449503","🏳️‍⚧️"],["Q48270","🏳️‍🌈 ⚧"]])},{property:"P569",requires:Ms.isHuman,display:De.t.general.wikipedia.previewbox.born},{property:"P570",requires:Ms.isHuman,display:De.t.general.wikipedia.previewbox.died}]);let Yd=Ms;function B5(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 50.9375 296.0625 L 125.1875 221.875 L 130.5 218.75 C 117.394531 200.429688 110.355469 178.464844 110.375 155.9375 C 110.410156 95.917969 159.085938 47.289062 219.105469 47.3125 C 279.121094 47.335938 327.761719 96.003906 327.75 156.019531 C 327.738281 216.039062 279.082031 264.6875 219.0625 264.6875 C 196.515625 264.710938 174.535156 257.625 156.25 244.4375 L 153.1875 249.75 L 78.96875 323.90625 C 73.03125 329.78125 62 328.34375 54.28125 320.625 C 46.5625 312.90625 45.125 301.875 51.03125 295.9375 Z M 219 225.125 C 257.148438 225.160156 288.101562 194.253906 288.125 156.105469 C 288.148438 117.953125 257.234375 87.011719 219.082031 87 C 180.933594 86.988281 150 117.914062 150 156.0625 C 149.949219 174.410156 157.203125 192.027344 170.160156 205.019531 C 183.117188 218.011719 200.714844 225.3125 219.0625 225.3125 Z M 219 225.125 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function j5(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class W5 extends It{constructor(e){super(),Dt(this,e,j5,B5,Rt,{color:0})}}const ol=class ol extends Py{constructor(t){super();R(this,"wikidataId");R(this,"searchText");R(this,"instanceOf");R(this,"notInstanceOf");this.searchText=t==null?void 0:t.searchText,this.wikidataId=(t==null?void 0:t.value)??new xr(void 0),this.instanceOf=t==null?void 0:t.instanceOf,this.notInstanceOf=t==null?void 0:t.notInstanceOf}GetValue(){return this.wikidataId}IsValid(t){return t.startsWith("Q")&&!isNaN(Number(t.substring(1)))}InnerConstructElement(){const t=new af({placeholder:De.t.general.wikipedia.searchWikidata,value:this.searchText,inputStyle:"width: calc(100% - 0.5rem); border: 1px solid black"}),n=this.wikidataId,r=new Su({success:void 0}),s=t.GetValue().bind(l=>{if(l.length<3&&!l.match(/[qQ][0-9]+/))return r;const u=a0.language.data,c=u+":"+l;let p=ol._searchCache.get(c);return p===void 0&&(p=Tu.searchAndFetch(l,{lang:u,maxCount:5,notInstanceOf:this.notInstanceOf,instanceOf:this.instanceOf}),ol._searchCache.set(c,p)),u0.FromPromiseWithErr(p)}),o=new _h(s.map(l=>{if(t.GetValue().data.length===0)return De.t.general.wikipedia.doSearch;if(t.GetValue().data.length<3)return De.t.general.wikipedia.searchToShort;if(l===void 0)return new Fy(De.t.general.loading);if(l.error!==void 0)return new Qt([De.t.general.wikipedia.failed.Clone().SetClass("alert"),l.error]);const u=l.success;return u.length===0?De.t.general.wikipedia.noResults.Subs({search:t.GetValue().data??""}):new Qt(u.map(c=>{const p=Yd.WikidataResponsePreview(c).SetClass("rounded-xl p-1 sm:p-2 md:p-3 m-px border-2 sm:border-4 transition-colors");return p.onClick(()=>{n.setData(c.id)}),n.addCallbackAndRunD(d=>{d===c.id?p.SetClass("subtle-background border-attention"):(p.RemoveClass("subtle-background"),p.RemoveClass("border-attention"))}),p})).SetClass("flex flex-col")},[t.GetValue()]));return new Qt([new tr(De.t.general.wikipedia.searchWikidata,3).SetClass("m-2"),new Qt([new Jr(W5).SetClass("w-6"),t.SetClass("m-2 w-full")]).SetClass("flex"),o]).SetClass("flex flex-col border-2 border-black rounded-xl m-2 p-2").ConstructElement()}};R(ol,"docs",new Qt([new tr("Helper arguments"),new El(["name","doc"],[["key","the value of this tag will initialize search (default: name). This can be a ';'-separated list in which case every key will be inspected. The non-null value will be used as search"],["options",new Qt(["A JSON-object of type `{ removePrefixes: string[], removePostfixes: string[] }`.",new El(["subarg","doc"],[["removePrefixes","remove these snippets of text from the start of the passed string to search. This is either a list OR a hash of languages to a list. The individual strings are interpreted as case ignoring regexes"],["removePostfixes","remove these snippets of text from the end of the passed string to search. This is either a list OR a hash of languages to a list. The individual strings are interpreted as case ignoring regexes."],["instanceOf","A list of Q-identifier which indicates that the search results _must_ be an entity of this type, e.g. [`Q5`](https://www.wikidata.org/wiki/Q5) for humans"],["notInstanceof","A list of Q-identifiers which indicates that the search results _must not_ be an entity of this type, e.g. [`Q79007`](https://www.wikidata.org/wiki/Q79007) to filter away all streets from the search results"]])])]]),new tr("Example usage"),`The following is the 'freeform'-part of a layer config which will trigger a search for the wikidata item corresponding with the name of the selected feature. It will also remove '-street', '-square', ... if found at the end of the name

\`\`\`json
"freeform": {
    "key": "name:etymology:wikidata",
    "type": "wikidata",
    "helperArgs": [
        "name",
        {
            "removePostfixes": {"en": [
                "street",
                "boulevard",
                "path",
                "square",
                "plaza",
            ],
             "nl": ["straat","plein","pad","weg",laan"],
             "fr":["route (de|de la|de l'| de le)"]
             },

            "#": "Remove streets and parks from the search results:"
             "notInstanceOf": ["Q79007","Q22698"]
        }

    ]
}
\`\`\`

Another example is to search for species and trees:

\`\`\`json
 "freeform": {
        "key": "species:wikidata",
        "type": "wikidata",
        "helperArgs": [
          "species",
          {
          "instanceOf": [10884, 16521]
        }]
      }
\`\`\`
`])),R(ol,"_searchCache",new Map);let Xd=ol;class J5 extends fi{constructor(){super("wikidata",new Qt(["A wikidata identifier, e.g. Q42.",Xd.docs]))}isValid(e){return e===void 0||e.length==1?!1:!e.split(";").some(t=>Tu.ExtractKey(t)===void 0)}getFeedback(e,t){const n=De.t.validation.wikidata;if(e==="")return n.empty;if(!e.match(/(Q[0-9]+)(;Q[0-9]+)*/))return n.startsWithQ}reformat(e){if(e===void 0)return;let t=e.split(";").map(n=>Tu.ExtractKey(n)).join("; ");return e.endsWith(";")&&(t=t+";"),t}}class V5 extends Cy{constructor(){super("pnat","A strict positive number");R(this,"isValid",t=>super.isValid(t)?Number(t)>0:!1)}getFeedback(t){const n=super.getFeedback(t);if(n!==void 0)return n;if(Number(t)===0)return De.t.validation.pnat.noZero}}class By extends fi{constructor(t,n){super(t??"float",n??"A decimal number","decimal");R(this,"inputmode","decimal")}isValid(t){return!isNaN(Number(t))&&!t.endsWith(".")&&!t.endsWith(",")}reformat(t){return""+Number(t)}getFeedback(t){if(isNaN(Number(t)))return De.t.validation.nat.notANumber}}class G5 extends fi{constructor(){super("pfloat","A positive decimal number or zero");R(this,"isValid",t=>!isNaN(Number(t))&&Number(t)>=0&&!t.endsWith(".")&&!t.endsWith(","))}getFeedback(t){const n=super.getFeedback(t);if(n!==void 0)return n;if(Number(t)<0)return De.t.validation.nat.mustBePositive}}var U5=/^[-!#$%&'*+\/0-9=?A-Z^_a-z{|}~](\.?[-!#$%&'*+\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\.?[a-zA-Z0-9])*\.[a-zA-Z](-?[a-zA-Z0-9])+$/,z5=function(i){if(!i||i.length>254)return!1;var e=U5.test(i);if(!e)return!1;var t=i.split("@");if(t[0].length>64)return!1;var n=t[1].split(".");return!n.some(function(r){return r.length>63})};class H5 extends fi{constructor(){super("email","An email adress","email");R(this,"isValid",t=>t===void 0?!1:(t=t.trim(),t.startsWith("mailto:")&&(t=t.substring(7)),z5(t)));R(this,"reformat",t=>{if(t!==void 0)return t=t.trim(),t.startsWith("mailto:")&&(t=t.substring(7)),t})}getFeedback(t){return t.indexOf("@")<0?De.t.validation.email.noAt:super.getFeedback(t)}}class uf extends fi{constructor(t,n,r){super(t??"url",n??"The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed","url");R(this,"_forceHttps");this._forceHttps=r??!1}reformat(t){try{let n;!t.startsWith("http://")&&!t.startsWith("https://")&&!t.startsWith("http:")?n=new URL("https://"+t):n=new URL(t),this._forceHttps&&(n.protocol="https:");const r=["fbclid","gclid","cmpid","agid","utm","utm_source","utm_medium","campaignid","campaign","AdGroupId","AdGroup","TargetId","msclkid","pk_source","pk_medium","pk_campaign","pk_content","pk_kwd"];for(const o of r)n.searchParams.delete(o.toLowerCase());let s=n.toString();return s.endsWith("/")&&!t.endsWith("/")&&(s=s.substr(0,s.length-1)),s}catch(n){console.error(n);return}}isValid(t){try{!t.startsWith("http://")&&!t.startsWith("https://")&&!t.startsWith("http:")&&(t="https://"+t);const n=new URL(t);return n.host.indexOf(".")>0&&n.host[n.host.length-1]!=="."}catch{return!1}}}const Y5={version:4,country_calling_codes:{1:["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","SX","TC","TT","VC","VG","VI"],7:["RU","KZ"],20:["EG"],27:["ZA"],30:["GR"],31:["NL"],32:["BE"],33:["FR"],34:["ES"],36:["HU"],39:["IT","VA"],40:["RO"],41:["CH"],43:["AT"],44:["GB","GG","IM","JE"],45:["DK"],46:["SE"],47:["NO","SJ"],48:["PL"],49:["DE"],51:["PE"],52:["MX"],53:["CU"],54:["AR"],55:["BR"],56:["CL"],57:["CO"],58:["VE"],60:["MY"],61:["AU","CC","CX"],62:["ID"],63:["PH"],64:["NZ"],65:["SG"],66:["TH"],81:["JP"],82:["KR"],84:["VN"],86:["CN"],90:["TR"],91:["IN"],92:["PK"],93:["AF"],94:["LK"],95:["MM"],98:["IR"],211:["SS"],212:["MA","EH"],213:["DZ"],216:["TN"],218:["LY"],220:["GM"],221:["SN"],222:["MR"],223:["ML"],224:["GN"],225:["CI"],226:["BF"],227:["NE"],228:["TG"],229:["BJ"],230:["MU"],231:["LR"],232:["SL"],233:["GH"],234:["NG"],235:["TD"],236:["CF"],237:["CM"],238:["CV"],239:["ST"],240:["GQ"],241:["GA"],242:["CG"],243:["CD"],244:["AO"],245:["GW"],246:["IO"],247:["AC"],248:["SC"],249:["SD"],250:["RW"],251:["ET"],252:["SO"],253:["DJ"],254:["KE"],255:["TZ"],256:["UG"],257:["BI"],258:["MZ"],260:["ZM"],261:["MG"],262:["RE","YT"],263:["ZW"],264:["NA"],265:["MW"],266:["LS"],267:["BW"],268:["SZ"],269:["KM"],290:["SH","TA"],291:["ER"],297:["AW"],298:["FO"],299:["GL"],350:["GI"],351:["PT"],352:["LU"],353:["IE"],354:["IS"],355:["AL"],356:["MT"],357:["CY"],358:["FI","AX"],359:["BG"],370:["LT"],371:["LV"],372:["EE"],373:["MD"],374:["AM"],375:["BY"],376:["AD"],377:["MC"],378:["SM"],380:["UA"],381:["RS"],382:["ME"],383:["XK"],385:["HR"],386:["SI"],387:["BA"],389:["MK"],420:["CZ"],421:["SK"],423:["LI"],500:["FK"],501:["BZ"],502:["GT"],503:["SV"],504:["HN"],505:["NI"],506:["CR"],507:["PA"],508:["PM"],509:["HT"],590:["GP","BL","MF"],591:["BO"],592:["GY"],593:["EC"],594:["GF"],595:["PY"],596:["MQ"],597:["SR"],598:["UY"],599:["CW","BQ"],670:["TL"],672:["NF"],673:["BN"],674:["NR"],675:["PG"],676:["TO"],677:["SB"],678:["VU"],679:["FJ"],680:["PW"],681:["WF"],682:["CK"],683:["NU"],685:["WS"],686:["KI"],687:["NC"],688:["TV"],689:["PF"],690:["TK"],691:["FM"],692:["MH"],850:["KP"],852:["HK"],853:["MO"],855:["KH"],856:["LA"],880:["BD"],886:["TW"],960:["MV"],961:["LB"],962:["JO"],963:["SY"],964:["IQ"],965:["KW"],966:["SA"],967:["YE"],968:["OM"],970:["PS"],971:["AE"],972:["IL"],973:["BH"],974:["QA"],975:["BT"],976:["MN"],977:["NP"],992:["TJ"],993:["TM"],994:["AZ"],995:["GE"],996:["KG"],998:["UZ"]},countries:{AC:["247","00","(?:[01589]\\d|[46])\\d{4}",[5,6]],AD:["376","00","(?:1|6\\d)\\d{7}|[135-9]\\d{5}",[6,8,9],[["(\\d{3})(\\d{3})","$1 $2",["[135-9]"]],["(\\d{4})(\\d{4})","$1 $2",["1"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]]],AE:["971","00","(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",[5,6,7,8,9,10,11,12],[["(\\d{3})(\\d{2,9})","$1 $2",["60|8"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[236]|[479][2-8]"],"0$1"],["(\\d{3})(\\d)(\\d{5})","$1 $2 $3",["[479]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"]],"0"],AF:["93","00","[2-7]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"]],"0"],AG:["1","011","(?:268|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([457]\\d{6})$","268$1",0,"268"],AI:["1","011","(?:264|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2457]\\d{6})$","264$1",0,"264"],AL:["355","00","(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",[6,7,8,9],[["(\\d{3})(\\d{3,4})","$1 $2",["80|9"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["4[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2358][2-5]|4"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["[23578]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["6"],"0$1"]],"0"],AM:["374","00","(?:[1-489]\\d|55|60|77)\\d{6}",[8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[89]0"],"0 $1"],["(\\d{3})(\\d{5})","$1 $2",["2|3[12]"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["1|47"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[3-9]"],"0$1"]],"0"],AO:["244","00","[29]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[29]"]]]],AR:["54","00","(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}",[10,11],[["(\\d{4})(\\d{2})(\\d{4})","$1 $2-$3",["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])","2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["1"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[68]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2-$3",["[23]"],"0$1",1],["(\\d)(\\d{4})(\\d{2})(\\d{4})","$2 15-$3-$4",["9(?:2[2-469]|3[3-578])","9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))","9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",0,"$1 $2 $3-$4"],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 15-$3-$4",["91"],"0$1",0,"$1 $2 $3-$4"],["(\\d{3})(\\d{3})(\\d{5})","$1-$2-$3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 15-$3-$4",["9"],"0$1",0,"$1 $2 $3-$4"]],"0",0,"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?","9$1"],AS:["1","011","(?:[58]\\d\\d|684|900)\\d{7}",[10],0,"1",0,"1|([267]\\d{6})$","684$1",0,"684"],AT:["43","00","1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",[4,5,6,7,8,9,10,11,12,13],[["(\\d)(\\d{3,12})","$1 $2",["1(?:11|[2-9])"],"0$1"],["(\\d{3})(\\d{2})","$1 $2",["517"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["5[079]"],"0$1"],["(\\d{3})(\\d{3,10})","$1 $2",["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"],"0$1"],["(\\d{4})(\\d{3,9})","$1 $2",["[2-467]|5[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["5"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,7})","$1 $2 $3",["5"],"0$1"]],"0"],AU:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",[5,6,7,8,9,10,12],[["(\\d{2})(\\d{3,4})","$1 $2",["16"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["14|4"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:30|[89])"]]],"0",0,"0|(183[12])",0,0,0,[["(?:(?:2(?:[0-26-9]\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\d|2[0-8]))\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}",[9]],["4(?:83[0-389]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,["163\\d{2,6}",[5,6,7,8,9]],["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],AW:["297","00","(?:[25-79]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[25-9]"]]]],AX:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",[5,6,7,8,9,10,11,12],0,"0",0,0,0,0,"18",0,"00"],AZ:["994","00","365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[28]|2|365|46","1[28]|2|365[45]|46","1[28]|2|365(?:4|5[02])|46"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[13-9]"],"0$1"]],"0"],BA:["387","00","6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["6[1-3]|[7-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2-$3",["[3-5]|6[56]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["6"],"0$1"]],"0"],BB:["1","011","(?:246|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2-9]\\d{6})$","246$1",0,"246"],BD:["880","00","[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{4,6})","$1-$2",["31[5-8]|[459]1"],"0$1"],["(\\d{3})(\\d{3,7})","$1-$2",["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"],"0$1"],["(\\d{4})(\\d{3,6})","$1-$2",["[13-9]|22"],"0$1"],["(\\d)(\\d{7,8})","$1-$2",["2"],"0$1"]],"0"],BE:["32","00","4\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:80|9)0"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[239]|4[23]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[15-8]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4"],"0$1"]],"0"],BF:["226","00","[025-7]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[025-7]"]]]],BG:["359","00","00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",[6,7,8,9,12],[["(\\d)(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["43[1-6]|70[1-9]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:70|8)0"],"0$1"],["(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3",["43[1-7]|7"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[48]|9[08]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"]],"0"],BH:["973","00","[136-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[13679]|8[047]"]]]],BI:["257","00","(?:[267]\\d|31)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2367]"]]]],BJ:["229","00","[24-689]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-689]"]]]],BL:["590","00","(?:590|(?:69|80)\\d|976)\\d{6}",[9],0,"0",0,0,0,0,0,[["590(?:2[7-9]|5[12]|87)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["976[01]\\d{5}"]]],BM:["1","011","(?:441|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2-9]\\d{6})$","441$1",0,"441"],BN:["673","00","[2-578]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-578]"]]]],BO:["591","00(?:1\\d)?","(?:[2-467]\\d\\d|8001)\\d{5}",[8,9],[["(\\d)(\\d{7})","$1 $2",["[23]|4[46]"]],["(\\d{8})","$1",["[67]"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["8"]]],"0",0,"0(1\\d)?"],BQ:["599","00","(?:[34]1|7\\d)\\d{5}",[7],0,0,0,0,0,0,"[347]"],BR:["55","00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-46-9]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}",[8,9,10,11],[["(\\d{4})(\\d{4})","$1-$2",["300|4(?:0[02]|37)","4(?:02|37)0|[34]00"]],["(\\d{3})(\\d{2,3})(\\d{4})","$1 $2 $3",["(?:[358]|90)0"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],"($1)"],["(\\d{2})(\\d{5})(\\d{4})","$1 $2-$3",["[16][1-9]|[2-57-9]"],"($1)"]],"0",0,"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?","$2"],BS:["1","011","(?:242|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([3-8]\\d{6})$","242$1",0,"242"],BT:["975","00","[17]\\d{7}|[2-8]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[2-68]|7[246]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[67]|7"]]]],BW:["267","00","(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}",[7,8,10],[["(\\d{2})(\\d{5})","$1 $2",["90"]],["(\\d{3})(\\d{4})","$1 $2",["[24-6]|3[15-79]"]],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37]"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["8"]]]],BY:["375","810","(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3})","$1 $2",["800"],"8 $1"],["(\\d{3})(\\d{2})(\\d{2,4})","$1 $2 $3",["800"],"8 $1"],["(\\d{4})(\\d{2})(\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["1(?:[56]|7[467])|2[1-3]"],"8 0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-4]"],"8 0$1"],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["[89]"],"8 $1"]],"8",0,"0|80?",0,0,0,0,"8~10"],BZ:["501","00","(?:0800\\d|[2-8])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1-$2",["[2-8]"]],["(\\d)(\\d{3})(\\d{4})(\\d{3})","$1-$2-$3-$4",["0"]]]],CA:["1","011","(?:[2-8]\\d|90)\\d{8}|3\\d{6}",[7,10],0,"1",0,0,0,0,0,[["(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",[10]],["",[10]],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",[10]],["900[2-9]\\d{6}",[10]],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:00|2[125-7]|33|44|66|77|88)|622)[2-9]\\d{6}",[10]],0,["310\\d{4}",[7]],0,["600[2-9]\\d{6}",[10]]]],CC:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"0|([59]\\d{7})$","8$1",0,0,[["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}",[9]],["4(?:83[0-389]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CD:["243","00","[189]\\d{8}|[1-68]\\d{6}",[7,9],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[1-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]"],"0$1"]],"0"],CF:["236","00","(?:[27]\\d{3}|8776)\\d{4}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[278]"]]]],CG:["242","00","222\\d{6}|(?:0\\d|80)\\d{7}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[02]"]]]],CH:["41","00","8\\d{11}|[2-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8[047]|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]|81"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["8"],"0$1"]],"0"],CI:["225","00","[02]\\d{9}",[10],[["(\\d{2})(\\d{2})(\\d)(\\d{5})","$1 $2 $3 $4",["2"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3 $4",["0"]]]],CK:["682","00","[2-578]\\d{4}",[5],[["(\\d{2})(\\d{3})","$1 $2",["[2-578]"]]]],CL:["56","(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0","12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",[9,10,11],[["(\\d{5})(\\d{4})","$1 $2",["219","2196"],"($1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["44"]],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2[1-36]"],"($1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["9[2-9]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"],"($1)"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["60|8"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{3})(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3 $4",["60"]]]],CM:["237","00","[26]\\d{8}|88\\d{6,7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["88"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[26]|88"]]]],CN:["86","00|1(?:[12]\\d|79)\\d\\d00","1[127]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-689]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}",[7,8,9,10,11,12],[["(\\d{2})(\\d{5,6})","$1 $2",["(?:10|2[0-57-9])[19]","(?:10|2[0-57-9])(?:10|9[56])","10(?:10|9[56])|2[0-57-9](?:100|9[56])"],"0$1"],["(\\d{3})(\\d{5,6})","$1 $2",["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]","(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]","85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])","85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["(?:4|80)0"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|2(?:[02-57-9]|1[1-9])","10|2(?:[02-57-9]|1[1-9])","10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"],"0$1",1],["(\\d{3})(\\d{7,8})","$1 $2",["9"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["80"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[3-578]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["1[3-9]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["[12]"],"0$1",1]],"0",0,"0|(1(?:[12]\\d|79)\\d\\d)",0,0,0,0,"00"],CO:["57","00(?:4(?:[14]4|56)|[579])","(?:60\\d\\d|9101)\\d{6}|(?:1\\d|3)\\d{9}",[10,11],[["(\\d{3})(\\d{7})","$1 $2",["6"],"($1)"],["(\\d{3})(\\d{7})","$1 $2",["3[0-357]|91"]],["(\\d)(\\d{3})(\\d{7})","$1-$2-$3",["1"],"0$1",0,"$1 $2 $3"]],"0",0,"0(4(?:[14]4|56)|[579])?"],CR:["506","00","(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",[8,10],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[3-9]"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[89]"]]],0,0,"(19(?:0[0-2468]|1[09]|20|66|77|99))"],CU:["53","119","[27]\\d{6,7}|[34]\\d{5,7}|(?:5|8\\d\\d)\\d{7}",[6,7,8,10],[["(\\d{2})(\\d{4,6})","$1 $2",["2[1-4]|[34]"],"(0$1)"],["(\\d)(\\d{6,7})","$1 $2",["7"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["5"],"0$1"],["(\\d{3})(\\d{7})","$1 $2",["8"],"0$1"]],"0"],CV:["238","0","(?:[2-59]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2-589]"]]]],CW:["599","00","(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[3467]"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["9[4-8]"]]],0,0,0,0,0,"[69]"],CX:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"0|([59]\\d{7})$","8$1",0,0,[["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",[9]],["4(?:83[0-389]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CY:["357","00","(?:[279]\\d|[58]0)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[257-9]"]]]],CZ:["420","00","(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3 $4",["96"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]]],DE:["49","00","[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",[4,5,6,7,8,9,10,11,12,13,14,15],[["(\\d{2})(\\d{3,13})","$1 $2",["3[02]|40|[68]9"],"0$1"],["(\\d{3})(\\d{3,12})","$1 $2",["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1","2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"],"0$1"],["(\\d{4})(\\d{2,11})","$1 $2",["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]","[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["138"],"0$1"],["(\\d{5})(\\d{2,10})","$1 $2",["3"],"0$1"],["(\\d{3})(\\d{5,11})","$1 $2",["181"],"0$1"],["(\\d{3})(\\d)(\\d{4,10})","$1 $2 $3",["1(?:3|80)|9"],"0$1"],["(\\d{3})(\\d{7,8})","$1 $2",["1[67]"],"0$1"],["(\\d{3})(\\d{7,12})","$1 $2",["8"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["185","1850","18500"],"0$1"],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["18[68]"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["15[0568]"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["15[1279]"],"0$1"],["(\\d{3})(\\d{8})","$1 $2",["18"],"0$1"],["(\\d{3})(\\d{2})(\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"],"0$1"],["(\\d{4})(\\d{2})(\\d{7})","$1 $2 $3",["15[279]"],"0$1"],["(\\d{3})(\\d{2})(\\d{8})","$1 $2 $3",["15"],"0$1"]],"0"],DJ:["253","00","(?:2\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[27]"]]]],DK:["45","00","[2-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-9]"]]]],DM:["1","011","(?:[58]\\d\\d|767|900)\\d{7}",[10],0,"1",0,"1|([2-7]\\d{6})$","767$1",0,"767"],DO:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,0,0,0,"8001|8[024]9"],DZ:["213","00","(?:[1-4]|[5-79]\\d|80)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["9"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-8]"],"0$1"]],"0"],EC:["593","00","1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",[8,9,10,11],[["(\\d)(\\d{3})(\\d{4})","$1 $2-$3",["[2-7]"],"(0$1)",0,"$1-$2-$3"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{3})(\\d{3,4})","$1 $2 $3",["1"]]],"0"],EE:["372","00","8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]],["(\\d{4})(\\d{3,4})","$1 $2",["[45]|8(?:00|[1-49])","[45]|8(?:00[1-9]|[1-49])"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],EG:["20","00","[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",[8,9,10],[["(\\d)(\\d{7,8})","$1 $2",["[23]"],"0$1"],["(\\d{2})(\\d{6,7})","$1 $2",["1[35]|[4-6]|8[2468]|9[235-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[189]"],"0$1"]],"0"],EH:["212","00","[5-8]\\d{8}",[9],0,"0",0,0,0,0,"528[89]"],ER:["291","00","[178]\\d{6}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[178]"],"0$1"]],"0"],ES:["34","00","[5-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]00"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-9]"]]]],ET:["251","00","(?:11|[2-579]\\d)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-579]"],"0$1"]],"0"],FI:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",[5,6,7,8,9,10,11,12],[["(\\d)(\\d{4,9})","$1 $2",["[2568][1-8]|3(?:0[1-9]|[1-9])|9"],"0$1"],["(\\d{3})(\\d{3,7})","$1 $2",["[12]00|[368]|70[07-9]"],"0$1"],["(\\d{2})(\\d{4,8})","$1 $2",["[1245]|7[135]"],"0$1"],["(\\d{2})(\\d{6,10})","$1 $2",["7"],"0$1"]],"0",0,0,0,0,"1[03-79]|[2-9]",0,"00"],FJ:["679","0(?:0|52)","45\\d{5}|(?:0800\\d|[235-9])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1 $2",["[235-9]|45"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,0,"00"],FK:["500","00","[2-7]\\d{4}",[5]],FM:["691","00","(?:[39]\\d\\d|820)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[389]"]]]],FO:["298","00","[2-9]\\d{5}",[6],[["(\\d{6})","$1",["[2-9]"]]],0,0,"(10(?:01|[12]0|88))"],FR:["33","00","[1-9]\\d{8}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0 $1"],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"]],"0"],GA:["241","00","(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",[7,8],[["(\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["11|[67]"],"0$1"]],0,0,"0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})","$1"],GB:["44","00","[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",[7,9,10],[["(\\d{3})(\\d{4})","$1 $2",["800","8001","80011","800111","8001111"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["845","8454","84546","845464"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["800"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["1(?:[2-69][02-9]|[78])"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[25]|7(?:0|6[02-9])","[25]|7(?:0|6(?:[03-9]|2[356]))"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[1389]"],"0$1"]],"0",0,0,0,0,0,[["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0235])|4(?:[0-5]\\d\\d|69[7-9]|70[0-579])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d\\d|1(?:[0-7]\\d\\d|8(?:[02]\\d|1[0-246-9])))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}",[9,10]],["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]],0," x"],GD:["1","011","(?:473|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2-9]\\d{6})$","473$1",0,"473"],GE:["995","00","(?:[3-57]\\d\\d|800)\\d{6}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["32"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[57]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[348]"],"0$1"]],"0"],GF:["594","00","(?:[56]94|80\\d|976)\\d{6}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[569]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],GG:["44","00","(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",[7,9,10],0,"0",0,"0|([25-9]\\d{5})$","1481$1",0,0,[["1481[25-9]\\d{5}",[10]],["7(?:(?:781|839)\\d|911[17])\\d{5}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]]],GH:["233","00","(?:[235]\\d{3}|800)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[235]"],"0$1"]],"0"],GI:["350","00","(?:[25]\\d\\d|606)\\d{5}",[8],[["(\\d{3})(\\d{5})","$1 $2",["2"]]]],GL:["299","00","(?:19|[2-689]\\d|70)\\d{4}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["19|[2-9]"]]]],GM:["220","00","[2-9]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],GN:["224","00","722\\d{6}|(?:3|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["3"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[67]"]]]],GP:["590","00","(?:590|(?:69|80)\\d|976)\\d{6}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[569]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0",0,0,0,0,0,[["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-389]|7[08]|8[0-689]|9\\d)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["976[01]\\d{5}"]]],GQ:["240","00","222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235]"]],["(\\d{3})(\\d{6})","$1 $2",["[89]"]]]],GR:["30","00","5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}",[10,11,12],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["21|7"]],["(\\d{4})(\\d{6})","$1 $2",["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2689]"]],["(\\d{3})(\\d{3,4})(\\d{5})","$1 $2 $3",["8"]]]],GT:["502","00","(?:1\\d{3}|[2-7])\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],GU:["1","011","(?:[58]\\d\\d|671|900)\\d{7}",[10],0,"1",0,"1|([3-9]\\d{6})$","671$1",0,"671"],GW:["245","00","[49]\\d{8}|4\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["40"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"]]]],GY:["592","001","9008\\d{3}|(?:[2-467]\\d\\d|862)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-46-9]"]]]],HK:["852","00(?:30|5[09]|[126-9]?)","8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}",[5,6,7,8,9,11],[["(\\d{3})(\\d{2,5})","$1 $2",["900","9003"]],["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{3})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]],0,0,0,0,0,0,0,"00"],HN:["504","00","8\\d{10}|[237-9]\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1-$2",["[237-9]"]]]],HR:["385","00","(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}",[6,7,8,9],[["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["6[01]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{4})(\\d{3})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-5]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"]],"0"],HT:["509","00","(?:[2-489]\\d|55)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[2-589]"]]]],HU:["36","00","[235-7]\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"06 $1"]],"06"],ID:["62","00[89]","(?:(?:00[1-9]|8\\d)\\d{4}|[1-36])\\d{6}|00\\d{10}|[1-9]\\d{8,10}|[2-9]\\d{7}",[7,8,9,10,11,12,13],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["15"]],["(\\d{2})(\\d{5,9})","$1 $2",["2[124]|[36]1"],"(0$1)"],["(\\d{3})(\\d{5,7})","$1 $2",["800"],"0$1"],["(\\d{3})(\\d{5,8})","$1 $2",["[2-79]"],"(0$1)"],["(\\d{3})(\\d{3,4})(\\d{3})","$1-$2-$3",["8[1-35-9]"],"0$1"],["(\\d{3})(\\d{6,8})","$1 $2",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["804"],"0$1"],["(\\d{3})(\\d)(\\d{3})(\\d{3})","$1 $2 $3 $4",["80"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1-$2-$3",["8"],"0$1"]],"0"],IE:["353","00","(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"],"(0$1)"],["(\\d{3})(\\d{5})","$1 $2",["[45]0"],"(0$1)"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["1"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2569]|4[1-69]|7[14]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["81"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[78]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["4"],"(0$1)"],["(\\d{2})(\\d)(\\d{3})(\\d{4})","$1 $2 $3 $4",["8"],"0$1"]],"0"],IL:["972","0(?:0|1[2-9])","1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",[7,8,9,10,11,12],[["(\\d{4})(\\d{3})","$1-$2",["125"]],["(\\d{4})(\\d{2})(\\d{2})","$1-$2-$3",["121"]],["(\\d)(\\d{3})(\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1-$2-$3",["12"]],["(\\d{4})(\\d{6})","$1-$2",["159"]],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3-$4",["1[7-9]"]],["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})","$1-$2 $3-$4",["15"]]],"0"],IM:["44","00","1624\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"0|([25-8]\\d{5})$","1624$1",0,"74576|(?:16|7[56])24"],IN:["91","00","(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",[8,9,10,11,12,13],[["(\\d{8})","$1",["5(?:0|2[23]|3[03]|[67]1|88)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],0,1],["(\\d{4})(\\d{4,5})","$1 $2",["180","1800"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["140"],0,1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79[1-7]|80[2-46]","11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])","11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"],"0$1",1],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807","1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]","1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"],"0$1",1],["(\\d{5})(\\d{5})","$1 $2",["[6-9]"],"0$1",1],["(\\d{4})(\\d{2,4})(\\d{4})","$1 $2 $3",["1(?:6|8[06])","1(?:6|8[06]0)"],0,1],["(\\d{4})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["18"],0,1]],"0"],IO:["246","00","3\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["3"]]]],IQ:["964","00","(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-6]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],IR:["98","00","[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",[4,5,6,7,10],[["(\\d{4,5})","$1",["96"],"0$1"],["(\\d{2})(\\d{4,5})","$1 $2",["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[1-8]"],"0$1"]],"0"],IS:["354","00|1(?:0(?:01|[12]0)|100)","(?:38\\d|[4-9])\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["[4-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["3"]]],0,0,0,0,0,0,0,"00"],IT:["39","00","0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",[6,7,8,9,10,11],[["(\\d{2})(\\d{4,6})","$1 $2",["0[26]"]],["(\\d{3})(\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]],["(\\d{4})(\\d{2,6})","$1 $2",["0(?:[13-579][2-46-8]|8[236-8])"]],["(\\d{4})(\\d{4})","$1 $2",["894"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[26]|5"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["1(?:44|[679])|[378]"]],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[13-57-9][0159]|14"]],["(\\d{2})(\\d{4})(\\d{5})","$1 $2 $3",["0[26]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["3"]]],0,0,0,0,0,0,[["0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}"],["3[1-9]\\d{8}|3[2-9]\\d{7}",[9,10]],["80(?:0\\d{3}|3)\\d{3}",[6,9]],["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}",[6,8,9,10]],["1(?:78\\d|99)\\d{6}",[9,10]],0,0,0,["55\\d{8}",[10]],["84(?:[08]\\d{3}|[17])\\d{3}",[6,9]]]],JE:["44","00","1534\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"0|([0-24-8]\\d{5})$","1534$1",0,0,[["1534[0-24-8]\\d{5}"],["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}"],["80(?:07(?:35|81)|8901)\\d{4}"],["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],["701511\\d{4}"],0,["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],["56\\d{8}"]]],JM:["1","011","(?:[58]\\d\\d|658|900)\\d{7}",[10],0,"1",0,0,0,0,"658|876"],JO:["962","00","(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],["(\\d{3})(\\d{5,6})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["70"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],JP:["81","010","00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",[8,9,10,11,12,13,14,15,16,17],[["(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],["(\\d{4})(\\d)(\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2-$3",["[36]|4(?:2[09]|7[01])","[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"],"0$1"],["(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["[14]|[289][2-9]|5[3-9]|7[2-4679]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["800"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[257-9]"],"0$1"]],"0"],KE:["254","000","(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",[7,8,9,10],[["(\\d{2})(\\d{5,7})","$1 $2",["[24-6]"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[17]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0"],KG:["996","00","8\\d{9}|(?:[235-8]\\d|99)\\d{7}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["3(?:1[346]|[24-79])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235-79]|88"],"0$1"],["(\\d{3})(\\d{3})(\\d)(\\d{2,3})","$1 $2 $3 $4",["8"],"0$1"]],"0"],KH:["855","00[14-9]","1\\d{9}|[1-9]\\d{7,8}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],KI:["686","00","(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",[5,8],0,"0"],KM:["269","00","[3478]\\d{6}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[3478]"]]]],KN:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2-7]\\d{6})$","869$1",0,"869"],KP:["850","00|99","85\\d{6}|(?:19\\d|[2-7])\\d{7}",[8,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"]],"0"],KR:["82","00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))","00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",[5,6,8,9,10,11,12,13,14],[["(\\d{2})(\\d{3,4})","$1-$2",["(?:3[1-3]|[46][1-4]|5[1-5])1"],"0$1"],["(\\d{4})(\\d{4})","$1-$2",["1"]],["(\\d)(\\d{3,4})(\\d{4})","$1-$2-$3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60|8"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1-$2-$3",["[1346]|5[1-5]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{2})(\\d{5})(\\d{4})","$1-$2-$3",["5"],"0$1"]],"0",0,"0(8(?:[1-46-8]|5\\d\\d))?"],KW:["965","00","18\\d{5}|(?:[2569]\\d|41)\\d{6}",[7,8],[["(\\d{4})(\\d{3,4})","$1 $2",["[169]|2(?:[235]|4[1-35-9])|52"]],["(\\d{3})(\\d{5})","$1 $2",["[245]"]]]],KY:["1","011","(?:345|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2-9]\\d{6})$","345$1",0,"345"],KZ:["7","810","(?:33622|8\\d{8})\\d{5}|[78]\\d{9}",[10,14],0,"8",0,0,0,0,"33|7",0,"8~10"],LA:["856","00","[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["30[013-9]"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[23]"],"0$1"]],"0"],LB:["961","00","[27-9]\\d{7}|[13-9]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27-9]"]]],"0"],LC:["1","011","(?:[58]\\d\\d|758|900)\\d{7}",[10],0,"1",0,"1|([2-8]\\d{6})$","758$1",0,"758"],LI:["423","00","[68]\\d{8}|(?:[2378]\\d|90)\\d{5}",[7,9],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2379]|8(?:0[09]|7)","[2379]|8(?:0(?:02|9)|7)"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["69"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]],"0",0,"0|(1001)"],LK:["94","00","[1-9]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[1-689]"],"0$1"]],"0"],LR:["231","00","(?:[25]\\d|33|77|88)\\d{7}|(?:2\\d|[4-6])\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[4-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23578]"],"0$1"]],"0"],LS:["266","00","(?:[256]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2568]"]]]],LT:["370","00","(?:[3469]\\d|52|[78]0)\\d{6}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["52[0-7]"],"(8-$1)",1],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[7-9]"],"8 $1",1],["(\\d{2})(\\d{6})","$1 $2",["37|4(?:[15]|6[1-8])"],"(8-$1)",1],["(\\d{3})(\\d{5})","$1 $2",["[3-6]"],"(8-$1)",1]],"8",0,"[08]"],LU:["352","00","35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",[4,5,6,7,8,9,10,11],[["(\\d{2})(\\d{3})","$1 $2",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["20[2-689]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"]],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["80[01]|90[015]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["20"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})","$1 $2 $3 $4",["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]],0,0,"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)"],LV:["371","00","(?:[268]\\d|90)\\d{6}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[269]|8[01]"]]]],LY:["218","00","[2-9]\\d{8}",[9],[["(\\d{2})(\\d{7})","$1-$2",["[2-9]"],"0$1"]],"0"],MA:["212","00","[5-8]\\d{8}",[9],[["(\\d{5})(\\d{4})","$1-$2",["5(?:29|38)","5(?:29[1289]|389)","529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5[45]"],"0$1"],["(\\d{4})(\\d{5})","$1-$2",["5(?:2[2-489]|3[5-9]|9)|892","5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892"],"0$1"],["(\\d{2})(\\d{7})","$1-$2",["8"],"0$1"],["(\\d{3})(\\d{6})","$1-$2",["[5-7]"],"0$1"]],"0",0,0,0,0,0,[["5293[01]\\d{4}|5(?:2(?:[0-25-7]\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[017]\\d|2[0-2]|6[0-8]|8[0-3]))\\d{6}"],["80\\d{7}"],["89\\d{7}"],0,0,0,0,["592(?:4[0-2]|93)\\d{4}"]]],MC:["377","00","(?:[3489]|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["4"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[389]"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["6"],"0$1"]],"0"],MD:["373","00","(?:[235-7]\\d|[89]0)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["22|3"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[25-7]"],"0$1"]],"0"],ME:["382","00","(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"0$1"]],"0"],MF:["590","00","(?:590|(?:69|80)\\d|976)\\d{6}",[9],0,"0",0,0,0,0,0,[["590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}"],["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["976[01]\\d{5}"]]],MG:["261","00","[23]\\d{8}",[9],[["(\\d{2})(\\d{2})(\\d{3})(\\d{2})","$1 $2 $3 $4",["[23]"],"0$1"]],"0",0,"0|([24-9]\\d{6})$","20$1"],MH:["692","011","329\\d{4}|(?:[256]\\d|45)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1-$2",["[2-6]"]]],"1"],MK:["389","00","[2-578]\\d{7}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2|34[47]|4(?:[37]7|5[47]|64)"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[347]"],"0$1"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["[58]"],"0$1"]],"0"],ML:["223","00","[24-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-9]"]]]],MM:["95","00","1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",[6,7,8,9,10],[["(\\d)(\\d{2})(\\d{3})","$1 $2 $3",["16|2"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[4-7]|8[1-35]"],"0$1"],["(\\d)(\\d{3})(\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["92"],"0$1"],["(\\d)(\\d{5})(\\d{4})","$1 $2 $3",["9"],"0$1"]],"0"],MN:["976","001","[12]\\d{7,9}|[5-9]\\d{7}",[8,9,10],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[12]1"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[5-9]"]],["(\\d{3})(\\d{5,6})","$1 $2",["[12]2[1-3]"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["[12](?:27|3[2-8]|4[2-68]|5[1-4689])","[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["[12]"],"0$1"]],"0"],MO:["853","00","0800\\d{3}|(?:28|[68]\\d)\\d{6}",[7,8],[["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{4})(\\d{4})","$1 $2",["[268]"]]]],MP:["1","011","[58]\\d{9}|(?:67|90)0\\d{7}",[10],0,"1",0,"1|([2-9]\\d{6})$","670$1",0,"670"],MQ:["596","00","(?:69|80)\\d{7}|(?:59|97)6\\d{6}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[569]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],MR:["222","00","(?:[2-4]\\d\\d|800)\\d{5}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-48]"]]]],MS:["1","011","(?:[58]\\d\\d|664|900)\\d{7}",[10],0,"1",0,"1|([34]\\d{6})$","664$1",0,"664"],MT:["356","00","3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2357-9]"]]]],MU:["230","0(?:0|[24-7]0|3[03])","(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[2-46]|8[013]"]],["(\\d{4})(\\d{4})","$1 $2",["[57]"]],["(\\d{5})(\\d{5})","$1 $2",["8"]]],0,0,0,0,0,0,0,"020"],MV:["960","0(?:0|19)","(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",[7,10],[["(\\d{3})(\\d{4})","$1-$2",["[3467]|9[1-9]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"]]],0,0,0,0,0,0,0,"00"],MW:["265","00","(?:[1289]\\d|31|77)\\d{7}|1\\d{6}",[7,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["1[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[137-9]"],"0$1"]],"0"],MX:["52","0[09]","1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\d{7}|(?:1(?:[01]\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\d)\\d{8}",[10,11],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["33|5[56]|81"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2-9]"],0,1],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 $3 $4",["1(?:33|5[56]|81)"],0,1],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 $3 $4",["1"],0,1]],"01",0,"0(?:[12]|4[45])|1",0,0,0,0,"00"],MY:["60","00","1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1-$2 $3",["1(?:[02469]|[378][1-9]|53)|8","1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2 $3",["3"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3-$4",["1(?:[367]|80)"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2 $3",["15"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2 $3",["1"],"0$1"]],"0"],MZ:["258","00","(?:2|8\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2|8[2-79]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],NA:["264","00","[68]\\d{7,8}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["87"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],NC:["687","00","(?:050|[2-57-9]\\d\\d)\\d{3}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1.$2.$3",["[02-57-9]"]]]],NE:["227","00","[027-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["08"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[089]|2[013]|7[04]"]]]],NF:["672","00","[13]\\d{5}",[6],[["(\\d{2})(\\d{4})","$1 $2",["1[0-3]"]],["(\\d)(\\d{5})","$1 $2",["[13]"]]],0,0,"([0-258]\\d{4})$","3$1"],NG:["234","009","(?:[124-7]|9\\d{3})\\d{6}|[1-9]\\d{7}|[78]\\d{9,13}",[7,8,10,11,12,13,14],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["78"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]|9(?:0[3-9]|[1-9])"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[3-7]|8[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[7-9]"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["[78]"],"0$1"],["(\\d{3})(\\d{5})(\\d{5,6})","$1 $2 $3",["[78]"],"0$1"]],"0"],NI:["505","00","(?:1800|[25-8]\\d{3})\\d{4}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[125-8]"]]]],NL:["31","00","(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",[5,6,7,8,9,10,11],[["(\\d{3})(\\d{4,7})","$1 $2",["[89]0"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["66"],"0$1"],["(\\d)(\\d{8})","$1 $2",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-578]|91"],"0$1"],["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3",["9"],"0$1"]],"0"],NO:["47","00","(?:0|[2-9]\\d{3})\\d{4}",[5,8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[489]|59"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[235-7]"]]],0,0,0,0,0,"[02-689]|7[0-8]"],NP:["977","00","(?:1\\d|9)\\d{9}|[1-9]\\d{7}",[8,10,11],[["(\\d)(\\d{7})","$1-$2",["1[2-6]"],"0$1"],["(\\d{2})(\\d{6})","$1-$2",["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"],"0$1"],["(\\d{3})(\\d{7})","$1-$2",["9"]]],"0"],NR:["674","00","(?:444|(?:55|8\\d)\\d|666)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[4-68]"]]]],NU:["683","00","(?:[47]|888\\d)\\d{3}",[4,7],[["(\\d{3})(\\d{4})","$1 $2",["8"]]]],NZ:["64","0(?:0|161)","[29]\\d{7,9}|50\\d{5}(?:\\d{2,3})?|6[0-35-9]\\d{6}|7\\d{7,8}|8\\d{4,9}|(?:11\\d|[34])\\d{7}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,8})","$1 $2",["8[1-579]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["50[036-8]|[89]0","50(?:[0367]|88)|[89]0"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["24|[346]|7[2-57-9]|9[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:10|74)|[59]|80"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["1|2[028]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,5})","$1 $2 $3",["2(?:[169]|7[0-35-9])|7|86"],"0$1"]],"0",0,0,0,0,0,0,"00"],OM:["968","00","(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}",[7,8,9],[["(\\d{3})(\\d{4,6})","$1 $2",["[58]"]],["(\\d{2})(\\d{6})","$1 $2",["2"]],["(\\d{4})(\\d{4})","$1 $2",["[179]"]]]],PA:["507","00","(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}",[7,8,10,11],[["(\\d{3})(\\d{4})","$1-$2",["[1-57-9]"]],["(\\d{4})(\\d{4})","$1-$2",["[68]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]]],PE:["51","00|19(?:1[124]|77|90)00","(?:[14-8]|9\\d)\\d{7}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["80"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["1"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[4-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"]]],"0",0,0,0,0,0,0,"00"," Anexo "],PF:["689","00","4\\d{5}(?:\\d{2})?|8\\d{7,8}",[6,8,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["44"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4|8[7-9]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],PG:["675","00|140[1-3]","(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["18|[2-69]|85"]],["(\\d{4})(\\d{4})","$1 $2",["[78]"]]],0,0,0,0,0,0,0,"00"],PH:["63","00","(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",[6,8,9,10,11,12,13],[["(\\d)(\\d{5})","$1 $2",["2"],"(0$1)"],["(\\d{4})(\\d{4,6})","$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],["(\\d{5})(\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|8[2-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})","$1 $2 $3 $4",["1"]]],"0"],PK:["92","00","122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,7})","$1 $2 $3",["[89]0"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["1"]],["(\\d{3})(\\d{6,7})","$1 $2",["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])","9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"],"(0$1)"],["(\\d{2})(\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],"(0$1)"],["(\\d{5})(\\d{5})","$1 $2",["58"],"(0$1)"],["(\\d{3})(\\d{7})","$1 $2",["3"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[24-9]"],"(0$1)"]],"0"],PL:["48","00","(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}",[6,7,8,9,10],[["(\\d{5})","$1",["19"]],["(\\d{3})(\\d{3})","$1 $2",["11|20|64"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1","(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["64"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[2-8]|[2-7]|8[1-79]|9[145]"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["8"]]]],PM:["508","00","(?:[45]|80\\d\\d)\\d{5}",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[45]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],PR:["1","011","(?:[589]\\d\\d|787)\\d{7}",[10],0,"1",0,0,0,0,"787|939"],PS:["970","00","[2489]2\\d{6}|(?:1\\d|5)\\d{8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2489]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["5"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],PT:["351","00","1693\\d{5}|(?:[26-9]\\d|30)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["2[12]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["16|[236-9]"]]]],PW:["680","01[12]","(?:[24-8]\\d\\d|345|900)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],PY:["595","00","59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\d{3})(\\d{4,5})","$1 $2",["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["87"]],["(\\d{3})(\\d{6})","$1 $2",["9(?:[5-79]|8[1-6])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["9"]]],"0"],QA:["974","00","800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}",[7,8,9,11],[["(\\d{3})(\\d{4})","$1 $2",["2[16]|8"]],["(\\d{4})(\\d{4})","$1 $2",["[3-7]"]]]],RE:["262","00","976\\d{6}|(?:26|[68]\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2689]"],"0$1"]],"0",0,0,0,0,"26[23]|69|[89]"],RO:["40","00","(?:[2378]\\d|90)\\d{7}|[23]\\d{5}",[6,9],[["(\\d{3})(\\d{3})","$1 $2",["2[3-6]","2[3-6]\\d9"],"0$1"],["(\\d{2})(\\d{4})","$1 $2",["219|31"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23]1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[237-9]"],"0$1"]],"0",0,0,0,0,0,0,0," int "],RS:["381","00","38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",[6,7,8,9,10,11,12],[["(\\d{3})(\\d{3,9})","$1 $2",["(?:2[389]|39)0|[7-9]"],"0$1"],["(\\d{2})(\\d{5,10})","$1 $2",["[1-36]"],"0$1"]],"0"],RU:["7","810","8\\d{13}|[347-9]\\d{9}",[10,14],[["(\\d{4})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-8]|2[1-9])","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"],"8 ($1)",1],["(\\d{5})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-68]|2[1-9])","7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))","7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[349]|8(?:[02-7]|1[1-8])"],"8 ($1)",1],["(\\d{4})(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3 $4",["8"],"8 ($1)"]],"8",0,0,0,0,"3[04-689]|[489]",0,"8~10"],RW:["250","00","(?:06|[27]\\d\\d|[89]00)\\d{6}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[7-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"]]],"0"],SA:["966","00","92\\d{7}|(?:[15]|8\\d)\\d{8}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["9"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["81"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]],"0"],SB:["677","0[01]","(?:[1-6]|[7-9]\\d\\d)\\d{4}",[5,7],[["(\\d{2})(\\d{5})","$1 $2",["7|8[4-9]|9(?:[1-8]|9[0-8])"]]]],SC:["248","010|0[0-2]","800\\d{4}|(?:[249]\\d|64)\\d{5}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[246]|9[57]"]]],0,0,0,0,0,0,0,"00"],SD:["249","00","[19]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[19]"],"0$1"]],"0"],SE:["46","00","(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{2,3})(\\d{2})","$1-$2 $3",["20"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{4})","$1-$2",["9(?:00|39|44|9)"],"0$1",0,"$1 $2"],["(\\d{2})(\\d{3})(\\d{2})","$1-$2 $3",["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3"],["(\\d)(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2,3})(\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{2,3})(\\d{3})","$1-$2 $3",["9(?:00|39|44)"],"0$1",0,"$1 $2 $3"],["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3 $4"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["10|7"],"0$1",0,"$1 $2 $3 $4"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1-$2 $3 $4",["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{3})","$1-$2 $3 $4",["9"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4 $5",["[26]"],"0$1",0,"$1 $2 $3 $4 $5"]],"0"],SG:["65","0[0-3]\\d","(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",[8,10,11],[["(\\d{4})(\\d{4})","$1 $2",["[369]|8(?:0[1-6]|[1-9])"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]],["(\\d{4})(\\d{4})(\\d{3})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],SH:["290","00","(?:[256]\\d|8)\\d{3}",[4,5],0,0,0,0,0,0,"[256]"],SI:["386","00|10(?:22|66|88|99)","[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",[5,6,7,8],[["(\\d{2})(\\d{3,6})","$1 $2",["8[09]|9"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["59|8"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-57]"],"(0$1)"]],"0",0,0,0,0,0,0,"00"],SJ:["47","00","0\\d{4}|(?:[489]\\d|[57]9)\\d{6}",[5,8],0,0,0,0,0,0,"79"],SK:["421","00","[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",[6,7,9],[["(\\d)(\\d{2})(\\d{3,4})","$1 $2 $3",["21"],"0$1"],["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["[3-5][1-8]1","[3-5][1-8]1[67]"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1/$2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[689]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1/$2 $3 $4",["[3-5]"],"0$1"]],"0"],SL:["232","00","(?:[237-9]\\d|66)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[236-9]"],"(0$1)"]],"0"],SM:["378","00","(?:0549|[5-7]\\d)\\d{6}",[8,10],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]"]],["(\\d{4})(\\d{6})","$1 $2",["0"]]],0,0,"([89]\\d{5})$","0549$1"],SN:["221","00","(?:[378]\\d|93)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[379]"]]]],SO:["252","00","[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",[6,7,8,9],[["(\\d{2})(\\d{4})","$1 $2",["8[125]"]],["(\\d{6})","$1",["[134]"]],["(\\d)(\\d{6})","$1 $2",["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],["(\\d)(\\d{7})","$1 $2",["(?:2|90)4|[67]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[3478]|64|90"]],["(\\d{2})(\\d{5,7})","$1 $2",["1|28|6(?:0[5-7]|[1-35-9])|9[2-9]"]]],"0"],SR:["597","00","(?:[2-5]|68|[78]\\d)\\d{5}",[6,7],[["(\\d{2})(\\d{2})(\\d{2})","$1-$2-$3",["56"]],["(\\d{3})(\\d{3})","$1-$2",["[2-5]"]],["(\\d{3})(\\d{4})","$1-$2",["[6-8]"]]]],SS:["211","00","[19]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[19]"],"0$1"]],"0"],ST:["239","00","(?:22|9\\d)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[29]"]]]],SV:["503","00","[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?",[7,8,11],[["(\\d{3})(\\d{4})","$1 $2",["[89]"]],["(\\d{4})(\\d{4})","$1 $2",["[267]"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[89]"]]]],SX:["1","011","7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|(5\\d{6})$","721$1",0,"721"],SY:["963","00","[1-39]\\d{8}|[1-5]\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-5]"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1",1]],"0"],SZ:["268","00","0800\\d{4}|(?:[237]\\d|900)\\d{6}",[8,9],[["(\\d{4})(\\d{4})","$1 $2",["[0237]"]],["(\\d{5})(\\d{4})","$1 $2",["9"]]]],TA:["290","00","8\\d{3}",[4],0,0,0,0,0,0,"8"],TC:["1","011","(?:[58]\\d\\d|649|900)\\d{7}",[10],0,"1",0,"1|([2-479]\\d{6})$","649$1",0,"649"],TD:["235","00|16","(?:22|[69]\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2679]"]]],0,0,0,0,0,0,0,"00"],TG:["228","00","[279]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[279]"]]]],TH:["66","00[1-9]","(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}",[8,9,10,13],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[13-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],TJ:["992","810","(?:00|[1-57-9]\\d)\\d{7}",[9],[["(\\d{6})(\\d)(\\d{2})","$1 $2 $3",["331","3317"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["[34]7|91[78]"]],["(\\d{4})(\\d)(\\d{4})","$1 $2 $3",["3[1-5]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[0-57-9]"]]],0,0,0,0,0,0,0,"8~10"],TK:["690","00","[2-47]\\d{3,6}",[4,5,6,7]],TL:["670","00","7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[2-489]|70"]],["(\\d{4})(\\d{4})","$1 $2",["7"]]]],TM:["993","810","[1-6]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["12"],"(8 $1)"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-5]"],"(8 $1)"],["(\\d{2})(\\d{6})","$1 $2",["6"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],TN:["216","00","[2-57-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-57-9]"]]]],TO:["676","00","(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}",[5,7],[["(\\d{2})(\\d{3})","$1-$2",["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{3})(\\d{4})","$1 $2",["[5-9]"]]]],TR:["90","00","4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}",[7,10,12,13],[["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["512|8[01589]|90"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5(?:[0-59]|61)","5(?:[0-59]|616)","5(?:[0-59]|6161)"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24][1-8]|3[1-9]"],"(0$1)",1],["(\\d{3})(\\d{3})(\\d{6,7})","$1 $2 $3",["80"],"0$1",1]],"0"],TT:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2-46-8]\\d{6})$","868$1",0,"868"],TV:["688","00","(?:2|7\\d\\d|90)\\d{4}",[5,6,7],[["(\\d{2})(\\d{3})","$1 $2",["2"]],["(\\d{2})(\\d{4})","$1 $2",["90"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],TW:["886","0(?:0[25-79]|19)","[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",[7,8,9,10,11],[["(\\d{2})(\\d)(\\d{4})","$1 $2 $3",["202"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[258]0"],"0$1"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]","[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,5})","$1 $2 $3",["7"],"0$1"]],"0",0,0,0,0,0,0,0,"#"],TZ:["255","00[056]","(?:[25-8]\\d|41|90)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[24]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["5"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[67]"],"0$1"]],"0"],UA:["380","00","[89]\\d{9}|[3-9]\\d{8}",[9,10],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]","6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])","3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|89|9[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0",0,0,0,0,0,0,"0~0"],UG:["256","00[057]","800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",[9],[["(\\d{4})(\\d{5})","$1 $2",["202","2024"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[27-9]|4(?:6[45]|[7-9])"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[34]"],"0$1"]],"0"],US:["1","011","[2-9]\\d{9}|3\\d{6}",[10],[["(\\d{3})(\\d{4})","$1-$2",["310"],0,1],["(\\d{3})(\\d{3})(\\d{4})","($1) $2-$3",["[2-9]"],0,1,"$1-$2-$3"]],"1",0,0,0,0,0,[["505(?:[2-57-9]\\d\\d|6(?:[0-35-9]\\d|4[46]))\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],["900[2-9]\\d{6}"],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]]],UY:["598","0(?:0|1[3-9]\\d)","(?:0004|4)\\d{9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}",[7,8,10,13],[["(\\d{3})(\\d{4})","$1 $2",["405|8|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[124]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["4"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["0"]]],"0",0,0,0,0,0,0,"00"," int. "],UZ:["998","810","(?:33|[5-79]\\d|88)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[35-9]"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],VA:["39","00","0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",[6,7,8,9,10,11],0,0,0,0,0,0,"06698"],VC:["1","011","(?:[58]\\d\\d|784|900)\\d{7}",[10],0,"1",0,"1|([2-7]\\d{6})$","784$1",0,"784"],VE:["58","00","[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",[10],[["(\\d{3})(\\d{7})","$1-$2",["[24-689]"],"0$1"]],"0"],VG:["1","011","(?:284|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"1|([2-578]\\d{6})$","284$1",0,"284"],VI:["1","011","[58]\\d{9}|(?:34|90)0\\d{7}",[10],0,"1",0,"1|([2-9]\\d{6})$","340$1",0,"340"],VN:["84","00","[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["80"],"0$1",1],["(\\d{4})(\\d{4,6})","$1 $2",["1"],0,1],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[69]"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[3578]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["2[48]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["2"],"0$1",1]],"0"],VU:["678","00","[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}",[5,7],[["(\\d{3})(\\d{4})","$1 $2",["[57-9]"]]]],WF:["681","00","(?:40|72)\\d{4}|8\\d{5}(?:\\d{3})?",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[478]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],WS:["685","0","(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",[5,6,7,10],[["(\\d{5})","$1",["[2-5]|6[1-9]"]],["(\\d{3})(\\d{3,7})","$1 $2",["[68]"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],XK:["383","00","[23]\\d{7,8}|(?:4\\d\\d|[89]00)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[23]"],"0$1"]],"0"],YE:["967","00","(?:1|7\\d)\\d{7}|[1-7]\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-6]|7(?:[24-6]|8[0-7])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"],"0$1"]],"0"],YT:["262","00","80\\d{7}|(?:26|63)9\\d{6}",[9],0,"0",0,0,0,0,"269|63"],ZA:["27","00","[1-79]\\d{8}|8\\d{4,9}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,4})","$1 $2",["8[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["8[1-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["860"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],ZM:["260","00","800\\d{6}|(?:21|63|[79]\\d)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[28]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[79]"],"0$1"]],"0"],ZW:["263","00","2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",[5,6,7,8,9,10],[["(\\d{3})(\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],"0$1"],["(\\d)(\\d{3})(\\d{2,4})","$1 $2 $3",["[49]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["80"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2","2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)","2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["29[013-9]|39|54"],"0$1"],["(\\d{4})(\\d{3,5})","$1 $2",["(?:25|54)8","258|5483"],"0$1"]],"0"]},nonGeographic:{800:["800",0,"(?:00|[1-9]\\d)\\d{6}",[8],[["(\\d{4})(\\d{4})","$1 $2",["\\d"]]],0,0,0,0,0,0,[0,0,["(?:00|[1-9]\\d)\\d{6}"]]],808:["808",0,"[1-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[1-9]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,["[1-9]\\d{7}"]]],870:["870",0,"7\\d{11}|[35-7]\\d{8}",[9,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[35-7]"]]],0,0,0,0,0,0,[0,["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"]]],878:["878",0,"10\\d{10}",[12],[["(\\d{2})(\\d{5})(\\d{5})","$1 $2 $3",["1"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["10\\d{10}"]]],881:["881",0,"[0-36-9]\\d{8}",[9],[["(\\d)(\\d{3})(\\d{5})","$1 $2 $3",["[0-36-9]"]]],0,0,0,0,0,0,[0,["[0-36-9]\\d{8}"]]],882:["882",0,"[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?",[7,8,9,10,11,12],[["(\\d{2})(\\d{5})","$1 $2",["16|342"]],["(\\d{2})(\\d{6})","$1 $2",["49"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["1[36]|9"]],["(\\d{2})(\\d{4})(\\d{3})","$1 $2 $3",["3[23]"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["16"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|23|3(?:[15]|4[57])|4|51"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["34"]],["(\\d{2})(\\d{4,5})(\\d{5})","$1 $2 $3",["[1-35]"]]],0,0,0,0,0,0,[0,["342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}",[7,8,9,10,12]],0,0,0,0,0,0,["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}"]]],883:["883",0,"(?:[1-4]\\d|51)\\d{6,10}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,8})","$1 $2 $3",["[14]|2[24-689]|3[02-689]|51[24-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["510"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["21"]],["(\\d{4})(\\d{4})(\\d{4})","$1 $2 $3",["51[13]"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[235]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}"]]],888:["888",0,"\\d{11}",[11],[["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3"]],0,0,0,0,0,0,[0,0,0,0,0,0,["\\d{11}"]]],979:["979",0,"[1359]\\d{8}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[1359]"]]],0,0,0,0,0,0,[0,0,0,["[1359]\\d{8}"]]]}};function X5(i,e){var t=Array.prototype.slice.call(e);return t.push(Y5),i.apply(this,t)}function Zd(i){"@babel/helpers - typeof";return Zd=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Zd(i)}function ym(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function Z5(i,e,t){return e&&ym(i.prototype,e),t&&ym(i,t),Object.defineProperty(i,"prototype",{writable:!1}),i}function K5(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function Q5(i,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(e&&e.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),Object.defineProperty(i,"prototype",{writable:!1}),e&&xu(i,e)}function e4(i){var e=Wy();return function(){var n=ku(i),r;if(e){var s=ku(this).constructor;r=Reflect.construct(n,arguments,s)}else r=n.apply(this,arguments);return t4(this,r)}}function t4(i,e){if(e&&(Zd(e)==="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return jy(i)}function jy(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function Kd(i){var e=typeof Map=="function"?new Map:void 0;return Kd=function(n){if(n===null||!n4(n))return n;if(typeof n!="function")throw new TypeError("Super expression must either be null or a function");if(typeof e<"u"){if(e.has(n))return e.get(n);e.set(n,r)}function r(){return vh(n,arguments,ku(this).constructor)}return r.prototype=Object.create(n.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),xu(r,n)},Kd(i)}function vh(i,e,t){return Wy()?vh=Reflect.construct:vh=function(r,s,o){var l=[null];l.push.apply(l,s);var u=Function.bind.apply(r,l),c=new u;return o&&xu(c,o.prototype),c},vh.apply(null,arguments)}function Wy(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function n4(i){return Function.toString.call(i).indexOf("[native code]")!==-1}function xu(i,e){return xu=Object.setPrototypeOf||function(n,r){return n.__proto__=r,n},xu(i,e)}function ku(i){return ku=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},ku(i)}var Ro=function(i){Q5(t,i);var e=e4(t);function t(n){var r;return K5(this,t),r=e.call(this,n),Object.setPrototypeOf(jy(r),t.prototype),r.name=r.constructor.name,r}return Z5(t)}(Kd(Error)),hf=2,i4=17,r4=3,na="0-9０-９٠-٩۰-۹",s4="-‐-―−ー－",o4="／/",a4="．.",l4="  ­​⁠　",u4="()（）［］\\[\\]",h4="~⁓∼～",Fh="".concat(s4).concat(o4).concat(a4).concat(l4).concat(u4).concat(h4),cf="+＋";function bm(i,e){i=i.split("-"),e=e.split("-");for(var t=i[0].split("."),n=e[0].split("."),r=0;r<3;r++){var s=Number(t[r]),o=Number(n[r]);if(s>o)return 1;if(o>s)return-1;if(!isNaN(s)&&isNaN(o))return 1;if(isNaN(s)&&!isNaN(o))return-1}return i[1]&&e[1]?i[1]>e[1]?1:i[1]<e[1]?-1:0:!i[1]&&e[1]?1:i[1]&&!e[1]?-1:0}function Bh(i){"@babel/helpers - typeof";return Bh=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Bh(i)}function vc(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function vm(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function wc(i,e,t){return e&&vm(i.prototype,e),t&&vm(i,t),Object.defineProperty(i,"prototype",{writable:!1}),i}var c4="1.2.0",d4="1.7.35",wm=" ext. ",p4=/^\d+$/,cr=function(){function i(e){vc(this,i),y4(e),this.metadata=e,Jy.call(this,e)}return wc(i,[{key:"getCountries",value:function(){return Object.keys(this.metadata.countries).filter(function(t){return t!=="001"})}},{key:"getCountryMetadata",value:function(t){return this.metadata.countries[t]}},{key:"nonGeographic",value:function(){if(!(this.v1||this.v2||this.v3))return this.metadata.nonGeographic||this.metadata.nonGeographical}},{key:"hasCountry",value:function(t){return this.getCountryMetadata(t)!==void 0}},{key:"hasCallingCode",value:function(t){if(this.getCountryCodesForCallingCode(t))return!0;if(this.nonGeographic()){if(this.nonGeographic()[t])return!0}else{var n=this.countryCallingCodes()[t];if(n&&n.length===1&&n[0]==="001")return!0}}},{key:"isNonGeographicCallingCode",value:function(t){return this.nonGeographic()?!!this.nonGeographic()[t]:!this.getCountryCodesForCallingCode(t)}},{key:"country",value:function(t){return this.selectNumberingPlan(t)}},{key:"selectNumberingPlan",value:function(t,n){if(t&&p4.test(t)&&(n=t,t=null),t&&t!=="001"){if(!this.hasCountry(t))throw new Error("Unknown country: ".concat(t));this.numberingPlan=new _m(this.getCountryMetadata(t),this)}else if(n){if(!this.hasCallingCode(n))throw new Error("Unknown calling code: ".concat(n));this.numberingPlan=new _m(this.getNumberingPlanMetadata(n),this)}else this.numberingPlan=void 0;return this}},{key:"getCountryCodesForCallingCode",value:function(t){var n=this.countryCallingCodes()[t];if(n)return n.length===1&&n[0].length===3?void 0:n}},{key:"getCountryCodeForCallingCode",value:function(t){var n=this.getCountryCodesForCallingCode(t);if(n)return n[0]}},{key:"getNumberingPlanMetadata",value:function(t){var n=this.getCountryCodeForCallingCode(t);if(n)return this.getCountryMetadata(n);if(this.nonGeographic()){var r=this.nonGeographic()[t];if(r)return r}else{var s=this.countryCallingCodes()[t];if(s&&s.length===1&&s[0]==="001")return this.metadata.countries["001"]}}},{key:"countryCallingCode",value:function(){return this.numberingPlan.callingCode()}},{key:"IDDPrefix",value:function(){return this.numberingPlan.IDDPrefix()}},{key:"defaultIDDPrefix",value:function(){return this.numberingPlan.defaultIDDPrefix()}},{key:"nationalNumberPattern",value:function(){return this.numberingPlan.nationalNumberPattern()}},{key:"possibleLengths",value:function(){return this.numberingPlan.possibleLengths()}},{key:"formats",value:function(){return this.numberingPlan.formats()}},{key:"nationalPrefixForParsing",value:function(){return this.numberingPlan.nationalPrefixForParsing()}},{key:"nationalPrefixTransformRule",value:function(){return this.numberingPlan.nationalPrefixTransformRule()}},{key:"leadingDigits",value:function(){return this.numberingPlan.leadingDigits()}},{key:"hasTypes",value:function(){return this.numberingPlan.hasTypes()}},{key:"type",value:function(t){return this.numberingPlan.type(t)}},{key:"ext",value:function(){return this.numberingPlan.ext()}},{key:"countryCallingCodes",value:function(){return this.v1?this.metadata.country_phone_code_to_countries:this.metadata.country_calling_codes}},{key:"chooseCountryByCountryCallingCode",value:function(t){return this.selectNumberingPlan(t)}},{key:"hasSelectedNumberingPlan",value:function(){return this.numberingPlan!==void 0}}]),i}(),_m=function(){function i(e,t){vc(this,i),this.globalMetadataObject=t,this.metadata=e,Jy.call(this,t.metadata)}return wc(i,[{key:"callingCode",value:function(){return this.metadata[0]}},{key:"getDefaultCountryMetadataForRegion",value:function(){return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())}},{key:"IDDPrefix",value:function(){if(!(this.v1||this.v2))return this.metadata[1]}},{key:"defaultIDDPrefix",value:function(){if(!(this.v1||this.v2))return this.metadata[12]}},{key:"nationalNumberPattern",value:function(){return this.v1||this.v2?this.metadata[1]:this.metadata[2]}},{key:"possibleLengths",value:function(){if(!this.v1)return this.metadata[this.v2?2:3]}},{key:"_getFormats",value:function(t){return t[this.v1?2:this.v2?3:4]}},{key:"formats",value:function(){var t=this,n=this._getFormats(this.metadata)||this._getFormats(this.getDefaultCountryMetadataForRegion())||[];return n.map(function(r){return new f4(r,t)})}},{key:"nationalPrefix",value:function(){return this.metadata[this.v1?3:this.v2?4:5]}},{key:"_getNationalPrefixFormattingRule",value:function(t){return t[this.v1?4:this.v2?5:6]}},{key:"nationalPrefixFormattingRule",value:function(){return this._getNationalPrefixFormattingRule(this.metadata)||this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())}},{key:"_nationalPrefixForParsing",value:function(){return this.metadata[this.v1?5:this.v2?6:7]}},{key:"nationalPrefixForParsing",value:function(){return this._nationalPrefixForParsing()||this.nationalPrefix()}},{key:"nationalPrefixTransformRule",value:function(){return this.metadata[this.v1?6:this.v2?7:8]}},{key:"_getNationalPrefixIsOptionalWhenFormatting",value:function(){return!!this.metadata[this.v1?7:this.v2?8:9]}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata)||this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())}},{key:"leadingDigits",value:function(){return this.metadata[this.v1?8:this.v2?9:10]}},{key:"types",value:function(){return this.metadata[this.v1?9:this.v2?10:11]}},{key:"hasTypes",value:function(){return this.types()&&this.types().length===0?!1:!!this.types()}},{key:"type",value:function(t){if(this.hasTypes()&&Cm(this.types(),t))return new m4(Cm(this.types(),t),this)}},{key:"ext",value:function(){return this.v1||this.v2?wm:this.metadata[13]||wm}}]),i}(),f4=function(){function i(e,t){vc(this,i),this._format=e,this.metadata=t}return wc(i,[{key:"pattern",value:function(){return this._format[0]}},{key:"format",value:function(){return this._format[1]}},{key:"leadingDigitsPatterns",value:function(){return this._format[2]||[]}},{key:"nationalPrefixFormattingRule",value:function(){return this._format[3]||this.metadata.nationalPrefixFormattingRule()}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return!!this._format[4]||this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"nationalPrefixIsMandatoryWhenFormattingInNationalFormat",value:function(){return this.usesNationalPrefix()&&!this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"usesNationalPrefix",value:function(){return!!(this.nationalPrefixFormattingRule()&&!g4.test(this.nationalPrefixFormattingRule()))}},{key:"internationalFormat",value:function(){return this._format[5]||this.format()}}]),i}(),g4=/^\(?\$1\)?$/,m4=function(){function i(e,t){vc(this,i),this.type=e,this.metadata=t}return wc(i,[{key:"pattern",value:function(){return this.metadata.v1?this.type:this.type[0]}},{key:"possibleLengths",value:function(){if(!this.metadata.v1)return this.type[1]||this.metadata.possibleLengths()}}]),i}();function Cm(i,e){switch(e){case"FIXED_LINE":return i[0];case"MOBILE":return i[1];case"TOLL_FREE":return i[2];case"PREMIUM_RATE":return i[3];case"PERSONAL_NUMBER":return i[4];case"VOICEMAIL":return i[5];case"UAN":return i[6];case"PAGER":return i[7];case"VOIP":return i[8];case"SHARED_COST":return i[9]}}function y4(i){if(!i)throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");if(!pd(i)||!pd(i.countries))throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat(pd(i)?"an object of shape: { "+Object.keys(i).join(", ")+" }":"a "+b4(i)+": "+i,"."))}var pd=function(e){return Bh(e)==="object"},b4=function(e){return Bh(e)};function df(i,e){if(e=new cr(e),e.hasCountry(i))return e.country(i).countryCallingCode();throw new Error("Unknown country: ".concat(i))}function v4(i,e){return e.countries[i]!==void 0}function Jy(i){var e=i.version;typeof e=="number"?(this.v1=e===1,this.v2=e===2,this.v3=e===3,this.v4=e===4):e?bm(e,c4)===-1?this.v2=!0:bm(e,d4)===-1?this.v3=!0:this.v4=!0:this.v1=!0}var w4=";ext=",Za=function(e){return"([".concat(na,"]{1,").concat(e,"})")};function Vy(i){var e="20",t="15",n="9",r="6",s="[  \\t,]*",o="[:\\.．]?[  \\t,-]*",l="#?",u="(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)",c="(?:[xｘ#＃~～]|int|ｉｎｔ)",p="[- ]+",d="[  \\t]*",f="(?:,{2}|;)",g=w4+Za(e),v=s+u+o+Za(e)+l,w=s+c+o+Za(n)+l,A=p+Za(r)+"#",C=d+f+o+Za(t)+l,m=d+"(?:,)+"+o+Za(n)+l;return g+"|"+v+"|"+w+"|"+A+"|"+C+"|"+m}var _4="["+na+"]{"+hf+"}",C4="["+cf+"]{0,1}(?:["+Fh+"]*["+na+"]){3,}["+Fh+na+"]*",T4=new RegExp("^["+cf+"]{0,1}(?:["+Fh+"]*["+na+"]){1,2}$","i"),x4=C4+"(?:"+Vy()+")?",k4=new RegExp("^"+_4+"$|^"+x4+"$","i");function Gy(i){return i.length>=hf&&k4.test(i)}function A4(i){return T4.test(i)}var Tm=new RegExp("(?:"+Vy()+")$","i");function q4(i){var e=i.search(Tm);if(e<0)return{};for(var t=i.slice(0,e),n=i.match(Tm),r=1;r<n.length;){if(n[r])return{number:t,ext:n[r]};r++}}var S4={0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9","０":"0","１":"1","２":"2","３":"3","４":"4","５":"5","６":"6","７":"7","８":"8","９":"9","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9"};function E4(i){return S4[i]}function I4(i,e){var t=typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t)return(t=t.call(i)).next.bind(t);if(Array.isArray(i)||(t=D4(i))||e&&i&&typeof i.length=="number"){t&&(i=t);var n=0;return function(){return n>=i.length?{done:!0}:{done:!1,value:i[n++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function D4(i,e){if(i){if(typeof i=="string")return xm(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return xm(i,e)}}function xm(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function km(i){for(var e="",t=I4(i.split("")),n;!(n=t()).done;){var r=n.value;e+=R4(r,e)||""}return e}function R4(i,e){return i==="+"?e?void 0:"+":E4(i)}function $4(i,e){var t=typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t)return(t=t.call(i)).next.bind(t);if(Array.isArray(i)||(t=N4(i))||e&&i&&typeof i.length=="number"){t&&(i=t);var n=0;return function(){return n>=i.length?{done:!0}:{done:!1,value:i[n++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function N4(i,e){if(i){if(typeof i=="string")return Am(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Am(i,e)}}function Am(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function L4(i,e){for(var t=i.slice(),n=$4(e),r;!(r=n()).done;){var s=r.value;i.indexOf(s)<0&&t.push(s)}return t.sort(function(o,l){return o-l})}function pf(i,e){return Uy(i,void 0,e)}function Uy(i,e,t){var n=t.type(e),r=n&&n.possibleLengths()||t.possibleLengths();if(!r)return"IS_POSSIBLE";if(e==="FIXED_LINE_OR_MOBILE"){if(!t.type("FIXED_LINE"))return Uy(i,"MOBILE",t);var s=t.type("MOBILE");s&&(r=L4(r,s.possibleLengths()))}else if(e&&!n)return"INVALID_LENGTH";var o=i.length,l=r[0];return l===o?"IS_POSSIBLE":l>o?"TOO_SHORT":r[r.length-1]<o?"TOO_LONG":r.indexOf(o,1)>=0?"IS_POSSIBLE":"INVALID_LENGTH"}function M4(i,e,t){if(e===void 0&&(e={}),t=new cr(t),e.v2){if(!i.countryCallingCode)throw new Error("Invalid phone number object passed");t.selectNumberingPlan(i.countryCallingCode)}else{if(!i.phone)return!1;if(i.country){if(!t.hasCountry(i.country))throw new Error("Unknown country: ".concat(i.country));t.country(i.country)}else{if(!i.countryCallingCode)throw new Error("Invalid phone number object passed");t.selectNumberingPlan(i.countryCallingCode)}}if(t.possibleLengths())return zy(i.phone||i.nationalNumber,t);if(i.countryCallingCode&&t.isNonGeographicCallingCode(i.countryCallingCode))return!0;throw new Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.')}function zy(i,e){switch(pf(i,e)){case"IS_POSSIBLE":return!0;default:return!1}}function O4(i,e){return B4(i)||F4(i,e)||Hy(i,e)||P4()}function P4(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function F4(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n=[],r=!0,s=!1,o,l;try{for(t=t.call(i);!(r=(o=t.next()).done)&&(n.push(o.value),!(e&&n.length===e));r=!0);}catch(u){s=!0,l=u}finally{try{!r&&t.return!=null&&t.return()}finally{if(s)throw l}}return n}}function B4(i){if(Array.isArray(i))return i}function j4(i,e){var t=typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t)return(t=t.call(i)).next.bind(t);if(Array.isArray(i)||(t=Hy(i))||e&&i&&typeof i.length=="number"){t&&(i=t);var n=0;return function(){return n>=i.length?{done:!0}:{done:!1,value:i[n++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Hy(i,e){if(i){if(typeof i=="string")return qm(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return qm(i,e)}}function qm(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function W4(i){var e,t;i=i.replace(/^tel:/,"tel=");for(var n=j4(i.split(";")),r;!(r=n()).done;){var s=r.value,o=s.split("="),l=O4(o,2),u=l[0],c=l[1];switch(u){case"tel":e=c;break;case"ext":t=c;break;case"phone-context":c[0]==="+"&&(e=c+e);break}}if(!Gy(e))return{};var p={number:e};return t&&(p.ext=t),p}function J4(i){var e=i.number,t=i.ext;if(!e)return"";if(e[0]!=="+")throw new Error('"formatRFC3966()" expects "number" to be in E.164 format.');return"tel:".concat(e).concat(t?";ext="+t:"")}function To(i,e){return i=i||"",new RegExp("^(?:"+e+")$").test(i)}function V4(i,e){var t=typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t)return(t=t.call(i)).next.bind(t);if(Array.isArray(i)||(t=G4(i))||e&&i&&typeof i.length=="number"){t&&(i=t);var n=0;return function(){return n>=i.length?{done:!0}:{done:!1,value:i[n++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function G4(i,e){if(i){if(typeof i=="string")return Sm(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Sm(i,e)}}function Sm(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}var U4=["MOBILE","PREMIUM_RATE","TOLL_FREE","SHARED_COST","VOIP","PERSONAL_NUMBER","PAGER","UAN","VOICEMAIL"];function ff(i,e,t){if(e=e||{},!!i.country){t=new cr(t),t.selectNumberingPlan(i.country,i.countryCallingCode);var n=e.v2?i.nationalNumber:i.phone;if(To(n,t.nationalNumberPattern())){if(fd(n,"FIXED_LINE",t))return t.type("MOBILE")&&t.type("MOBILE").pattern()===""||!t.type("MOBILE")||fd(n,"MOBILE",t)?"FIXED_LINE_OR_MOBILE":"FIXED_LINE";for(var r=V4(U4),s;!(s=r()).done;){var o=s.value;if(fd(n,o,t))return o}}}}function fd(i,e,t){return e=t.type(e),!e||!e.pattern()||e.possibleLengths()&&e.possibleLengths().indexOf(i.length)<0?!1:To(i,e.pattern())}function z4(i,e,t){if(e=e||{},t=new cr(t),!i.country)return!1;if(t.selectNumberingPlan(i.country,i.countryCallingCode),t.hasTypes())return ff(i,e,t.metadata)!==void 0;var n=e.v2?i.nationalNumber:i.phone;return To(n,t.nationalNumberPattern())}function H4(i,e,t){var n=new cr(t),r=n.getCountryCodesForCallingCode(i);return r?r.filter(function(s){return Y4(e,s,t)}):[]}function Y4(i,e,t){var n=new cr(t);return n.selectNumberingPlan(e),n.numberingPlan.possibleLengths().indexOf(i.length)>=0}function X4(i){return i.replace(new RegExp("[".concat(Fh,"]+"),"g")," ").trim()}var Z4=/(\$\d)/;function K4(i,e,t){var n=t.useInternationalFormat,r=t.withNationalPrefix;t.carrierCode,t.metadata;var s=i.replace(new RegExp(e.pattern()),n?e.internationalFormat():r&&e.nationalPrefixFormattingRule()?e.format().replace(Z4,e.nationalPrefixFormattingRule()):e.format());return n?X4(s):s}var Q4=/^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;function e8(i,e,t){var n=new cr(t);if(n.selectNumberingPlan(i,e),n.defaultIDDPrefix())return n.defaultIDDPrefix();if(Q4.test(n.IDDPrefix()))return n.IDDPrefix()}function t8(i,e){var t=typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t)return(t=t.call(i)).next.bind(t);if(Array.isArray(i)||(t=n8(i))||e&&i&&typeof i.length=="number"){t&&(i=t);var n=0;return function(){return n>=i.length?{done:!0}:{done:!1,value:i[n++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function n8(i,e){if(i){if(typeof i=="string")return Em(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Em(i,e)}}function Em(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function Im(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Dm(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?Im(Object(t),!0).forEach(function(n){i8(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):Im(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function i8(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}var Rm={formatExtension:function(e,t,n){return"".concat(e).concat(n.ext()).concat(t)}};function r8(i,e,t,n){if(t?t=Dm(Dm({},Rm),t):t=Rm,n=new cr(n),i.country&&i.country!=="001"){if(!n.hasCountry(i.country))throw new Error("Unknown country: ".concat(i.country));n.country(i.country)}else if(i.countryCallingCode)n.selectNumberingPlan(i.countryCallingCode);else return i.phone||"";var r=n.countryCallingCode(),s=t.v2?i.nationalNumber:i.phone,o;switch(e){case"NATIONAL":return s?(o=jh(s,i.carrierCode,"NATIONAL",n,t),gd(o,i.ext,n,t.formatExtension)):"";case"INTERNATIONAL":return s?(o=jh(s,null,"INTERNATIONAL",n,t),o="+".concat(r," ").concat(o),gd(o,i.ext,n,t.formatExtension)):"+".concat(r);case"E.164":return"+".concat(r).concat(s);case"RFC3966":return J4({number:"+".concat(r).concat(s),ext:i.ext});case"IDD":if(!t.fromCountry)return;var l=o8(s,i.carrierCode,r,t.fromCountry,n);return gd(l,i.ext,n,t.formatExtension);default:throw new Error('Unknown "format" argument passed to "formatNumber()": "'.concat(e,'"'))}}function jh(i,e,t,n,r){var s=s8(n.formats(),i);return s?K4(i,s,{useInternationalFormat:t==="INTERNATIONAL",withNationalPrefix:!(s.nationalPrefixIsOptionalWhenFormattingInNationalFormat()&&r&&r.nationalPrefix===!1),carrierCode:e,metadata:n}):i}function s8(i,e){for(var t=t8(i),n;!(n=t()).done;){var r=n.value;if(r.leadingDigitsPatterns().length>0){var s=r.leadingDigitsPatterns()[r.leadingDigitsPatterns().length-1];if(e.search(s)!==0)continue}if(To(e,r.pattern()))return r}}function gd(i,e,t,n){return e?n(i,e,t):i}function o8(i,e,t,n,r){var s=df(n,r.metadata);if(s===t){var o=jh(i,e,"NATIONAL",r);return t==="1"?t+" "+o:o}var l=e8(n,void 0,r.metadata);if(l)return"".concat(l," ").concat(t," ").concat(jh(i,null,"INTERNATIONAL",r))}function $m(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Nm(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?$m(Object(t),!0).forEach(function(n){a8(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):$m(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function a8(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function l8(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function Lm(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function u8(i,e,t){return e&&Lm(i.prototype,e),t&&Lm(i,t),Object.defineProperty(i,"prototype",{writable:!1}),i}var h8=function(){function i(e,t,n){if(l8(this,i),!e)throw new TypeError("`country` or `countryCallingCode` not passed");if(!t)throw new TypeError("`nationalNumber` not passed");if(!n)throw new TypeError("`metadata` not passed");var r=new cr(n);c8(e)&&(this.country=e,r.country(e),e=r.countryCallingCode()),this.countryCallingCode=e,this.nationalNumber=t,this.number="+"+this.countryCallingCode+this.nationalNumber,this.metadata=n}return u8(i,[{key:"setExt",value:function(t){this.ext=t}},{key:"getPossibleCountries",value:function(){return this.country?[this.country]:H4(this.countryCallingCode,this.nationalNumber,this.metadata)}},{key:"isPossible",value:function(){return M4(this,{v2:!0},this.metadata)}},{key:"isValid",value:function(){return z4(this,{v2:!0},this.metadata)}},{key:"isNonGeographic",value:function(){var t=new cr(this.metadata);return t.isNonGeographicCallingCode(this.countryCallingCode)}},{key:"isEqual",value:function(t){return this.number===t.number&&this.ext===t.ext}},{key:"getType",value:function(){return ff(this,{v2:!0},this.metadata)}},{key:"format",value:function(t,n){return r8(this,t,n?Nm(Nm({},n),{},{v2:!0}):{v2:!0},this.metadata)}},{key:"formatNational",value:function(t){return this.format("NATIONAL",t)}},{key:"formatInternational",value:function(t){return this.format("INTERNATIONAL",t)}},{key:"getURI",value:function(t){return this.format("RFC3966",t)}}]),i}(),c8=function(e){return/^[A-Z]{2}$/.test(e)},d8=new RegExp("(["+na+"])");function p8(i,e,t,n){if(e){var r=new cr(n);r.selectNumberingPlan(e,t);var s=new RegExp(r.IDDPrefix());if(i.search(s)===0){i=i.slice(i.match(s)[0].length);var o=i.match(d8);if(!(o&&o[1]!=null&&o[1].length>0&&o[1]==="0"))return i}}}function f8(i,e){if(i&&e.numberingPlan.nationalPrefixForParsing()){var t=new RegExp("^(?:"+e.numberingPlan.nationalPrefixForParsing()+")"),n=t.exec(i);if(n){var r,s,o=n.length-1,l=o>0&&n[o];if(e.nationalPrefixTransformRule()&&l)r=i.replace(t,e.nationalPrefixTransformRule()),o>1&&(s=n[1]);else{var u=n[0];r=i.slice(u.length),l&&(s=n[1])}var c;if(l){var p=i.indexOf(n[1]),d=i.slice(0,p);d===e.numberingPlan.nationalPrefix()&&(c=e.numberingPlan.nationalPrefix())}else c=n[0];return{nationalNumber:r,nationalPrefix:c,carrierCode:s}}}return{nationalNumber:i}}function Qd(i,e){var t=f8(i,e),n=t.carrierCode,r=t.nationalNumber;if(r!==i){if(!g8(i,r,e))return{nationalNumber:i};if(e.possibleLengths()&&!m8(r,e))return{nationalNumber:i}}return{nationalNumber:r,carrierCode:n}}function g8(i,e,t){return!(To(i,t.nationalNumberPattern())&&!To(e,t.nationalNumberPattern()))}function m8(i,e){switch(pf(i,e)){case"TOO_SHORT":case"INVALID_LENGTH":return!1;default:return!0}}function y8(i,e,t,n){var r=e?df(e,n):t;if(i.indexOf(r)===0){n=new cr(n),n.selectNumberingPlan(e,t);var s=i.slice(r.length),o=Qd(s,n),l=o.nationalNumber,u=Qd(i,n),c=u.nationalNumber;if(!To(c,n.nationalNumberPattern())&&To(l,n.nationalNumberPattern())||pf(c,n)==="TOO_LONG")return{countryCallingCode:r,number:s}}return{number:i}}function b8(i,e,t,n){if(!i)return{};if(i[0]!=="+"){var r=p8(i,e,t,n);if(r&&r!==i)i="+"+r;else{if(e||t){var s=y8(i,e,t,n),o=s.countryCallingCode,l=s.number;if(o)return{countryCallingCode:o,number:l}}return{number:i}}}if(i[1]==="0")return{};n=new cr(n);for(var u=2;u-1<=r4&&u<=i.length;){var c=i.slice(1,u);if(n.hasCallingCode(c))return n.selectNumberingPlan(c),{countryCallingCode:c,number:i.slice(u)};u++}return{}}function v8(i,e){var t=typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t)return(t=t.call(i)).next.bind(t);if(Array.isArray(i)||(t=w8(i))||e&&i&&typeof i.length=="number"){t&&(i=t);var n=0;return function(){return n>=i.length?{done:!0}:{done:!1,value:i[n++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function w8(i,e){if(i){if(typeof i=="string")return Mm(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Mm(i,e)}}function Mm(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function _8(i,e,t){t=new cr(t);for(var n=v8(i),r;!(r=n()).done;){var s=r.value;if(t.country(s),t.leadingDigits()){if(e&&e.search(t.leadingDigits())===0)return s}else if(ff({phone:e,country:s},void 0,t.metadata))return s}}var C8=!1;function T8(i,e,t){if(C8&&t.isNonGeographicCallingCode(i))return"001";var n=t.getCountryCodesForCallingCode(i);if(n)return n.length===1?n[0]:_8(n,e,t.metadata)}var x8=250,k8=new RegExp("["+cf+na+"]"),A8=new RegExp("[^"+na+"#]+$");function q8(i,e,t){if(e=e||{},t=new cr(t),e.defaultCountry&&!t.hasCountry(e.defaultCountry))throw e.v2?new Ro("INVALID_COUNTRY"):new Error("Unknown country: ".concat(e.defaultCountry));var n=E8(i,e.v2,e.extract),r=n.number,s=n.ext,o=n.error;if(!r){if(e.v2)throw o==="TOO_SHORT"?new Ro("TOO_SHORT"):new Ro("NOT_A_NUMBER");return{}}var l=D8(r,e.defaultCountry,e.defaultCallingCode,t),u=l.country,c=l.nationalNumber,p=l.countryCallingCode,d=l.carrierCode;if(!t.hasSelectedNumberingPlan()){if(e.v2)throw new Ro("INVALID_COUNTRY");return{}}if(!c||c.length<hf){if(e.v2)throw new Ro("TOO_SHORT");return{}}if(c.length>i4){if(e.v2)throw new Ro("TOO_LONG");return{}}if(e.v2){var f=new h8(p,c,t.metadata);return u&&(f.country=u),d&&(f.carrierCode=d),s&&(f.ext=s),f}var g=(e.extended?t.hasSelectedNumberingPlan():u)?To(c,t.nationalNumberPattern()):!1;return e.extended?{country:u,countryCallingCode:p,carrierCode:d,valid:g,possible:g?!0:!!(e.extended===!0&&t.possibleLengths()&&zy(c,t)),phone:c,ext:s}:g?I8(u,c,s):{}}function S8(i,e,t){if(i){if(i.length>x8){if(t)throw new Ro("TOO_LONG");return}if(e===!1)return i;var n=i.search(k8);if(!(n<0))return i.slice(n).replace(A8,"")}}function E8(i,e,t){if(i&&i.indexOf("tel:")===0)return W4(i);var n=S8(i,t,e);if(!n)return{};if(!Gy(n))return A4(n)?{error:"TOO_SHORT"}:{};var r=q4(n);return r.ext?r:{number:n}}function I8(i,e,t){var n={country:i,phone:e};return t&&(n.ext=t),n}function D8(i,e,t,n){var r=b8(km(i),e,t,n.metadata),s=r.countryCallingCode,o=r.number,l;if(s)n.selectNumberingPlan(s);else if(o&&(e||t))n.selectNumberingPlan(e,t),e&&(l=e),s=t||df(e,n.metadata);else return{};if(!o)return{countryCallingCode:s};var u=Qd(km(o),n),c=u.nationalNumber,p=u.carrierCode,d=T8(s,c,n);return d&&(l=d,d==="001"||n.country(l)),{country:l,countryCallingCode:s,nationalNumber:c,carrierCode:p}}function Om(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Pm(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?Om(Object(t),!0).forEach(function(n){R8(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):Om(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function R8(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function $8(i,e,t){return q8(i,Pm(Pm({},e),{},{v2:!0}),t)}function ep(i){"@babel/helpers - typeof";return ep=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ep(i)}function Fm(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function N8(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?Fm(Object(t),!0).forEach(function(n){L8(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):Fm(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function L8(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function M8(i,e){return B8(i)||F8(i,e)||P8(i,e)||O8()}function O8(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function P8(i,e){if(i){if(typeof i=="string")return Bm(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Bm(i,e)}}function Bm(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function F8(i,e){var t=i==null?null:typeof Symbol<"u"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n=[],r=!0,s=!1,o,l;try{for(t=t.call(i);!(r=(o=t.next()).done)&&(n.push(o.value),!(e&&n.length===e));r=!0);}catch(u){s=!0,l=u}finally{try{!r&&t.return!=null&&t.return()}finally{if(s)throw l}}return n}}function B8(i){if(Array.isArray(i))return i}function j8(i){var e=Array.prototype.slice.call(i),t=M8(e,4),n=t[0],r=t[1],s=t[2],o=t[3],l,u,c;if(typeof n=="string")l=n;else throw new TypeError("A text for parsing must be a string.");if(!r||typeof r=="string")o?(u=s,c=o):(u=void 0,c=s),r&&(u=N8({defaultCountry:r},u));else if(W8(r))s?(u=r,c=s):c=r;else throw new Error("Invalid second argument: ".concat(r));return{text:l,options:u,metadata:c}}var W8=function(e){return ep(e)==="object"};function jm(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Wm(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?jm(Object(t),!0).forEach(function(n){J8(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):jm(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function J8(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function V8(i,e,t){e&&e.defaultCountry&&!v4(e.defaultCountry,t)&&(e=Wm(Wm({},e),{},{defaultCountry:void 0}));try{return $8(i,e,t)}catch(n){if(!(n instanceof Ro))throw n}}function G8(){var i=j8(arguments),e=i.text,t=i.options,n=i.metadata;return V8(e,t,n)}function Jm(){return X5(G8,arguments)}class U8 extends fi{constructor(){super("phone","A phone number","tel")}getFeedback(e,t){if(this.isValid(e,t))return;const n=De.t.validation.phone,r=n.feedback;if(t){const s=t();if(s)return n.feedbackCountry.Subs({country:s})}return r}isValid(e,t){var r,s;if(e===void 0)return!1;e.startsWith("tel:")&&(e=e.substring(4));let n;return t!==void 0&&(n=(r=t())==null?void 0:r.toUpperCase()),this.isShortCode(e,n)?!0:((s=Jm(e,n))==null?void 0:s.isValid())??!1}reformat(e,t){var r;e.startsWith("tel:")&&(e=e.substring(4));let n;return t&&(n=t()),this.isShortCode(e,n==null?void 0:n.toUpperCase())?e:(r=Jm(e,n==null?void 0:n.toUpperCase()))==null?void 0:r.formatInternational()}isShortCode(e,t){if(t=="BE"&&e.length===4&&e.match(/[0-9]{4}/)||t=="NL"&&e.length===4&&e.match(/14[0-9]{3}/))return!0}}class z8 extends fi{constructor(){super("opening_hours",new Qt(["Has extra elements to easily input when a POI is opened.",new tr("Helper arguments"),new El(["name","doc"],[["options",new Qt(["A JSON-object of type `{ prefix: string, postfix: string }`. ",new El(["subarg","doc"],[["prefix","Piece of text that will always be added to the front of the generated opening hours. If the OSM-data does not start with this, it will fail to parse."],["postfix","Piece of text that will always be added to the end of the generated opening hours"]])])]]),new tr("Example usage"),`To add a conditional (based on time) access restriction:

\`\`\`

"freeform": {
    "key": "access:conditional",
    "type": "opening_hours",
    "helperArgs": [
        {
          "prefix":"no @ (",
          "postfix":")"
        }
    ]
}
\`\`\`

*Don't forget to pass the prefix and postfix in the rendering as well*: \`{opening_hours_table(opening_hours,yes @ &LPARENS, &RPARENS )\``]))}}class H8 extends fi{constructor(){super("color","Shows a color picker")}}class Yy extends fi{constructor(){super("key","Validates a key, mostly that no weird characters are used");R(this,"isMeta",!0)}getFeedback(t,n){if(t.length>255)return De.T("A `key` should be at most 255 characters");if(t.length==0)return De.T("A `key` should not be empty");const r=/[a-zA-Z0-9:_]+/;if(!t.match(r))return De.T("A `key` should only have the characters `a-zA-Z0-9`, `:`  or `_`")}isValid(t,n){return this.getFeedback(t,n)===void 0}}const Zh=class Zh extends fi{constructor(){super("simple_tag","A simple tag of the format `key=value` where `key` conforms to a normal key `");R(this,"isMeta",!0)}getFeedback(t,n){const r=t.split("=");if(r.length<2)return De.T("A tag should contain a = to separate the 'key' and 'value'");if(r.length>2)return De.T("A tag should contain precisely one `=` to separate the 'key' and 'value', but "+(r.length-1)+" equal signs were found");const[s,o]=r,l=Zh.KeyValidator.getFeedback(s,n);if(l)return l;if(o.length>255)return De.T("A `value should be at most 255 characters");if(o.length==0)return De.T("A `value should not be empty")}isValid(t,n){return this.getFeedback(t,n)===void 0}};R(Zh,"KeyValidator",new Yy);let tp=Zh;const ma=class ma extends uf{constructor(){super("image","Same as the URL-parameter, except that it checks that the URL ends with `.jpg`, `.png` or some other typical image format");R(this,"isMeta",!0)}static hasValidExternsion(t){return t=t.toLowerCase(),ma.allowedExtensions.some(n=>t.endsWith(n))}getFeedback(t,n){const r=super.getFeedback(t,n);if(r)return r;if(!ma.hasValidExternsion(t))return new js("This URL does not end with one of the allowed extensions. These are: "+ma.allowedExtensions.join(", "))}isValid(t){return super.isValid(t)?ma.hasValidExternsion(t):!1}};R(ma,"allowedExtensions",["jpg","jpeg","svg","png"]);let np=ma;class Y8 extends fi{constructor(){super("translation","Makes sure the the string is of format `Record<string, string>` ");R(this,"isMeta",!0)}isValid(t){try{return JSON.parse(t),!0}catch{return!1}}}const ru=class ru extends fi{constructor(){super("fediverse","Validates fediverse addresses and normalizes them into `@username@server`-format")}reformat(e){if(e=e.trim(),e.startsWith("@")||(e="@"+e),e.match(ru.usernameAtServer))return e;try{const t=new URL(e),n=t.pathname;if(n.match(/^\/\w+$/))return`@${n.substring(1)}@${t.hostname}`}catch{}}getFeedback(e){e=e.trim();const t=e.match(ru.usernameAtServer);if(console.log("Match:",t),t){const n=t[2];try{new URL("https://"+n);return}catch{return De.t.validation.fediverse.invalidHost.Subs({host:n})}}try{if(new URL(e).pathname.match(/^\/\w+$/))return}catch{}return De.t.validation.fediverse.feedback}isValid(e){return this.getFeedback(e)===void 0}};R(ru,"usernameAtServer",/^@?(\w+)@((\w|-|\.)+)$/);let ip=ru;const X8=[{path:"./assets/layers/address/housenumber_blank.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/aerialway/cable_car.svg",license:"CC-BY 3.0",authors:["SuperFLoh"],sources:["https://commons.wikimedia.org/wiki/File:Pictogram_Cable_Car_small.svg"]},{path:"./assets/layers/aerialway/chair_lift.svg",license:"CC0-1.0",authors:["Gouvernement fran��ais, Roulex 45"],sources:["https://commons.wikimedia.org/wiki/File:France_road_sign_CE20b.svg"]},{path:"./assets/layers/aerialway/gondola_lift.svg",license:"CC-BY-SA 4.0",authors:["Vasily Astanin"],sources:["https://commons.wikimedia.org/wiki/File:Pictogram_Gondola_Lift.svg"]},{path:"./assets/layers/artwork/artwork.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Statue-14.svg"]},{path:"./assets/layers/assembly_point/assembly_point.svg",license:"CC0-1.0",authors:["https://commons.wikimedia.org/wiki/User:Epop"],sources:["https://commons.wikimedia.org/wiki/File:E011.svg"]},{path:"./assets/layers/assembly_point/earthquake.svg",license:"CC0-1.0",authors:["United Nations Office for the Coordination of Humanitarian Affairs (OCHA)"],sources:["https://thenounproject.com/icon/fire-4232/","https://commons.wikimedia.org/wiki/File:Earthquake_-_The_Noun_Project.svg"]},{path:"./assets/layers/assembly_point/fire.svg",license:"CC0-1.0",authors:["United Nations Office for the Coordination of Humanitarian Affairs (OCHA)"],sources:["https://thenounproject.com/icon/fire-4234/","https://commons.wikimedia.org/wiki/File:Fire_-_The_Noun_Project.svg"]},{path:"./assets/layers/assembly_point/flood.svg",license:"CC0-1.0",authors:["Iconathon"],sources:["https://thenounproject.com/icon/flood-752/","https://commons.wikimedia.org/wiki/File:Flood_(752)_-_The_Noun_Project.svg"]},{path:"./assets/layers/assembly_point/landslide.svg",license:"CC-BY-3.0",authors:["Development Seed"],sources:["https://github.com/developmentseed/mapbox/blob/master/icons-maki/maki-icons.svg","https://commons.wikimedia.org/wiki/File:Maki1-landslide-15.svg"]},{path:"./assets/layers/atm/atm.svg",license:"CC0-1.0",authors:["Michael Glanznig","Andy Allan"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/atm.svg"]},{path:"./assets/layers/bank/bank.svg",license:"CC0-1.0",authors:["nebulon42"],sources:["https://github.com/gmgeo/osmic/blob/master/money/bank-14.svg"]},{path:"./assets/layers/barrier/barrier.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/quest%20icons/barrier.svg"]},{path:"./assets/layers/bench/bench.svg",license:"CC0-1.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/"]},{path:"./assets/layers/bench/two_sided.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:["https://commons.wikimedia.org/wiki/File:ISO_7010_P018.svg"]},{path:"./assets/layers/bicycle_library/bicycle_library.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/bicycle_rental/rental.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/layers/bicycle_tube_vending_machine/pinIcon.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/bicycle_tube_vending_machine/tube.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/bike_cafe/bike_cafe.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_cleaning/bike_cleaning.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/bike_cleaning/bike_cleaning_icon.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/bike_parking/bollard.svg",license:"CC-BY-SA-4.0",authors:["Gitte Vande Graveele"],sources:["https://osoc.be/editions/2020/walk-by-brussels"]},{path:"./assets/layers/bike_parking/handlebar_holder.svg",license:"CC-BY-SA-4.0",authors:["Gitte Vande Graveele"],sources:["https://osoc.be/editions/2020/walk-by-brussels"]},{path:"./assets/layers/bike_parking/parking.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_parking/rack.svg",license:"CC-BY-SA-4.0",authors:["Gitte Vande Graveele"],sources:["https://osoc.be/editions/2020/walk-by-brussels"]},{path:"./assets/layers/bike_parking/shed.svg",license:"CC-BY-SA-4.0",authors:["Gitte Vande Graveele"],sources:["https://osoc.be/editions/2020/walk-by-brussels"]},{path:"./assets/layers/bike_parking/staple.svg",license:"CC-BY-SA-4.0",authors:["Gitte Vande Graveele"],sources:["https://osoc.be/editions/2020/walk-by-brussels"]},{path:"./assets/layers/bike_parking/two_tier.svg",license:"CC-BY-SA-4.0",authors:["Gitte Vande Graveele"],sources:["https://osoc.be/editions/2020/walk-by-brussels"]},{path:"./assets/layers/bike_parking/wall_loops.svg",license:"CC-BY-SA-4.0",authors:["Gitte Vande Graveele"],sources:["https://osoc.be/editions/2020/walk-by-brussels"]},{path:"./assets/layers/bike_repair_station/bike_pump.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_repair_station/broken_pump.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_repair_station/pump.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_repair_station/pump_example.png",license:"ALL-RIGHTS-RESERVED",authors:["Turvec Solutions"],sources:["https://turvec.com/product/public-bike-pump/"]},{path:"./assets/layers/bike_repair_station/pump_example_manual.jpg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/bike_repair_station/pump_example_round.jpg",license:"ALL-RIGHTS-RESERVED",authors:["©Altinnova"],sources:["https://www.altinnova.com","https://www.teeken.de/produkte/stadtmobiliar/green-air1/12?lang=3"]},{path:"./assets/layers/bike_repair_station/repair_station.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_repair_station/repair_station_broken_pump.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_repair_station/repair_station_example.jpg",license:"CC-BY-SA-4.0",authors:["Polarbear24"],sources:["https://wiki.openstreetmap.org/wiki/File:Public_Bike_Repair_Station.jpg"]},{path:"./assets/layers/bike_repair_station/repair_station_example_2.jpg",license:"CC-BY-SA-4.0",authors:["MOs810"],sources:["https://wiki.openstreetmap.org/wiki/File:Bike_repair_station,_Poznan_Kaponiera.jpg"]},{path:"./assets/layers/bike_repair_station/repair_station_example_3.jpg",license:"CC-BY-SA-3.0",authors:["Thelmadatter"],sources:["https://wiki.openstreetmap.org/wiki/File:BikeRepairMonterrey.JPG"]},{path:"./assets/layers/bike_repair_station/repair_station_pump.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_shop/pump.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_shop/repair_shop.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_shop/shop.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_shop/tools.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/bike_themed_object/other_services.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/binocular/binoculars_example.jpg",license:"CC-BY-SA-4.0",authors:["Moheen Reeyad"],sources:["https://upload.wikimedia.org/wikipedia/commons/a/a0/Coin-operated_binocular_at_Cape_of_Good_Hope_%2801%29.jpg"]},{path:"./assets/layers/binocular/telescope.svg",license:"GPL-2.0-or-later",authors:["Kenny Sing/Elegant Themes"],sources:["https://upload.wikimedia.org/wikipedia/commons/b/b1/Line-style-icons-telescope.svg","https://www.elegantthemes.com/blog/freebie-of-the-week/free-line-style-icons"]},{path:"./assets/layers/birdhide/birdhide.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://fontawesome.com"]},{path:"./assets/layers/birdhide/birdshelter.svg",license:"CC-BY-SA-4.0",authors:["Font Awesome Free 5.2.0 by @fontawesome"],sources:["https://fontawesome.com\r"]},{path:"./assets/layers/cafe_pub/cafe.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Cafe-16.svg"]},{path:"./assets/layers/cafe_pub/nightclub.svg",license:"CC0-1.0",authors:["Osm Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Nightclub-16.svg"]},{path:"./assets/layers/cafe_pub/pub.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Pub-16.svg"]},{path:"./assets/layers/car_rental/car_rental.svg",license:"CC0-1.0",authors:["American Institute of Graphic Arts"],sources:["https://thenounproject.com/icon/car-rental-71/"]},{path:"./assets/layers/charging_station/CEE7_4F.svg",license:"MIT",authors:["Gabor111a"],sources:["https://commons.wikimedia.org/wiki/File:CEE7_Type4.svg","https://github.com/openchargemap/ocm-app/issues/22"]},{path:"./assets/layers/charging_station/Chademo_type4.svg",license:"CC-BY-SA-4.0",authors:["GreatDrok"],sources:["https://upload.wikimedia.org/wikipedia/commons/e/ec/Chademo_type4.svg"]},{path:"./assets/layers/charging_station/Tesla-hpwc-model-s.svg",license:"CC-BY-SA-4.0",authors:["GreatDrok"],sources:["https://upload.wikimedia.org/wikipedia/commons/2/26/Tesla-hpwc-model-s.svg"]},{path:"./assets/layers/charging_station/Type1-ccs.svg",license:"CC-BY-SA-4.0",authors:["GreatDrok"],sources:["https://upload.wikimedia.org/wikipedia/commons/0/05/Type1-ccs.svg"]},{path:"./assets/layers/charging_station/Type1_J1772.svg",license:"CC-BY-SA-4.0",authors:["GreatDrok"],sources:["https://upload.wikimedia.org/wikipedia/commons/d/d0/Type1_J1772.svg"]},{path:"./assets/layers/charging_station/Type2_CCS.svg",license:"CC-BY-SA-4.0",authors:["GreatDrok"],sources:["https://commons.wikimedia.org/wiki/File:Combo-ccs-eu.svg"]},{path:"./assets/layers/charging_station/Type2_socket.svg",license:"CC-BY-SA-4.0",authors:["GreatDrok"],sources:["https://commons.wikimedia.org/wiki/File:Type_2_mennekes.svg"]},{path:"./assets/layers/charging_station/Type2_tethered.svg",license:"CC-BY-SA-4.0",authors:["GreatDrok","Open Charge Map"],sources:["https://raw.githubusercontent.com/openchargemap/ocm-app/master/src/assets/images/icons/connectors/Type2_tethered.svg"]},{path:"./assets/layers/charging_station/Type3c.svg",license:"CC-BY-SA-4.0",authors:["Pyrog"],sources:["https://commons.wikimedia.org/wiki/File:Type3c.svg"]},{path:"./assets/layers/charging_station/TypeE.svg",license:"MIT",authors:["pietervdvn"],sources:[]},{path:"./assets/layers/charging_station/bosch-3pin.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/charging_station/bosch-5pin.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/charging_station/under_construction.svg",license:"CC0-1.0",authors:["Sarang"],sources:["https://upload.wikimedia.org/wikipedia/commons/2/20/UnderCon_icon.svg"]},{path:"./assets/layers/charging_station/usb_port.svg",license:"CC-BY-4.0",authors:["Ryan Dardis"],sources:["https://thenounproject.com/term/usb-port/94768/"]},{path:"./assets/layers/cinema/cinema.svg",license:"PUBLIC-DOMAIN",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Cinema-16.svg"]},{path:"./assets/layers/clock/clock.svg",license:"CC0-1.0",authors:["SJJB Management"],sources:["https://wiki.openstreetmap.org/wiki/File:Amenity_clock_20x20.svg"]},{path:"./assets/layers/clock/clock_digital.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/crab_address/housenumber_blank.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/crossings/180px-Trairvoja_mapeto.jpg",license:"CC-BY-SA-4.0",authors:["Martin Constantino–Bodin"],sources:["https://commons.wikimedia.org/wiki/File:Trairvoja_mapeto.jpg"]},{path:"./assets/layers/crossings/Belgian_road_sign_B22.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_B22.svg"]},{path:"./assets/layers/crossings/Belgian_road_sign_B23.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_B23.svg"]},{path:"./assets/layers/crossings/Vibrating_button_illustration.jpg",license:"CC-BY-4.0",authors:["Tobias Zwick"],sources:["https://wiki.openstreetmap.org/wiki/File:Vibrating_button_illustration.jpg"]},{path:"./assets/layers/crossings/pedestrian_crossing.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/quest%20icons/pedestrian_crossing.svg"]},{path:"./assets/layers/crossings/traffic_lights.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/quest%20icons/traffic_lights.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_road_sign_D07.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_D07.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_road_sign_D09.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_D09.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_road_sign_D10.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_D10.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_traffic_sign_M13.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_traffic_sign_M13.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_traffic_sign_M14.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_traffic_sign_M14.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_traffic_sign_M15.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_traffic_sign_M15.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_traffic_sign_M16.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_traffic_sign_M16.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_traffic_sign_M6.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_traffic_sign_M6.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/be/Belgian_traffic_sign_M7.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_traffic_sign_M7.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/nl/Nederlands_verkeersbord_G11.svg",license:"CC0-1.0",authors:["Ministerie van Infrastructuur en Waterstaat"],sources:["https://commons.wikimedia.org/wiki/File:Nederlands_verkeersbord_G11.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/nl/Nederlands_verkeersbord_G12a.svg",license:"CC0-1.0",authors:["Ministerie van Infrastructuur en Waterstaat"],sources:["https://commons.wikimedia.org/wiki/File:Nederlands_verkeersbord_G12a.svg"]},{path:"./assets/layers/cycleways_and_roads/traffic_sign/nl/Nederlands_verkeersbord_G13.svg",license:"CC0-1.0",authors:["Ministerie van Infrastructuur en Waterstaat"],sources:["https://commons.wikimedia.org/wiki/File:Nederlands_verkeersbord_G13.svg"]},{path:"./assets/layers/defibrillator/defibrillator.svg",license:"CC0-1.0",authors:["MaxxL"],sources:["https://commons.wikimedia.org/wiki/File:ISO_7010_E010.svg","https://raw.githubusercontent.com/osmbe/play/master/mapcomplete/aed_checked.svg"]},{path:"./assets/layers/dentist/dentist.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Dentist-14.svg"]},{path:"./assets/layers/disaster_response/CivilDefence.svg",license:"TRIVIAL",authors:["https://commons.wikimedia.org/wiki/User:MStankie"],sources:["https://commons.wikimedia.org/wiki/File:CivilDefence.svg"]},{path:"./assets/layers/doctors/doctors.svg",license:"CC0-1.0",authors:["osmcarto"],sources:["https://wiki.openstreetmap.org/wiki/File:Doctors-14.svg"]},{path:"./assets/layers/dogpark/dog-park.svg",license:"CC0-1.0",authors:["Public Domain Symbols","Niels Elgaard Larsen"],sources:["https://openclipart.org/detail/260714/dogpark15"]},{path:"./assets/layers/drinking_water/bottle.svg",license:"CC0-1.0",authors:["Unkown"],sources:["https://www.svgrepo.com/svg/83123/water-bottle"]},{path:"./assets/layers/drinking_water/bubbler.svg",license:"CC0-1.0",authors:["AIGA"],sources:["https://commons.wikimedia.org/wiki/File:Drinking_Fountain_-_The_Noun_Project.svg"]},{path:"./assets/layers/drinking_water/drips.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/layers/drinking_water/no_winter.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/drinking_water/tap.svg",license:"CC0-1.0",authors:["Krzysztof Franek"],sources:["https://commons.wikimedia.org/wiki/File:Water_DIN-style.svg"]},{path:"./assets/layers/drinking_water/winter.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/elevator/elevator_wheelchair.svg",license:"CC-BY-SA-4.0",authors:["https://www.ctsteward.com/"],sources:["https://www.ctsteward.com/"]},{path:"./assets/layers/entrance/emergency_door.svg",license:"CC-BY-SA-4.0",authors:["PanierAvide"],sources:["https://commons.wikimedia.org/wiki/File:Emergency_door_icon.svg"]},{path:"./assets/layers/entrance/entrance.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/layers/etymology/logo.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/fitness_centre/gym.svg",license:"CC-BY-4.0",authors:["Bernd Lakenbrink","Noun Project"],sources:["https://thenounproject.com/icon/gym-3583088/"]},{path:"./assets/layers/fitness_station/07-12-2016,_Fitness_trail,_Parque_da_Alfarrobeira,_Albufeira_2.jpg",license:"CC-BY-SA-4.0",authors:["Kolforn"],sources:["https://commons.wikimedia.org/wiki/File:07-12-2016,_Fitness_trail,_Parque_da_Alfarrobeira,_Albufeira_(2).JPG"]},{path:"./assets/layers/fitness_station/Annecy_-_rower.jpg",license:"CC-BY-SA-4.0",authors:["Tiia Monto"],sources:["https://commons.wikimedia.org/wiki/File:Annecy_-_rower.jpg"]},{path:"./assets/layers/fitness_station/Ansan_Park_beind_the_city_hall_022.jpg",license:"CC-BY-SA-4.0",authors:["Piotrus"],sources:["https://commons.wikimedia.org/wiki/File:Ansan_Park_(beind_the_city_hall)_022.JPG"]},{path:"./assets/layers/fitness_station/Battling_ropes.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Battling_ropes.jpg"]},{path:"./assets/layers/fitness_station/Captains_chair.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Captains_chair.jpg"]},{path:"./assets/layers/fitness_station/Exercise9159.jpg",license:"CC-BY-SA-4.0",authors:["יעקב"],sources:["https://commons.wikimedia.org/wiki/File:Exercise9159.jpg"]},{path:"./assets/layers/fitness_station/Exercise9170.jpg",license:"CC-BY-SA-4.0",authors:["יעקב"],sources:["https://commons.wikimedia.org/wiki/File:Exercise9170.JPG"]},{path:"./assets/layers/fitness_station/Exercise_Box.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Exercise_Box.jpg"]},{path:"./assets/layers/fitness_station/Fitness_station_beam_jump.jpg",license:"CC-BY-SA-4.0",authors:["Axelos"],sources:["https://wiki.openstreetmap.org/wiki/File:Fitness_station_beam_jump.jpg"]},{path:"./assets/layers/fitness_station/Fitness_station_hurdling.jpg",license:"CC-BY-SA-4.0",authors:["Axelos"],sources:["https://wiki.openstreetmap.org/wiki/File:Fitness_station_hurdling.jpg"]},{path:"./assets/layers/fitness_station/Fitness_station_leapfrog.jpg",license:"CC-BY-SA-4.0",authors:["Axelos"],sources:["https://wiki.openstreetmap.org/wiki/File:Fitness_station_leapfrog.jpg"]},{path:"./assets/layers/fitness_station/Fitness_station_slalom.jpg",license:"CC-BY-SA-4.0",authors:["Axelos"],sources:["https://wiki.openstreetmap.org/wiki/File:Fitness_station_slalom.jpg"]},{path:"./assets/layers/fitness_station/Fitness_station_stepping_stone.jpg",license:"CC-BY-SA-4.0",authors:["Axelos"],sources:["https://wiki.openstreetmap.org/wiki/File:Fitness_station_stepping_stone.jpg"]},{path:"./assets/layers/fitness_station/Fitness_station_stretch_bars.jpg",license:"CC-BY-SA-4.0",authors:["Axelos"],sources:["https://wiki.openstreetmap.org/wiki/File:Fitness_station_stretch_bars.jpg"]},{path:"./assets/layers/fitness_station/Fitness_station_wall.jpg",license:"CC-BY-SA-4.0",authors:["Axelos","Al-Hun"],sources:["https://wiki.openstreetmap.org/wiki/File:Fitness_station_wall.jpg"]},{path:"./assets/layers/fitness_station/Horizontal_ladder.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Horizontal_ladder.jpg"]},{path:"./assets/layers/fitness_station/Inclined_sit-up_and_hyperextension_bench.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Inclined_sit-up_and_hyperextension_bench.jpg"]},{path:"./assets/layers/fitness_station/Inclined_sit-up_bench.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Inclined_sit-up_bench.jpg"]},{path:"./assets/layers/fitness_station/Log_lifting_exercise.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Log_lifting_exercise.jpg"]},{path:"./assets/layers/fitness_station/Outdoor_fitness_station_sign.jpg",license:"CC-BY-SA-4.0",authors:["kaitu"],sources:["https://commons.wikimedia.org/wiki/File:Outdoor_fitness_station_sign.jpg","https://www.mapillary.com/app/?pKey=iWBo8pm9COksv8Qc8E7cfw&lat=45.87432166666667&lng=9.487998999999999&focus=photo&z=17&x=0.4903320875161608&y=0.48257487392238285&zoom=0"]},{path:"./assets/layers/fitness_station/Outdoor_stationary_bicycle.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Outdoor_stationary_bicycle.jpg"]},{path:"./assets/layers/fitness_station/Push-up_bars.jpg",license:"CC-BY-SA-4.0",authors:["Tpikonen"],sources:["https://commons.wikimedia.org/wiki/File:Push-up_bars.jpg"]},{path:"./assets/layers/fitness_station/RIAN_archive_493268_Sports_at_a_kindergarten.jpg",license:"CC-BY-SA-4.0",authors:["Igor Utkin"],sources:["https://commons.wikimedia.org/wiki/File:RIAN_archive_493268_Sports_at_a_kindergarten.jpg"]},{path:"./assets/layers/fitness_station/Slacklineanlage_im_Dietenbachpark.jpg",license:"CC-BY-SA-4.0",authors:["Andreas Schwarzkopf"],sources:["https://commons.wikimedia.org/wiki/File:Slacklineanlage_im_Dietenbachpark.jpg"]},{path:"./assets/layers/fitness_station/Trimm-Dich-Pfad_Grünwalder_Forst_Klimmzüge.jpg",license:"CC-BY-SA-4.0",authors:["Zeitlupe"],sources:["https://commons.wikimedia.org/wiki/File:Trimm-Dich-Pfad_Grünwalder_Forst_Klimmzüge.jpg"]},{path:"./assets/layers/fitness_station/fitness.svg",license:"CC0-1.0",authors:["Kocio"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/leisure/fitness.svg"]},{path:"./assets/layers/food/Vegetarian-mark.svg",license:"LOGO",authors:["European Vegetarian Union"],sources:["https://commons.wikimedia.org/wiki/File:Vegetarian-mark.svg"]},{path:"./assets/layers/food/fastfood.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/w/images/1/1f/Fast-food-16.svg"]},{path:"./assets/layers/food/fries.svg",license:"CC-BY-4.0",authors:["Freepik"],sources:["https://www.flaticon.com/free-icon/french-fries_1144288"]},{path:"./assets/layers/food/organic.svg",license:"CC0-1.0",authors:["European Commission"],sources:["https://commons.wikimedia.org/wiki/File:Organic-Logo.svg"]},{path:"./assets/layers/food/restaurant.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/w/images/b/bb/Restaurant-14.svg"]},{path:"./assets/layers/ghost_bike/ghost_bike.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/governments/government.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Office-16.svg"]},{path:"./assets/layers/guidepost/guidepost.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Guidepost-14.svg"]},{path:"./assets/layers/guidepost/guidepost_example.jpg",license:"CC0-1.0",authors:["Mschaeuble"],sources:["https://wiki.openstreetmap.org/wiki/File:Signpost.jpg"]},{path:"./assets/layers/hackerspace/3d_printer.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/bicycle.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/ceramics.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/cnc.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/lasercutter.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/media_studio.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/metal.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/sewing_machine.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hackerspace/woodworking.svg",license:"CC-By-SA",authors:["Verbund Offener Werkstätten"],sources:["https://www.offene-werkstaetten.org/de/werkstatt-suche"]},{path:"./assets/layers/hospital/hospital.svg",license:"CC0-1.0",authors:["osmcarto"],sources:["https://wiki.openstreetmap.org/wiki/File:Hospital-14.svg"]},{path:"./assets/layers/hotel/hotel.svg",license:"CC0-1.0",authors:["Andy Allan","Michael Glanznig","Adamant36","Paul Dicker"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/tourism/hotel.svg"]},{path:"./assets/layers/hydrant/barcelona.jpg",license:"CC-BY-SA-4.0",authors:["CLIGNER"],sources:["https://commons.wikimedia.org/wiki/File:Gama_racores_UNE23400_ligatura.JPG"]},{path:"./assets/layers/hydrant/storz.jpg",license:"CC-BY-SA-4.0",authors:["Karl Gruber"],sources:["https://commons.wikimedia.org/wiki/File:Festkupplung.jpg"]},{path:"./assets/layers/ice_cream/ice_cream.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Ice-cream-14.svg"]},{path:"./assets/layers/icons/website.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/id_presets/ID.svg",license:"WTFPL",authors:["iD editor"],sources:["https://wiki.openstreetmap.org/wiki/File:ID.svg"]},{path:"./assets/layers/id_presets/fas-baby-carriage.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-bath.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-blender.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-book.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-bowl-rice.svg",license:"CC-BY 4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-camera-retro.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-cannabis.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-car-battery.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-carrot.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-cat.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-cheese.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-compact-disc.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-couch.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-crutch.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-dice.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-dolly.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-door-open.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-dragon.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-futbol.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-guitar.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-hat-cowboy-side.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-jar.svg",license:"CC-BY 4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-key.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-laptop.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-leaf.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-microchip.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-motorcycle.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-newspaper.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-paint-roller.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-paperclip.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-pills.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-plate-wheat.svg",license:"CC-BY 4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-plug.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-print.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-rocket.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-store.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-suitcase-rolling.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-suitcase.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-tape.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-tractor.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-trophy.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-vector-square.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/fas-wine-bottle.svg",license:"CC-BY-4.0",authors:["Font-Awesome icon set"],sources:["https://github.com/FortAwesome/Font-Awesome"]},{path:"./assets/layers/id_presets/maki-alcohol-shop.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-bakery.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-bicycle.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-car-repair.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-car.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-cemetery.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-clothing-store.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-confectionery.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-florist.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-gaming.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-garden-centre.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-gift.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-grocery.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-jewelry-store.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-lodging.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-optician.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-shoe.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-shop.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-teahouse.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-telephone.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-warehouse.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/maki-watch.svg",license:"CC0-1.0",authors:["Maki icon set"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/id_presets/temaki-balloon.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-beauty_salon.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-boat.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-bottles.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-bow_and_arrow.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-camper_trailer.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-cleaver.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-cloth.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-clothes_hanger.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-coffee.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-compass.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-curtains.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-dagger.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-desk_lamp.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-fashion_accessories.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-fireplace.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-fish_cleaning.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-furniture.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-hair_care.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-hammer_shoe.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-handbag.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-hearing_aid.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-ice_fishing.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-kitchen_sink.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-laundry.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-lipstick.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-meat.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-military.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-money_hand.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-motorcycle_repair.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-movie_rental.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-needle_and_spool.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-perfume.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-pet_grooming.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-pipe.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-power.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-propane_tank.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-psychic.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-rocket_firework.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-scuba_diving.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-spa.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-speaker.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-spice_bottle.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-storage_fermenter.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-storage_rental.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-tattoo_machine.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-tiling.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-tire.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-tools.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-vacuum.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-vase.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-water_bottle.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/id_presets/temaki-window.svg",license:"CC0-1.0",authors:["Temaki icon set"],sources:["https://github.com/ideditor/temaki"]},{path:"./assets/layers/indoors/room_administration.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_administration.svg"]},{path:"./assets/layers/indoors/room_auditorium.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_auditorium.svg"]},{path:"./assets/layers/indoors/room_bedroom.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_bedroom.svg"]},{path:"./assets/layers/indoors/room_chapel.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_chapel.svg"]},{path:"./assets/layers/indoors/room_class.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_class.svg"]},{path:"./assets/layers/indoors/room_computer.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_computer.svg"]},{path:"./assets/layers/indoors/room_conference.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_conference.svg"]},{path:"./assets/layers/indoors/room_crypt.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_crypt.svg"]},{path:"./assets/layers/indoors/room_kitchen.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_kitchen.svg"]},{path:"./assets/layers/indoors/room_laboratory.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_laboratory.svg"]},{path:"./assets/layers/indoors/room_library.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_library.svg"]},{path:"./assets/layers/indoors/room_locker.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_locker.svg"]},{path:"./assets/layers/indoors/room_nursery.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_nursery.svg"]},{path:"./assets/layers/indoors/room_office.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_office.svg"]},{path:"./assets/layers/indoors/room_prison_cell.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_prison_cell.svg"]},{path:"./assets/layers/indoors/room_restaurant.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_restaurant.svg"]},{path:"./assets/layers/indoors/room_security_check.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_security_check.svg"]},{path:"./assets/layers/indoors/room_sport.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_sport.svg"]},{path:"./assets/layers/indoors/room_storage.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_storage.svg"]},{path:"./assets/layers/indoors/room_technical.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_technical.svg"]},{path:"./assets/layers/indoors/room_toilets.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_toilets.svg"]},{path:"./assets/layers/indoors/room_waiting.svg",license:"AGPL-3.0-only",authors:["Adrien Pavie"],sources:["https://framagit.org/OpenLevelUp/OpenLevelUp/-/blob/master/src/img/features-vector/room_waiting.svg"]},{path:"./assets/layers/information_board/board.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Board-14.svg"]},{path:"./assets/layers/item_with_image/camera.svg",license:"GPL3",authors:["https://gitlab.gnome.org/jimmac"],sources:["https://commons.wikimedia.org/wiki/File:GNOME_Photos_icon_2018.svg"]},{path:"./assets/layers/kerbs/KerbIcon.svg",license:"CC0-1.0",authors:["Treeem"],sources:["https://commons.wikimedia.org/wiki/File:KerbIcon.svg"]},{path:"./assets/layers/kerbs/flush.svg",license:"CC0-1.0",authors:["Jeroen Hoek"],sources:["https://wiki.openstreetmap.org/wiki/File:Icon_kerb%3Dflush.svg"]},{path:"./assets/layers/kerbs/lowered.svg",license:"CC0-1.0",authors:["Jeroen Hoek"],sources:["https://wiki.openstreetmap.org/wiki/File:Icon_kerb%3Dlowered.svg"]},{path:"./assets/layers/kerbs/no.svg",license:"CC0-1.0",authors:["Jeroen Hoek"],sources:["https://wiki.openstreetmap.org/wiki/File:Icon_kerb%3Dno.svg"]},{path:"./assets/layers/kerbs/raised.svg",license:"CC0-1.0",authors:["Jeroen Hoek"],sources:["https://wiki.openstreetmap.org/wiki/File:Icon_kerb%3Draised.svg"]},{path:"./assets/layers/kindergarten_childcare/childcare.svg",license:"CC-BY-4.0",authors:["Diego Naive"],sources:["https://thenounproject.com/icon/child-care-332981/"]},{path:"./assets/layers/kindergarten_childcare/kindergarten.svg",license:"CC-BY-4.0",authors:["Diego Naive","VideoPlasty","Pietervdvn"],sources:["https://thenounproject.com/icon/child-care-332981/","https://commons.wikimedia.org/wiki/File:Blackboard_Flat_Icon_Vector.svg"]},{path:"./assets/layers/map/map-stickered.svg",license:"CC-BY-SA-4.0",authors:["OpenStreetMap"," Pieter Vander Vennet"," M!dgard"],sources:["https://OpenStreetMap.org"," https://wiki.openstreetmap.org/wiki/Logos"]},{path:"./assets/layers/map/map.svg",license:"CC-BY-SA-4.0",authors:[],sources:["https://www.OpenStreetMap.org"]},{path:"./assets/layers/map/osm-logo-buggy-attr.svg",license:"CC-BY-SA-4.0",authors:[],sources:["https://www.OpenStreetMap.org"]},{path:"./assets/layers/map/osm-logo-white-bg.svg",license:"CC-BY-SA-4.0",authors:[],sources:["https://www.OpenStreetMap.org"]},{path:"./assets/layers/maproulette/logomark.svg",license:"MIT",authors:["MapRoulette"],sources:["https://github.com/maproulette/docs/blob/master/src/assets/svg/logo.svg"]},{path:"./assets/layers/maxspeed/living_street_be.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://nl.wikipedia.org/wiki/Bestand:Belgian_road_sign_F12a.svg"]},{path:"./assets/layers/memorial/memorial.svg",license:"CC0-1.0",authors:["OSM-Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Memorial-16.svg"]},{path:"./assets/layers/memorial/plaque.svg",license:"CC0-1.0",authors:["OSM Carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Plaque.svg"]},{path:"./assets/layers/mountain_rescue/red_cross.svg",license:"trivial",authors:[" 	Jon Harald Soby"],sources:["https://commons.wikimedia.org/wiki/File:Flag_of_the_Red_Cross.svg"]},{path:"./assets/layers/nature_reserve/ANB.jpg",license:"LOGO",authors:["Agentschap Natuur en Bos"],sources:["https://www.natuurenbos.be/"]},{path:"./assets/layers/nature_reserve/Natuurpunt.jpg",license:"LOGO",authors:["Natuurpunt"],sources:["https://www.natuurpunt.be/"]},{path:"./assets/layers/nature_reserve/groen_logo.svg",license:"LOGO",authors:["Groen"],sources:["https://www.groen.be/"]},{path:"./assets/layers/nature_reserve/nature_reserve.svg",license:"CC-BY-3.0",authors:["@ Эдуард Черных"],sources:["https://www.onlinewebfonts.com/icon/389579"]},{path:"./assets/layers/observation_tower/Tower_observation.svg",license:"CC0-1.0",authors:["Teslaton"],sources:["https://wiki.openstreetmap.org/w/images/b/b9/Tower_observation.svg"]},{path:"./assets/layers/osm_community_index/osm.svg",license:"ISC",authors:["osmlab"],sources:["https://github.com/osmlab/osm-community-index/blob/main/dist/img/osm.svg"]},{path:"./assets/layers/parcel_lockers/parcel_lockers.svg",license:"CC-BY-4.0",authors:["Emmanuel Darmon","Noun Project"],sources:["https://thenounproject.com/icon/parcel-locker-249755/"]},{path:"./assets/layers/parking/parking.svg",license:"CC-BY-4.0",authors:["Freepik"],sources:["https://www.flaticon.com/free-icon/placeholder_608690?term=parking&page=1&position=16&page=1&position=16&related_id=608690&origin=search"]},{path:"./assets/layers/parking_spaces/hgv.svg",license:"CC0-1.0",authors:["MarianSigler"],sources:["https://commons.wikimedia.org/wiki/File:Sinnbild_LKW.svg"]},{path:"./assets/layers/parking_spaces/parking_space.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/parking_spaces/parking_space_private.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/parking_ticket_machine/parking_tickets.svg",license:"CC0-1.0",authors:["Jérémy Ragusa"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/parking_tickets.svg"]},{path:"./assets/layers/pharmacy/pharmacy.svg",license:"CC0-1.0",authors:["OSM-carto"],sources:["https://wiki.openstreetmap.org/wiki/File:Pharmacy-14.svg"]},{path:"./assets/layers/physiotherapist/doctors.svg",license:"CC0-1.0",authors:["osmcarto"],sources:["https://wiki.openstreetmap.org/wiki/File:Doctors-14.svg"]},{path:"./assets/layers/picnic_table/picnic_table.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/play_forest/icon.svg",license:"LOGO",authors:["Agentschap Natuur en Bos"],sources:["https://www.natuurenbos.be/spelen"]},{path:"./assets/layers/playground_equipment/DeimosXL1.jpg",license:"CC-BY-SA 4.0",authors:["Damian stawowy"],sources:["https://commons.wikimedia.org/wiki/File:DeimosXL1.jpg"]},{path:"./assets/layers/playground_equipment/Funnel_ball.jpg",license:"Public domain",authors:["Pavtron (talk)"],sources:["https://commons.wikimedia.org/wiki/File:Funnel_ball.jpg"]},{path:"./assets/layers/playground_equipment/Hinkelbaan_tegels.jpg",license:"Public domain",authors:["M.Minderhoud"],sources:["https://commons.wikimedia.org/wiki/File:Hinkelbaan_tegels.jpg"]},{path:"./assets/layers/playground_equipment/Hupfkissen.jpg",license:"Public domain",authors:["Peter Wanders"],sources:["https://commons.wikimedia.org/wiki/File:H%C3%BCpfkissen.jpg"]},{path:"./assets/layers/playground_equipment/Manually_powered_carousel_on_a_playground_in_Saint-Petersburg.JPG",license:"CC-BY-SA 4.0",authors:["Reda Kerbouche"],sources:["https://commons.wikimedia.org/wiki/File:Manually_powered_carousel_on_a_playground_in_Saint-Petersburg.JPG"]},{path:"./assets/layers/playground_equipment/Playground_Map,_Washington_Elementary.jpg",license:"CC-BY-SA 4.0",authors:["Jleedev"],sources:["https://commons.wikimedia.org/wiki/File:Playground_Map,_Washington_Elementary.jpg"]},{path:"./assets/layers/playground_equipment/Playground_climbingwall.jpg",license:"Public Domain",authors:["Mktravel"],sources:["https://wiki.openstreetmap.org/wiki/File:Playground_climbingwall.jpg"]},{path:"./assets/layers/playground_equipment/Playground_in_Muchall_Park,_Wolverhampton_-_geograph.org.uk_-_2735437.jpg",license:"CC-BY-SA 2.0",authors:["Roger  Kidd"],sources:["https://commons.wikimedia.org/wiki/File:Playground_in_Muchall_Park,_Wolverhampton_-_geograph.org.uk_-_2735437.jpg"]},{path:"./assets/layers/playground_equipment/Playground_swing_03.jpg",license:"CC-BY-SA 4.0",authors:["Kritzolina"],sources:["https://commons.wikimedia.org/wiki/File:Playground_swing_03.jpg"]},{path:"./assets/layers/playground_equipment/Playhouse.jpg",license:"CC-BY-SA 3.0",authors:["Saku"],sources:["https://commons.wikimedia.org/wiki/File:Playhouse.jpg"]},{path:"./assets/layers/playground_equipment/Rekstok.JPG",license:"Public domain",authors:["self"],sources:["https://commons.wikimedia.org/wiki/File:Rekstok.JPG"]},{path:"./assets/layers/playground_equipment/Seesaw-aa.jpg",license:"Public domain",authors:["Itsmine"],sources:["https://commons.wikimedia.org/wiki/File:Seesaw-aa.jpg"]},{path:"./assets/layers/playground_equipment/Spinning_circle.jpg",license:"CC0 1.0",authors:["Jose1711"],sources:["https://wiki.openstreetmap.org/wiki/File:Spinning_circle.jpg"]},{path:"./assets/layers/playground_equipment/SunwardCohousingPlayStructure2005.jpg",license:"Public domain",authors:["Mc on avon"],sources:["https://commons.wikimedia.org/wiki/File:SunwardCohousingPlayStructure2005.jpg"]},{path:"./assets/layers/playground_equipment/Szwedy_-_plac_zabaw_-_kotko_i_krzyzyk.jpg",license:"CC-BY 3.0",authors:["Pece"],sources:["https://commons.wikimedia.org/wiki/File:Szwedy_-_plac_zabaw_-_k%C3%B3%C5%82ko_i_krzy%C5%BCyk.jpg"]},{path:"./assets/layers/playground_equipment/Teen_shelter_near_former_coastguard_lookout,_Watchet_-_geograph.org.uk_-_1714960.jpg",license:"CC-BY-SA 2.0",authors:["Phil Champion"],sources:["https://commons.wikimedia.org/wiki/File:Teen_shelter_near_former_coastguard_lookout,_Watchet_-_geograph.org.uk_-_1714960.jpg"]},{path:"./assets/layers/playground_equipment/Urbeach-high-park-splashpad.jpg",license:"CC-BY-SA 3.0",authors:["Glogger"],sources:["https://commons.wikimedia.org/wiki/File:Urbeach-high-park-splashpad.jpg"]},{path:"./assets/layers/playground_equipment/Zandbakw.jpg",license:"CC-BY-SA 3.0",authors:["Waerth"],sources:["https://commons.wikimedia.org/wiki/File:Zandbakw.jpg"]},{path:"./assets/layers/postboxes/postbox.svg",license:"CC-BY-4.0",authors:["Vincent Le Moign","https://twitter.com/webalys"],sources:["https://upload.wikimedia.org/wikipedia/commons/6/6d/726-postbox.svg","http://emoji.streamlineicons.com"]},{path:"./assets/layers/postoffices/post_office.svg",license:"CC-BY-SA-4.0",authors:["https://github.com/emojione/emojione/graphs/contributors"],sources:["https://commons.wikimedia.org/wiki/File:Emojione_BW_1F3E4.svg","https://github.com/emojione/emojione/blob/2.2.7/assets/svg_bw/1f3e4.svg"]},{path:"./assets/layers/questions/denominations/chf/1000chf.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/questions/denominations/chf/100chf.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/questions/denominations/chf/10chf.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/questions/denominations/chf/10rp-2019-800px.png",license:"CC0-1.0",authors:["Swissmint"],sources:["https://www.swissmint.ch/swissmint/de/home/dokumentation/bildgalerie/umlaufmuenzen-bildgalerie.html"]},{path:"./assets/layers/questions/denominations/chf/1fr-2019-800px.png",license:"CC0-1.0",authors:["Swissmint"],sources:["https://www.swissmint.ch/swissmint/de/home/dokumentation/bildgalerie/umlaufmuenzen-bildgalerie.html"]},{path:"./assets/layers/questions/denominations/chf/200chf.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/questions/denominations/chf/20chf.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/questions/denominations/chf/20rp-2019-800px.png",license:"CC0-1.0",authors:["Swissmint"],sources:["https://www.swissmint.ch/swissmint/de/home/dokumentation/bildgalerie/umlaufmuenzen-bildgalerie.html"]},{path:"./assets/layers/questions/denominations/chf/2fr-2019-800px.png",license:"CC0-1.0",authors:["Swissmint"],sources:["https://www.swissmint.ch/swissmint/de/home/dokumentation/bildgalerie/umlaufmuenzen-bildgalerie.html"]},{path:"./assets/layers/questions/denominations/chf/50chf.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/questions/denominations/chf/50rp-2019-800px.png",license:"CC0-1.0",authors:["Swissmint"],sources:["https://www.swissmint.ch/swissmint/de/home/dokumentation/bildgalerie/umlaufmuenzen-bildgalerie.html"]},{path:"./assets/layers/questions/denominations/chf/5fr-2019-800px.png",license:"CC0-1.0",authors:["Swissmint"],sources:["https://www.swissmint.ch/swissmint/de/home/dokumentation/bildgalerie/umlaufmuenzen-bildgalerie.html"]},{path:"./assets/layers/questions/denominations/chf/5rp-2019-800px.png",license:"CC0-1.0",authors:["Swissmint"],sources:["https://www.swissmint.ch/swissmint/de/home/dokumentation/bildgalerie/umlaufmuenzen-bildgalerie.html"]},{path:"./assets/layers/questions/denominations/eur/100euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311346/worksheet-100-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/10cent.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311337/worksheet-10-cent-coloured"]},{path:"./assets/layers/questions/denominations/eur/10euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311343/worksheet-10-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/1cent.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311334/worksheet-1-cent-coloured"]},{path:"./assets/layers/questions/denominations/eur/1euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311340/worksheet-1-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/200euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311347/worksheet-200-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/20cent.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311338/worksheet-20-cent-coloured"]},{path:"./assets/layers/questions/denominations/eur/20euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311344/worksheet-20-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/2cent.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311335/worksheet-2-cent-coloured"]},{path:"./assets/layers/questions/denominations/eur/2euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311341/worksheet-2-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/500euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311348/worksheet-500-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/50cent.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311339/worksheet-50-cent-coloured"]},{path:"./assets/layers/questions/denominations/eur/50euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311345/worksheet-50-euro-coloured"]},{path:"./assets/layers/questions/denominations/eur/5cent.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311336/worksheet-5-cent-coloured"]},{path:"./assets/layers/questions/denominations/eur/5euro.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/311342/worksheet-5-euro-coloured"]},{path:"./assets/layers/questions/audio_induction_loop.svg",license:"CC-BY-4.0",authors:["Carl Holderness"],sources:["https://commons.wikimedia.org/wiki/File:Noun_telecoil_audio_induction_hearing_loop_symbol_2011213.svg"]},{path:"./assets/layers/questions/audio_induction_loop_missing.svg",license:"CC-BY-4.0",authors:["Carl Holderness"],sources:["https://commons.wikimedia.org/wiki/File:Noun_telecoil_audio_induction_hearing_loop_symbol_2011213.svg"]},{path:"./assets/layers/questions/cash.svg",license:"CC-BY-3.0",authors:["Online Web Fonts"],sources:["https://www.onlinewebfonts.com/icon/464494"]},{path:"./assets/layers/questions/coins.svg",license:"CC-BY-3.0",authors:["Online Web Fonts"],sources:["https://www.onlinewebfonts.com/icon/464488"]},{path:"./assets/layers/questions/dogs_allowed.svg",license:"PUBLIC-DOMAIN",authors:["OpenClipArt"],sources:["https://freesvg.org/no-dogs-round-sign-vector-graphics"]},{path:"./assets/layers/questions/dogs_leashed.svg",license:"PUBLIC-DOMAIN",authors:[" 	NPS Graphics, converted by User:ZyMOS"],sources:["https://commons.wikimedia.org/wiki/File:Pictograms-nps-pets_on_leash-2.svg"]},{path:"./assets/layers/questions/nfc_card.svg",license:"CC0-1.0",authors:["Stijn Wens"],sources:["https://wens.be/free-antwerpenize-bicycle-font"]},{path:"./assets/layers/questions/no_dogs.svg",license:"Public Domain",authors:["OpenClipArt"],sources:["https://freesvg.org/no-dogs-round-sign-vector-graphics"]},{path:"./assets/layers/questions/no_smoking.svg",license:"CC0-1.0",authors:["AIGA"],sources:["https://upload.wikimedia.org/wikipedia/commons/6/6b/No_Smoking.svg","https://www.aiga.org/content.cfm/symbol-signs"]},{path:"./assets/layers/questions/notes.svg",license:"CC-BY-3.0",authors:["Online Web Fonts"],sources:["https://www.onlinewebfonts.com/icon/464507"]},{path:"./assets/layers/questions/payment_card.svg",license:"CC0-1.0",authors:[" 	Maxi Koichi (maxixam)"],sources:["https://commons.wikimedia.org/wiki/File:Credit_Card_-_The_Noun_Project.svg"]},{path:"./assets/layers/questions/phone.svg",license:"CC-BY-3.0",authors:["@ tyskrat"],sources:["https://www.onlinewebfonts.com/icon/1059"]},{path:"./assets/layers/questions/phone.svg",license:"CC-BY-3.0",authors:["@ tyskrat"],sources:["https://www.onlinewebfonts.com/icon/1059"]},{path:"./assets/layers/questions/qrcode.svg",license:"MIT",authors:["Ionic Team"],sources:["https://commons.wikimedia.org/wiki/File:Ionicons_qr-code-outline.svg"]},{path:"./assets/layers/questions/send_email.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/layers/questions/send_email.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/layers/questions/smartphone.svg",license:"CC-BY-3.0",authors:["To Uyen"],sources:["https://commons.wikimedia.org/wiki/File:Smartphone_icon_-_Noun_Project_283536.svg"]},{path:"./assets/layers/questions/smoking.svg",license:"CC0-1.0",authors:["Wiki-User03","ZooFari"],sources:["https://commons.wikimedia.org/wiki/File:Smoking_pictogram_(black).svg"]},{path:"./assets/layers/reception_desk/reception_desk.svg",license:"CC-BY-SA-4.0",authors:["Robin Julien"],sources:["https://www.ctsteward.com/"]},{path:"./assets/layers/recycling/batteries.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/batteries.svg"]},{path:"./assets/layers/recycling/beverage_cartons.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/beverage_cartons.svg"]},{path:"./assets/layers/recycling/bicycles.svg",license:"CC0-1.0",authors:["Antwerpenize Bike Font"],sources:[]},{path:"./assets/layers/recycling/cans.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/cans.svg"]},{path:"./assets/layers/recycling/clothes.svg",license:"CC-BY-SA-4.0",authors:["Adrien Pavie","modified from EmojiOne 2: U+1F456, U+1F45"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/clothes.svg"]},{path:"./assets/layers/recycling/cooking_oil.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/cooking_oil.svg"]},{path:"./assets/layers/recycling/engine_oil.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/engine_oil.svg"]},{path:"./assets/layers/recycling/fluorescent_tubes.svg",license:"CC-BY-4.0",authors:["Noun Project","shashank singh"],sources:["https://thenounproject.com/icon/tube-fluorescent-light-3756518/"]},{path:"./assets/layers/recycling/garden_waste.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick","modified from Twemoji: U+1F33F"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/garden_waste.svg"]},{path:"./assets/layers/recycling/glass.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/glass.svg"]},{path:"./assets/layers/recycling/glass_bottles.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/glass_bottles.svg"]},{path:"./assets/layers/recycling/light_bulbs.svg",license:"CC0-1.0",authors:["OpenClipArt","fabiovaleggia"],sources:["https://openclipart.org/detail/175842/basic-light-bulb"]},{path:"./assets/layers/recycling/needles.svg",license:"CC0-1.0",authors:[],sources:["https://svgsilh.com/image/1294131.html"]},{path:"./assets/layers/recycling/newspaper.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick","modified from EmojiOne 2: U+1F4F0"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/newspaper.svg"]},{path:"./assets/layers/recycling/paper.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/paper.svg"]},{path:"./assets/layers/recycling/plastic.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/plastic.svg"]},{path:"./assets/layers/recycling/plastic_bottles.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/plastic_bottles.svg"]},{path:"./assets/layers/recycling/plastic_packaging.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/plastic_packaging.svg"]},{path:"./assets/layers/recycling/printer_cartridges.svg",license:"CC-BY-4.0",authors:["Noun Project","Zach Bogart"],sources:["https://thenounproject.com/icon/ink-4963274/"]},{path:"./assets/layers/recycling/recycling-14.svg",license:"CC0-1.0",authors:["Michael Glanznig"],sources:["https://github.com/gmgeo/osmic/blob/master/amenity/recycling-14.svg"]},{path:"./assets/layers/recycling/scrap_metal.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/scrap_metal.svg"]},{path:"./assets/layers/recycling/shoes.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick","modified from EmojiOne 2: U+1F45F"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/shoes.svg"]},{path:"./assets/layers/recycling/small_electrical_appliances.svg",license:"CC-BY-SA-4.0",authors:["EmojiOne 2: U+1F50C"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/recycling%20icons/small_electrical_appliances.svg"]},{path:"./assets/layers/route_marker/bicycle_route_marker.jpg",license:"CC0-1.0",authors:["Segubi"],sources:["https://wiki.openstreetmap.org/wiki/File:Route_marker_Germany_Zwischenwegweiser_Radverkehrsnetz_NRW.jpg"]},{path:"./assets/layers/route_marker/route_marker.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/route_marker/walking_route_marker.jpg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/school/college.svg",license:"CC0-1.0",authors:["Maki"],sources:["https://labs.mapbox.com/maki-icons/"]},{path:"./assets/layers/school/school.svg",license:"CC0-1.0",authors:["Temaki"],sources:["https://github.com/ideditor/temaki","https://ideditor.github.io/temaki/docs/"]},{path:"./assets/layers/shelter/shelter.svg",license:"MIT",authors:["Diemen Design"],sources:["https://icon-icons.com/icon/map-shelter/158301"]},{path:"./assets/layers/shops/shop-disused.svg",license:"CC0-1.0",authors:["Maki icon set","Pietervdvn"],sources:["https://github.com/mapbox/maki"]},{path:"./assets/layers/shower/shower.svg",license:"CC0-1.0",authors:["James"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/shower.svg"]},{path:"./assets/layers/slow_roads/slow_road.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/slow_roads/woonerf.svg",license:"CC0-1.0",authors:["Belgische Wetgever"],sources:["https://nl.wikipedia.org/wiki/Bestand:Belgian_road_sign_F12a.svg"]},{path:"./assets/layers/souvenir_coin/souvenir_coin.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/souvenir_note/souvenir_note.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/speed_camera/speed_camera.svg",license:"CC0-1.0",authors:["Earlyswerver","OpenClipArt"],sources:["https://en.wikipedia.org/wiki/File:Earlyswerver_UK_Speed_Camera_Sign.svg"]},{path:"./assets/layers/speed_display/speed_display.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:["https://www.keshikan.net/fonts-e.html"]},{path:"./assets/layers/sport_pitch/baseball.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/basketball.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/beachvolleyball.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/boules.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/equestrian.svg",license:"CC0-1.0",authors:["Hufkratzer"],sources:["https://github.com/pietervdvn/MapComplete/issues/920"," https://gist.githubusercontent.com/Hufkratzer/81abcfe749ce8f99257e38f58633dd72/raw/8fa614a983807724f7110793b57344cc70dc34bc/equestrian.svg"]},{path:"./assets/layers/sport_pitch/lock.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/skateboard.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/soccer.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/sport_pitch.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/table_tennis.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/tennis.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sport_pitch/volleyball.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/layers/sports_centre/sports_centre.svg",license:"CC-BY-4.0",authors:["Hello world","The Noun Project"],sources:["https://thenounproject.com/icon/rogers-centre-464379/"]},{path:"./assets/layers/stairs/Braille_stairs.jpg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/stairs/stairs.svg",license:"CC-BY SA 4.0",authors:[" 	Font Awesome"],sources:["https://commons.wikimedia.org/wiki/File:Stairs-solid.svg"]},{path:"./assets/layers/street_lamps/bent_pole_1.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/street_lamps/bent_pole_2.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/street_lamps/straight_pole.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/layers/street_lamps/street_lamp.svg",license:"CC0-1.0",authors:["Yohan Boniface"],sources:["https://github.com/hotosm/HDM-CartoCSS/blob/master/icons/poi/street_lamp.svg"]},{path:"./assets/layers/stripclub/stripclub.svg",license:"PUBLIC-DOMAIN",authors:["Unkown"],sources:["https://publicdomainpictures.net/en/view-image.php?image=120141&picture="]},{path:"./assets/layers/surveillance_camera/ALPR.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/layers/surveillance_camera/ALPR_Example.jpg",license:"CC-BY-NC 2.0",authors:["synx508"],sources:["https://www.flickr.com/photos/synx508/5742253934/"]},{path:"./assets/layers/surveillance_camera/ALPR_Example2.jpg",license:"CC-BY 4.0",authors:["https://commons.wikimedia.org/wiki/User:Mbrickn"],sources:["https://commons.wikimedia.org/wiki/File:ANPR_Camera_Front.jpg"]},{path:"./assets/layers/toilet/baby.svg",license:"CC0-1.0",authors:["Bianca Teixeira"],sources:["https://commons.wikimedia.org/wiki/File:Baby_(75158)_-_The_Noun_Project.svg"]},{path:"./assets/layers/toilet/toilets.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Toilets-16.svg"]},{path:"./assets/layers/toilet/urinal.svg",license:"CC-BY-4.0",authors:["asianson.design","Pieter Vander Vennet"],sources:["https://thenounproject.com/term/urinal/1307984/"]},{path:"./assets/layers/toilet/wheelchair.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Wheelchair_symbol.svg"]},{path:"./assets/layers/trail/pushchair.svg",license:"CC-BY-4.0",authors:["Freepik"],sources:["https://www.flaticon.com/free-icon/stroller_1032915?term=pushchair&page=1&position=76&page=1&position=76&related_id=1032915&origin=search"]},{path:"./assets/layers/trail/trail.svg",license:"CC-BY-4.0",authors:["Freepik"],sources:["https://www.flaticon.com/free-icon/trail_3273172?term=trail&page=1&position=11&page=1&position=11&related_id=3273172&origin=search"]},{path:"./assets/layers/trail/wheelchair.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Wheelchair_symbol.svg"]},{path:"./assets/layers/transit_routes/relatify.png",license:"AGPLv3",authors:["Kamil Monicz"],sources:["https://github.com/Zaczero/osm-relatify/blob/main/web/static/img/icon.png"]},{path:"./assets/layers/transit_stops/bus_stop.svg",license:"CC0-1.0",authors:["Andy Allan","Michael Glanznig","Paul Norman","Paul Dicker"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/highway/bus_stop.svg"]},{path:"./assets/layers/tree_node/Onroerend_Erfgoed_logo_without_text.svg",license:"CC0-1.0",authors:["M!dgard"],sources:["https://commons.wikimedia.org/wiki/File:Onroerend_Erfgoed_logo_without_text.svg"]},{path:"./assets/layers/tree_node/broadleaved.svg",license:"CC-BY-SA-4.0",authors:["Midgard"],sources:["https://www.openstreetmap.org/user/M!dgard"]},{path:"./assets/layers/tree_node/leafless.svg",license:"CC-BY-SA-4.0",authors:["Midgard"],sources:["https://www.openstreetmap.org/user/M!dgard"]},{path:"./assets/layers/tree_node/needleleaved.svg",license:"CC-BY-SA-4.0",authors:["Midgard"],sources:["https://www.openstreetmap.org/user/M!dgard"]},{path:"./assets/layers/tree_node/unknown.svg",license:"CC-BY-SA-4.0",authors:["Midgard"],sources:["https://www.openstreetmap.org/user/M!dgard"]},{path:"./assets/layers/trolley_bay/trolley_bay.svg",license:"CC-BY-SA 3.0",authors:["Manuel Campagnoli","Robin van der Linde"],sources:["https://commons.wikimedia.org/wiki/File:Shopping_Cart.svg"]},{path:"./assets/layers/usersettings/translate_disabled.svg",license:"CC-BY-SA-3.0",authors:["MGalloway (WMF)"],sources:["https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_language-ltr.svg"]},{path:"./assets/layers/usersettings/translate_mobile.svg",license:"CC-BY-SA-3.0",authors:["MGalloway (WMF)","@ tyskrat"],sources:["https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_language-ltr.svg","https://www.onlinewebfonts.com/icon/1059"]},{path:"./assets/layers/vending_machine/condom.svg",license:"CC0-1.0",authors:[" 	Jesus Jezzini De Anda"],sources:["https://commons.wikimedia.org/wiki/File:Condom_-_The_Noun_Project.svg"]},{path:"./assets/layers/vending_machine/cow.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://fontawesome.com/icons/cow?f=classic&s=solid"]},{path:"./assets/layers/vending_machine/egg.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://fontawesome.com/icons/egg?f=classic&s=solid"]},{path:"./assets/layers/vending_machine/fruits.svg",license:"CC0-1.0",authors:["OpenClipart","frankes"],sources:["https://openclipart.org/detail/244990/fruits-coloured"]},{path:"./assets/layers/vending_machine/honey.svg",license:"CC-BY-4.0",authors:["Mushki Brichta"],sources:["https://commons.wikimedia.org/wiki/File:Honey_icon_black_01.svg"]},{path:"./assets/layers/vending_machine/mug-saucer.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://fontawesome.com/icons/mug-saucer?f=regular&s=solid"]},{path:"./assets/layers/vending_machine/potato.svg",license:"CC-BY-3.0",authors:["Pavel Melnikov","The Noun Project"],sources:["https://thenounproject.com/icon/potatoes-663495/"]},{path:"./assets/layers/vending_machine/smoking.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://fontawesome.com/icons/smoking?f=classic&s=solid"]},{path:"./assets/layers/vending_machine/strawberry.svg",license:"CC0-1.0",authors:["OpenClipart","baroquon"],sources:["https://openclipart.org/detail/23540/strawberry"]},{path:"./assets/layers/vending_machine/utensils.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://fontawesome.com/icons/utensils?f=classic&s=solid"]},{path:"./assets/layers/vending_machine/vending_machine.svg",license:"CC-BY-4.0",authors:["Vectorportal.com"],sources:["https://vectorportal.com/vector/vending-machine/35308"]},{path:"./assets/layers/veterinary/vet.svg",license:"CC0-1.0",authors:["Niels Elgaard Larsen","Tim Hitchins"],sources:["https://openclipart.org/detail/216869/snake-pole-logo-for-healthse-no-background-white-snake"]},{path:"./assets/layers/viewpoint/viewpoint.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Viewpoint-16.svg"]},{path:"./assets/layers/visitor_information_centre/information.svg",license:"CC0-1.0",authors:["Bobarino"],sources:["https://commons.wikimedia.org/wiki/File:Information.svg"]},{path:"./assets/layers/walls_and_buildings/walls_and_buildings.png",license:"CC0-1.0",authors:["OSM"],sources:["https://wiki.openstreetmap.org/wiki/File:Barrier_fence_mapnik.png#file"]},{path:"./assets/layers/waste_disposal/waste_disposal.svg",license:"CC0-1.0",authors:["kocio-pl"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/waste_disposal.svg"]},{path:"./assets/png/oneway.png",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/png/oneway.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/png/twoway.png",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/png/twoway.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/SocialImageForeground.svg",license:"CC-BY-SA-4.0",authors:["Pieter Vander Vennet"],sources:["https://mapcomplete.org"]},{path:"./assets/svg/SocialImageForeground.svg",license:"CC-BY-SA-4.0",authors:["Pieter Vander Vennet"],sources:["https://mapcomplete.org"]},{path:"./assets/svg/add.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/add.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/addSmall.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/addSmall.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/add_pin.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/back.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/back.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/blocked.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/brick_wall_raw.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/brick_wall_round.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/brick_wall_square.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/bug.svg",license:"MIT",authors:["Github"],sources:["https://commons.wikimedia.org/wiki/File:Octicons-bug.svg"," https://github.com/primer/octicons"]},{path:"./assets/svg/bug.svg",license:"MIT",authors:["Github"],sources:["https://commons.wikimedia.org/wiki/File:Octicons-bug.svg"," https://github.com/primer/octicons"]},{path:"./assets/svg/camera-plus.svg",license:"CC-BY-SA-3.0",authors:["Dave Gandy","Pieter Vander Vennet"],sources:["https://fontawesome.com/","https://commons.wikimedia.org/wiki/File:Camera_font_awesome.svg"]},{path:"./assets/svg/camera-plus.svg",license:"CC-BY-SA-3.0",authors:["Dave Gandy","Pieter Vander Vennet"],sources:["https://fontawesome.com/","https://commons.wikimedia.org/wiki/File:Camera_font_awesome.svg"]},{path:"./assets/svg/center.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/checkmark.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/checkmark.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/circle.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/circle.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/clock.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/clock.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/close.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/close.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/community.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/compass.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/compass.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/compass_arrow.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/confirm.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/copyright.svg",license:"CC0-1.0",authors:["Hannah Declerck"],sources:[]},{path:"./assets/svg/cross.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/cross_bottom_right.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/cross_bottom_right.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/crosshair-locked.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/crosshair.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/crosshair.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/delete_icon.svg",license:"CC-BY-SA-4.0",authors:["Dave Gandy"],sources:["https://commons.wikimedia.org/wiki/File:Trash_font_awesome.svg\rT"]},{path:"./assets/svg/delete_icon.svg",license:"CC-BY-SA-4.0",authors:["Dave Gandy"],sources:["https://commons.wikimedia.org/wiki/File:Trash_font_awesome.svg\rT"]},{path:"./assets/svg/delete_not_allowed.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/direction_gradient.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/direction_gradient.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/direction_stroke.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/direction_stroke.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/download.svg",license:"CC0-1.0",authors:["Hannah Declerck"],sources:[]},{path:"./assets/svg/download.svg",license:"CC-BY-SA-4.0",authors:["Engr.eponce"],sources:["https://commons.wikimedia.org/wiki/File:Download-icon.svg"]},{path:"./assets/svg/duplicate.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/elevator.svg",license:"CC-BY-SA-4.0",authors:["Yveltal"],sources:["https://commons.wikimedia.org/wiki/File:HZM_elevator_icon.svg"]},{path:"./assets/svg/elevator_wheelchair.svg",license:"CC-BY-SA-4.0",authors:["Robin Julien"],sources:["https://www.ctsteward.com/"]},{path:"./assets/svg/envelope.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/envelope.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/eye.svg",license:"CC-BY-SA-3.0",authors:["Dave Gandy"],sources:["https://en.wikipedia.org/wiki/File:Eye_open_font_awesome.svg"]},{path:"./assets/svg/filter.svg",license:"CC0-1.0",authors:["Hannah Declerck"],sources:[]},{path:"./assets/svg/filter_disable.svg",license:"CC0-1.0",authors:["Hannah Declerck"],sources:[]},{path:"./assets/svg/floppy.svg",license:"CC0-1.0",authors:["The Tango Desktop Project"],sources:["https://commons.wikimedia.org/wiki/File:Media-floppy.svg"," http://tango.freedesktop.org/Tango_Desktop_Project"]},{path:"./assets/svg/floppy.svg",license:"CC0-1.0",authors:["The Tango Desktop Project"],sources:["https://commons.wikimedia.org/wiki/File:Media-floppy.svg","http://tango.freedesktop.org/Tango_Desktop_Project"]},{path:"./assets/svg/floppy.svg",license:"CC0-1.0",authors:["The Tango! Desktop Project"],sources:["https://commons.wikimedia.org/wiki/File:Media-floppy.svg"]},{path:"./assets/svg/gear.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/gear.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/gender_bi.svg",license:"CC0-1.0",authors:["Gender Icon Pack"],sources:["https://www.iconpacks.net/free-icon-pack/gender-107.html"]},{path:"./assets/svg/gender_female.svg",license:"CC0-1.0",authors:["Gender Icon Pack"],sources:["https://www.iconpacks.net/free-icon-pack/gender-107.html"]},{path:"./assets/svg/gender_inter.svg",license:"CC0-1.0",authors:["Gender Icon Pack"],sources:["https://www.iconpacks.net/free-icon-pack/gender-107.html"]},{path:"./assets/svg/gender_male.svg",license:"CC0-1.0",authors:["Gender Icon Pack"],sources:["https://www.iconpacks.net/free-icon-pack/gender-107.html"]},{path:"./assets/svg/gender_queer.svg",license:"CC0-1.0",authors:["Gender Icon Pack"],sources:["https://www.iconpacks.net/free-icon-pack/gender-107.html"]},{path:"./assets/svg/gender_trans.svg",license:"CC0-1.0",authors:["Gender Icon Pack"],sources:["https://www.iconpacks.net/free-icon-pack/gender-107.html"]},{path:"./assets/svg/generic_map.svg",license:"CC0-1.0",authors:["Svg Repo"],sources:["https://www.svgrepo.com/svg/22182/map"]},{path:"./assets/svg/gps_arrow.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/hand.svg",license:"CC0-1.0",authors:["Anomie"],sources:["https://commons.wikimedia.org/wiki/File:Right-pointing_hand_in_green_octagon.svg"]},{path:"./assets/svg/help.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/help.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/home.svg",license:"CC-BY-SA-3.0",authors:["Timothy Miller"],sources:["https://commons.wikimedia.org/wiki/File:Home-icon.svg"]},{path:"./assets/svg/home.svg",license:"CC-BY-SA-3.0",authors:["Timothy Miller"],sources:["https://commons.wikimedia.org/wiki/File:Home-icon.svg"]},{path:"./assets/svg/invalid.svg",license:"CC-BY-4.0",authors:["Twemoji"],sources:["https://github.com/twitter/twemoji"]},{path:"./assets/svg/josm_logo.svg",license:"CC0-1.0",authors:["JOSM Team"],sources:["https://wiki.openstreetmap.org/wiki/File:JOSM_Logotype_2019.svg"," https://josm.openstreetmap.de/"]},{path:"./assets/svg/josm_logo.svg",license:"CC0-1.0",authors:["JOSM Team"],sources:["https://wiki.openstreetmap.org/wiki/File:JOSM_Logotype_2019.svg"," https://josm.openstreetmap.de/"]},{path:"./assets/svg/layers.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/layers.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/length-crosshair.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/liberapay.svg",license:"LOGO",authors:["LiberaPay"],sources:["https://liberapay.com/"]},{path:"./assets/svg/loading.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/location-refused.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/location.svg",license:"CC0-1.0",authors:["Hannah Declerck"],sources:[]},{path:"./assets/svg/location_empty.svg",license:"CC0-1.0",authors:["Pol Labaut"],sources:[]},{path:"./assets/svg/location_locked.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/location_unlocked.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/login.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/logo.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/logo.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/logout.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/logout.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/mangrove_logo.svg",license:"LOGO",authors:["Mangrove.reviews"],sources:["https://mangrove.reviews/"]},{path:"./assets/svg/mapcomplete_logo.svg",license:"LOGO AND CC-BY-SA-4.0",authors:["Pieter Vander Vennet"," OSM"],sources:["https://mapcomplete.org"]},{path:"./assets/svg/mapcomplete_logo.svg",license:"LOGO AND CC-BY-SA-4.0",authors:["Pieter Vander Vennet"," OSM"],sources:["https://mapcomplete.org"]},{path:"./assets/svg/mapillary.svg",license:"LOGO",authors:["Mapillary"],sources:["https://mapillary.com/"]},{path:"./assets/svg/mapillary.svg",license:"LOGO",authors:["Mapillary"],sources:["https://mapillary.com/"]},{path:"./assets/svg/mapillary_black.svg",license:"LOGO",authors:["Mapillary"],sources:["https://www.mapillary.com/"]},{path:"./assets/svg/mapillary_black.svg",license:"LOGO",authors:["Mapillary"],sources:["https://www.mapillary.com/"]},{path:"./assets/svg/mastodon.svg",license:"LOGO AND AGPL-3.0-or-later",authors:["Mastodon"],sources:["https://commons.wikimedia.org/wiki/File:Mastodon_Logotype_(Simple).svg"]},{path:"./assets/svg/min.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/min.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/move-arrows.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/move.svg",license:"CC-BY-SA-3.0",authors:["MGalloway (WMF)"],sources:["https://commons.wikimedia.org/wiki/File:Move_icon.svg"]},{path:"./assets/svg/move_confirm.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/move_not_allowed.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/not_found.svg",license:"CC-BY-4.0",authors:["Twemoji"],sources:["https://github.com/twitter/twemoji"]},{path:"./assets/svg/note.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/osm-logo-us.svg",license:"LOGO",authors:["OpenStreetMap U.S. Chapter"],sources:["https://www.openstreetmap.us/"]},{path:"./assets/svg/osm-logo-us.svg",license:"LOGO",authors:["OpenStreetMap U.S. Chapter"],sources:["https://www.openstreetmap.us/"]},{path:"./assets/svg/osm-logo.svg",license:"LOGO",authors:[],sources:["https://www.OpenStreetMap.org"]},{path:"./assets/svg/osm-logo.svg",license:"LOGO",authors:[],sources:["https://www.OpenStreetMap.org"]},{path:"./assets/svg/party.svg",license:"CC-BY-4.0",authors:["Twemoji"],sources:["https://github.com/twitter/twemoji"]},{path:"./assets/svg/pencil.svg",license:"MIT",authors:["GitHub Octicons"],sources:["https://github.com/primer/octicons"," https://commons.wikimedia.org/wiki/File:Octicons-pencil.svg"]},{path:"./assets/svg/pencil.svg",license:"MIT",authors:["GitHub Octicons"],sources:["https://github.com/primer/octicons"," https://commons.wikimedia.org/wiki/File:Octicons-pencil.svg"]},{path:"./assets/svg/person.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/pin.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/pin.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/plantnet_logo.svg",license:"LOGO",authors:["https://plantnet.org"],sources:["https://plantnet.org"]},{path:"./assets/svg/plus.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/plus.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/pop-out.svg",license:"CC-BY-3.0",authors:["@fatih"],sources:["https://www.onlinewebfonts.com/icon/2151"]},{path:"./assets/svg/pop-out.svg",license:"CC-BY-3.0",authors:["@fatih"],sources:["https://www.onlinewebfonts.com/icon/2151"]},{path:"./assets/svg/reload.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/reload.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/relocation.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/resolved.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/ring.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/ring.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/robot.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://commons.wikimedia.org/wiki/File:Font_Awesome_5_solid_robot.svg"]},{path:"./assets/svg/scissors.svg",license:"CC-BY-3.0",authors:["The noun project - Icons8"],sources:["https://commons.wikimedia.org/wiki/File:Scissors_-_The_Noun_Project.svg"]},{path:"./assets/svg/search.svg",license:"MIT",authors:["OOjs UI Team and other contributors"],sources:["https://commons.wikimedia.org/wiki/File:OOjs_UI_indicator_search-rtl.svg","https://phabricator.wikimedia.org/diffusion/GOJU/browse/master/AUTHORS.txt"]},{path:"./assets/svg/search.svg",license:"MIT",authors:["OOjs UI Team and other contributors"],sources:["https://commons.wikimedia.org/wiki/File:OOjs_UI_indicator_search-rtl.svg","https://phabricator.wikimedia.org/diffusion/GOJU/browse/master/AUTHORS.txt"]},{path:"./assets/svg/search_disable.svg",license:"MIT",authors:["OOjs UI Team and other contributors","Pieter Vander Vennet"],sources:["https://commons.wikimedia.org/wiki/File:OOjs_UI_indicator_search-rtl.svg","https://phabricator.wikimedia.org/diffusion/GOJU/browse/master/AUTHORS.txt"]},{path:"./assets/svg/share.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/share.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/speech_bubble.svg",license:"CC-BY-4.0",authors:["Twemoji"],sources:["https://github.com/twitter/twemoji"]},{path:"./assets/svg/speech_bubble_black_outline.svg",license:"CC-BY-4.0",authors:["Twemoji"],sources:["https://github.com/twitter/twemoji"]},{path:"./assets/svg/square.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/square.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/square_rounded.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/star.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/star.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/star_half.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/star_half.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/star_outline.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/star_outline.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/statistics.svg",license:"CC-BY-3.0",authors:["@felpgrc"],sources:["https://www.onlinewebfonts.com/icon/197818"]},{path:"./assets/svg/statistics.svg",license:"CC-BY-3.0",authors:["@felpgrc"],sources:["https://www.onlinewebfonts.com/icon/197818"]},{path:"./assets/svg/teardrop.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/teardrop_with_hole_green.svg",license:"CC-BY-NC-4.0",authors:[],sources:["https://pngimg.com/image/46283"]},{path:"./assets/svg/translate.svg",license:"CC-BY-SA-3.0",authors:["MGalloway (WMF)"],sources:["https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_language-ltr.svg"]},{path:"./assets/svg/translate.svg",license:"CC-BY-SA-3.0",authors:["MGalloway (WMF)"],sources:["https://commons.wikimedia.org/wiki/File:OOjs_UI_icon_language-ltr.svg"]},{path:"./assets/svg/triangle.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/svg/up.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/up.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/svg/upload.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/svg/wikidata.svg",license:"LOGO",authors:["Wikidata"],sources:["https://www.wikidata.org"]},{path:"./assets/svg/wikidata.svg",license:"LOGO",authors:["Wikidata"],sources:["https://www.wikidata.org"]},{path:"./assets/svg/wikimedia-commons-white.svg",license:"LOGO",authors:["Wikimedia"],sources:["https://commons.wikimedia.org"]},{path:"./assets/svg/wikimedia-commons-white.svg",license:"LOGO",authors:["Wikimedia"],sources:["https://commons.wikimedia.org"]},{path:"./assets/svg/wikipedia.svg",license:"LOGO",authors:["Wikipedia"],sources:["https://www.wikipedia.org/"]},{path:"./assets/svg/wikipedia.svg",license:"LOGO",authors:["Wikipedia"],sources:["https://www.wikipedia.org/"]},{path:"./assets/themes/advertising/AdvertisingColumn_001.jpg",license:"CC-BY-SA-4.0",authors:["Segnargs"],sources:["https://wiki.openstreetmap.org/wiki/File:AdvertisingColumn_001.jpg"]},{path:"./assets/themes/advertising/AdvertisingColumn_003.jpg",license:"CC-BY-SA-4.0",authors:["Segnargsed"],sources:["https://wiki.openstreetmap.org/wiki/File:AdvertisingColumn_003.jpg#file"]},{path:"./assets/themes/advertising/AdvertisingTotem_003.jpg",license:"CC-BY-SA-4.0",authors:["Segnargsed"],sources:["https://commons.wikimedia.org/wiki/File:AdvertisingTotem_003.jpg"]},{path:"./assets/themes/advertising/AdvertisingTotem_004.jpg",license:"CC-BY-SA-4.0",authors:["Segnargsed"],sources:["https://commons.wikimedia.org/wiki/File:AdvertisingTotem_004.jpg"]},{path:"./assets/themes/advertising/Advertising_flag.jpg",license:"CC-BY-SA-2.0",authors:["Sandy B"],sources:["https://commons.wikimedia.org/wiki/File:Advertising_flags_-_geograph.org.uk_-_2433864.jpg"]},{path:"./assets/themes/advertising/Aircraft_Sculpture.jpg",license:"CC-BY-SA-2.0",authors:["Rod Waddington"],sources:["https://wiki.openstreetmap.org/wiki/File:Aircraft_Sculpture-Advertisment-Restaurant_Jimma_Ethiopia.jpg"]},{path:"./assets/themes/advertising/BS.JPG",license:"CC-BY-SA-4.0",authors:["TeWeBs"],sources:["https://commons.wikimedia.org/wiki/File:BS_Schraubenschluessel.JPG"]},{path:"./assets/themes/advertising/Capitol_wall.jpg",license:"CC-BY-SA-4.0",authors:["Artaxerxes"],sources:["https://commons.wikimedia.org/wiki/File:Advertising_mural_on_wall_of_Capitol_Stationers_65_Main_Street_downtown_Montpelier_VT_August_2017.jpg"]},{path:"./assets/themes/advertising/City-Light-Poster.jpg",license:"CC-BY-SA-4.0",authors:["Bärwinkel, Klaus"],sources:["https://commons.wikimedia.org/wiki/File:City-Light-Poster_Mittelstra%C3%9Fe.jpg"]},{path:"./assets/themes/advertising/FGV_Founding.jpg",license:"CC-BY-SA-4.0",authors:["Paunofu"],sources:["https://imgur.com/epyuPXs"]},{path:"./assets/themes/advertising/JR_Central.jpg",license:"CC-BY-SA-4.0",authors:["ジェーアール東海一口株主"],sources:["https://commons.wikimedia.org/wiki/File:JR_Central_corporate_flag_by_Nagoya_Station.jpg"]},{path:"./assets/themes/advertising/KFC_Billboard.jpg",license:"CC-BY-4.0",authors:["Paunofu"],sources:["https://imgur.com/2xJaUXd"]},{path:"./assets/themes/advertising/LIDL_Billboard.jpg",license:"CC-BY-SA-4.0",authors:["Paul Williams"],sources:["https://archive.org/details/northfleet-2021-05-30/PXL_20210530_175057096.jpg"]},{path:"./assets/themes/advertising/Lidl_totem.jpg",license:"CC-BY-SA-4.0",authors:["Donald Trung"],sources:["https://commons.wikimedia.org/wiki/File:Lidl_informational_sign,_Hesel_(2019)_01.jpg"]},{path:"./assets/themes/advertising/Mug.jpg",license:"CC0-1.0",authors:["Carol M. Highsmith"],sources:["https://commons.wikimedia.org/wiki/File:The_Frostop_mug_advertising_sign_outside_%22The_Drive_In%22_restaurant_in_Taylors_Falls,_Minnesota.jpg"]},{path:"./assets/themes/advertising/Mupi_Alcoi.jpg",license:"CC-BY-4.0",authors:["Paunofu"],sources:["https://imgur.com/4Q3glWH"]},{path:"./assets/themes/advertising/Mupi_spain.jpg",license:"CC0-1.0",authors:["Jusotil_1943"],sources:["https://commons.wikimedia.org/wiki/File:Mupi_(42556631491).jpg"]},{path:"./assets/themes/advertising/Repsol_Billboard.jpg",license:"CC-BY-4.0",authors:["Paunofu"],sources:["https://imgur.com/MwvK0jc"]},{path:"./assets/themes/advertising/Screen_poster_box.jpg",license:"CC-BY-SA-4.0",authors:["T. Segonds"],sources:["https://commons.wikimedia.org/wiki/File:Screen_poster_box.jpg"]},{path:"./assets/themes/advertising/Small_Board.jpg",license:"CC-BY-SA-4.0",authors:["Segnargsed"],sources:["https://wiki.openstreetmap.org/wiki/File:AdvertisingBoard_001.jpg"]},{path:"./assets/themes/advertising/Subway_screen.jpg",license:"CC-BY-2.0",authors:["Metropolitan Transportation Authority of the State of New York"],sources:["https://commons.wikimedia.org/wiki/File:Subway_Station_Digital_Advertising_Screens_(13251000543).jpg"]},{path:"./assets/themes/advertising/TV_media.jpg",license:"CC-BY-3.0",authors:["Roger Carvell"],sources:["https://commons.wikimedia.org/wiki/File:TV_media_advertising_at_London_Victoria_station._-_panoramio.jpg"]},{path:"./assets/themes/advertising/Times square.jpg",license:"CC-BY-SA-4.0",authors:["chensiyuan"],sources:["https://commons.wikimedia.org/wiki/File:1_times_square_night_2013.jpg"]},{path:"./assets/themes/advertising/Waitrose_sign.jpg",license:"CC-BY-SA-2.0",authors:["Geographer"],sources:["https://www.geograph.org.uk/photo/4343364"]},{path:"./assets/themes/advertising/billboard.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Billboard_trunk.svg"]},{path:"./assets/themes/advertising/board.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Board.svg"]},{path:"./assets/themes/advertising/clarke_wall.jpg",license:"CC-BY-SA-2.0",authors:["Albert Bridge"],sources:["https://www.geograph.org.uk/photo/2478313"]},{path:"./assets/themes/advertising/column.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Column.svg"]},{path:"./assets/themes/advertising/farma_sign.jpg",license:"CC-BY-SA-4.0",authors:["paunofu"],sources:["https://imgur.com/bGF0kdd"]},{path:"./assets/themes/advertising/flag.svg",license:"CC-BY-SA-3.0",authors:["Barnes38","Ash Crow","Happy-melon","Aris Katsaris","Pietervdvn"],sources:["https://wiki.openstreetmap.org/wiki/File:Column.svg","https://commons.wikimedia.org/wiki/File:Flag_icon_darkblue.svg"]},{path:"./assets/themes/advertising/icon.svg",license:"CC-BY-SA-4.0",authors:["Panier Avide"],sources:["https://commons.wikimedia.org/wiki/File:Advertising_icon.svg"]},{path:"./assets/themes/advertising/local_Board.jpg",license:"CC-BY-SA-4.0",authors:["Segnargsed"],sources:["https://wiki.openstreetmap.org/wiki/File:ReservedAdvertisingUnit_008.jpg"]},{path:"./assets/themes/advertising/newspaper_kiosk.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Newspaper_kiosk_3.svg"]},{path:"./assets/themes/advertising/poster_box.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Poster_box.svg"]},{path:"./assets/themes/advertising/poster_box_no_support.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Poster_box.svg"]},{path:"./assets/themes/advertising/poster_box_transit_shelter.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Poster_box_shelter.svg"]},{path:"./assets/themes/advertising/screen alcoi.jpg",license:"CC-BY-4.0",authors:["paunofu"],sources:["https://imgur.com/HKsRycm"]},{path:"./assets/themes/advertising/screen.svg",license:"CC-BY-SA-4.0",authors:["Barnes38","Pietervdvn"],sources:["https://wiki.openstreetmap.org/wiki/File:Poster_box.svg"]},{path:"./assets/themes/advertising/screen_no_support.svg",license:"CC-BY-SA-4.0",authors:["Barnes38","Pietervdvn"],sources:["https://wiki.openstreetmap.org/wiki/File:Poster_box.svg"]},{path:"./assets/themes/advertising/sculpture.svg",license:"CC-BY-3.0",authors:["Nathaniel Smith","Pietervdvn"],sources:["https://wiki.openstreetmap.org/wiki/File:Column.svg","https://commons.wikimedia.org/wiki/File:Sculpture_(NP100738).svg"]},{path:"./assets/themes/advertising/sign.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Totem.svg"]},{path:"./assets/themes/advertising/sign_EOI.jpg",license:"CC-BY-SA-4.0",authors:["paunofu"],sources:["https://imgur.com/8D0BKNq"]},{path:"./assets/themes/advertising/tarp.svg",license:"CC-BY-SA-3.0",authors:["Barnes38","Pietervdvn"],sources:["https://wiki.openstreetmap.org/wiki/File:Billboard_trunk.svg"]},{path:"./assets/themes/advertising/tarp_feder.jpg",license:"CC-BY-SA-4.0",authors:["paunofu"],sources:["https://imgur.com/Gc3Tk41"]},{path:"./assets/themes/advertising/tarp_madrid.jpg",license:"CC-BY-2.0",authors:["Rogotan"],sources:["https://commons.wikimedia.org/wiki/File:Lona_(3741637137).jpg"]},{path:"./assets/themes/advertising/totem.svg",license:"CC-BY-SA-3.0",authors:["Barnes38"],sources:["https://wiki.openstreetmap.org/wiki/File:Totem.svg"]},{path:"./assets/themes/advertising/trivision.svg",license:"CC-BY-SA-3.0",authors:["pietervdvn","Louis Dawson (via the Noun Project)"],sources:["https://thenounproject.com/icon/rotating-arrow-184486/"]},{path:"./assets/themes/advertising/wall_painting.svg",license:"CC-BY-SA-3.0",authors:["Barnes38","Pietervdvn"],sources:["https://wiki.openstreetmap.org/wiki/File:Billboard_trunk.svg"]},{path:"./assets/themes/aed/aed.svg",license:"CC0-1.0",authors:["MaxxL"],sources:["https://commons.wikimedia.org/wiki/File:ISO_7010_E010.svg"]},{path:"./assets/themes/artwork/artwork.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Statue-14.svg"]},{path:"./assets/themes/atm/logo.svg",license:"CC0-1.0",authors:["Michael Glanznig","Andy Allan"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/atm.svg"]},{path:"./assets/themes/bag/logo.svg",license:"CC0-1.0",authors:["Wouter van der Wal"],sources:[]},{path:"./assets/themes/benches/bench_poi.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/v25.0-beta1/res/graphics/authors.txt","https://github.com/streetcomplete/StreetComplete/tree/v25.0-beta1/res/graphics/quest%20icons"]},{path:"./assets/themes/benches/bench_public_transport.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/v25.0-beta1/res/graphics/authors.txt","https://github.com/streetcomplete/StreetComplete/tree/v25.0-beta1/res/graphics/quest%20icons"]},{path:"./assets/themes/bicycle_parkings/logo.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/bicycle_rental/logo.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/bicycle_rental/rental.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/bicyclelib/logo.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/blind_osm/Blindicon.svg",license:"CC0-1.0",authors:["Abu badali","AIGA"],sources:["https://commons.wikimedia.org/wiki/File:Blindicon.svg"]},{path:"./assets/themes/bookcases/bookcase.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Public_bookcase-14.svg"]},{path:"./assets/themes/buurtnatuur/ANB.jpg",license:"LOGO",authors:["Agentschap Natuur en Bos"],sources:["https://www.natuurenbos.be/"]},{path:"./assets/themes/buurtnatuur/Natuurpunt.jpg",license:"LOGO",authors:["Natuurpunt"],sources:["https://www.natuurpunt.be/"]},{path:"./assets/themes/buurtnatuur/forest.svg",license:"CC-BY-3.0",authors:["@ Federico Sibella"],sources:["https://www.onlinewebfonts.com/icon/498112"]},{path:"./assets/themes/buurtnatuur/groen_logo.svg",license:"LOGO",authors:["Groen"],sources:["https://www.groen.be/"]},{path:"./assets/themes/buurtnatuur/logo.svg",license:"LOGO",authors:["Groen"],sources:["https://www.groen.be/"]},{path:"./assets/themes/buurtnatuur/nature_reserve.svg",license:"CC-BY-3.0",authors:["@ Эдуард Черных"],sources:["https://www.onlinewebfonts.com/icon/389579"]},{path:"./assets/themes/buurtnatuur/park.svg",license:"CC-BY-3.0",authors:["@sterankofrank"],sources:["http://www.onlinewebfonts.com/icon/425974"]},{path:"./assets/themes/buurtnatuur/social_image.jpg",license:"ALL-RIGHTS-RESERVED",authors:["Groen"],sources:[]},{path:"./assets/themes/campersite/caravan.svg",license:"CC0-1.0",authors:["OsmAnd"],sources:["https://github.com/osmandapp/Osmand/blob/master/LICENSE","https://github.com/osmandapp/OsmAnd-resources/blob/36d8b90a8933e0a28f9ee19f28abbd520f9da3c7/icons/svg/accommodation/caravan.svg"]},{path:"./assets/themes/campersite/caravan_green.svg",license:"CC0-1.0",authors:["OsmAnd"],sources:["https://github.com/osmandapp/Osmand/blob/master/LICENSE","https://github.com/osmandapp/OsmAnd-resources/blob/36d8b90a8933e0a28f9ee19f28abbd520f9da3c7/icons/svg/accommodation/caravan.svg"]},{path:"./assets/themes/campersite/sanitary_dump_station.svg",license:"CC0-1.0",authors:["OsmAnd"],sources:["https://github.com/osmandapp/Osmand/blob/master/LICENSE","https://github.com/osmandapp/OsmAnd-resources/blob/16892d8b2fc00dd422abfb2fef967d5ccd05eeac/icons/svg/poi/sanitary_dump_station.svg"]},{path:"./assets/themes/campersite/social_image.jpg",license:"CC-BY-SA-3.0",authors:["ES01"],sources:["https://commons.wikimedia.org/wiki/File:Bar%C3%9Fel_Wohnmobilstellplatz.jpg"]},{path:"./assets/themes/charging_stations/bicycle.svg",license:"CC0-1.0",authors:["Stijn Wens"],sources:["https://wens.be/free-antwerpenize-bicycle-font"," https://antwerpenize.be/post/634396003556081664/antwerpenize-lettertype"]},{path:"./assets/themes/charging_stations/car.svg",license:"CC0-1.0",authors:["Simon Child","The Noun Project"],sources:["https://thenounproject.com/icon/electric-car-55511/"]},{path:"./assets/themes/charging_stations/logo.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/themes/charging_stations/plug.svg",license:"TRIVIAL",authors:[],sources:[]},{path:"./assets/themes/climbing/carabiner.svg",license:"CC-BY-SA-4.0",authors:["Matthew Dera"],sources:["https://thenounproject.com/term/carabiner/30076/"]},{path:"./assets/themes/climbing/climbing_gym.svg",license:"CC0-1.0",authors:["Polarbear w","Christian Neumann"],sources:["https://wiki.openstreetmap.org/wiki/File:Climbing_icon_no_rope.svg","https://utopicode.de/","https://github.com/chrneumann/MapComplete"]},{path:"./assets/themes/climbing/climbing_icon.svg",license:"CC0-1.0",authors:["Polarbear w","Christian Neumann"],sources:["https://wiki.openstreetmap.org/wiki/File:Climbing_icon_no_rope.svg","https://utopicode.de/","https://github.com/chrneumann/MapComplete"]},{path:"./assets/themes/climbing/climbing_no_rope.svg",license:"CC0-1.0",authors:["Polarbear w","Christian Neumann"],sources:["https://wiki.openstreetmap.org/wiki/File:Climbing_icon_no_rope.svg","https://utopicode.de/","https://github.com/chrneumann/MapComplete"]},{path:"./assets/themes/climbing/climbing_rope.svg",license:"CC0-1.0",authors:["Polarbear w","Christian Neumann"],sources:["https://wiki.openstreetmap.org/wiki/File:Climbing_icon_no_rope.svg","https://utopicode.de/","https://github.com/chrneumann/MapComplete"]},{path:"./assets/themes/climbing/climbing_route.svg",license:"CC0-1.0",authors:["Polarbear w","Christian Neumann"],sources:["https://wiki.openstreetmap.org/wiki/File:Climbing_icon_no_rope.svg","https://utopicode.de/","https://github.com/chrneumann/MapComplete"]},{path:"./assets/themes/climbing/climbing_unknown.svg",license:"CC0-1.0",authors:["Polarbear w","Christian Neumann"],sources:["https://wiki.openstreetmap.org/wiki/File:Climbing_icon_no_rope.svg","https://utopicode.de/","https://github.com/chrneumann/MapComplete"]},{path:"./assets/themes/climbing/club.svg",license:"CC0-1.0",authors:["Polarbear w","Christian Neumann"],sources:["https://wiki.openstreetmap.org/wiki/File:Climbing_icon_no_rope.svg","https://utopicode.de/","https://github.com/chrneumann/MapComplete"]},{path:"./assets/themes/climbing/height.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/cycle_highways/fietssnelwegen-logo.svg",license:"LOGO",authors:["De Vlaamse Provincies"],sources:["https://fietssnelwegen.be/"]},{path:"./assets/themes/cycle_infra/Cycle_barrier_double.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/cycle_infra/Cycle_barrier_double_length.png",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/cycle_infra/Cycle_barrier_double_length.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/cycle_infra/Cycle_barrier_double_overlap.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/cycle_infra/Cycle_barrier_double_template.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/cycle_infra/Cycle_barrier_double_width.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/cycle_infra/Cycle_barrier_single.png",license:"CC-BY-SA-4.0",authors:["Supaplex030"],sources:["https://wiki.openstreetmap.org/wiki/File:Cycle_barrier_single.png"]},{path:"./assets/themes/cycle_infra/Cycle_barrier_squeeze.png",license:"CC-BY-SA-4.0",authors:["Supaplex030"],sources:["https://wiki.openstreetmap.org/wiki/File:Cycle_barrier_squeeze.png"]},{path:"./assets/themes/cycle_infra/Cycle_barrier_triple.png",license:"CC-BY-SA-4.0",authors:["Supaplex030"],sources:["https://wiki.openstreetmap.org/wiki/File:Cycle_barrier_triple.png"]},{path:"./assets/themes/cycle_infra/bicycleway.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/quest%20icons/bicycleway.svg"]},{path:"./assets/themes/cycle_infra/cycle-infra.svg",license:"CC-BY-4.0",authors:["Dávid Gladiš","Hannah Declerck"],sources:["https://thenounproject.com/davidgladis/collection/bicycles/?i=808040"]},{path:"./assets/themes/cycle_infra/street.svg",license:"CC-BY-SA-4.0",authors:["Tobias Zwick"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/quest%20icons/street.svg"]},{path:"./assets/themes/cyclenodes/logo.svg",license:"GPL-3.0-only",authors:["sebkur"],sources:["https://github.com/mobanisto/MapComplete/commit/1aeb1fdb5b09908d67907f3c816152bfebfdcc79"]},{path:"./assets/themes/cyclenodes/route_marker.svg",license:"CC0-1.0",authors:["Robin van der Linde","MarianSigler"],sources:["https://commons.wikimedia.org/wiki/File:Sinnbild_Radfahrer,_StVO_1992.svg"]},{path:"./assets/themes/cyclestreets/F111.svg",license:"CC0-1.0",authors:["The RedBurn"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_F111_nl.svg"]},{path:"./assets/themes/cyclestreets/F113.svg",license:"CC0-1.0",authors:["The RedBurn"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_F113_nl.svg"]},{path:"./assets/themes/cyclestreets/Finland_road_sign_E28.svg",license:"CC0-1.0",authors:["Suomen tasavalta"],sources:["https://commons.wikimedia.org/wiki/File:Finland_road_sign_E28.svg"]},{path:"./assets/themes/cyclestreets/Finland_road_sign_E29.svg",license:"CC0-1.0",authors:["Suomen tasavalta"],sources:["https://commons.wikimedia.org/wiki/File:Finland_road_sign_E29.svg"]},{path:"./assets/themes/cyclestreets/Zeichen_244.svg",license:"CC0-1.0",authors:["Bundesministerium für Verkehr, Bau- und Wohnungswesen"],sources:["https://commons.wikimedia.org/wiki/File:Zeichen_244_-_Beginn_der_Fahrradstraße,_StVO_1997.svg"]},{path:"./assets/themes/cyclestreets/Zeichen_244_1020-30.svg",license:"CC0-1.0",authors:["Bundesministerium für Verkehr, Bau- und Wohnungswesen"],sources:["https://commons.wikimedia.org/wiki/File:Zusatzzeichen_1020-30_-_Anlieger_frei_(600x330),_StVO_1992.svg","https://commons.wikimedia.org/wiki/File:Zeichen_244_-_Beginn_der_Fahrradstraße,_StVO_1997.svg"]},{path:"./assets/themes/cyclestreets/Zeichen_244_1022-12.svg",license:"CC0-1.0",authors:["Bundesministerium für Verkehr, Bau- und Wohnungswesen"],sources:["https://commons.wikimedia.org/wiki/File:Zusatzzeichen_1022-12_-_Krafträder_auch_mit_Beiwagen,_Kleinkrafträder_und_Mofas_frei_(600x450),_StVO_1992.svg","https://commons.wikimedia.org/wiki/File:Zeichen_244_-_Beginn_der_Fahrradstraße,_StVO_1997.svg"]},{path:"./assets/themes/cyclestreets/Zeichen_244_1024-10.svg",license:"CC0-1.0",authors:["Bundesministerium für Verkehr, Bau- und Wohnungswesen"],sources:["https://commons.wikimedia.org/wiki/File:Zusatzzeichen_1024-10_-_Personenkraftwagen_frei,_StVO_1992.svg","https://commons.wikimedia.org/wiki/File:Zeichen_244_-_Beginn_der_Fahrradstraße,_StVO_1997.svg"]},{path:"./assets/themes/cyclestreets/Zeichen_244_KFZ_frei.svg",license:"CC0-1.0",authors:["Bundesministerium für Verkehr, Bau- und Wohnungswesen"],sources:["https://wiki.openstreetmap.org/wiki/File:Zusatzzeichen_KFZ_frei.svg","https://commons.wikimedia.org/wiki/File:Zeichen_244_-_Beginn_der_Fahrradstraße,_StVO_1997.svg"]},{path:"./assets/themes/cyclestreets/Zeichen_244a.svg",license:"CC0-1.0",authors:["Bundesministerium für Verkehr, Bau- und Wohnungswesen"],sources:["https://commons.wikimedia.org/wiki/File:Zeichen_244a_-_Ende_der_Fahrradstraße,_StVO_1997.svg"]},{path:"./assets/themes/cyclestreets/logo.svg",license:"CC0-1.0",authors:["The RedBurn"],sources:["https://commons.wikimedia.org/wiki/File:Belgian_road_sign_F111_nl.svg"]},{path:"./assets/themes/cyclofix/SocialImage.jpeg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/themes/cyclofix/fietsambassade_gent_logo.svg",license:"LOGO",authors:["De Fietsambassade"],sources:["https://fietsambassade.gent.be"]},{path:"./assets/themes/cyclofix/fietsambassade_gent_logo_small.svg",license:"LOGO",authors:["De Fietsambassade"],sources:["https://fietsambassade.gent.be"]},{path:"./assets/themes/cyclofix/key.svg",license:"CC-BY-SA-4.0",authors:["Stijn Wens"],sources:["https://wens.be/free-antwerpenize-bicycle-font"]},{path:"./assets/themes/cyclofix/logo.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/themes/disaster_response/CivilDefence.svg",license:"TRIVIAL",authors:["https://commons.wikimedia.org/wiki/User:MStankie"],sources:["https://commons.wikimedia.org/wiki/File:CivilDefence.svg"]},{path:"./assets/themes/disaster_response/social.svg",license:"TRIVIAL",authors:["Geneva Convention","https://commons.wikimedia.org/wiki/User:MStankie","https://commons.wikimedia.org/wiki/User:The_Navigators"],sources:["https://commons.wikimedia.org/wiki/File:Geneva_Convention_Civil_Defence_Symbol_-_Flag.svg"]},{path:"./assets/themes/drinking_water/logo.svg",license:"CC-BY-SA-4.0",authors:["Pieter Fiers","Thibault Declercq","Pierre Barban","Joost Schouppe","Pieter Vander Vennet"],sources:["https://osoc.be/editions/2020/cyclofix"]},{path:"./assets/themes/elongated_coin/penny.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/themes/facadegardens/bloei.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/bodembedekker.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/eetbaar.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/gevelton.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/geveltuin.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/halfzon.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/klimplant.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/schaduw.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/struik.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/facadegardens/zon.svg",license:"CC0-1.0",authors:["Klimaan VZW"],sources:["https://klimaan.be/"]},{path:"./assets/themes/fritures/fries.svg",license:"CC-BY-4.0",authors:["Freepik"],sources:["https://www.flaticon.com/free-icon/french-fries_1144288"]},{path:"./assets/themes/fritures/logo.svg",license:"CC-BY-4.0",authors:["Freepik"],sources:["https://www.flaticon.com/free-icon/french-fries_1144288"]},{path:"./assets/themes/ghostbikes/logo.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/grb/housenumber_blank.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/grb/logo.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/grb/warning.svg",license:"CC0-1.0",authors:["penubag"],sources:["https://commons.wikimedia.org/wiki/File:Ambox_warning_pn.svg"]},{path:"./assets/themes/hackerspaces/glider.svg",license:"CC0-1.0",authors:["Bryan.burgers"],sources:["https://upload.wikimedia.org/wikipedia/commons/0/02/Game_of_life_glider.svg"]},{path:"./assets/themes/hackerspaces/led.png",license:"CC0-1.0",authors:["Tommaso.sansone91"],sources:["https://upload.wikimedia.org/wikipedia/commons/2/2a/Led_light_bulb_-_led_lamp_2.png"]},{path:"./assets/themes/hailhydrant/Twemoji12_1f692.svg",license:"CC-BY-4.0",authors:["Twemoji Project"],sources:["https://upload.wikimedia.org/wikipedia/commons/1/19/Twemoji12_1f692.svg","https://twemoji.twitter.com/"]},{path:"./assets/themes/hailhydrant/Twemoji12_1f9ef.svg",license:"CC-BY-4.0",authors:["Twemoji Project"],sources:["https://upload.wikimedia.org/wikipedia/commons/9/9b/Twemoji12_1f9ef.svg","https://twemoji.twitter.com/"]},{path:"./assets/themes/hailhydrant/Twemoji12_26d1.svg",license:"CC-BY-4.0",authors:["Twemoji Project"],sources:["https://upload.wikimedia.org/wikipedia/commons/e/eb/Twemoji12_26d1.svg","https://twemoji.twitter.com/"]},{path:"./assets/themes/hailhydrant/Twemoji_1f691.svg",license:"CC-BY-4.0",authors:["Twemoji Project"],sources:["https://upload.wikimedia.org/wikipedia/commons/9/95/Twemoji_1f691.svg","https://twemoji.twitter.com/"]},{path:"./assets/themes/hailhydrant/hydrant.svg",license:"GPL-2.0-or-later",authors:["http://jaanos.deviantart.com/"],sources:["https://commons.wikimedia.org/wiki/File:Hydrant.svg"]},{path:"./assets/themes/hailhydrant/hydrant.svg",license:"CC-BY-SA-4.0",authors:["GOwin"],sources:["https://raw.githubusercontent.com/mapamore/MapComplete/master/assets/themes/hailhydrant/hydrant.svg"]},{path:"./assets/themes/hailhydrant/hydrant_pillar.svg",license:"CC-BY-SA-4.0",authors:["M!dgard"],sources:["https://www.openstreetmap.org/user/M!dgard","https://mapcomplete.braindeaddev.com/assets/layers/fire_hydrants/hydrant_pillar.svg"]},{path:"./assets/themes/hailhydrant/hydrant_underground.svg",license:"CC-BY-SA-4.0",authors:["M!dgard"],sources:["https://www.openstreetmap.org/user/M!dgard","https://mapcomplete.braindeaddev.com/assets/layers/fire_hydrants/hydrant_underground.svg"]},{path:"./assets/themes/hailhydrant/hydrant_unknown.svg",license:"CC-BY-SA-4.0",authors:["M!dgard"],sources:["https://www.openstreetmap.org/user/M!dgard","https://mapcomplete.braindeaddev.com/assets/layers/fire_hydrants/hydrant_unknown.svg"]},{path:"./assets/themes/hailhydrant/logo.svg",license:"CC-BY-SA-4.0",authors:["Erwin Olario"],sources:["https://wiki.openstreetmap.org/wiki/File:Hailhydrant-logo.svg"]},{path:"./assets/themes/maps/logo.svg",license:"CC0-1.0",authors:["CC0"],sources:["https://wiki.openstreetmap.org/wiki/File:Board-14.svg"]},{path:"./assets/themes/maxspeed/maxspeed_10 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_100 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_110 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_120 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_130 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_140 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_20 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_30 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_40 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_50 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_60 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_70 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_80 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_90 mph.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/maxspeed/maxspeed_logo.svg",license:"CC-BY-4.0",authors:["yopaseopor"],sources:["https://raw.githubusercontent.com/yopaseopor/beta_preset_josm/master/ES/traffic_signs/ES/ES_R301-30 mph.svg"]},{path:"./assets/themes/nature/logo.svg",license:"CC-BY-4.0",authors:["Font Awesome"],sources:["https://fontawesome.com"]},{path:"./assets/themes/notes/logo.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/onwheels/bicycle_pump.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/cafe.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/cone.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/crest.svg",license:"CC0-1.0",authors:["Free Wheelies"],sources:[]},{path:"./assets/themes/onwheels/doctor.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/elevator.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/entrance.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/government.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/hospital.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/hotel.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/parking.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/pharmacy.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/repair.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/restaurant.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/shop.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/onwheels/toilet.svg",license:"CC-BY-SA-4.0",authors:["CT Steward"],sources:["https://www.ctsteward.com/"]},{path:"./assets/themes/openwindpowermap/logo.svg",license:"CC0-1.0",authors:["Iconathon"],sources:["https://commons.wikimedia.org/wiki/File:Wind_Turbine_(2076)_-_The_Noun_Project.svg"]},{path:"./assets/themes/openwindpowermap/wind_turbine.svg",license:"CC0-1.0",authors:["Iconathon"],sources:["https://commons.wikimedia.org/wiki/File:Wind_Turbine_(2076)_-_The_Noun_Project.svg"]},{path:"./assets/themes/osm_community_index/osm.svg",license:"ISC",authors:["osmlab"],sources:["https://github.com/osmlab/osm-community-index/blob/main/dist/img/osm.svg"]},{path:"./assets/themes/parkings/parkings.svg",license:"CC-BY-4.0",authors:["Freepik"],sources:["https://www.flaticon.com/free-icon/placeholder_608690?term=parking&page=1&position=16&page=1&position=16&related_id=608690&origin=search"]},{path:"./assets/themes/pets/dog-food.svg",license:"CC0-1.0",authors:["Public Domain Symbols","Jean Victor Balin ","Niels Elgaard Larsen"],sources:["https://openclipart.org/detail/260714/dogpark15","https://openclipart.org/detail/25719/aiga-restaurant"]},{path:"./assets/themes/pets/dogshop.svg",license:"CC0-1.0",authors:["Public Domain Symbols","Niels Elgaard Larsen"],sources:["https://openclipart.org/detail/260714/dogpark15"]},{path:"./assets/themes/pets/petshop.svg",license:"CC0-1.0",authors:["Niels Elgaard Larsen","Public Domain Symbols"],sources:["https://openclipart.org/detail/260857/veterinary15"]},{path:"./assets/themes/playgrounds/playground.svg",license:"CC-BY-3.0",authors:["Scott de Jonge"],sources:["https://commons.wikimedia.org/wiki/File:Map_icons_by_Scott_de_Jonge_-_playground.svg"," https://github.com/scottdejonge/map-icons/blob/b74a0e00afdd6b734883671da7a9e5f30497353e/src/icons/playground.svg"]},{path:"./assets/themes/postal_codes/townhall.svg",license:"CC0-1.0",authors:["Nebulon42"],sources:["https://wiki.openstreetmap.org/wiki/File:Town-hall-16.svg"]},{path:"./assets/themes/rainbow_crossings/crossing.svg",license:"CC0-1.0",authors:["bxl-forever"],sources:[]},{path:"./assets/themes/rainbow_crossings/logo.svg",license:"CC0-1.0",authors:["bxl-forever"],sources:[]},{path:"./assets/themes/shops/shop.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Convenience-14.svg"]},{path:"./assets/themes/speelplekken/Departement_Omgeving_Vlaanderen.png",license:"LOGO",authors:["Departement Omgeving, Vlaamse Overheid"],sources:["https://omgeving.vlaanderen.be/"]},{path:"./assets/themes/speelplekken/logo.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/themes/speelplekken/provincie_antwerpen.jpg",license:"LOGO",authors:["Provincie Antwerpen"],sources:["https://www.antwerpen.be/"]},{path:"./assets/themes/speelplekken/social_image.jpg",license:"LOGO",authors:["Createlli"],sources:["https://createlli.com/"]},{path:"./assets/themes/speelplekken/speelbos.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/themes/speelplekken/speeltuin.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/themes/speelplekken/speelweide.svg",license:"CC-BY-SA-4.0",authors:["Gitte Loos (Createlli) in opdracht van Provincie Antwerpen "],sources:["https://createlli.com/","https://www.provincieantwerpen.be/"]},{path:"./assets/themes/speelplekken/youtube.svg",license:"LOGO",authors:["Youtube"],sources:["https://www.youtube.com/"]},{path:"./assets/themes/sports/sport.svg",license:"CC-BY-4.0",authors:["Tobias Zwick","modified from EmojiOne 2: U+26BD"],sources:["https://github.com/streetcomplete/StreetComplete/blob/master/res/graphics/quest/sport.svg"]},{path:"./assets/themes/stations/bench.svg",license:"CC0-1.0",authors:["Matthijs Melissen"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/bench.svg"]},{path:"./assets/themes/stations/bicycle_parking.svg",license:"CC0-1.0",authors:["Matthijs Melissen"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/bicycle_parking.svg"]},{path:"./assets/themes/stations/departures_board.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/themes/stations/drinking_water.svg",license:"CC0-1.0",authors:["Andy Allan","Michael Glanznig"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/drinking_water.svg"]},{path:"./assets/themes/stations/public_transport_tickets.svg",license:"CC0-1.0",authors:["Jérémy Ragusa"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/public_transport_tickets.svg"]},{path:"./assets/themes/stations/rail-light.svg",license:"CC0-1.0",authors:["Maki"],sources:["https://labs.mapbox.com/maki-icons/"]},{path:"./assets/themes/stations/rental_bicycle.svg",license:"CC0-1.0",authors:["Michael Glanznig","Andy Allan"],sources:["https://github.com/gravitystorm/openstreetmap-carto/blob/master/symbols/amenity/rental_bicycle.svg"]},{path:"./assets/themes/surveillance/cam_left.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/surveillance/cam_right.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/surveillance/dome.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/surveillance/logo.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/bench.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/bicycle_rental.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/charging_station_ebike.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/cycle_pump.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/cycle_repair.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/cycle_repair_and_pump.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/observation_platform.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/observation_tower.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/picnic_table.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/playground.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/toilets.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/toilets_wheelchair.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/NEGATIEF/toilets_wheelchair.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/FlandersArtSans-Light.woff",license:"ALL-RIGHTS-RESERVED",authors:["Jo De Baerdemaeker "],sources:["https://www.studiotype.be/fonts/flandersart"]},{path:"./assets/themes/toerisme_vlaanderen/FlandersArtSerif-Medium.woff",license:"ALL-RIGHTS-RESERVED",authors:["Jo De Baerdemaeker "],sources:["https://www.studiotype.be/fonts/flandersart"]},{path:"./assets/themes/toerisme_vlaanderen/avatar.png",license:"LOGO",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/"]},{path:"./assets/themes/toerisme_vlaanderen/bench.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/bicycle_rental.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/charging_station_ebike.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/cycle_pump.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/cycle_repair.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/cycle_repair_and_pump.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/logo.png",license:"LOGO",authors:["Toerisme Vlaanderen"],sources:["https://www.toerismevlaanderen.be/"]},{path:"./assets/themes/toerisme_vlaanderen/logo.svg",license:"CC-BY-NC-4.0",authors:[],sources:["https://pngimg.com/image/46283"]},{path:"./assets/themes/toerisme_vlaanderen/observation_platform.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/observation_tower.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/picnic_table.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/pin je punt1.jpg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/toerisme_vlaanderen/pin je punt2.jpg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/toerisme_vlaanderen/pin je punt3.jpg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/toerisme_vlaanderen/pin je punt4.jpg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/toerisme_vlaanderen/pin je punt5.jpg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/toerisme_vlaanderen/pin je punt6.jpg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderenn"]},{path:"./assets/themes/toerisme_vlaanderen/playground.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/toilets.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/toilets_wheelchair.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toerisme_vlaanderen/toilets_wheelchair.svg",license:"CC0-1.0",authors:["Toerisme Vlaanderen"],sources:["https://toerismevlaanderen.be/pinjepunt","https://mapcomplete.org/toerisme_vlaanderen"]},{path:"./assets/themes/toilets/toilets.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Toilets-16.svg"]},{path:"./assets/themes/trees/logo.svg",license:"CC-BY-SA-4.0",authors:["Midgard"],sources:["https://www.openstreetmap.org/user/M!dgard"]},{path:"./assets/themes/uk_addresses/housenumber_add.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/uk_addresses/housenumber_ok.svg",license:"CC0-1.0",authors:["Tobias Zwick (westnordost)"],sources:["https://github.com/streetcomplete/StreetComplete/tree/master/res/graphics","https://f-droid.org/packages/de.westnordost.streetcomplete/"]},{path:"./assets/themes/uk_addresses/housenumber_text.svg",license:"CC0-1.0",authors:["Tobias Zwick (westnordost)"],sources:["https://github.com/streetcomplete/StreetComplete/tree/master/res/graphics","https://f-droid.org/packages/de.westnordost.streetcomplete/"]},{path:"./assets/themes/uk_addresses/housenumber_unknown.svg",license:"CC0-1.0",authors:["Tobias Zwick (westnordost)"],sources:["https://github.com/streetcomplete/StreetComplete/tree/master/res/graphics","https://f-droid.org/packages/de.westnordost.streetcomplete/"]},{path:"./assets/themes/uk_addresses/housenumber_unknown_small.svg",license:"CC0-1.0",authors:["Pieter Vander Vennet"],sources:[]},{path:"./assets/themes/uk_addresses/stamp-outline.png",license:"CC0-1.0",authors:["Rob Nickerson"],sources:[]},{path:"./assets/themes/velopark/velopark.png",license:"LOGO",authors:["Velopark.be"],sources:["https://velopark.be"]},{path:"./assets/themes/velopark/velopark.svg",license:"LOGO",authors:["Velopark.be"],sources:["https://velopark.be"]},{path:"./assets/themes/walkingnodes/logo.svg",license:"GPL-3.0-only",authors:["sebkur"],sources:["https://github.com/mobanisto/MapComplete/commit/1aeb1fdb5b09908d67907f3c816152bfebfdcc79"]},{path:"./assets/themes/walkingnodes/route_marker.svg",license:"CC0-1.0",authors:["Robin van der Linde"],sources:[]},{path:"./assets/themes/waste_basket/waste_basket.svg",license:"CC0-1.0",authors:[],sources:["https://wiki.openstreetmap.org/wiki/File:Waste-basket-12.svg"]},{path:"./assets/themes/width/icon.svg",license:"TRIVIAL",authors:["Pieter Vander Vennet"],sources:[]}],$o=class $o extends fi{constructor(){super("icon","Makes sure that a valid .svg-path is added")}reformat(e,t){return e.trim()}getFeedback(e,t,n){if(e=this.reformat(e),!e.startsWith("http")&&!$o.allLicenses.has(e)){const r=n?[]:ke.sortedByLevenshteinDistance(e.substring(e.lastIndexOf("/")),$o.allLicensesArr,s=>s.substring(s.lastIndexOf("/"))).slice(0,5);return new js([`Unkown builtin icon ${e}, perhaps you meant one of: <ul>`,...r.map(s=>`<li><span class="flex justify-start"> <img src='${s}' class="w-6 h-6"/>${s}</span></li>`),"</ul>"].join(""))}if(!e.endsWith(".svg"))return new js("An icon should end with `.svg`")}isValid(e,t){return this.getFeedback(e,t,!0)===void 0}};R($o,"allLicenses",new Set(X8.map(e=>e.path))),R($o,"allLicensesArr",Array.from($o.allLicenses)),R($o,"isMeta",!0);let rp=$o;class Z8 extends fi{constructor(){super("tag","A simple tag of the format `key=value` OR a tagExpression");R(this,"isMeta",!0)}getFeedback(t,n){}isValid(t,n){return this.getFeedback(t,n)===void 0}}class K8 extends fi{constructor(){super("id","Checks for valid identifiers for layers, will automatically replace spaces and uppercase")}isValid(e,t){return this.getFeedback(e,t)===void 0}reformat(e,t){return e.replaceAll(" ","_").toLowerCase()}getFeedback(e,t){if(e.length<3)return De.t.validation.id.shouldBeLonger;if(!e.match(/^[a-zA-Z0-9_ ]+$/))return De.t.validation.id.invalidCharacter}}class Q8 extends By{constructor(){super("slope","Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction.")}isValid(e){return(e.endsWith("%")||e.endsWith("°"))&&(e=e.substring(0,e.length-1)),super.isValid(e)}reformat(e){e=e.trim();let t="";return(e.endsWith("%")||e.endsWith("°"))&&(t=e.substring(e.length-1),e=e.substring(0,e.length-1)),super.reformat(e)+t}}class e6 extends uf{constructor(){super("velopark","A custom element to allow copy-pasting velopark-pages")}getFeedback(e){const t=super.getFeedback(e);if(t)return t;const n=new URL(e);if(n.hostname!=="velopark.be"&&n.hostname!=="www.velopark.be"&&n.hostname!=="data.velopark.be")return new js({"*":"Invalid hostname, expected velopark.be"});if(!e.startsWith("https://data.velopark.be/data/")&&!e.startsWith("https://www.velopark.be/static/data/"))return new js({"*":"A valid URL should either start with https://data.velopark.be/data/ or https://www.velopark.be/static/data/"})}isValid(e){return super.isValid(e)}reformat(e){return new URL(super.reformat(e)).pathname.startsWith("/static/data/")?"https://data.velopark.be/data/"+e.substring(e.lastIndexOf("/")+1):super.reformat(e)}}const ao=class ao{static HelpText(){const e=ao.AllValidators.map(t=>new Qt([new tr(t.name,3),t.explanation]).SetClass("flex flex-col"));return new Qt([new tr("Available types for text fields",1),"The listed types here trigger a special input element. Use them in `tagrendering.freeform.type` of your tagrendering to activate them",...e]).SetClass("flex flex-col")}static _byTypeConstructor(){const e=new Map;for(const t of ao.AllValidators)e.set(t.name,t);return e}static get(e){return ao._byType.get(e)}};R(ao,"availableTypes",["string","text","date","nat","int","distance","direction","wikidata","pnat","float","pfloat","email","url","phone","opening_hours","color","image","simple_tag","key","translation","icon","fediverse","tag","fediverse","id","slope","velopark"]),R(ao,"AllValidators",[new f3,new g3,new m3,new Cy,new Yp,new y3,new b3,new J5,new V5,new By,new G5,new H5,new uf,new U8,new z8,new H8,new np,new tp,new Z8,new Yy,new Y8,new rp,new ip,new K8,new Q8,new e6]),R(ao,"_byType",ao._byTypeConstructor());let tu=ao;class jo{constructor(e,t){R(this,"id");R(this,"render");R(this,"renderIcon");R(this,"renderIconClass");R(this,"question");R(this,"questionhint");R(this,"condition");R(this,"invalidValues");R(this,"metacondition");R(this,"description");R(this,"configuration_warnings",[]);R(this,"freeform");R(this,"multiAnswer");R(this,"mappings");R(this,"editButtonAriaLabel");R(this,"labels");R(this,"classes");var s,o,l,u;let n=e;if(n===void 0)throw"Initing a TagRenderingConfig with undefined in "+t;typeof n=="number"&&(n=""+n);let r=t;if(n.id!==void 0){const c=(t??"").split(".")[0];if(n.source){let p=n.source+":";n.source==="shared-questions"&&(p+="shared_questions."),r=`${p}${n.id??""}`}else r=`layers:${c}.tagRenderings.${n.id??""}`}if(typeof n=="string"){this.render=De.T(n,r+".render"),this.multiAnswer=!1;return}if(this.id=n.id??"",this.id.match(/^[a-zA-Z0-9 ()?/=:;,_-]*$/)===null)throw"Invalid ID in "+t+": an id can only contain [a-zA-Z0-0_-] as characters. The offending id is: "+this.id;if(this.labels=n.labels??[],typeof n.classes=="string"?this.classes=n.classes.split(" "):this.classes=n.classes??[],this.classes=[].concat(...this.classes.map(c=>c.split(" "))),this.classes.length===0&&(this.classes=void 0),this.render=De.T(n.render,r+".render"),this.question=De.T(n.question,r+".question"),this.questionhint=De.T(n.questionHint,r+".questionHint"),this.description=De.T(n.description,r+".description"),this.editButtonAriaLabel=De.T(n.editButtonAriaLabel,r+".editButtonAriaLabel"),this.condition=In.Tag(n.condition??{and:[]},`${t}.condition`),this.invalidValues=n.invalidValues?In.Tag(n.invalidValues,`${t}.invalidValues`):void 0,typeof n.icon=="string"?(this.renderIcon=n.icon,this.renderIconClass="small"):typeof n.icon=="object"&&(this.renderIcon=n.icon.path,this.renderIconClass=n.icon.class??"small"),this.metacondition=In.Tag(n.metacondition??{and:[]},`${t}.metacondition`),n.freeform){if(n.freeform.addExtraTags!==void 0&&n.freeform.addExtraTags.map===void 0)throw`Freeform.addExtraTags should be a list of strings - not a single string (at ${t})`;if(n.freeform.type&&tu.availableTypes.indexOf(n.freeform.type)<0)throw`At ${t}: invalid type ${n.freeform.type}, perhaps you meant ${ke.sortedByLevenshteinDistance(n.freeform.key,tu.availableTypes,d=>d)}`;const c=n.freeform.type??"string";let p=De.T(n.freeform.placeholder);if(p===void 0){const d=(s=De.t.validation[c])==null?void 0:s.description,f=n.freeform.key;d!==void 0?p=d.OnEveryLanguage(g=>f+" ("+g+")"):p=De.T(f+" ("+c+")")}if(this.freeform={key:n.freeform.key,type:c,placeholder:p,addExtraTags:((o=n.freeform.addExtraTags)==null?void 0:o.map((d,f)=>In.ParseUploadableTag(d,`${t}.extratag[${f}]`)))??[],inline:n.freeform.inline??!1,default:n.freeform.default,helperArgs:n.freeform.helperArgs},n.freeform.extraTags!==void 0)throw`Freeform.extraTags is defined. This should probably be 'freeform.addExtraTag' (at ${t})`;if(this.freeform.key===void 0||this.freeform.key==="")throw`Freeform.key is undefined or the empty string - this is not allowed; either fill out something or remove the freeform block alltogether. Error in ${t}`;if(n.freeform.args!==void 0)throw`Freeform.args is defined. This should probably be 'freeform.helperArgs' (at ${t})`;if(n.freeform.key==="questions"&&this.id!=="questions")throw`If you use a freeform key 'questions', the ID must be 'questions' too to trigger the special behaviour. The current id is '${this.id}' (at ${t})`;if(this.freeform.addExtraTags&&new qn(this.freeform.addExtraTags).usedKeys().indexOf(this.freeform.key)>=0)throw`The freeform key ${this.freeform.key} will be overwritten by one of the extra tags, as they use the same key too. This is in ${t}`}if(this.multiAnswer=n.multiAnswer??!1,n.mappings){if(!Array.isArray(n.mappings))throw"Tagrendering has a 'mappings'-object, but expected a list ("+t+")";const p=n.mappings.map(d=>{var f;return(f=d.icon)==null?void 0:f.class}).find(d=>!!d)??n["#iconsize"]??"small";this.mappings=n.mappings.map((d,f)=>jo.ExtractMapping(d,f,r,t,this.multiAnswer,this.question!==void 0,p))}if(!n.multiAnswer&&this.mappings!==void 0&&this.question!==void 0){let c=[];for(let p=0;p<this.mappings.length;p++){const d=this.mappings[p];if(d.if===void 0)throw`${t}.mappings[${p}].if is undefined`;c.push(...d.if.usedKeys())}c=ke.Dedup(c);for(let p=0;p<this.mappings.length;p++){const d=this.mappings[p];if(d.hideInAnswer)continue;const f=d.if.usedKeys();for(const g of c)if(f.indexOf(g)<0){const v=`${t}.mappings[${p}]: This mapping only defines values for ${f.join(", ")}, but it should also give a value for ${g}`;this.configuration_warnings.push(v)}}}if(this.question!==void 0&&n.multiAnswer){if((((l=this.mappings)==null?void 0:l.length)??0)===0)throw`${t} MultiAnswer is set, but no mappings are defined`;let c=[],p=!0;for(const d of this.mappings)d.hideInAnswer||(d.ifnot===void 0&&(p=!1),c=c.concat(d.if.usedKeys()));if(c=ke.Dedup(c),c.length>1&&!p)throw`${t}: A multi-answer is defined, which generates values over multiple keys. Please define ifnot-tags too on every mapping`;if(c.length>1&&((u=this.freeform)==null?void 0:u.key)!==void 0)throw`${t}: A multi-answer is defined, which generates values over multiple keys. This is incompatible with having a freeform key`}}static ExtractMapping(e,t,n,r,s,o,l="small"){var w;const u=`${n}.mappings.${t}`;if(e.if===void 0)throw'Invalid mapping: "if" is not defined';if(e.then===void 0)throw e.render!==void 0?`${u}: Invalid mapping: no 'then'-clause found. You might have typed 'render' instead of 'then', change it in ${JSON.stringify(e)}`:`${u}: Invalid mapping: no 'then'-clause found in ${JSON.stringify(e)}`;if(e.ifnot!==void 0&&!s)throw`${u}: Invalid mapping: 'ifnot' is defined, but the tagrendering is not a multianswer. Either remove ifnot or set 'multiAnswer:true' to enable checkboxes instead of radiobuttons`;if(e.render!==void 0)throw`${u}: Invalid mapping: a 'render'-key is present, this is probably a bug: ${JSON.stringify(e)}`;if(typeof e.if!="string"&&e.if.length!==void 0)throw`${u}: Invalid mapping: "if" is defined as an array. Use {"and": <your conditions>} or {"or": <your conditions>} instead`;if(e.addExtraTags!==void 0&&s)throw`${u}: Invalid mapping: got a multi-Answer with addExtraTags; this is not allowed`;let c=!1;typeof e.hideInAnswer=="boolean"?c=e.hideInAnswer:e.hideInAnswer!==void 0&&(c=In.Tag(e.hideInAnswer,`${r}.mapping[${t}].hideInAnswer`));const p=(e.addExtraTags??[]).map((A,C)=>In.SimpleTag(A,`${u}.addExtraTags[${C}]`));if(c===!0&&p.length>0)throw`${u}: Invalid mapping: 'hideInAnswer' is set to 'true', but 'addExtraTags' is enabled as well. This means that extra tags will be applied if this mapping is chosen as answer, but it cannot be chosen as answer. This either indicates a thought error or obsolete code that must be removed.`;let d,f=l;e.icon&&(typeof e.icon=="string"&&e.icon!==""?d=e.icon.trim():e.icon.path&&(d=e.icon.path.trim(),f=e.icon.class??f));const g=e.priorityIf!==void 0?In.Tag(e.priorityIf,`${u}.priorityIf`):void 0,v={if:In.Tag(e.if,`${u}.if`),ifnot:e.ifnot!==void 0?In.Tag(e.ifnot,`${u}.ifnot`):void 0,then:De.T(e.then,`${u}.then`),alsoShowIf:e.alsoShowIf!==void 0?In.Tag(e.alsoShowIf,`${u}.alsoShowIf`):void 0,hideInAnswer:c,icon:d,iconClass:f,addExtraTags:p,searchTerms:e.searchTerms,priorityIf:g};if(o){if(c!==!0&&v.if!==void 0&&!v.if.isUsableAsAnswer())throw`${r}.mapping[${t}].if: This value cannot be used to answer a question, probably because it contains a regex or an OR. Either change it or set 'hideInAnswer'`;if(c!==!0&&!(((w=v.ifnot)==null?void 0:w.isUsableAsAnswer())??!0))throw`${r}.mapping[${t}].ifnot: This value cannot be used to answer a question, probably because it contains a regex or an OR. If a contributor were to pick this as an option, MapComplete wouldn't be able to determine which tags to add.
    Either change it or set 'hideInAnswer'`}return v}IsKnown(e){var t;if(this.condition&&!this.condition.matchesProperties(e))return!0;if(this.invalidValues&&this.invalidValues.matchesProperties(e))return!1;if(this.multiAnswer){for(const r of this.mappings??[])if(In.MatchesMultiAnswer(r.if,e))return!0;const n=(t=this.freeform)==null?void 0:t.key;if(n!==void 0){const r=e[n];return typeof r=="object"?Object.keys(r).length>0:r!==void 0&&r!==""}return!1}return this.GetRenderValue(e)!==void 0}GetRenderValues(e){var s,o;if(!this.multiAnswer)return[this.GetRenderValueWithImage(e)];let t=((s=this.freeform)==null?void 0:s.key)!==void 0,n=new Set;const r=ke.NoNull((o=this.mappings??[])==null?void 0:o.map(l=>{if(l.if===void 0)return l;if(In.MatchesMultiAnswer(l.if,e)){if(t&&l.if.isUsableAsAnswer()){const u=l.if.asChange({}).find(c=>c.k===this.freeform.key).v;n.add(u)}return l}}));if(t&&e[this.freeform.key]!==void 0){const u=e[this.freeform.key].split(";").filter(c=>!n.has(c));for(const c of u)r.push({then:new d2(this.render.replace("{"+this.freeform.key+"}",c).translations,this.render.context)})}return r}GetRenderValue(e){var t;return(t=this.GetRenderValueWithImage(e))==null?void 0:t.then}GetRenderValueWithImage(e){var t,n;if(!(this.condition!==void 0&&!this.condition.matchesProperties(e))){if(this.mappings!==void 0&&!this.multiAnswer){for(const r of this.mappings)if(r.if===void 0||r.if.matchesProperties(e)||(t=r.alsoShowIf)!=null&&t.matchesProperties(e))return r}if(((n=this.freeform)==null?void 0:n.key)===void 0||e[this.freeform.key]!==void 0)return{then:this.render,icon:this.renderIcon,iconClass:this.renderIconClass}}}EnumerateTranslations(){const e=[];for(const t in this){if(!this.hasOwnProperty(t))continue;const n=this[t];n instanceof js&&e.push(n)}return e}FreeformValues(){var e,t;try{const n=(e=this.freeform)==null?void 0:e.key,r=(t=this.mappings)==null?void 0:t.filter(o=>o.hideInAnswer!==!0);if(n===void 0){let o=ke.NoNull((r==null?void 0:r.map(p=>p.if.asChange({})))??[]);if(o.length===0)return;const l=o.map(p=>p.map(d=>d.k));let u=l[0];for(const p of l)u=u.filter(d=>p.indexOf(d)>=0);const c=u[0];return c===void 0?void 0:{key:c,values:ke.NoNull(o.map(p=>{var d;return(d=p.filter(f=>f.k===c)[0])==null?void 0:d.v}))}}let s=ke.NoNull((r==null?void 0:r.map(o=>{var l;return(l=o.if.asChange({}).filter(u=>u.k===n)[0])==null?void 0:l.v}))??[]);return s.length===void 0&&(s=void 0),{key:n,type:this.freeform.type,values:s}}catch{console.error("Could not create FreeformValues for tagrendering",this.id);return}}constructChangeSpecification(e,t,n,r){var u,c,p;typeof e=="string"&&(e=e==null?void 0:e.trim());const s=tu.get((u=this.freeform)==null?void 0:u.type);if(s&&e&&(e=s.reformat(e,()=>r._country)),e===""&&(e=void 0),e===void 0&&t===void 0&&n===void 0||this.mappings===void 0&&e===void 0)return;if(this.freeform!==void 0&&(this.mappings===void 0||this.mappings.length==0||t===this.mappings.length&&!this.multiAnswer)){const d={[this.freeform.key]:e},f=(c=this.mappings)==null?void 0:c.find(w=>w.if.matchesProperties(d));if(f)return new qn([f.if,...f.addExtraTags??[]]);const g=new qn([new Li(this.freeform.key,e),...this.freeform.addExtraTags??[]]),v=g.applyOn(r);return(p=this.invalidValues)!=null&&p.matchesProperties(v)?void 0:g}if(this.multiAnswer){const d=this.mappings.filter((v,w)=>n[w]).map(v=>new qn([v.if,...v.addExtraTags??[]])),f=this.mappings.filter((v,w)=>!n[w]).map(v=>v.ifnot);n.at(-1)&&this.freeform&&d.push(new qn([new Li(this.freeform.key,e),...this.freeform.addExtraTags??[]]));const g=In.FlattenMultiAnswer([...d,...f]);return g.and.length===0?void 0:g}const o=this.mappings.some(d=>typeof d.hideInAnswer=="boolean"?!d.hideInAnswer:!d.hideInAnswer.matchesProperties(r)),l=e!==void 0&&(t===this.mappings.length||!o||t===void 0);if(l)return new qn([new Li(this.freeform.key,e),...this.freeform.addExtraTags??[]]);if(t!==void 0)return new qn([this.mappings[t].if,...this.mappings[t].addExtraTags??[]]);console.error("TagRenderingConfig.ConstructSpecification has a weird fallback for",{freeformValue:e,singleSelectedMapping:t,multiSelectedMapping:n,currentProperties:r,useFreeform:l})}GenerateDocumentation(){var s,o,l;let e=[];((s=this.freeform)==null?void 0:s.key)!==void 0&&(e=["This rendering asks information about the property ",$s.OsmWiki(this.freeform.key),new Qt(["This is rendered with ",new Zi(this.render.txt).SetClass("code font-bold")])]);let t;this.mappings!==void 0&&(t=new Jd([].concat(...this.mappings.map(u=>{const c=[new Qt([new Zi(u.then.txt).SetClass("font-bold")," corresponds with ",u.if.asHumanString(!0,!1,{})])];return u.hideInAnswer===!0&&c.push("_This option cannot be chosen as answer_"),u.ifnot!==void 0&&c.push("Unselecting this answer will add "+u.ifnot.asHumanString(!0,!1,{})),c}))));let n;this.condition!==void 0&&!((o=this.condition)!=null&&o.matchesProperties({}))&&(n=new Qt(["This tagrendering is only visible in the popup if the following condition is met:",new Zi(this.condition.optimize().asHumanString(!0,!1,{})).SetClass("code")]));let r;return((l=this.labels)==null?void 0:l.length)>0&&(r=new Qt(["This tagrendering has labels ",...this.labels.map(u=>new Zi(u).SetClass("code"))]).SetClass("flex")),new Qt([new tr(this.id,3),this.description,this.question!==void 0?new Qt(["The question is ",new Zi(this.question.txt).SetClass("font-bold bold")]):new Zi("This tagrendering has no question and is thus read-only").SetClass("italic"),new Qt(e),t,n,r]).SetClass("flex flex-col")}usedTags(){var t,n;const e=[];e.push(this.metacondition,this.condition,(t=this.freeform)!=null&&t.key?new Dn((n=this.freeform)==null?void 0:n.key,/.*/):void 0,this.invalidValues);for(const r of this.mappings??[])e.push(r.if),e.push(r.priorityIf),e.push(r.alsoShowIf),e.push(...r.addExtraTags??[]),typeof r.hideInAnswer!="boolean"&&e.push(r.hideInAnswer),e.push(r.ifnot);return ke.NoNull(e)}}class Wh{constructor(e,t){R(this,"id");R(this,"options");R(this,"defaultSelection");if(e.options===void 0)throw`A filter without options was given at ${t}`;if(e.id===void 0)throw`A filter without id was found at ${t}`;if(e.id.match(/^[a-zA-Z0-9_-]*$/)===null)throw`A filter with invalid id was found at ${t}. Ids should only contain letters, numbers or - _`;if(e.options.map===void 0)throw`A filter was given where the options aren't a list at ${t}`;this.id=e.id;let n;if(this.options=e.options.map((r,s)=>{var p;const o=`${t}.options.${s}`,l=De.T(r.question,`${o}.question`);let u;if((((p=r.fields)==null?void 0:p.length)??0)==0&&r.osmTags!==void 0&&(u=In.Tag(r.osmTags,`${o}.osmTags`),Wh.validateSearch(u,o)),l===void 0)throw`Invalid filter: no question given at ${o}`;const c=(r.fields??[]).map((d,f)=>{const g=d.type??"string";if(d.name===void 0||d.name===""||d.name.match(/[a-z0-9_-]+/)==null)throw`Invalid filter: a variable name should match [a-z0-9_-]+ at ${o}.fields[${f}]`;return{name:d.name,type:g}});for(const d of c)for(let f in l.translations){const g=l.translations[f];if(!f.startsWith("_")&&g.indexOf("{"+d.name+"}")<0)throw"Error in filter with fields at "+t+".question."+f+": The question text should contain every field, but it doesn't contain `{"+d+"}`: "+g}if(r.default)if(n===void 0)n=s;else throw`Invalid filter: multiple filters are set as default, namely ${s} and ${n} at ${t}`;return r.osmTags!==void 0&&Wh.validateSearch(In.Tag(r.osmTags),o),{question:l,osmTags:u,fields:c,originalTagsSpec:r.osmTags}}),this.defaultSelection=n,this.options.some(r=>r.fields.length>0)&&this.options.length>1)throw`Invalid filter at ${t}: a filter with textfields should only offer a single option.`;if(this.options.length>1&&this.options[0].osmTags!==void 0)throw"Error in "+t+"."+this.id+": the first option of a multi-filter should always be the 'reset' option and not have any filters"}static validateSearch(e,t){e.visit(n=>{if(n instanceof Dn&&typeof n.value!="string"&&!(n.value.source=="^..*$"||n.value.source==".+"||n.value.source=="^[\\s\\S][\\s\\S]*$")&&!n.value.ignoreCase)throw`At ${t}: The filter for key '${n.key}' uses a regex '${n.value}', but you should use a case invariant regex with ~i~ instead, as search should be case insensitive`})}initState(e){var s;let t="";this.options.length>1?t=""+(this.defaultSelection??0):((s=this.options[0].fields)==null?void 0:s.length)>0?t="{}":this.defaultSelection===0?t="true":t="false";const n=p2.GetQueryParameter(`filter-${e}-${this.id}`,t,"State of filter "+this.id);return this.options.length>1?n.sync(o=>{const l=Number(o);if(!isNaN(l))return l},[],o=>""+o):this.options[0].fields.length>0?n:n.sync(o=>{if(o==="true")return 0},[],o=>o===void 0?"false":"true")}GenerateDocs(){const e=this.options.some(t=>{var n;return((n=t.fields)==null?void 0:n.length)>0});return new El(ke.NoNull(["id","question","osmTags",e?"fields":void 0]),this.options.map((t,n)=>{var s,o;const r=this.options.length>1&&(this.defaultSelection??0)==n;return ke.NoNull([this.id+"."+n,r?new Qt([t.question.SetClass("font-bold"),"(default)"]):t.question,((s=t.osmTags)==null?void 0:s.asHumanString(!1,!1,{}))??"",((o=t.fields)==null?void 0:o.length)>0?new Qt(t.fields.map(l=>l.name+" ("+l.type+")")):void 0])}))}}class nu{constructor(e,t,n,r,s,o,l,u){R(this,"canonical");R(this,"_canonicalSingular");R(this,"useIfNoUnitGiven");R(this,"prefix");R(this,"addSpace");R(this,"alternativeDenominations");R(this,"human");R(this,"humanSingular");this.canonical=e,this._canonicalSingular=t,this.useIfNoUnitGiven=n,this.prefix=r,this.addSpace=s,this.alternativeDenominations=o,this.human=l,this.humanSingular=u}static fromJson(e,t){var s,o,l;t=`${t}.unit(${e.canonicalDenomination})`;const n=e.canonicalDenomination.trim();if(n===void 0)throw`${t}: this unit has no decent canonical value defined`;if((s=e.alternativeDenomination)==null||s.forEach((u,c)=>{if(((u==null?void 0:u.trim())??"")==="")throw`${t}.alternativeDenomination.${c}: invalid alternative denomination: undefined, null or only whitespace`}),e.default!==void 0)throw`${t} uses the old 'default'-key. Use "useIfNoUnitGiven" or "useAsDefaultInput" instead`;const r=De.T(e.human,t+"human");return r.OnEveryLanguage((u,c)=>{if(u.indexOf("{quantity}")<0)throw`In denomination: a human text should contain {quantity} (at ${t}.human.${c})`;return u}),new nu(n,(o=e.canonicalDenominationSingular)==null?void 0:o.trim(),e.useIfNoUnitGiven,e.prefix??!1,e.addSpace??!1,((l=e.alternativeDenomination)==null?void 0:l.map(u=>u.trim()))??[],r,De.T(e.humanSingular,t+"humanSingular"))}clone(){return new nu(this.canonical,this._canonicalSingular,this.useIfNoUnitGiven,this.prefix,this.addSpace,this.alternativeDenominations,this.human,this.humanSingular)}withBlankCanonical(){return new nu("",this._canonicalSingular,this.useIfNoUnitGiven,this.prefix,this.addSpace,[this.canonical,...this.alternativeDenominations],this.human,this.humanSingular)}canonicalValue(e,t){if(e===void 0)return;const n=this.StrippedValue(e,t);return n===null?null:n==="1"&&this._canonicalSingular!==void 0?("1 "+this._canonicalSingular).trim():(n+" "+this.canonical).trim()}StrippedValue(e,t){if(e===void 0)return;e=e.toLowerCase();const n=this;function r(l){return n.prefix?e.startsWith(l):e.endsWith(l)}function s(l){return n.prefix?e.substr(l.length).trim():e.substring(0,e.length-l.length).trim()}if(this.canonical!==""&&r(this.canonical.toLowerCase()))return s(this.canonical);if(this._canonicalSingular!==void 0&&this._canonicalSingular!==""&&r(this._canonicalSingular))return s(this._canonicalSingular);for(const l of this.alternativeDenominations)if(r(l))return s(l);if(!t)return null;const o=Number(e.trim());return isNaN(o)?null:e.trim()}}const t6="unit",n6={en:"Library layer with all common units.  Units can _only_ be imported from this file.",de:"Bibliotheksebene mit allen gängigen Einrichtungen.  Einrichtungen können _nur_ aus dieser Datei importiert werden."},i6="special:library",r6=null,s6=null,o6=[{quantity:"power",applicableUnits:[{canonicalDenomination:"MW",alternativeDenomination:["megawatts","megawatt"],human:{en:"{quantity} megawatts",nl:"{quantity} megawatt",fr:"{quantity} megawatts",de:"{quantity} Megawatt",eo:"{quantity} megavatoj",it:"{quantity} megawatt",ru:"{quantity} мегаватт",zh_Hant:"{quantity} 百萬瓦",id:"{quantity} megawat",hu:"{quantity} megawatt",ca:"{quantity} megavats",da:"{quantity} Megawatt",cs:"{quantity} megawatty"}},{canonicalDenomination:"kW",alternativeDenomination:["kilowatts","kilowatt"],human:{en:"{quantity} kilowatt",nl:"{quantity} kilowatt",fr:"{quantity} kilowatts",de:"{quantity} Kilowatt",eo:"{quantity} kilovatoj",it:"{quantity} kilowatt",nb_NO:"{quantity} kilowatt",ru:"{quantity} киловатт",zh_Hant:"{quantity} 千瓦",id:"{quantity} kilowat",hu:"{quantity} kilowatt",ca:"{quantity} quilovats",da:"{quantity} Kilowatt",cs:"{quantity} kilowatty"}},{canonicalDenomination:"W",alternativeDenomination:["watts","watt"],human:{en:"{quantity} watts",nl:"{quantity} watt",fr:"{quantity} watts",de:"{quantity} Watt",eo:"{quantity} vatoj",it:"{quantity} watt",ru:"{quantity} ватт",id:"{quantity} watt",hu:"{quantity} watt",ca:"{quantity} vats",da:"{quantity} Watt",cs:"{quantity} watty",zh_Hant:"{quantity} 瓦"}},{canonicalDenomination:"GW",alternativeDenomination:["gigawatts","gigawatt"],human:{en:"{quantity} gigawatts",nl:"{quantity} gigawatt",fr:"{quantity} gigawatts",de:"{quantity} Gigawatt",eo:"{quantity} gigavatoj",it:"{quantity} gigawatt",ru:"{quantity} гигаватт",id:"{quantity} gigawatt",hu:"{quantity} gigawatt",ca:"{quantity} gigavats",da:"{quantity} Gigawatt",cs:"{quantity} gigawatty",zh_Hant:"{quantity} 千兆瓦"}}],eraseInvalidValues:!0},{quantity:"voltage",applicableUnits:[{canonicalDenomination:"V",alternativeDenomination:["v","volt","voltage","Volt"],human:{en:"{quantity} Volt",nl:"{quantity} volt",de:"{quantity} Volt"}}],eraseInvalidValues:!0},{quantity:"current",applicableUnits:[{canonicalDenomination:"A",alternativeDenomination:["a","amp","amperage","A"],human:{en:"{quantity} A",nl:"{quantity} A",ca:"{quantity} A",de:"{quantity} A"}}],eraseInvalidValues:!0},{quantity:"distance",eraseInvalidValue:!0,applicableUnits:[{canonicalDenomination:"m",useIfNoUnitGiven:!0,alternativeDenomination:["meter","meters"],human:{en:"{quantity} meter",nl:"{quantity} meter",fr:"{quantity} mètres",de:"{quantity} Meter",eo:"{quantity} metro",it:"{quantity} metri",ru:"{quantity} метр",id:"{quantity} meter",hu:"{quantity} méter",ca:"{quantity} metre",da:"{quantity} meter",cs:"{quantity} metr",es:"{quantity} metros",pl:"{quantity} metr",pa_PK:"{quantity}میٹر",zh_Hant:"{quantity} 公尺",nb_NO:"{quantity} meter",eu:"{quantity} ·metro"},humanSingular:{en:"one meter",fr:"un mètre",nl:"één meter",de:"ein Meter",ca:"un metre"}},{canonicalDenomination:"cm",alternativeDenomination:["centimeter","centimeters","cms"],human:{en:"{quantity} centimeter",fr:"{quantity} centimètres",de:"{quantity} Zentimeter",da:"{quantity} centimeter",nl:"{quantity} centimeter",ca:"{quantity} centimetre",cs:"{quantity} centimetr",pl:"{quantity} centymetr",ru:"{quantity} сантиметры",pa_PK:" {quantity}سینٹیمیٹر"},humanSingular:{en:"one centimeter",nl:"één centimeter",ca:"un centímetre",de:"ein Zentimeter"}},{canonicalDenomination:"mm",alternativeDenomination:["millimeter","millimeters"],human:{en:"{quantity} millimeters",nl:"{quantity} millimeter",de:"{quantity} Millimeter",ru:"{quantity} миллиметры",ca:"{quantity} mil·límetres",cs:"{quantity} milimetry",pa_PK:"{quantity} ملیمیٹر"},humanSingular:{en:"one millimeter",nl:"één millimeter",de:"ein Millimeter",ca:"un mil·límetre"}},{canonicalDenomination:"ft",alternativeDenomination:["feet","voet"],human:{en:"{quantity} feet",nl:"{quantity} voet",fr:"{quantity} pieds",de:"{quantity} Fuß",eo:"{quantity} futo",it:"{quantity} piedi",ca:"{quantity} peus",es:"{quantity} pies",da:"{quantity} fod",cs:"{quantity} stopa",eu:"{quantity} ·hanka",pl:"{quantity} stopy",nb_NO:"{quantity} fot",pa_PK:"{quantity} ؜ فوٹ"}}]},{quantity:"speed",applicableUnits:[{"#":"km/h is the default for a maxspeed; should be empty string",canonicalDenomination:"kmh",alternativeDenomination:["km/u","km/h","kph"],human:{en:"{quantity} kilometers/hour",ca:"{quantity} quilòmetres/hora",es:"{quantity} kilómetros/hora",nl:"{quantity} kilometers/uur",de:"{quantity} Kilometer/Stunde",cs:"{quantity} kilometry/hodinu",pa_PK:"{quantity}ہر گھنٹہ وچ کیلومیٹر",fr:"{quantity} kilomètres/heure"},humanShort:{en:"{quantity} km/h",ca:"{quantity} km/h",es:"{quantity} km/h",nl:"{quantity} km/u",de:"{quantity} km/h",cs:"{quantity} km/h",pa_PK:"{quantity}ہر گھنٹے وچ کیلومیٹر",ru:"{quantity} км/ч",fr:"{quantity} km/h"}},{canonicalDenomination:"mph",addSpace:!0,useIfNoUnitGiven:["gb","us"],alternativeDenomination:["m/u","mh","m/ph"],human:{en:"{quantity} miles/hour",ca:"{quantity} milles/hora",es:"{quantity} millas/hora",nl:"{quantity} miles/uur",de:"{quantity} Meilen/Stunde",cs:"{quantity} míle/hodinu",fr:"{quantity} miles/heure",pa_PK:"{quantity} ہر گھنٹہ وچ میل"},humanShort:{en:"{quantity} mph",ca:"{quantity} mph",es:"{quantity} mph",nl:"{quantity} mph",de:"{quantity} mph",cs:"{quantity} mph",pa_PK:"{quantity}ہر گھنٹہ وچ میل",fr:"{quantity} mph"}}]},{quantity:"duration",applicableUnits:[{canonicalDenomination:"minutes",addSpace:!0,canonicalDenominationSingular:"minute",alternativeDenomination:["m","min","mins","minuten","mns"],human:{en:"{quantity} minutes",nl:"{quantity} minuten",ca:"{quantity} minuts",de:"{quantity} Minuten"},humanSingular:{en:"one minute",nl:"één minuut",ca:"un minut",de:"eine Minute"}},{canonicalDenomination:"hours",addSpace:!0,canonicalDenominationSingular:"hour",alternativeDenomination:["h","hrs","hours","u","uur","uren"],human:{en:"{quantity} hours",nl:"{quantity} uren",ca:"{quantity} hores",de:"{quantity} Stunden"},humanSingular:{en:"one hour",nl:"één uur",ca:"una hora",de:"eine Stunde"}},{canonicalDenomination:"days",addSpace:!0,canonicalDenominationSingular:"day",alternativeDenomination:["dys","dagen","dag"],human:{en:"{quantity} days",nl:"{quantity} day",ca:"{quantity} dies",de:"{quantity} Tage"},humanSingular:{en:"one day",nl:"één dag",de:"ein Tag"}},{canonicalDenomination:"weeks",addSpace:!0,canonicalDenominationSingular:"week",humanSingular:{en:"one week",nl:"één week"},human:{en:"{quantity} weeks",nl:"{quantity} weken"}},{canonicalDenomination:"months",addSpace:!0,canonicalDenominationSingular:"month",humanSingular:{en:"one month",nl:"één maand"},human:{en:"{quantity} months",nl:"{quantity} maanden"}}]}],a6={id:t6,description:n6,source:i6,pointRendering:r6,lineRendering:s6,units:o6},ya=class ya{constructor(e,t,n,r){R(this,"appliesToKeys");R(this,"denominations");R(this,"denominationsSorted");R(this,"eraseInvalid");R(this,"quantity");this.quantity=e,this.appliesToKeys=new Set(t),this.denominations=n,this.eraseInvalid=r;const s=new Set;for(const u of this.denominations){if(s.has(u.canonical))throw"This canonical unit is already defined in another denomination: "+u.canonical;const c=u.alternativeDenominations.filter(p=>s.has(p));if(c.length>0)throw"A denomination is used multiple times: "+c.join(", ");s.add(u.canonical),u.alternativeDenominations.forEach(p=>s.add(p))}this.denominationsSorted=[...this.denominations],this.denominationsSorted.sort((u,c)=>c.canonical.length-u.canonical.length);const o=new Set;function l(u){if(u!==void 0){u=u.toLowerCase();for(let c=0;c<u.length+1;c++){const p=u.substring(0,c);o.add(p)}}}for(const u of this.denominations)l(u.canonical),l(u._canonicalSingular),u.alternativeDenominations.forEach(l)}static fromJson(e,t){return!e.appliesToKey&&!e.quantity?this.loadFromLibrary(e,t):[this.parse(e,t)]}static parse(e,t){const n=e.appliesToKey;for(let s=0;s<(n??[]).length;s++){let o=n[s];if(o.trim()!==o)throw`${t}.appliesToKey[${s}] is invalid: it starts or ends with whitespace`}if((e.applicableUnits??[]).length===0)throw`${t}: define at least one applicable unit`;const r=e.applicableUnits.map((s,o)=>nu.fromJson(s,`${t}.units[${o}]`));if(e.defaultInput&&!r.some(s=>s.canonical.trim()===e.defaultInput))throw`${t}: no denomination has the specified default denomination. The default denomination is '${e.defaultInput}', but the available denominations are ${r.map(s=>s.canonical).join(", ")}`;return new ya(e.quantity??"",n,r,e.eraseInvalidValues??!1)}static initUnits(){const e=new Map,t=a6.units.map((n,r)=>this.parse(n,"unit.json.units."+r));for(const n of t)e.set(n.quantity,n);return e}static getFromLibrary(e,t){const n=this.allUnits.get(e);if(n===void 0)throw"No unit with quantity name "+e+" found (at "+t+"). Try one of: "+Array.from(this.allUnits.keys()).join(", ");return n}static loadFromLibrary(e,t){const n=[];for(const r in e){let s=function(p){const d=l.denominations.find(f=>f.canonical.toLowerCase()===p);if(!d)throw`Could not find a denomination \`${p}\`for quantity ${u} at ${t}. Perhaps you meant to use on of `+l.denominations.map(f=>f.canonical).join(", ");return d};const o=e[r];if(typeof o=="string"){const p=this.getFromLibrary(o,t);n.push(new ya(p.quantity,[r],p.denominations,p.eraseInvalid));continue}const l=this.getFromLibrary(o.quantity,t),u=o.quantity,c=o.denominations.map(p=>p.toLowerCase()).map(p=>s(p));if(o.canonical){const p=s(o.canonical);c.unshift(p.withBlankCanonical())}n.push(new ya(l.quantity,[r],c,l.eraseInvalid))}return n}isApplicableToKey(e){return e===void 0?!1:this.appliesToKeys.has(e)}findDenomination(e,t){if(e===void 0)return;const n=this.getDefaultDenomination(t);for(const r of this.denominationsSorted){const s=r.StrippedValue(e,n===r);if(s!==null)return[s,r]}return[void 0,void 0]}asHumanLongValue(e,t){if(e===void 0)return;const[n,r]=this.findDenomination(e,t);if(n==="1")return(r==null?void 0:r.humanSingular)??n;const s=r==null?void 0:r.human;return s===void 0?n??e:s.Subs({quantity:n})}toOsm(e,t){const n=this.denominations.find(s=>s.canonical===t),r=n.addSpace?" ":"";return n.prefix?n.canonical+r+e:e+r+n.canonical}getDefaultDenomination(e){for(const t of this.denominations){if(t.useIfNoUnitGiven===!0)return t;if(t.useIfNoUnitGiven===void 0||t.useIfNoUnitGiven===!1)continue;let n=e()??[];typeof n=="string"&&(n=n.split(","));const r=t.useIfNoUnitGiven;if(n.some(s=>r.indexOf(s)>=0))return t}for(const t of this.denominations)if(t.canonical==="")return t;return this.denominations[0]}};R(ya,"allUnits",ya.initUnits());let sp=ya;const al=class al{constructor(e,t){R(this,"deleteReasons");R(this,"softDeletionTags");R(this,"neededChangesets");R(this,"nonDeleteMappings");this.deleteReasons=(e.extraDeleteReasons??[]).map((n,r)=>{const s=`${t}.extraDeleteReasons[${r}]`;if((n.changesetMessage??"").length<=5)throw`${s}.explanation is too short, needs at least 4 characters`;return{explanation:De.T(n.explanation,s+".explanation"),changesetMessage:n.changesetMessage}});{let n=al.defaultDeleteReasons;if(e.omitDefaultDeleteReasons===!0)n=[];else if(e.omitDefaultDeleteReasons){const r=e.omitDefaultDeleteReasons;n=n.filter(s=>r.indexOf(s.changesetMessage)<0)}for(const r of n)this.deleteReasons.push({changesetMessage:r.changesetMessage,explanation:r.explanation.Clone()})}if(this.nonDeleteMappings=(e.nonDeleteMappings??[]).map((n,r)=>{const s=`${t}.extraDeleteReasons[${r}]`;return In.Tag(n.if,s+".if"),{if:n.if,then:De.T(n.then,s+".then")}}),this.nonDeleteMappings.length+this.deleteReasons.length==0)throw"At "+t+": a deleteconfig should have some reasons to delete: either the default delete reasons or a nonDeleteMapping or extraDeletereason should be given";if(this.softDeletionTags=void 0,e.softDeletionTags!==void 0&&(this.softDeletionTags=In.Tag(e.softDeletionTags,`${t}.softDeletionTags`)),e.hardDeletionTags!==void 0)throw`You probably meant 'softDeletionTags' instead of 'hardDeletionTags' (at ${t})`;this.neededChangesets=e.neededChangesets}constructTagRendering(){const e=De.t.delete,t=[];for(const r of this.nonDeleteMappings)t.push({if:r.if,then:r.then.translations});for(const r of this.deleteReasons)t.push({if:al.deleteReasonKey+"="+r.changesetMessage,then:r.explanation.translations});const n={question:e.whyDelete.translations,mappings:t,id:"why-delete"};return console.log("Delete config",n),new jo(n)}};R(al,"deleteReasonKey","_delete_reason"),R(al,"defaultDeleteReasons",[{changesetMessage:"testing point",explanation:De.t.delete.reasons.test},{changesetMessage:"disused",explanation:De.t.delete.reasons.disused},{changesetMessage:"not found",explanation:De.t.delete.reasons.notFound},{changesetMessage:"duplicate",explanation:De.t.delete.reasons.duplicate}]);let op=al;class Vm{constructor(e,t){R(this,"enableImproveAccuracy");R(this,"enableRelocation");if(this.enableImproveAccuracy=e.enableImproveAccuracy??!0,this.enableRelocation=e.enableRelocation??!0,!(this.enableRelocation||this.enableImproveAccuracy))throw"At least one default move reason should be allowed (at "+t+")"}}class _c{constructor(e,t){R(this,"_context");R(this,"_json");this._json=e,this._context=t}tr(e,t,n){let r=this._json[e];return r==null?t===void 0?void 0:new jo(t,`${n??this._context}.${e}.default value`):new jo(r,`${n??this._context}.${e}`)}ParseTagRenderings(e,t){if(e===void 0)return[];const n=this._context;t=t??{},t.prepConfig===void 0&&(t.prepConfig=s=>s);const r=[];for(let s=0;s<e.length;s++){const o=e[s],l=new jo(o,`${n}.tagrendering[${s}]`);if(t.readOnlyMode&&l.question!==void 0)throw`A question is defined for ${n}.tagrendering[${s}], but this is not allowed at this position - probably because this rendering is an icon, badge or label`;if(t.requiresId&&l.id==="")throw`${n}.tagrendering[${s}] has an invalid ID - make sure it is defined and not empty`;r.push(l)}return r}}function l6(i){let e,t,n,r,s,o=[i[1],{width:"314px"},{height:"374px"},{viewBox:"0 0 314 374"},{version:"1.1"},{id:"svg7"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("defs"),n=_("path"),h(t,"id","defs11"),h(n,"id","path2"),h(n,"class","selectable"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),a(n,"fill-rule","nonzero"),a(n,"stroke","none"),h(n,"d","M 157 0 C 70.296875 1.8947806e-14 0.01171875 70.121098 0.01171875 156.62109 C 0.01171875 231.01726 52.025471 293.25325 121.74219 309.22266 L 147.24609 364.68359 C 152.95703 377.10547 170.65234 377.10547 176.36719 364.68359 L 203.19922 306.33398 C 267.35183 286.6535 313.98828 227.07489 313.98828 156.62109 C 313.98828 70.121098 243.70312 0 157 0 z "),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(e,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{width:"314px"},{height:"374px"},{viewBox:"0 0 314 374"},{version:"1.1"},{id:"svg7"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function u6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class h6 extends It{constructor(e){super(),Dt(this,e,u6,l6,Rt,{color:0})}}function c6(i){let e,t,n,r,s,o=[i[1],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg5"},{"sodipodi:docname":"square.svg"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),h(n,"class","selectable"),h(n,"id","rect2"),a(n,"fill",i[0]),h(n,"d","M 0,0 H 375 V 375 H 0 Z"),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg5"},{"sodipodi:docname":"square.svg"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function d6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class p6 extends It{constructor(e){super(),Dt(this,e,d6,c6,Rt,{color:0})}}function f6(i){let e,t,n,r,s,o,l=[i[1],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg1"},{"sodipodi:docname":"circle.svg"},{"inkscape:version":"1.3.2 (1:1.3.2+202311252150+091e20ef0f)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("defs"),n=_("sodipodi:namedview"),r=_("path"),h(t,"id","defs1"),h(n,"id","namedview1"),h(n,"pagecolor","#505050"),h(n,"bordercolor","#eeeeee"),h(n,"borderopacity","1"),h(n,"inkscape:showpageshadow","0"),h(n,"inkscape:pageopacity","0"),h(n,"inkscape:pagecheckerboard","0"),h(n,"inkscape:deskcolor","#d1d1d1"),h(n,"inkscape:zoom","2.056"),h(n,"inkscape:cx","187.5"),h(n,"inkscape:cy","187.5"),h(n,"inkscape:window-width","1920"),h(n,"inkscape:window-height","995"),h(n,"inkscape:window-x","0"),h(n,"inkscape:window-y","0"),h(n,"inkscape:window-maximized","1"),h(n,"inkscape:current-layer","svg1"),a(r,"fill",i[0]),h(r,"class","selectable"),h(r,"d","M 375,187.5 C 375,291.05469 291.05469,375 187.5,375 83.945312,375 0,291.05469 0,187.5 0,83.945312 83.945312,0 187.5,0 291.05469,0 375,83.945312 375,187.5 Z m 0,0"),h(r,"id","path1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(e,n),T(e,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(r,"fill",c[0]),de(e,u=Ht(l,[p&2&&c[1],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg1"},{"sodipodi:docname":"circle.svg"},{"inkscape:version":"1.3.2 (1:1.3.2+202311252150+091e20ef0f)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function g6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class m6 extends It{constructor(e){super(),Dt(this,e,g6,f6,Rt,{color:0})}}function y6(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"374px"},{height:"259px"},{viewBox:"0 0 374 259"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"fill","none",1),a(n,"stroke-width","4"),a(n,"stroke-linecap","butt"),a(n,"stroke-linejoin","round"),a(n,"stroke",i[0]),a(n,"stroke-opacity","1"),a(n,"stroke-miterlimit","4"),h(n,"d","M 2.999896 7.285624 L 10.826182 14.99991 L 23.000104 3.00009 "),h(n,"transform","matrix(14.384615,0,0,14.388889,0,0)"),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"stroke",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"374px"},{height:"259px"},{viewBox:"0 0 374 259"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function b6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class Xy extends It{constructor(e){super(),Dt(this,e,b6,y6,Rt,{color:0})}}function v6(i){let e,t,n,r,s,o,l=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),a(n,"fill","none",1),a(n,"stroke-width","9"),a(n,"stroke-linecap","round"),a(n,"stroke-linejoin","miter"),a(n,"stroke",i[0]),a(n,"stroke-opacity","1"),a(n,"stroke-miterlimit","4"),h(n,"d","M 46 55.932292 L 66.551042 55.932292 "),h(n,"transform","matrix(3.75,0,0,3.75,0,0)"),a(r,"fill","none",1),a(r,"stroke-width","9"),a(r,"stroke-linecap","round"),a(r,"stroke-linejoin","miter"),a(r,"stroke",i[0]),a(r,"stroke-opacity","1"),a(r,"stroke-miterlimit","4"),h(r,"d","M 46 55.534375 L 46 27.729167 "),h(r,"transform","matrix(3.75,0,0,3.75,0,0)"),h(t,"id","surface1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(t,n),T(t,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(n,"stroke",c[0]),p&1&&a(r,"stroke",c[0]),de(e,u=Ht(l,[p&2&&c[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function w6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class _6 extends It{constructor(e){super(),Dt(this,e,w6,v6,Rt,{color:0})}}function C6(i){let e,t,n,r,s,o,l=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),a(n,"fill","none",1),a(n,"stroke-width","6.012842"),a(n,"stroke-linecap","round"),a(n,"stroke-linejoin","miter"),a(n,"stroke",i[0]),a(n,"stroke-opacity","1"),a(n,"stroke-miterlimit","4"),h(n,"d","M 23.165924 293.603402 L 3.541282 273.978759 "),h(n,"transform","matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)"),a(r,"fill","none",1),a(r,"stroke-width","6.012921"),a(r,"stroke-linecap","round"),a(r,"stroke-linejoin","miter"),a(r,"stroke",i[0]),a(r,"stroke-opacity","1"),a(r,"stroke-miterlimit","4"),h(r,"d","M 23.195414 273.884226 L 3.571047 293.508593 "),h(r,"transform","matrix(14.173228,0,0,14.173228,0.0000135166,-3834.448583)"),h(t,"id","surface1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(t,n),T(t,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(n,"stroke",c[0]),p&1&&a(r,"stroke",c[0]),de(e,u=Ht(l,[p&2&&c[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function T6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class Zy extends It{constructor(e){super(),Dt(this,e,T6,C6,Rt,{color:0})}}function x6(i){let e,t,n,r,s=[i[1],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg15"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],o={};for(let l=0;l<s.length;l+=1)o=Z(o,s[l]);return{c(){e=_("svg"),t=_("path"),h(t,"id","path2"),a(t,"color",i[0]),a(t,"fill",i[0]),a(t,"fill-opacity","0.988235"),a(t,"stroke-linecap","round"),a(t,"stroke-linejoin","round"),a(t,"stroke","#ccccccaa "),a(t,"stroke-width","8"),h(t,"d","M 187.5 0.17578125 A 15 15 0 0 0 172.5 15.175781 L 172.5 43.708984 C 104.37541 50.343145 49.843699 104.61884 42.837891 172.63672 L 14.765625 172.63672 A 14.86235 14.86235 0 0 0 -0.09765625 187.5 A 14.86235 14.86235 0 0 0 14.765625 202.36133 L 42.837891 202.36133 C 49.842792 270.37794 104.37427 324.65648 172.5 331.29102 L 172.5 360.10156 A 15 15 0 0 0 187.5 375.10156 A 15 15 0 0 0 202.5 360.10156 L 202.5 331.08594 C 269.70108 323.65092 323.26953 269.82518 330.26953 202.5 L 360.08203 202.5 A 15 15 0 0 0 375.08203 187.5 A 15 15 0 0 0 360.08203 172.5 L 330.26953 172.5 C 323.26946 105.17266 269.70061 51.348735 202.5 43.914062 L 202.5 15.175781 A 15 15 0 0 0 187.5 0.17578125 z M 186.5625 80.511719 C 245.87515 80.511719 293.55078 128.18741 293.55078 187.5 C 293.55078 246.80822 245.87443 294.48828 186.5625 294.48828 C 127.25056 294.48828 79.574219 246.80822 79.574219 187.5 C 79.574219 128.1874 127.24984 80.511719 186.5625 80.511719 z M 187.5 139.21094 C 160.83203 139.21094 139.21094 160.83203 139.21094 187.5 C 139.21094 214.16797 160.83203 235.78906 187.5 235.78906 C 214.16797 235.78906 235.78906 214.16797 235.78906 187.5 C 235.78906 160.83203 214.16797 139.21094 187.5 139.21094 z "),de(e,o)},m(l,u){st(l,e,u),T(e,t),n||(r=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],n=!0)},p(l,[u]){u&1&&a(t,"color",l[0]),u&1&&a(t,"fill",l[0]),de(e,o=Ht(s,[u&2&&l[1],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg15"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(l){l&&ot(e),n=!1,Yt(r)}}}function k6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class A6 extends It{constructor(e){super(),Dt(this,e,k6,x6,Rt,{color:0})}}function q6(i){let e,t,n,r,s,o,l=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 225.160156 268.851562 L 160.957031 268.851562 L 160.957031 260.476562 C 160.957031 246.230469 162.574219 234.664062 165.804688 225.777344 C 169.035156 216.890625 174.679688 208.773438 181.066406 201.429688 C 187.457031 194.085938 196.832031 191.542969 219.160156 173.035156 C 231.054688 163.339844 239.914062 144.070312 239.914062 135.992188 C 240.742188 114.621094 234.679688 106.203125 226.9375 98.460938 C 218.425781 91.074219 204.160156 87.171875 192.773438 87.171875 C 182.34375 87.171875 167.070312 90.207031 159.824219 96.695312 C 150.085938 103.183594 135.332031 124.367188 138.40625 145.707031 L 65.378906 146.347656 C 65.378906 87.324219 76.414062 71.75 102.546875 47.597656 C 127.851562 27.183594 150.050781 20.089844 194.09375 20.089844 C 227.777344 20.089844 254.875 26.773438 274.558594 40.140625 C 301.292969 58.207031 320.476562 81.882812 320.476562 126.53125 C 320.476562 143.171875 313.285156 160.613281 304.304688 174.710938 C 297.398438 186.316406 281.636719 199.660156 259.921875 213.910156 C 243.839844 223.585938 234.894531 233.855469 231 240.980469 C 227.109375 248.101562 225.160156 257.394531 225.160156 268.851562 Z M 225.160156 268.851562 "),a(r,"stroke","none"),a(r,"fill-rule","nonzero"),a(r,"fill",i[0]),a(r,"fill-opacity","1"),h(r,"d","M 228.535156 323.679688 C 228.539062 338.824219 212.730469 351.101562 193.226562 351.101562 C 173.722656 351.101562 157.914062 338.824219 157.921875 323.679688 C 157.914062 308.539062 173.722656 296.261719 193.226562 296.261719 C 212.730469 296.261719 228.539062 308.539062 228.535156 323.679688 Z M 228.535156 323.679688 "),h(t,"id","surface1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(t,n),T(t,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(n,"fill",c[0]),p&1&&a(r,"fill",c[0]),de(e,u=Ht(l,[p&2&&c[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function S6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class Ky extends It{constructor(e){super(),Dt(this,e,S6,q6,Rt,{color:0})}}function E6(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 362.109375 164.0625 L 328.125 130.101562 L 328.125 46.875 C 328.125 33.984375 317.578125 23.4375 304.6875 23.4375 L 281.25 23.4375 C 268.359375 23.4375 257.8125 33.984375 257.8125 46.875 L 257.8125 59.835938 L 210.9375 13.007812 C 204.539062 6.960938 198.679688 0 187.5 0 C 176.320312 0 170.460938 6.960938 164.0625 13.007812 L 12.890625 164.0625 C 5.578125 171.679688 0 177.234375 0 187.5 C 0 200.695312 10.125 210.9375 23.4375 210.9375 L 46.875 210.9375 L 46.875 351.5625 C 46.875 364.453125 57.421875 375 70.3125 375 L 140.625 375 L 140.625 257.8125 C 140.625 244.921875 151.171875 234.375 164.0625 234.375 L 210.9375 234.375 C 223.828125 234.375 234.375 244.921875 234.375 257.8125 L 234.375 375 L 304.6875 375 C 317.578125 375 328.125 364.453125 328.125 351.5625 L 328.125 210.9375 L 351.5625 210.9375 C 364.875 210.9375 375 200.695312 375 187.5 C 375 177.234375 369.421875 171.679688 362.109375 164.0625 Z M 362.109375 164.0625 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function I6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class D6 extends It{constructor(e){super(),Dt(this,e,I6,E6,Rt,{color:0})}}function R6(i){let e,t,n,r,s=[i[0],{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 36 36"}],o={};for(let l=0;l<s.length;l+=1)o=Z(o,s[l]);return{c(){e=_("svg"),t=_("path"),h(t,"fill","#DD2E44"),h(t,"d","M18 0C8.059 0 0 8.059 0 18s8.059 18 18 18 18-8.059 18-18S27.941 0 18 0zm13 18c0 2.565-.753 4.95-2.035 6.965L11.036 7.036C13.05 5.753 15.435 5 18 5c7.18 0 13 5.821 13 13zM5 18c0-2.565.753-4.95 2.036-6.964l17.929 17.929C22.95 30.247 20.565 31 18 31c-7.179 0-13-5.82-13-13z"),de(e,o)},m(l,u){st(l,e,u),T(e,t),n||(r=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],n=!0)},p(l,[u]){de(e,o=Ht(s,[u&1&&l[0],{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 36 36"}]))},i:ge,o:ge,d(l){l&&ot(e),n=!1,Yt(r)}}}function $6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class Qy extends It{constructor(e){super(),Dt(this,e,$6,R6,Rt,{color:1})}}function N6(i){let e,t,n,r,s,o,l=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 370.789062 174.078125 L 310.925781 174.078125 C 308.027344 144.964844 295.136719 117.75 274.449219 97.058594 C 253.757812 76.371094 226.542969 63.480469 197.425781 60.582031 L 197.425781 0 L 173.484375 0 L 173.484375 61.179688 C 144.359375 64.054688 117.128906 76.9375 96.4375 97.632812 C 75.742188 118.328125 62.859375 145.554688 59.984375 174.679688 L 0.121094 174.679688 L 0.121094 199.34375 L 59.984375 199.34375 C 62.84375 228.460938 75.722656 255.6875 96.421875 276.367188 C 117.121094 297.042969 144.359375 309.890625 173.484375 312.71875 L 173.484375 372.460938 L 197.425781 372.460938 L 197.425781 312.601562 C 226.539062 309.75 253.765625 296.894531 274.460938 276.21875 C 295.160156 255.542969 308.046875 228.335938 310.925781 199.222656 L 370.789062 199.222656 Z M 185.335938 288.175781 C 165.210938 288.152344 145.550781 282.164062 128.828125 270.96875 C 112.109375 259.773438 99.085938 243.867188 91.402344 225.273438 C 83.71875 206.675781 81.71875 186.21875 85.660156 166.484375 C 89.597656 146.753906 99.300781 128.628906 113.539062 114.410156 C 127.773438 100.191406 145.90625 90.507812 165.644531 86.59375 C 185.382812 82.675781 205.835938 84.699219 224.425781 92.402344 C 243.015625 100.109375 258.898438 113.15625 270.078125 129.886719 C 281.253906 146.621094 287.21875 166.289062 287.21875 186.410156 C 287.265625 199.820312 284.667969 213.109375 279.566406 225.511719 C 274.46875 237.914062 266.96875 249.1875 257.503906 258.6875 C 248.039062 268.1875 236.792969 275.722656 224.40625 280.867188 C 212.023438 286.007812 198.746094 288.65625 185.335938 288.65625 Z M 185.335938 288.175781 "),a(r,"stroke","none"),a(r,"fill-rule","nonzero"),a(r,"fill",i[0]),a(r,"fill-opacity","1"),h(r,"d","M 185.332031 128.542969 C 196.777344 128.542969 207.964844 131.933594 217.484375 138.292969 C 227 144.652344 234.417969 153.691406 238.796875 164.265625 C 243.179688 174.839844 244.324219 186.476562 242.089844 197.699219 C 239.859375 208.925781 234.34375 219.238281 226.253906 227.332031 C 218.160156 235.425781 207.847656 240.9375 196.621094 243.171875 C 185.398438 245.402344 173.757812 244.257812 163.1875 239.875 C 152.609375 235.496094 143.574219 228.078125 137.214844 218.5625 C 130.855469 209.046875 127.460938 197.855469 127.460938 186.410156 C 127.488281 171.070312 133.59375 156.367188 144.441406 145.519531 C 155.289062 134.671875 169.992188 128.566406 185.332031 128.542969 Z M 185.332031 128.542969 "),h(t,"id","surface1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(t,n),T(t,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(n,"fill",c[0]),p&1&&a(r,"fill",c[0]),de(e,u=Ht(l,[p&2&&c[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function L6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class M6 extends It{constructor(e){super(),Dt(this,e,L6,N6,Rt,{color:0})}}function O6(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 372.8125 175.78125 L 312.5 175.78125 C 306.570312 115.964844 259.332031 68.597656 199.53125 62.5 L 199.53125 1.71875 L 175.46875 1.71875 L 175.46875 62.5 C 115.511719 68.765625 68.269531 116.398438 62.5 176.40625 L 2.1875 176.40625 L 2.1875 201.09375 L 62.5 201.09375 C 68.292969 261.152344 115.871094 308.664062 175.9375 314.375 L 175.9375 375 L 200 375 L 200 314.21875 C 259.703125 308.089844 306.78125 260.679688 312.5 200.9375 L 372.34375 200.9375 L 372.34375 175.78125 Z M 187.5 289.84375 C 167.40625 289.867188 147.761719 283.878906 131.09375 272.65625 C 96.832031 249.789062 79.742188 208.519531 87.8125 168.125 C 91.808594 148.441406 101.476562 130.351562 115.625 116.09375 C 144.636719 86.929688 188.359375 78.113281 226.40625 93.75 C 264.28125 109.484375 288.949219 146.488281 288.90625 187.5 C 288.988281 214.550781 278.304688 240.519531 259.21875 259.6875 C 249.785156 269.242188 238.519531 276.789062 226.09375 281.875 C 213.71875 287.035156 200.441406 289.691406 187.03125 289.6875 Z M 187.5 289.84375 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function P6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class F6 extends It{constructor(e){super(),Dt(this,e,P6,O6,Rt,{color:0})}}function B6(i){let e,t,n,r,s,o,l=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 370.789062 174.078125 L 310.925781 174.078125 C 308.027344 144.964844 295.136719 117.75 274.449219 97.058594 C 253.757812 76.371094 226.542969 63.480469 197.425781 60.582031 L 197.425781 0 L 173.484375 0 L 173.484375 61.179688 C 144.359375 64.054688 117.128906 76.9375 96.4375 97.632812 C 75.742188 118.328125 62.859375 145.554688 59.984375 174.679688 L 0.121094 174.679688 L 0.121094 199.34375 L 59.984375 199.34375 C 62.84375 228.460938 75.722656 255.6875 96.421875 276.367188 C 117.121094 297.042969 144.359375 309.890625 173.484375 312.71875 L 173.484375 372.460938 L 197.425781 372.460938 L 197.425781 312.601562 C 226.539062 309.75 253.765625 296.894531 274.460938 276.21875 C 295.160156 255.542969 308.046875 228.335938 310.925781 199.222656 L 370.789062 199.222656 Z M 185.335938 288.175781 C 165.210938 288.152344 145.550781 282.164062 128.828125 270.96875 C 112.109375 259.773438 99.085938 243.867188 91.402344 225.273438 C 83.71875 206.675781 81.71875 186.21875 85.660156 166.484375 C 89.597656 146.753906 99.300781 128.628906 113.539062 114.410156 C 127.773438 100.191406 145.90625 90.507812 165.644531 86.59375 C 185.382812 82.675781 205.835938 84.699219 224.425781 92.402344 C 243.015625 100.109375 258.898438 113.15625 270.078125 129.886719 C 281.253906 146.621094 287.21875 166.289062 287.21875 186.410156 C 287.265625 199.820312 284.667969 213.109375 279.566406 225.511719 C 274.46875 237.914062 266.96875 249.1875 257.503906 258.6875 C 248.039062 268.1875 236.792969 275.722656 224.40625 280.867188 C 212.023438 286.007812 198.746094 288.65625 185.335938 288.65625 Z M 185.335938 288.175781 "),a(r,"stroke","none"),a(r,"fill-rule","nonzero"),a(r,"fill",i[0]),a(r,"fill-opacity","0.988235"),h(r,"d","M 233.257812 166.777344 L 224.351562 166.777344 L 224.351562 137.683594 C 224.351562 137.683594 224.351562 95.8125 182.734375 95.8125 C 141.113281 95.8125 141.113281 137.683594 141.113281 137.683594 L 141.113281 166.777344 L 132.207031 166.777344 C 123.335938 166.777344 116.144531 174.015625 116.144531 182.941406 L 116.144531 247.21875 C 116.191406 256.113281 123.367188 263.300781 132.207031 263.300781 L 233.257812 263.300781 C 242.128906 263.300781 249.320312 256.0625 249.320312 247.136719 L 249.320312 182.941406 C 249.320312 174.015625 242.128906 166.777344 233.257812 166.777344 Z M 182.734375 229.800781 C 167.902344 229.800781 160.476562 211.761719 170.960938 201.210938 C 181.449219 190.660156 199.378906 198.128906 199.378906 213.054688 C 199.378906 222.304688 191.925781 229.800781 182.734375 229.800781 Z M 207.703125 166.777344 L 157.761719 166.777344 L 157.761719 141.871094 C 157.761719 129.308594 157.761719 112.558594 182.734375 112.558594 C 207.703125 112.558594 207.703125 129.308594 207.703125 141.871094 Z M 207.703125 166.777344 "),h(t,"id","surface1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(t,n),T(t,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(n,"fill",c[0]),p&1&&a(r,"fill",c[0]),de(e,u=Ht(l,[p&2&&c[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function j6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class W6 extends It{constructor(e){super(),Dt(this,e,j6,B6,Rt,{color:0})}}function J6(i){let e,t,n,r,s,o,l=[i[1],{width:"275px"},{height:"374px"},{viewBox:"0 0 275 374"},{version:"1.1"},{id:"svg7"},{"sodipodi:docname":"note.svg"},{"inkscape:version":"1.1.1 (1:1.1+202109281949+c3084ef5ed)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("defs"),n=_("path"),r=_("path"),h(t,"id","defs11"),h(n,"id","path2"),h(n,"class","selectable"),a(n,"fill","#c60000"),a(n,"fill-opacity","1"),a(n,"fill-rule","nonzero"),a(n,"stroke","#950000"),a(n,"stroke-width","5"),a(n,"stroke-miterlimit","4"),a(n,"stroke-dasharray","none"),a(n,"stroke-opacity","1"),h(n,"d","M 135.55664,1.9765625 C 74.593645,2.1922681 20.084472,43.910648 7.2773438,104.37109 4.936895,115.41704 4.1435422,126.42334 4.7265625,137.18555 2.5821353,205.89923 56.815085,269.30423 107.08203,335.96094 c 12.32031,15.26562 30.35156,34.07422 30.35156,34.07422 l 27.64453,-32.61328 C 227.98632,255.40992 319.84389,135.74148 238.04492,49.080078 219.42005,26.853995 193.07863,10.556457 161.97656,4.4921875 153.10693,2.7626953 144.26564,1.9457474 135.55664,1.9765625 Z"),h(r,"id","path5936"),a(r,"color",i[0]),a(r,"fill","#fffffd"),a(r,"stroke",i[0]),a(r,"stroke-width","5"),a(r,"stroke-linecap","round"),a(r,"stroke-opacity","1"),a(r,"fill-opacity","1"),a(r,"stroke-miterlimit","4"),a(r,"stroke-dasharray","none"),h(r,"d","m 202.54602,49.933374 a 19.846225,19.846225 0 0 0 -14.03347,5.812789 L 137.36365,106.89506 86.838795,56.370195 a 19.845967,19.845967 0 0 0 -14.033473,-5.812787 19.845967,19.845967 0 0 0 -14.033471,5.812787 19.845967,19.845967 0 0 0 0,28.066944 l 50.524859,50.524871 -50.328371,50.32837 a 19.846225,19.846225 0 0 0 0,28.06695 19.846225,19.846225 0 0 0 28.066944,0 l 50.328367,-50.32838 50.95423,50.95424 a 19.845967,19.845967 0 0 0 28.06694,0 19.845967,19.845967 0 0 0 0,-28.06695 L 165.4306,134.96201 216.57949,83.813106 a 19.846225,19.846225 0 0 0 0,-28.066943 19.846225,19.846225 0 0 0 -14.03347,-5.812789 z"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(e,n),T(e,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(r,"color",c[0]),p&1&&a(r,"stroke",c[0]),de(e,u=Ht(l,[p&2&&c[1],{width:"275px"},{height:"374px"},{viewBox:"0 0 275 374"},{version:"1.1"},{id:"svg7"},{"sodipodi:docname":"note.svg"},{"inkscape:version":"1.1.1 (1:1.1+202109281949+c3084ef5ed)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function V6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class G6 extends It{constructor(e){super(),Dt(this,e,V6,J6,Rt,{color:0})}}function U6(i){let e,t,n,r,s,o,l=[i[1],{width:"275px"},{height:"374px"},{viewBox:"0 0 275 374"},{version:"1.1"},{id:"svg7"},{"sodipodi:docname":"resolved.svg"},{"inkscape:version":"1.1.1 (1:1.1+202109281949+c3084ef5ed)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("defs"),n=_("path"),r=_("path"),h(t,"id","defs11"),h(n,"id","path2"),h(n,"class","selectable"),a(n,"fill","#00c82e"),a(n,"fill-opacity","1"),a(n,"fill-rule","nonzero"),a(n,"stroke","#40ff00"),a(n,"stroke-width","5"),a(n,"stroke-miterlimit","4"),a(n,"stroke-dasharray","none"),a(n,"stroke-opacity","1"),h(n,"d","M 135.55664,1.9765625 C 74.593645,2.1922681 20.084472,43.910648 7.2773438,104.37109 4.936895,115.41704 4.1435422,126.42334 4.7265625,137.18555 2.5821353,205.89923 56.815085,269.30423 107.08203,335.96094 c 12.32031,15.26562 30.35156,34.07422 30.35156,34.07422 l 27.64453,-32.61328 C 227.98632,255.40992 319.84389,135.74148 238.04492,49.080078 219.42005,26.853995 193.07863,10.556457 161.97656,4.4921875 153.10693,2.7626953 144.26564,1.9457474 135.55664,1.9765625 Z"),h(n,"sodipodi:nodetypes","scccccccs"),a(r,"color",i[0]),a(r,"fill","#ffffff"),a(r,"fill-opacity","1"),a(r,"stroke",i[0]),a(r,"stroke-width","3.52437"),a(r,"stroke-linecap","round"),a(r,"stroke-linejoin","round"),a(r,"stroke-miterlimit","4"),a(r,"stroke-dasharray","none"),a(r,"stroke-opacity","1"),h(r,"d","m 216.35763,81.457377 c -6.31364,-1.014444 -12.65279,1.657101 -16.62944,7.00824 L 117.3564,199.32492 69.393978,152.33285 c -7.532586,-9.1813 -20.4662,-9.07329 -27.311559,-1.91781 -7.087039,7.56459 -8.507731,17.24412 -0.648456,25.76692 l 61.942427,65.80658 c 7.15464,9.62634 20.80539,9.62634 27.96003,0 l 96.3518,-129.67383 c 6.14683,-8.27231 4.87072,-20.317183 -2.85026,-26.902908 -2.45389,-2.092661 -5.37864,-3.456485 -8.48033,-3.954425 z"),h(r,"id","path3639"),h(r,"sodipodi:nodetypes","ccccccccccc"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(e,n),T(e,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(r,"color",c[0]),p&1&&a(r,"stroke",c[0]),de(e,u=Ht(l,[p&2&&c[1],{width:"275px"},{height:"374px"},{viewBox:"0 0 275 374"},{version:"1.1"},{id:"svg7"},{"sodipodi:docname":"resolved.svg"},{"inkscape:version":"1.1.1 (1:1.1+202109281949+c3084ef5ed)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function z6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class H6 extends It{constructor(e){super(),Dt(this,e,z6,U6,Rt,{color:0})}}function Y6(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"fill","none",1),a(n,"stroke-width","10"),a(n,"stroke-linecap","butt"),a(n,"stroke-linejoin","miter"),a(n,"stroke",i[0]),a(n,"stroke-opacity","1"),a(n,"stroke-miterlimit","4"),h(n,"d","M 95 50 C 95 74.853125 74.853125 95 50 95 C 25.146875 95 5 74.853125 5 50 C 5 25.146875 25.146875 5 50 5 C 74.853125 5 95 25.146875 95 50 Z M 95 50 "),h(n,"transform","matrix(3.75,0,0,3.75,0,0)"),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"stroke",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function X6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class Z6 extends It{constructor(e){super(),Dt(this,e,X6,Y6,Rt,{color:0})}}function K6(i){let e,t,n,r,s,o,l,u,c,p=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],d={};for(let f=0;f<p.length;f+=1)d=Z(d,p[f]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),s=_("path"),o=_("path"),l=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 101.5625 46.875 C 71.875 46.875 46.875 71.875 46.875 101.5625 C 46.875 131.25 71.875 156.25 101.5625 156.25 C 131.25 156.25 156.25 131.25 156.25 101.5625 C 156.25 71.875 131.25 46.875 101.5625 46.875 Z M 101.5625 125 C 89.0625 125 78.125 114.0625 78.125 101.5625 C 78.125 89.0625 89.0625 78.125 101.5625 78.125 C 114.0625 78.125 125 89.0625 125 101.5625 C 125 114.0625 114.0625 125 101.5625 125 Z M 101.5625 125 "),a(r,"stroke","none"),a(r,"fill-rule","nonzero"),a(r,"fill",i[0]),a(r,"fill-opacity","1"),h(r,"d","M 101.5625 218.75 C 71.875 218.75 46.875 243.75 46.875 273.4375 C 46.875 303.125 71.875 328.125 101.5625 328.125 C 131.25 328.125 156.25 303.125 156.25 273.4375 C 156.25 243.75 131.25 218.75 101.5625 218.75 Z M 101.5625 296.875 C 89.0625 296.875 78.125 285.9375 78.125 273.4375 C 78.125 260.9375 89.0625 250 101.5625 250 C 114.0625 250 125 260.9375 125 273.4375 C 125 285.9375 114.0625 296.875 101.5625 296.875 Z M 101.5625 296.875 "),a(s,"stroke","none"),a(s,"fill-rule","nonzero"),a(s,"fill",i[0]),a(s,"fill-opacity","1"),h(s,"d","M 210.9375 148.4375 L 242.1875 179.6875 L 343.75 78.125 L 281.25 78.125 Z M 210.9375 148.4375 "),a(o,"stroke","none"),a(o,"fill-rule","nonzero"),a(o,"fill",i[0]),a(o,"fill-opacity","1"),h(o,"d","M 168.75 190.625 L 200 221.875 L 151.5625 270.3125 L 125 234.375 Z M 168.75 190.625 "),a(l,"stroke","none"),a(l,"fill-rule","nonzero"),a(l,"fill",i[0]),a(l,"fill-opacity","1"),h(l,"d","M 142.1875 110.9375 L 109.375 140.625 L 281.25 312.5 L 343.75 312.5 Z M 195.3125 203.125 C 190.625 203.125 187.5 200 187.5 195.3125 C 187.5 190.625 190.625 187.5 195.3125 187.5 C 200 187.5 203.125 190.625 203.125 195.3125 C 203.125 200 200 203.125 195.3125 203.125 Z M 195.3125 203.125 "),h(t,"id","surface1"),de(e,d)},m(f,g){st(f,e,g),T(e,t),T(t,n),T(t,r),T(t,s),T(t,o),T(t,l),u||(c=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],u=!0)},p(f,[g]){g&1&&a(n,"fill",f[0]),g&1&&a(r,"fill",f[0]),g&1&&a(s,"fill",f[0]),g&1&&a(o,"fill",f[0]),g&1&&a(l,"fill",f[0]),de(e,d=Ht(p,[g&2&&f[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(f){f&&ot(e),u=!1,Yt(c)}}}function Q6(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class e9 extends It{constructor(e){super(),Dt(this,e,Q6,K6,Rt,{color:0})}}function t9(i){let e,t,n,r,s,o,l=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"275px"},{height:"374px"},{viewBox:"0 0 275 374"},{version:"1.1"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","0.988235"),h(n,"class","selectable"),h(n,"d","M 137.433594 370.035156 C 136.605469 368.027344 119.402344 351.226562 107.082031 335.960938 C 34.097656 239.179688 -47.273438 149.257812 47.746094 39.980469 C 89.816406 -0.617188 141.691406 -2.933594 195.023438 15.992188 C 345.191406 102.777344 236.46875 244.351562 165.078125 337.421875 Z M 182.605469 221.6875 C 282.765625 150.148438 205.328125 12.386719 95.28125 58.183594 C 63.148438 75.296875 47.203125 105.070312 46.644531 140.195312 C 45.109375 174.359375 63.277344 202.929688 92.066406 220.429688 C 112.707031 231.652344 121.78125 233.675781 145.152344 232.285156 C 160.300781 231.386719 169.027344 228.914062 182.605469 221.6875 Z M 182.605469 221.6875 "),a(r,"stroke","none"),a(r,"fill-rule","nonzero"),a(r,"fill",i[0]),a(r,"fill-opacity","0.988235"),h(r,"d","M 108.722656 255.84375 C 37.953125 241.132812 -7.363281 173.46875 7.277344 104.371094 C 21.914062 35.273438 91.019531 -9.34375 161.976562 4.492188 C 232.9375 18.328125 279.128906 85.421875 265.390625 154.699219 C 251.65625 223.972656 183.136719 269.4375 112.003906 256.484375 "),h(t,"id","surface1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(t,n),T(t,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){p&1&&a(n,"fill",c[0]),p&1&&a(r,"fill",c[0]),de(e,u=Ht(l,[p&2&&c[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"275px"},{height:"374px"},{viewBox:"0 0 275 374"},{version:"1.1"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function n9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class i9 extends It{constructor(e){super(),Dt(this,e,n9,t9,Rt,{color:0})}}function r9(i){let e,t,n,r,s,o,l,u,c,p,d,f=[i[0],{width:"400"},{height:"400"},{viewBox:"0 0 400 400"},{version:"1.1"},{id:"svg11"},{"sodipodi:docname":"teardrop_with_hole_green.svg"},{"inkscape:version":"1.1.1 (1:1.1+202109281949+c3084ef5ed)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],g={};for(let v=0;v<f.length;v+=1)g=Z(g,f[v]);return{c(){e=_("svg"),t=_("defs"),n=_("sodipodi:namedview"),r=_("sodipodi:guide"),s=_("g"),o=_("path"),l=_("path"),u=_("path"),c=_("path"),h(t,"id","defs15"),h(r,"position","199.99891,418.65297"),h(r,"orientation","1,0"),h(r,"id","guide832"),h(n,"id","namedview13"),h(n,"pagecolor","#505050"),h(n,"bordercolor","#eeeeee"),h(n,"borderopacity","1"),h(n,"inkscape:pageshadow","0"),h(n,"inkscape:pageopacity","0"),h(n,"inkscape:pagecheckerboard","0"),h(n,"showgrid","false"),h(n,"width","400px"),h(n,"showguides","true"),h(n,"inkscape:guide-bbox","true"),h(n,"inkscape:zoom","1.8002433"),h(n,"inkscape:cx","161.08934"),h(n,"inkscape:cy","210.5271"),h(n,"inkscape:current-layer","svg11"),a(o,"fill","#007f00"),a(o,"fill-opacity","0.988235"),a(o,"fill-rule","nonzero"),a(o,"stroke","none"),h(o,"d","m 137.43359,370.03516 c -0.82812,-2.00782 -18.03125,-18.8086 -30.35156,-34.07422 C 34.097656,239.17969 -47.273438,149.25781 47.746094,39.980469 89.816406,-0.617188 141.69141,-2.933594 195.02344,15.992188 345.19141,102.77734 236.46875,244.35156 165.07812,337.42187 Z M 182.60547,221.6875 C 282.76562,150.14844 205.32812,12.386719 95.28125,58.183594 63.148438,75.296875 47.203125,105.07031 46.644531,140.19531 c -1.535156,34.16406 16.632813,62.73438 45.421875,80.23438 20.640624,11.22265 29.714844,13.24609 53.085934,11.85547 15.14844,-0.89844 23.875,-3.3711 37.45313,-10.59766 z m 0,0"),h(o,"id","path2"),a(l,"fill","#007f00"),a(l,"fill-opacity","0.988235"),a(l,"fill-rule","nonzero"),a(l,"stroke","none"),h(l,"d","M 108.72266,255.84375 C 37.953125,241.13281 -7.363281,173.46875 7.277344,104.37109 21.914062,35.273438 91.019531,-9.34375 161.97656,4.492188 232.9375,18.328125 279.12891,85.421875 265.39062,154.69922 251.65625,223.97266 183.13672,269.4375 112.00391,256.48437"),h(l,"id","path4"),a(u,"fill","#009400"),a(u,"fill-opacity","1"),a(u,"fill-rule","nonzero"),a(u,"stroke","none"),h(u,"d","M 117.33203,237.78516 C 64.75,226.24609 31.078125,173.16797 41.957031,118.96875 52.835938,64.765625 104.17969,29.769531 156.89844,40.621094 c 52.72265,10.851562 87.04297,63.484376 76.83593,117.824216 -10.20703,54.33985 -61.11328,90.00391 -113.96484,79.84375"),h(u,"id","path6"),a(c,"fill","#ffffff"),a(c,"fill-opacity","1"),a(c,"fill-rule","nonzero"),a(c,"stroke","none"),h(c,"d","M 122.92188,202.85156 C 88.144531,195.28125 65.878906,160.48437 73.074219,124.94531 80.265625,89.40625 114.22266,66.457031 149.08594,73.574219 c 34.86718,7.117187 57.5664,41.625001 50.8164,77.253901 -6.75,35.62891 -40.41797,59.01563 -75.37109,52.35157"),h(c,"id","path8"),h(s,"id","surface1"),h(s,"transform","matrix(1.0785793,0,0,1.0785793,51.765885,-0.40531133)"),de(e,g)},m(v,w){st(v,e,w),T(e,t),T(e,n),T(n,r),T(e,s),T(s,o),T(s,l),T(s,u),T(s,c),p||(d=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],p=!0)},p(v,[w]){de(e,g=Ht(f,[w&1&&v[0],{width:"400"},{height:"400"},{viewBox:"0 0 400 400"},{version:"1.1"},{id:"svg11"},{"sodipodi:docname":"teardrop_with_hole_green.svg"},{"inkscape:version":"1.1.1 (1:1.1+202109281949+c3084ef5ed)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(v){v&&ot(e),p=!1,Yt(d)}}}function s9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class o9 extends It{constructor(e){super(),Dt(this,e,s9,r9,Rt,{color:1})}}function a9(i){let e,t,n,r,s=[i[1],{style:"fill:none"},{version:"1.1"},{viewBox:"0 0 100 100"},{height:"100"},{width:"100"}],o={};for(let l=0;l<s.length;l+=1)o=Z(o,s[l]);return{c(){e=_("svg"),t=_("polygon"),a(t,"fill",i[0]),a(t,"fill-opacity","1"),h(t,"points","50,0 0,100 100,100"),de(e,o)},m(l,u){st(l,e,u),T(e,t),n||(r=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],n=!0)},p(l,[u]){u&1&&a(t,"fill",l[0]),de(e,o=Ht(s,[u&2&&l[1],{style:"fill:none"},{version:"1.1"},{viewBox:"0 0 100 100"},{height:"100"},{width:"100"}]))},i:ge,o:ge,d(l){l&&ot(e),n=!1,Yt(r)}}}function l9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class u9 extends It{constructor(e){super(),Dt(this,e,l9,a9,Rt,{color:0})}}function h9(i){let e,t,n,r,s,o,l,u,c,p,d,f,g,v,w,A,C,m,y,x,k,q,I,S,$,B,D,N,O,L,V,X,K,ee,z,J,H,Y,se,Q,ie,te,oe,ve,be,ye,re,he,Se,Re,we,Ee,qe,Be,Je,_e,Fe,Ge,Te,je,Ne,Oe,Le,Ye,Xe,at,it,Ze,ze,Ke,Qe,rt,bt,vt,ct,wt,dt,pt,Pe,_t,et,Ft,ft,$t,gt,mt,Bt,Nt,Ct,Lt,jt,yt,Mt,Tt,tt,xt,kt,lt,ut,Wt,At,Jt,Vt,qt,Zt,Gt,St,Ut,fe,ht,on,an,ln,un,hn,Et,cn,dn,pn,Qs,la,Di=[i[0],{width:"40mm"},{height:"40mm"},{viewBox:"0 0 40 40"},{version:"1.1"},{id:"svg5"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"sodipodi:docname":"bick_wal_square.svg"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],ls={};for(let ti=0;ti<Di.length;ti+=1)ls=Z(ls,Di[ti]);return{c(){e=_("svg"),t=_("sodipodi:namedview"),n=_("sodipodi:guide"),r=_("sodipodi:guide"),s=_("sodipodi:guide"),o=_("sodipodi:guide"),l=_("sodipodi:guide"),u=_("sodipodi:guide"),c=_("sodipodi:guide"),p=_("sodipodi:guide"),d=_("defs"),f=_("mask"),g=_("rect"),v=_("g"),w=_("rect"),A=_("g"),C=_("g"),m=_("rect"),y=_("rect"),x=_("rect"),k=_("rect"),q=_("rect"),I=_("rect"),S=_("rect"),$=_("rect"),B=_("rect"),D=_("rect"),N=_("rect"),O=_("rect"),L=_("rect"),V=_("rect"),X=_("rect"),K=_("rect"),ee=_("rect"),z=_("rect"),J=_("rect"),H=_("rect"),Y=_("rect"),se=_("rect"),Q=_("rect"),ie=_("rect"),te=_("rect"),oe=_("rect"),ve=_("rect"),be=_("rect"),ye=_("rect"),re=_("rect"),he=_("rect"),Se=_("rect"),Re=_("rect"),we=_("rect"),Ee=_("rect"),qe=_("rect"),Be=_("rect"),Je=_("rect"),_e=_("rect"),Fe=_("rect"),Ge=_("rect"),Te=_("rect"),je=_("rect"),Ne=_("rect"),Oe=_("rect"),Le=_("rect"),Ye=_("rect"),Xe=_("rect"),at=_("rect"),it=_("rect"),Ze=_("rect"),ze=_("rect"),Ke=_("rect"),Qe=_("rect"),rt=_("rect"),bt=_("rect"),vt=_("rect"),ct=_("rect"),wt=_("rect"),dt=_("rect"),pt=_("rect"),Pe=_("rect"),_t=_("rect"),et=_("rect"),Ft=_("rect"),ft=_("rect"),$t=_("rect"),gt=_("rect"),mt=_("rect"),Bt=_("rect"),Nt=_("rect"),Ct=_("rect"),Lt=_("rect"),jt=_("rect"),yt=_("rect"),Mt=_("rect"),Tt=_("rect"),tt=_("rect"),xt=_("rect"),kt=_("rect"),lt=_("rect"),ut=_("rect"),Wt=_("rect"),At=_("rect"),Jt=_("rect"),Vt=_("rect"),qt=_("rect"),Zt=_("rect"),Gt=_("rect"),St=_("rect"),Ut=_("rect"),fe=_("rect"),ht=_("rect"),on=_("rect"),an=_("rect"),ln=_("rect"),un=_("rect"),hn=_("rect"),Et=_("rect"),cn=_("rect"),dn=_("rect"),pn=_("rect"),h(n,"position","-1.158135,35.017833"),h(n,"orientation","0,-1"),h(n,"id","guide1027"),h(r,"position","-0.65554813,30.013816"),h(r,"orientation","0,-1"),h(r,"id","guide1029"),h(s,"position","-0.5462901,25.009798"),h(s,"orientation","0,-1"),h(s,"id","guide1031"),h(o,"position","-0.5025869,20.005781"),h(o,"orientation","0,-1"),h(o,"id","guide1033"),h(l,"position","-0.30592246,15.001764"),h(l,"orientation","0,-1"),h(l,"id","guide1035"),h(u,"position","-0.10925802,9.9977463"),h(u,"orientation","0,-1"),h(u,"id","guide1037"),h(c,"position","-0.021851604,4.993729"),h(c,"orientation","0,-1"),h(c,"id","guide1039"),h(p,"position","-0.15296123,0.033414841"),h(p,"orientation","0,-1"),h(p,"id","guide1041"),h(t,"id","namedview7"),h(t,"pagecolor","#ddda7c"),h(t,"bordercolor","#eeeeee"),h(t,"borderopacity","1"),h(t,"inkscape:pageshadow","0"),h(t,"inkscape:pageopacity","0.78431373"),h(t,"inkscape:pagecheckerboard","true"),h(t,"inkscape:document-units","mm"),h(t,"showgrid","false"),h(t,"showguides","true"),h(t,"inkscape:guide-bbox","true"),h(t,"inkscape:snap-global","true"),h(t,"inkscape:snap-others","false"),h(t,"inkscape:snap-to-guides","false"),h(t,"inkscape:zoom","3.6400926"),h(t,"inkscape:cx","77.470557"),h(t,"inkscape:cy","91.893267"),h(t,"inkscape:window-width","1920"),h(t,"inkscape:window-height","995"),h(t,"inkscape:window-x","0"),h(t,"inkscape:window-y","0"),h(t,"inkscape:window-maximized","1"),h(t,"inkscape:current-layer","layer1"),a(g,"fill","#ffffff"),a(g,"fill-opacity","1"),a(g,"stroke","none"),a(g,"stroke-width","0"),a(g,"stroke-linecap","round"),a(g,"stroke-linejoin","round"),a(g,"stroke-miterlimit","4"),a(g,"stroke-dasharray","none"),h(g,"id","rect1311"),h(g,"width","40"),h(g,"height","40"),h(g,"x","0"),h(g,"y","0"),h(g,"rx","0"),h(f,"maskUnits","userSpaceOnUse"),h(f,"id","mask1309"),h(d,"id","defs2"),a(w,"fill","#cccccc"),a(w,"fill-opacity","1"),a(w,"stroke","none"),a(w,"stroke-width","0.799999"),a(w,"stroke-linecap","round"),a(w,"stroke-linejoin","round"),a(w,"stroke-miterlimit","100"),a(w,"stroke-dasharray","none"),a(w,"stroke-opacity","1"),h(w,"id","rect3582"),h(w,"width","40.666897"),h(w,"height","40.617493"),h(w,"x","-0.026121488"),h(w,"y","-0.074673384"),h(w,"rx","1.0000006"),h(v,"inkscape:groupmode","layer"),h(v,"id","layer2"),h(v,"inkscape:label","bg"),a(v,"display","inline"),h(v,"sodipodi:insensitive","true"),a(m,"fill","#e75316"),a(m,"fill-opacity","1"),a(m,"stroke","#cccccc"),a(m,"stroke-width","0.8"),a(m,"stroke-linecap","round"),a(m,"stroke-linejoin","round"),a(m,"stroke-miterlimit","100"),a(m,"stroke-dasharray","none"),a(m,"stroke-opacity","1"),h(m,"id","rect1329"),h(m,"width","8.3345375"),h(m,"height","4.1914907"),h(m,"x","0.39070213"),h(m,"y","15.480371"),h(m,"rx","0.98275834"),a(y,"fill","#e75316"),a(y,"fill-opacity","1"),a(y,"stroke","#cccccc"),a(y,"stroke-width","0.8"),a(y,"stroke-linecap","round"),a(y,"stroke-linejoin","round"),a(y,"stroke-miterlimit","100"),a(y,"stroke-dasharray","none"),a(y,"stroke-opacity","1"),h(y,"id","rect3237"),h(y,"width","8.3345375"),h(y,"height","4.1914907"),h(y,"x","8.7252398"),h(y,"y","15.480371"),h(y,"rx","0.98275834"),a(x,"fill","#e75316"),a(x,"fill-opacity","1"),a(x,"stroke","#cccccc"),a(x,"stroke-width","0.8"),a(x,"stroke-linecap","round"),a(x,"stroke-linejoin","round"),a(x,"stroke-miterlimit","100"),a(x,"stroke-dasharray","none"),a(x,"stroke-opacity","1"),h(x,"id","rect3239"),h(x,"width","8.3345375"),h(x,"height","4.1914907"),h(x,"x","17.059776"),h(x,"y","15.480371"),h(x,"rx","0.98275834"),a(k,"fill","#e75316"),a(k,"fill-opacity","1"),a(k,"stroke","#cccccc"),a(k,"stroke-width","0.8"),a(k,"stroke-linecap","round"),a(k,"stroke-linejoin","round"),a(k,"stroke-miterlimit","100"),a(k,"stroke-dasharray","none"),a(k,"stroke-opacity","1"),h(k,"id","rect3241"),h(k,"width","8.3345375"),h(k,"height","4.1914907"),h(k,"x","25.394314"),h(k,"y","15.480371"),h(k,"rx","0.98275834"),a(q,"fill","#e75316"),a(q,"fill-opacity","1"),a(q,"stroke","#cccccc"),a(q,"stroke-width","0.8"),a(q,"stroke-linecap","round"),a(q,"stroke-linejoin","round"),a(q,"stroke-miterlimit","100"),a(q,"stroke-dasharray","none"),a(q,"stroke-opacity","1"),h(q,"id","rect3243"),h(q,"width","8.3345375"),h(q,"height","4.1914907"),h(q,"x","33.728851"),h(q,"y","15.480371"),h(q,"rx","0.98275834"),a(I,"fill","#e75316"),a(I,"fill-opacity","1"),a(I,"stroke","#cccccc"),a(I,"stroke-width","0.8"),a(I,"stroke-linecap","round"),a(I,"stroke-linejoin","round"),a(I,"stroke-miterlimit","100"),a(I,"stroke-dasharray","none"),a(I,"stroke-opacity","1"),h(I,"id","rect3245"),h(I,"width","8.3345375"),h(I,"height","4.1914907"),h(I,"x","-3.7394707"),h(I,"y","20.406551"),h(I,"rx","0.98275834"),a(S,"fill","#e75316"),a(S,"fill-opacity","1"),a(S,"stroke","#cccccc"),a(S,"stroke-width","0.8"),a(S,"stroke-linecap","round"),a(S,"stroke-linejoin","round"),a(S,"stroke-miterlimit","100"),a(S,"stroke-dasharray","none"),a(S,"stroke-opacity","1"),h(S,"id","rect3247"),h(S,"width","8.3345375"),h(S,"height","4.1914907"),h(S,"x","4.5950665"),h(S,"y","20.406551"),h(S,"rx","0.98275834"),a($,"fill","#e75316"),a($,"fill-opacity","1"),a($,"stroke","#cccccc"),a($,"stroke-width","0.8"),a($,"stroke-linecap","round"),a($,"stroke-linejoin","round"),a($,"stroke-miterlimit","100"),a($,"stroke-dasharray","none"),a($,"stroke-opacity","1"),h($,"id","rect3249"),h($,"width","8.3345375"),h($,"height","4.1914907"),h($,"x","12.929604"),h($,"y","20.406551"),h($,"rx","0.98275834"),a(B,"fill","#e75316"),a(B,"fill-opacity","1"),a(B,"stroke","#cccccc"),a(B,"stroke-width","0.8"),a(B,"stroke-linecap","round"),a(B,"stroke-linejoin","round"),a(B,"stroke-miterlimit","100"),a(B,"stroke-dasharray","none"),a(B,"stroke-opacity","1"),h(B,"id","rect3251"),h(B,"width","8.3345375"),h(B,"height","4.1914907"),h(B,"x","21.264141"),h(B,"y","20.406551"),h(B,"rx","0.98275834"),a(D,"fill","#e75316"),a(D,"fill-opacity","1"),a(D,"stroke","#cccccc"),a(D,"stroke-width","0.8"),a(D,"stroke-linecap","round"),a(D,"stroke-linejoin","round"),a(D,"stroke-miterlimit","100"),a(D,"stroke-dasharray","none"),a(D,"stroke-opacity","1"),h(D,"id","rect3253"),h(D,"width","8.3345375"),h(D,"height","4.1914907"),h(D,"x","29.598679"),h(D,"y","20.406551"),h(D,"rx","0.98275834"),a(N,"fill","#e75316"),a(N,"fill-opacity","1"),a(N,"stroke","#cccccc"),a(N,"stroke-width","0.8"),a(N,"stroke-linecap","round"),a(N,"stroke-linejoin","round"),a(N,"stroke-miterlimit","100"),a(N,"stroke-dasharray","none"),a(N,"stroke-opacity","1"),h(N,"id","rect3255"),h(N,"width","8.3345375"),h(N,"height","4.1914907"),h(N,"x","37.933216"),h(N,"y","20.406551"),h(N,"rx","0.98275834"),a(O,"fill","#e75316"),a(O,"fill-opacity","1"),a(O,"stroke","#cccccc"),a(O,"stroke-width","0.8"),a(O,"stroke-linecap","round"),a(O,"stroke-linejoin","round"),a(O,"stroke-miterlimit","100"),a(O,"stroke-dasharray","none"),a(O,"stroke-opacity","1"),h(O,"id","rect3257"),h(O,"width","8.3345375"),h(O,"height","4.1914907"),h(O,"x","0.39070213"),h(O,"y","5.4531813"),h(O,"rx","0.98275834"),a(L,"fill","#e75316"),a(L,"fill-opacity","1"),a(L,"stroke","#cccccc"),a(L,"stroke-width","0.8"),a(L,"stroke-linecap","round"),a(L,"stroke-linejoin","round"),a(L,"stroke-miterlimit","100"),a(L,"stroke-dasharray","none"),a(L,"stroke-opacity","1"),h(L,"id","rect3259"),h(L,"width","8.3345375"),h(L,"height","4.1914907"),h(L,"x","8.7252398"),h(L,"y","5.4531813"),h(L,"rx","0.98275834"),a(V,"fill","#e75316"),a(V,"fill-opacity","1"),a(V,"stroke","#cccccc"),a(V,"stroke-width","0.8"),a(V,"stroke-linecap","round"),a(V,"stroke-linejoin","round"),a(V,"stroke-miterlimit","100"),a(V,"stroke-dasharray","none"),a(V,"stroke-opacity","1"),h(V,"id","rect3261"),h(V,"width","8.3345375"),h(V,"height","4.1914907"),h(V,"x","17.059776"),h(V,"y","5.4531813"),h(V,"rx","0.98275834"),a(X,"fill","#e75316"),a(X,"fill-opacity","1"),a(X,"stroke","#cccccc"),a(X,"stroke-width","0.8"),a(X,"stroke-linecap","round"),a(X,"stroke-linejoin","round"),a(X,"stroke-miterlimit","100"),a(X,"stroke-dasharray","none"),a(X,"stroke-opacity","1"),h(X,"id","rect3263"),h(X,"width","8.3345375"),h(X,"height","4.1914907"),h(X,"x","25.394314"),h(X,"y","5.4531813"),h(X,"rx","0.98275834"),a(K,"fill","#e75316"),a(K,"fill-opacity","1"),a(K,"stroke","#cccccc"),a(K,"stroke-width","0.8"),a(K,"stroke-linecap","round"),a(K,"stroke-linejoin","round"),a(K,"stroke-miterlimit","100"),a(K,"stroke-dasharray","none"),a(K,"stroke-opacity","1"),h(K,"id","rect3265"),h(K,"width","8.3345375"),h(K,"height","4.1914907"),h(K,"x","33.728851"),h(K,"y","5.4531813"),h(K,"rx","0.98275834"),a(ee,"fill","#e75316"),a(ee,"fill-opacity","1"),a(ee,"stroke","#cccccc"),a(ee,"stroke-width","0.8"),a(ee,"stroke-linecap","round"),a(ee,"stroke-linejoin","round"),a(ee,"stroke-miterlimit","100"),a(ee,"stroke-dasharray","none"),a(ee,"stroke-opacity","1"),h(ee,"id","rect3267"),h(ee,"width","8.3345375"),h(ee,"height","4.1914907"),h(ee,"x","-3.7394707"),h(ee,"y","10.423086"),h(ee,"rx","0.98275834"),a(z,"fill","#e75316"),a(z,"fill-opacity","1"),a(z,"stroke","#cccccc"),a(z,"stroke-width","0.8"),a(z,"stroke-linecap","round"),a(z,"stroke-linejoin","round"),a(z,"stroke-miterlimit","100"),a(z,"stroke-dasharray","none"),a(z,"stroke-opacity","1"),h(z,"id","rect3269"),h(z,"width","8.3345375"),h(z,"height","4.1914907"),h(z,"x","4.5950665"),h(z,"y","10.423086"),h(z,"rx","0.98275834"),a(J,"fill","#e75316"),a(J,"fill-opacity","1"),a(J,"stroke","#cccccc"),a(J,"stroke-width","0.8"),a(J,"stroke-linecap","round"),a(J,"stroke-linejoin","round"),a(J,"stroke-miterlimit","100"),a(J,"stroke-dasharray","none"),a(J,"stroke-opacity","1"),h(J,"id","rect3271"),h(J,"width","8.3345375"),h(J,"height","4.1914907"),h(J,"x","12.929604"),h(J,"y","10.423086"),h(J,"rx","0.98275834"),a(H,"fill","#e75316"),a(H,"fill-opacity","1"),a(H,"stroke","#cccccc"),a(H,"stroke-width","0.8"),a(H,"stroke-linecap","round"),a(H,"stroke-linejoin","round"),a(H,"stroke-miterlimit","100"),a(H,"stroke-dasharray","none"),a(H,"stroke-opacity","1"),h(H,"id","rect3273"),h(H,"width","8.3345375"),h(H,"height","4.1914907"),h(H,"x","21.264141"),h(H,"y","10.423086"),h(H,"rx","0.98275834"),a(Y,"fill","#e75316"),a(Y,"fill-opacity","1"),a(Y,"stroke","#cccccc"),a(Y,"stroke-width","0.8"),a(Y,"stroke-linecap","round"),a(Y,"stroke-linejoin","round"),a(Y,"stroke-miterlimit","100"),a(Y,"stroke-dasharray","none"),a(Y,"stroke-opacity","1"),h(Y,"id","rect3275"),h(Y,"width","8.3345375"),h(Y,"height","4.1914907"),h(Y,"x","29.598679"),h(Y,"y","10.423086"),h(Y,"rx","0.98275834"),a(se,"fill","#e75316"),a(se,"fill-opacity","1"),a(se,"stroke","#cccccc"),a(se,"stroke-width","0.8"),a(se,"stroke-linecap","round"),a(se,"stroke-linejoin","round"),a(se,"stroke-miterlimit","100"),a(se,"stroke-dasharray","none"),a(se,"stroke-opacity","1"),h(se,"id","rect3277"),h(se,"width","8.3345375"),h(se,"height","4.1914907"),h(se,"x","37.933216"),h(se,"y","10.423086"),h(se,"rx","0.98275834"),a(Q,"fill","#e75316"),a(Q,"fill-opacity","1"),a(Q,"stroke","#cccccc"),a(Q,"stroke-width","0.8"),a(Q,"stroke-linecap","round"),a(Q,"stroke-linejoin","round"),a(Q,"stroke-miterlimit","100"),a(Q,"stroke-dasharray","none"),a(Q,"stroke-opacity","1"),h(Q,"id","rect3279"),h(Q,"width","8.3345375"),h(Q,"height","4.1914907"),h(Q,"x","0.39070213"),h(Q,"y","5.4531813"),h(Q,"rx","0.98275834"),a(ie,"fill","#e75316"),a(ie,"fill-opacity","1"),a(ie,"stroke","#cccccc"),a(ie,"stroke-width","0.8"),a(ie,"stroke-linecap","round"),a(ie,"stroke-linejoin","round"),a(ie,"stroke-miterlimit","100"),a(ie,"stroke-dasharray","none"),a(ie,"stroke-opacity","1"),h(ie,"id","rect3281"),h(ie,"width","8.3345375"),h(ie,"height","4.1914907"),h(ie,"x","8.7252398"),h(ie,"y","5.4531813"),h(ie,"rx","0.98275834"),a(te,"fill","#e75316"),a(te,"fill-opacity","1"),a(te,"stroke","#cccccc"),a(te,"stroke-width","0.8"),a(te,"stroke-linecap","round"),a(te,"stroke-linejoin","round"),a(te,"stroke-miterlimit","100"),a(te,"stroke-dasharray","none"),a(te,"stroke-opacity","1"),h(te,"id","rect3283"),h(te,"width","8.3345375"),h(te,"height","4.1914907"),h(te,"x","17.059776"),h(te,"y","5.4531813"),h(te,"rx","0.98275834"),a(oe,"fill","#e75316"),a(oe,"fill-opacity","1"),a(oe,"stroke","#cccccc"),a(oe,"stroke-width","0.8"),a(oe,"stroke-linecap","round"),a(oe,"stroke-linejoin","round"),a(oe,"stroke-miterlimit","100"),a(oe,"stroke-dasharray","none"),a(oe,"stroke-opacity","1"),h(oe,"id","rect3285"),h(oe,"width","8.3345375"),h(oe,"height","4.1914907"),h(oe,"x","25.394314"),h(oe,"y","5.4531813"),h(oe,"rx","0.98275834"),a(ve,"fill","#e75316"),a(ve,"fill-opacity","1"),a(ve,"stroke","#cccccc"),a(ve,"stroke-width","0.8"),a(ve,"stroke-linecap","round"),a(ve,"stroke-linejoin","round"),a(ve,"stroke-miterlimit","100"),a(ve,"stroke-dasharray","none"),a(ve,"stroke-opacity","1"),h(ve,"id","rect3287"),h(ve,"width","8.3345375"),h(ve,"height","4.1914907"),h(ve,"x","33.728851"),h(ve,"y","5.4531813"),h(ve,"rx","0.98275834"),a(be,"fill","#e75316"),a(be,"fill-opacity","1"),a(be,"stroke","#cccccc"),a(be,"stroke-width","0.8"),a(be,"stroke-linecap","round"),a(be,"stroke-linejoin","round"),a(be,"stroke-miterlimit","100"),a(be,"stroke-dasharray","none"),a(be,"stroke-opacity","1"),h(be,"id","rect3289"),h(be,"width","8.3345375"),h(be,"height","4.1914907"),h(be,"x","-3.7394707"),h(be,"y","10.423086"),h(be,"rx","0.98275834"),a(ye,"fill","#e75316"),a(ye,"fill-opacity","1"),a(ye,"stroke","#cccccc"),a(ye,"stroke-width","0.8"),a(ye,"stroke-linecap","round"),a(ye,"stroke-linejoin","round"),a(ye,"stroke-miterlimit","100"),a(ye,"stroke-dasharray","none"),a(ye,"stroke-opacity","1"),h(ye,"id","rect3291"),h(ye,"width","8.3345375"),h(ye,"height","4.1914907"),h(ye,"x","4.5950665"),h(ye,"y","10.423086"),h(ye,"rx","0.98275834"),a(re,"fill","#e75316"),a(re,"fill-opacity","1"),a(re,"stroke","#cccccc"),a(re,"stroke-width","0.8"),a(re,"stroke-linecap","round"),a(re,"stroke-linejoin","round"),a(re,"stroke-miterlimit","100"),a(re,"stroke-dasharray","none"),a(re,"stroke-opacity","1"),h(re,"id","rect3293"),h(re,"width","8.3345375"),h(re,"height","4.1914907"),h(re,"x","12.929604"),h(re,"y","10.423086"),h(re,"rx","0.98275834"),a(he,"fill","#e75316"),a(he,"fill-opacity","1"),a(he,"stroke","#cccccc"),a(he,"stroke-width","0.8"),a(he,"stroke-linecap","round"),a(he,"stroke-linejoin","round"),a(he,"stroke-miterlimit","100"),a(he,"stroke-dasharray","none"),a(he,"stroke-opacity","1"),h(he,"id","rect3295"),h(he,"width","8.3345375"),h(he,"height","4.1914907"),h(he,"x","21.264141"),h(he,"y","10.423086"),h(he,"rx","0.98275834"),a(Se,"fill","#e75316"),a(Se,"fill-opacity","1"),a(Se,"stroke","#cccccc"),a(Se,"stroke-width","0.8"),a(Se,"stroke-linecap","round"),a(Se,"stroke-linejoin","round"),a(Se,"stroke-miterlimit","100"),a(Se,"stroke-dasharray","none"),a(Se,"stroke-opacity","1"),h(Se,"id","rect3297"),h(Se,"width","8.3345375"),h(Se,"height","4.1914907"),h(Se,"x","29.598679"),h(Se,"y","10.423086"),h(Se,"rx","0.98275834"),a(Re,"fill","#e75316"),a(Re,"fill-opacity","1"),a(Re,"stroke","#cccccc"),a(Re,"stroke-width","0.8"),a(Re,"stroke-linecap","round"),a(Re,"stroke-linejoin","round"),a(Re,"stroke-miterlimit","100"),a(Re,"stroke-dasharray","none"),a(Re,"stroke-opacity","1"),h(Re,"id","rect3299"),h(Re,"width","8.3345375"),h(Re,"height","4.1914907"),h(Re,"x","37.933216"),h(Re,"y","10.423086"),h(Re,"rx","0.98275834"),a(we,"fill","#e75316"),a(we,"fill-opacity","1"),a(we,"stroke","#cccccc"),a(we,"stroke-width","0.8"),a(we,"stroke-linecap","round"),a(we,"stroke-linejoin","round"),a(we,"stroke-miterlimit","100"),a(we,"stroke-dasharray","none"),a(we,"stroke-opacity","1"),h(we,"id","rect3301"),h(we,"width","8.3345375"),h(we,"height","4.1914907"),h(we,"x","8.7252398"),h(we,"y","15.480371"),h(we,"rx","0.98275834"),a(Ee,"fill","#e75316"),a(Ee,"fill-opacity","1"),a(Ee,"stroke","#cccccc"),a(Ee,"stroke-width","0.8"),a(Ee,"stroke-linecap","round"),a(Ee,"stroke-linejoin","round"),a(Ee,"stroke-miterlimit","100"),a(Ee,"stroke-dasharray","none"),a(Ee,"stroke-opacity","1"),h(Ee,"id","rect3303"),h(Ee,"width","8.3345375"),h(Ee,"height","4.1914907"),h(Ee,"x","0.39070213"),h(Ee,"y","5.4531813"),h(Ee,"rx","0.98275834"),a(qe,"fill","#e75316"),a(qe,"fill-opacity","1"),a(qe,"stroke","#cccccc"),a(qe,"stroke-width","0.8"),a(qe,"stroke-linecap","round"),a(qe,"stroke-linejoin","round"),a(qe,"stroke-miterlimit","100"),a(qe,"stroke-dasharray","none"),a(qe,"stroke-opacity","1"),h(qe,"id","rect3305"),h(qe,"width","8.3345375"),h(qe,"height","4.1914907"),h(qe,"x","8.7252398"),h(qe,"y","5.4531813"),h(qe,"rx","0.98275834"),a(Be,"fill","#e75316"),a(Be,"fill-opacity","1"),a(Be,"stroke","#cccccc"),a(Be,"stroke-width","0.8"),a(Be,"stroke-linecap","round"),a(Be,"stroke-linejoin","round"),a(Be,"stroke-miterlimit","100"),a(Be,"stroke-dasharray","none"),a(Be,"stroke-opacity","1"),h(Be,"id","rect3307"),h(Be,"width","8.3345375"),h(Be,"height","4.1914907"),h(Be,"x","17.059776"),h(Be,"y","5.4531813"),h(Be,"rx","0.98275834"),a(Je,"fill","#e75316"),a(Je,"fill-opacity","1"),a(Je,"stroke","#cccccc"),a(Je,"stroke-width","0.8"),a(Je,"stroke-linecap","round"),a(Je,"stroke-linejoin","round"),a(Je,"stroke-miterlimit","100"),a(Je,"stroke-dasharray","none"),a(Je,"stroke-opacity","1"),h(Je,"id","rect3309"),h(Je,"width","8.3345375"),h(Je,"height","4.1914907"),h(Je,"x","25.394314"),h(Je,"y","5.4531813"),h(Je,"rx","0.98275834"),a(_e,"fill","#e75316"),a(_e,"fill-opacity","1"),a(_e,"stroke","#cccccc"),a(_e,"stroke-width","0.8"),a(_e,"stroke-linecap","round"),a(_e,"stroke-linejoin","round"),a(_e,"stroke-miterlimit","100"),a(_e,"stroke-dasharray","none"),a(_e,"stroke-opacity","1"),h(_e,"id","rect3311"),h(_e,"width","8.3345375"),h(_e,"height","4.1914907"),h(_e,"x","33.728851"),h(_e,"y","5.4531813"),h(_e,"rx","0.98275834"),a(Fe,"fill","#e75316"),a(Fe,"fill-opacity","1"),a(Fe,"stroke","#cccccc"),a(Fe,"stroke-width","0.8"),a(Fe,"stroke-linecap","round"),a(Fe,"stroke-linejoin","round"),a(Fe,"stroke-miterlimit","100"),a(Fe,"stroke-dasharray","none"),a(Fe,"stroke-opacity","1"),h(Fe,"id","rect3313"),h(Fe,"width","8.3345375"),h(Fe,"height","4.1914907"),h(Fe,"x","-3.7394707"),h(Fe,"y","10.423086"),h(Fe,"rx","0.98275834"),a(Ge,"fill","#e75316"),a(Ge,"fill-opacity","1"),a(Ge,"stroke","#cccccc"),a(Ge,"stroke-width","0.8"),a(Ge,"stroke-linecap","round"),a(Ge,"stroke-linejoin","round"),a(Ge,"stroke-miterlimit","100"),a(Ge,"stroke-dasharray","none"),a(Ge,"stroke-opacity","1"),h(Ge,"id","rect3315"),h(Ge,"width","8.3345375"),h(Ge,"height","4.1914907"),h(Ge,"x","4.5950665"),h(Ge,"y","10.423086"),h(Ge,"rx","0.98275834"),a(Te,"fill","#e75316"),a(Te,"fill-opacity","1"),a(Te,"stroke","#cccccc"),a(Te,"stroke-width","0.8"),a(Te,"stroke-linecap","round"),a(Te,"stroke-linejoin","round"),a(Te,"stroke-miterlimit","100"),a(Te,"stroke-dasharray","none"),a(Te,"stroke-opacity","1"),h(Te,"id","rect3317"),h(Te,"width","8.3345375"),h(Te,"height","4.1914907"),h(Te,"x","12.929604"),h(Te,"y","10.423086"),h(Te,"rx","0.98275834"),a(je,"fill","#e75316"),a(je,"fill-opacity","1"),a(je,"stroke","#cccccc"),a(je,"stroke-width","0.8"),a(je,"stroke-linecap","round"),a(je,"stroke-linejoin","round"),a(je,"stroke-miterlimit","100"),a(je,"stroke-dasharray","none"),a(je,"stroke-opacity","1"),h(je,"id","rect3319"),h(je,"width","8.3345375"),h(je,"height","4.1914907"),h(je,"x","21.264141"),h(je,"y","10.423086"),h(je,"rx","0.98275834"),a(Ne,"fill","#e75316"),a(Ne,"fill-opacity","1"),a(Ne,"stroke","#cccccc"),a(Ne,"stroke-width","0.8"),a(Ne,"stroke-linecap","round"),a(Ne,"stroke-linejoin","round"),a(Ne,"stroke-miterlimit","100"),a(Ne,"stroke-dasharray","none"),a(Ne,"stroke-opacity","1"),h(Ne,"id","rect3321"),h(Ne,"width","8.3345375"),h(Ne,"height","4.1914907"),h(Ne,"x","29.598679"),h(Ne,"y","10.423086"),h(Ne,"rx","0.98275834"),a(Oe,"fill","#e75316"),a(Oe,"fill-opacity","1"),a(Oe,"stroke","#cccccc"),a(Oe,"stroke-width","0.8"),a(Oe,"stroke-linecap","round"),a(Oe,"stroke-linejoin","round"),a(Oe,"stroke-miterlimit","100"),a(Oe,"stroke-dasharray","none"),a(Oe,"stroke-opacity","1"),h(Oe,"id","rect3323"),h(Oe,"width","8.3345375"),h(Oe,"height","4.1914907"),h(Oe,"x","37.933216"),h(Oe,"y","10.423086"),h(Oe,"rx","0.98275834"),a(Le,"fill","#e75316"),a(Le,"fill-opacity","1"),a(Le,"stroke","#cccccc"),a(Le,"stroke-width","0.8"),a(Le,"stroke-linecap","round"),a(Le,"stroke-linejoin","round"),a(Le,"stroke-miterlimit","100"),a(Le,"stroke-dasharray","none"),a(Le,"stroke-opacity","1"),h(Le,"id","rect3325"),h(Le,"width","8.3345375"),h(Le,"height","4.1914907"),h(Le,"x","0.39070213"),h(Le,"y","35.221924"),h(Le,"rx","0.98275834"),a(Ye,"fill","#e75316"),a(Ye,"fill-opacity","1"),a(Ye,"stroke","#cccccc"),a(Ye,"stroke-width","0.8"),a(Ye,"stroke-linecap","round"),a(Ye,"stroke-linejoin","round"),a(Ye,"stroke-miterlimit","100"),a(Ye,"stroke-dasharray","none"),a(Ye,"stroke-opacity","1"),h(Ye,"id","rect3327"),h(Ye,"width","8.3345375"),h(Ye,"height","4.1914907"),h(Ye,"x","8.7252398"),h(Ye,"y","35.221924"),h(Ye,"rx","0.98275834"),a(Xe,"fill","#e75316"),a(Xe,"fill-opacity","1"),a(Xe,"stroke","#cccccc"),a(Xe,"stroke-width","0.8"),a(Xe,"stroke-linecap","round"),a(Xe,"stroke-linejoin","round"),a(Xe,"stroke-miterlimit","100"),a(Xe,"stroke-dasharray","none"),a(Xe,"stroke-opacity","1"),h(Xe,"id","rect3329"),h(Xe,"width","8.3345375"),h(Xe,"height","4.1914907"),h(Xe,"x","17.059776"),h(Xe,"y","35.221924"),h(Xe,"rx","0.98275834"),a(at,"fill","#e75316"),a(at,"fill-opacity","1"),a(at,"stroke","#cccccc"),a(at,"stroke-width","0.8"),a(at,"stroke-linecap","round"),a(at,"stroke-linejoin","round"),a(at,"stroke-miterlimit","100"),a(at,"stroke-dasharray","none"),a(at,"stroke-opacity","1"),h(at,"id","rect3331"),h(at,"width","8.3345375"),h(at,"height","4.1914907"),h(at,"x","25.394314"),h(at,"y","35.221924"),h(at,"rx","0.98275834"),a(it,"fill","#e75316"),a(it,"fill-opacity","1"),a(it,"stroke","#cccccc"),a(it,"stroke-width","0.8"),a(it,"stroke-linecap","round"),a(it,"stroke-linejoin","round"),a(it,"stroke-miterlimit","100"),a(it,"stroke-dasharray","none"),a(it,"stroke-opacity","1"),h(it,"id","rect3333"),h(it,"width","8.3345375"),h(it,"height","4.1914907"),h(it,"x","33.728851"),h(it,"y","35.221924"),h(it,"rx","0.98275834"),a(Ze,"fill","#e75316"),a(Ze,"fill-opacity","1"),a(Ze,"stroke","#cccccc"),a(Ze,"stroke-width","0.8"),a(Ze,"stroke-linecap","round"),a(Ze,"stroke-linejoin","round"),a(Ze,"stroke-miterlimit","100"),a(Ze,"stroke-dasharray","none"),a(Ze,"stroke-opacity","1"),h(Ze,"id","rect3347"),h(Ze,"width","8.3345375"),h(Ze,"height","4.1914907"),h(Ze,"x","0.39070213"),h(Ze,"y","25.340094"),h(Ze,"rx","0.98275834"),a(ze,"fill","#e75316"),a(ze,"fill-opacity","1"),a(ze,"stroke","#cccccc"),a(ze,"stroke-width","0.8"),a(ze,"stroke-linecap","round"),a(ze,"stroke-linejoin","round"),a(ze,"stroke-miterlimit","100"),a(ze,"stroke-dasharray","none"),a(ze,"stroke-opacity","1"),h(ze,"id","rect3349"),h(ze,"width","8.3345375"),h(ze,"height","4.1914907"),h(ze,"x","8.7252398"),h(ze,"y","25.340094"),h(ze,"rx","0.98275834"),a(Ke,"fill","#e75316"),a(Ke,"fill-opacity","1"),a(Ke,"stroke","#cccccc"),a(Ke,"stroke-width","0.8"),a(Ke,"stroke-linecap","round"),a(Ke,"stroke-linejoin","round"),a(Ke,"stroke-miterlimit","100"),a(Ke,"stroke-dasharray","none"),a(Ke,"stroke-opacity","1"),h(Ke,"id","rect3351"),h(Ke,"width","8.3345375"),h(Ke,"height","4.1914907"),h(Ke,"x","17.059776"),h(Ke,"y","25.340094"),h(Ke,"rx","0.98275834"),a(Qe,"fill","#e75316"),a(Qe,"fill-opacity","1"),a(Qe,"stroke","#cccccc"),a(Qe,"stroke-width","0.8"),a(Qe,"stroke-linecap","round"),a(Qe,"stroke-linejoin","round"),a(Qe,"stroke-miterlimit","100"),a(Qe,"stroke-dasharray","none"),a(Qe,"stroke-opacity","1"),h(Qe,"id","rect3353"),h(Qe,"width","8.3345375"),h(Qe,"height","4.1914907"),h(Qe,"x","25.394314"),h(Qe,"y","25.340094"),h(Qe,"rx","0.98275834"),a(rt,"fill","#e75316"),a(rt,"fill-opacity","1"),a(rt,"stroke","#cccccc"),a(rt,"stroke-width","0.8"),a(rt,"stroke-linecap","round"),a(rt,"stroke-linejoin","round"),a(rt,"stroke-miterlimit","100"),a(rt,"stroke-dasharray","none"),a(rt,"stroke-opacity","1"),h(rt,"id","rect3355"),h(rt,"width","8.3345375"),h(rt,"height","4.1914907"),h(rt,"x","33.728851"),h(rt,"y","25.340094"),h(rt,"rx","0.98275834"),a(bt,"fill","#e75316"),a(bt,"fill-opacity","1"),a(bt,"stroke","#cccccc"),a(bt,"stroke-width","0.8"),a(bt,"stroke-linecap","round"),a(bt,"stroke-linejoin","round"),a(bt,"stroke-miterlimit","100"),a(bt,"stroke-dasharray","none"),a(bt,"stroke-opacity","1"),h(bt,"id","rect3357"),h(bt,"width","8.3345375"),h(bt,"height","4.1914907"),h(bt,"x","-3.7394707"),h(bt,"y","30.266273"),h(bt,"rx","0.98275834"),a(vt,"fill","#e75316"),a(vt,"fill-opacity","1"),a(vt,"stroke","#cccccc"),a(vt,"stroke-width","0.8"),a(vt,"stroke-linecap","round"),a(vt,"stroke-linejoin","round"),a(vt,"stroke-miterlimit","100"),a(vt,"stroke-dasharray","none"),a(vt,"stroke-opacity","1"),h(vt,"id","rect3359"),h(vt,"width","8.3345375"),h(vt,"height","4.1914907"),h(vt,"x","4.5950665"),h(vt,"y","30.266273"),h(vt,"rx","0.98275834"),a(ct,"fill","#e75316"),a(ct,"fill-opacity","1"),a(ct,"stroke","#cccccc"),a(ct,"stroke-width","0.8"),a(ct,"stroke-linecap","round"),a(ct,"stroke-linejoin","round"),a(ct,"stroke-miterlimit","100"),a(ct,"stroke-dasharray","none"),a(ct,"stroke-opacity","1"),h(ct,"id","rect3361"),h(ct,"width","8.3345375"),h(ct,"height","4.1914907"),h(ct,"x","12.929604"),h(ct,"y","30.266273"),h(ct,"rx","0.98275834"),a(wt,"fill","#e75316"),a(wt,"fill-opacity","1"),a(wt,"stroke","#cccccc"),a(wt,"stroke-width","0.8"),a(wt,"stroke-linecap","round"),a(wt,"stroke-linejoin","round"),a(wt,"stroke-miterlimit","100"),a(wt,"stroke-dasharray","none"),a(wt,"stroke-opacity","1"),h(wt,"id","rect3363"),h(wt,"width","8.3345375"),h(wt,"height","4.1914907"),h(wt,"x","21.264141"),h(wt,"y","30.266273"),h(wt,"rx","0.98275834"),a(dt,"fill","#e75316"),a(dt,"fill-opacity","1"),a(dt,"stroke","#cccccc"),a(dt,"stroke-width","0.8"),a(dt,"stroke-linecap","round"),a(dt,"stroke-linejoin","round"),a(dt,"stroke-miterlimit","100"),a(dt,"stroke-dasharray","none"),a(dt,"stroke-opacity","1"),h(dt,"id","rect3365"),h(dt,"width","8.3345375"),h(dt,"height","4.1914907"),h(dt,"x","29.598679"),h(dt,"y","30.266273"),h(dt,"rx","0.98275834"),a(pt,"fill","#e75316"),a(pt,"fill-opacity","1"),a(pt,"stroke","#cccccc"),a(pt,"stroke-width","0.8"),a(pt,"stroke-linecap","round"),a(pt,"stroke-linejoin","round"),a(pt,"stroke-miterlimit","100"),a(pt,"stroke-dasharray","none"),a(pt,"stroke-opacity","1"),h(pt,"id","rect3367"),h(pt,"width","8.3345375"),h(pt,"height","4.1914907"),h(pt,"x","37.933216"),h(pt,"y","30.266273"),h(pt,"rx","0.98275834"),a(Pe,"fill","#e75316"),a(Pe,"fill-opacity","1"),a(Pe,"stroke","#cccccc"),a(Pe,"stroke-width","0.8"),a(Pe,"stroke-linecap","round"),a(Pe,"stroke-linejoin","round"),a(Pe,"stroke-miterlimit","100"),a(Pe,"stroke-dasharray","none"),a(Pe,"stroke-opacity","1"),h(Pe,"id","rect3369"),h(Pe,"width","8.3345375"),h(Pe,"height","4.1914907"),h(Pe,"x","0.39070213"),h(Pe,"y","25.340094"),h(Pe,"rx","0.98275834"),a(_t,"fill","#e75316"),a(_t,"fill-opacity","1"),a(_t,"stroke","#cccccc"),a(_t,"stroke-width","0.8"),a(_t,"stroke-linecap","round"),a(_t,"stroke-linejoin","round"),a(_t,"stroke-miterlimit","100"),a(_t,"stroke-dasharray","none"),a(_t,"stroke-opacity","1"),h(_t,"id","rect3371"),h(_t,"width","8.3345375"),h(_t,"height","4.1914907"),h(_t,"x","8.7252398"),h(_t,"y","25.340094"),h(_t,"rx","0.98275834"),a(et,"fill","#e75316"),a(et,"fill-opacity","1"),a(et,"stroke","#cccccc"),a(et,"stroke-width","0.8"),a(et,"stroke-linecap","round"),a(et,"stroke-linejoin","round"),a(et,"stroke-miterlimit","100"),a(et,"stroke-dasharray","none"),a(et,"stroke-opacity","1"),h(et,"id","rect3373"),h(et,"width","8.3345375"),h(et,"height","4.1914907"),h(et,"x","17.059776"),h(et,"y","25.340094"),h(et,"rx","0.98275834"),a(Ft,"fill","#e75316"),a(Ft,"fill-opacity","1"),a(Ft,"stroke","#cccccc"),a(Ft,"stroke-width","0.8"),a(Ft,"stroke-linecap","round"),a(Ft,"stroke-linejoin","round"),a(Ft,"stroke-miterlimit","100"),a(Ft,"stroke-dasharray","none"),a(Ft,"stroke-opacity","1"),h(Ft,"id","rect3375"),h(Ft,"width","8.3345375"),h(Ft,"height","4.1914907"),h(Ft,"x","25.394314"),h(Ft,"y","25.340094"),h(Ft,"rx","0.98275834"),a(ft,"fill","#e75316"),a(ft,"fill-opacity","1"),a(ft,"stroke","#cccccc"),a(ft,"stroke-width","0.8"),a(ft,"stroke-linecap","round"),a(ft,"stroke-linejoin","round"),a(ft,"stroke-miterlimit","100"),a(ft,"stroke-dasharray","none"),a(ft,"stroke-opacity","1"),h(ft,"id","rect3377"),h(ft,"width","8.3345375"),h(ft,"height","4.1914907"),h(ft,"x","33.728851"),h(ft,"y","25.340094"),h(ft,"rx","0.98275834"),a($t,"fill","#e75316"),a($t,"fill-opacity","1"),a($t,"stroke","#cccccc"),a($t,"stroke-width","0.8"),a($t,"stroke-linecap","round"),a($t,"stroke-linejoin","round"),a($t,"stroke-miterlimit","100"),a($t,"stroke-dasharray","none"),a($t,"stroke-opacity","1"),h($t,"id","rect3379"),h($t,"width","8.3345375"),h($t,"height","4.1914907"),h($t,"x","-3.7394707"),h($t,"y","30.266273"),h($t,"rx","0.98275834"),a(gt,"fill","#e75316"),a(gt,"fill-opacity","1"),a(gt,"stroke","#cccccc"),a(gt,"stroke-width","0.8"),a(gt,"stroke-linecap","round"),a(gt,"stroke-linejoin","round"),a(gt,"stroke-miterlimit","100"),a(gt,"stroke-dasharray","none"),a(gt,"stroke-opacity","1"),h(gt,"id","rect3381"),h(gt,"width","8.3345375"),h(gt,"height","4.1914907"),h(gt,"x","4.5950665"),h(gt,"y","30.266273"),h(gt,"rx","0.98275834"),a(mt,"fill","#e75316"),a(mt,"fill-opacity","1"),a(mt,"stroke","#cccccc"),a(mt,"stroke-width","0.8"),a(mt,"stroke-linecap","round"),a(mt,"stroke-linejoin","round"),a(mt,"stroke-miterlimit","100"),a(mt,"stroke-dasharray","none"),a(mt,"stroke-opacity","1"),h(mt,"id","rect3383"),h(mt,"width","8.3345375"),h(mt,"height","4.1914907"),h(mt,"x","12.929604"),h(mt,"y","30.266273"),h(mt,"rx","0.98275834"),a(Bt,"fill","#e75316"),a(Bt,"fill-opacity","1"),a(Bt,"stroke","#cccccc"),a(Bt,"stroke-width","0.8"),a(Bt,"stroke-linecap","round"),a(Bt,"stroke-linejoin","round"),a(Bt,"stroke-miterlimit","100"),a(Bt,"stroke-dasharray","none"),a(Bt,"stroke-opacity","1"),h(Bt,"id","rect3385"),h(Bt,"width","8.3345375"),h(Bt,"height","4.1914907"),h(Bt,"x","21.264141"),h(Bt,"y","30.266273"),h(Bt,"rx","0.98275834"),a(Nt,"fill","#e75316"),a(Nt,"fill-opacity","1"),a(Nt,"stroke","#cccccc"),a(Nt,"stroke-width","0.8"),a(Nt,"stroke-linecap","round"),a(Nt,"stroke-linejoin","round"),a(Nt,"stroke-miterlimit","100"),a(Nt,"stroke-dasharray","none"),a(Nt,"stroke-opacity","1"),h(Nt,"id","rect3387"),h(Nt,"width","8.3345375"),h(Nt,"height","4.1914907"),h(Nt,"x","29.598679"),h(Nt,"y","30.266273"),h(Nt,"rx","0.98275834"),a(Ct,"fill","#e75316"),a(Ct,"fill-opacity","1"),a(Ct,"stroke","#cccccc"),a(Ct,"stroke-width","0.8"),a(Ct,"stroke-linecap","round"),a(Ct,"stroke-linejoin","round"),a(Ct,"stroke-miterlimit","100"),a(Ct,"stroke-dasharray","none"),a(Ct,"stroke-opacity","1"),h(Ct,"id","rect3389"),h(Ct,"width","8.3345375"),h(Ct,"height","4.1914907"),h(Ct,"x","37.933216"),h(Ct,"y","30.266273"),h(Ct,"rx","0.98275834"),a(Lt,"fill","#e75316"),a(Lt,"fill-opacity","1"),a(Lt,"stroke","#cccccc"),a(Lt,"stroke-width","0.8"),a(Lt,"stroke-linecap","round"),a(Lt,"stroke-linejoin","round"),a(Lt,"stroke-miterlimit","100"),a(Lt,"stroke-dasharray","none"),a(Lt,"stroke-opacity","1"),h(Lt,"id","rect3391"),h(Lt,"width","8.3345375"),h(Lt,"height","4.1914907"),h(Lt,"x","8.7252398"),h(Lt,"y","35.221924"),h(Lt,"rx","0.98275834"),a(jt,"fill","#e75316"),a(jt,"fill-opacity","1"),a(jt,"stroke","#cccccc"),a(jt,"stroke-width","0.8"),a(jt,"stroke-linecap","round"),a(jt,"stroke-linejoin","round"),a(jt,"stroke-miterlimit","100"),a(jt,"stroke-dasharray","none"),a(jt,"stroke-opacity","1"),h(jt,"id","rect3393"),h(jt,"width","8.3345375"),h(jt,"height","4.1914907"),h(jt,"x","0.39070213"),h(jt,"y","25.340094"),h(jt,"rx","0.98275834"),a(yt,"fill","#e75316"),a(yt,"fill-opacity","1"),a(yt,"stroke","#cccccc"),a(yt,"stroke-width","0.8"),a(yt,"stroke-linecap","round"),a(yt,"stroke-linejoin","round"),a(yt,"stroke-miterlimit","100"),a(yt,"stroke-dasharray","none"),a(yt,"stroke-opacity","1"),h(yt,"id","rect3395"),h(yt,"width","8.3345375"),h(yt,"height","4.1914907"),h(yt,"x","8.7252398"),h(yt,"y","25.340094"),h(yt,"rx","0.98275834"),a(Mt,"fill","#e75316"),a(Mt,"fill-opacity","1"),a(Mt,"stroke","#cccccc"),a(Mt,"stroke-width","0.8"),a(Mt,"stroke-linecap","round"),a(Mt,"stroke-linejoin","round"),a(Mt,"stroke-miterlimit","100"),a(Mt,"stroke-dasharray","none"),a(Mt,"stroke-opacity","1"),h(Mt,"id","rect3397"),h(Mt,"width","8.3345375"),h(Mt,"height","4.1914907"),h(Mt,"x","17.059776"),h(Mt,"y","25.340094"),h(Mt,"rx","0.98275834"),a(Tt,"fill","#e75316"),a(Tt,"fill-opacity","1"),a(Tt,"stroke","#cccccc"),a(Tt,"stroke-width","0.8"),a(Tt,"stroke-linecap","round"),a(Tt,"stroke-linejoin","round"),a(Tt,"stroke-miterlimit","100"),a(Tt,"stroke-dasharray","none"),a(Tt,"stroke-opacity","1"),h(Tt,"id","rect3399"),h(Tt,"width","8.3345375"),h(Tt,"height","4.1914907"),h(Tt,"x","25.394314"),h(Tt,"y","25.340094"),h(Tt,"rx","0.98275834"),a(tt,"fill","#e75316"),a(tt,"fill-opacity","1"),a(tt,"stroke","#cccccc"),a(tt,"stroke-width","0.8"),a(tt,"stroke-linecap","round"),a(tt,"stroke-linejoin","round"),a(tt,"stroke-miterlimit","100"),a(tt,"stroke-dasharray","none"),a(tt,"stroke-opacity","1"),h(tt,"id","rect3401"),h(tt,"width","8.3345375"),h(tt,"height","4.1914907"),h(tt,"x","33.728851"),h(tt,"y","25.340094"),h(tt,"rx","0.98275834"),a(xt,"fill","#e75316"),a(xt,"fill-opacity","1"),a(xt,"stroke","#cccccc"),a(xt,"stroke-width","0.8"),a(xt,"stroke-linecap","round"),a(xt,"stroke-linejoin","round"),a(xt,"stroke-miterlimit","100"),a(xt,"stroke-dasharray","none"),a(xt,"stroke-opacity","1"),h(xt,"id","rect3403"),h(xt,"width","8.3345375"),h(xt,"height","4.1914907"),h(xt,"x","-3.7394707"),h(xt,"y","30.266273"),h(xt,"rx","0.98275834"),a(kt,"fill","#e75316"),a(kt,"fill-opacity","1"),a(kt,"stroke","#cccccc"),a(kt,"stroke-width","0.8"),a(kt,"stroke-linecap","round"),a(kt,"stroke-linejoin","round"),a(kt,"stroke-miterlimit","100"),a(kt,"stroke-dasharray","none"),a(kt,"stroke-opacity","1"),h(kt,"id","rect3405"),h(kt,"width","8.3345375"),h(kt,"height","4.1914907"),h(kt,"x","4.5950665"),h(kt,"y","30.266273"),h(kt,"rx","0.98275834"),a(lt,"fill","#e75316"),a(lt,"fill-opacity","1"),a(lt,"stroke","#cccccc"),a(lt,"stroke-width","0.8"),a(lt,"stroke-linecap","round"),a(lt,"stroke-linejoin","round"),a(lt,"stroke-miterlimit","100"),a(lt,"stroke-dasharray","none"),a(lt,"stroke-opacity","1"),h(lt,"id","rect3407"),h(lt,"width","8.3345375"),h(lt,"height","4.1914907"),h(lt,"x","12.929604"),h(lt,"y","30.266273"),h(lt,"rx","0.98275834"),a(ut,"fill","#e75316"),a(ut,"fill-opacity","1"),a(ut,"stroke","#cccccc"),a(ut,"stroke-width","0.8"),a(ut,"stroke-linecap","round"),a(ut,"stroke-linejoin","round"),a(ut,"stroke-miterlimit","100"),a(ut,"stroke-dasharray","none"),a(ut,"stroke-opacity","1"),h(ut,"id","rect3409"),h(ut,"width","8.3345375"),h(ut,"height","4.1914907"),h(ut,"x","21.264141"),h(ut,"y","30.266273"),h(ut,"rx","0.98275834"),a(Wt,"fill","#e75316"),a(Wt,"fill-opacity","1"),a(Wt,"stroke","#cccccc"),a(Wt,"stroke-width","0.8"),a(Wt,"stroke-linecap","round"),a(Wt,"stroke-linejoin","round"),a(Wt,"stroke-miterlimit","100"),a(Wt,"stroke-dasharray","none"),a(Wt,"stroke-opacity","1"),h(Wt,"id","rect3411"),h(Wt,"width","8.3345375"),h(Wt,"height","4.1914907"),h(Wt,"x","29.598679"),h(Wt,"y","30.266273"),h(Wt,"rx","0.98275834"),a(At,"fill","#e75316"),a(At,"fill-opacity","1"),a(At,"stroke","#cccccc"),a(At,"stroke-width","0.8"),a(At,"stroke-linecap","round"),a(At,"stroke-linejoin","round"),a(At,"stroke-miterlimit","100"),a(At,"stroke-dasharray","none"),a(At,"stroke-opacity","1"),h(At,"id","rect3413"),h(At,"width","8.3345375"),h(At,"height","4.1914907"),h(At,"x","37.933216"),h(At,"y","30.266273"),h(At,"rx","0.98275834"),a(Jt,"fill","#e75316"),a(Jt,"fill-opacity","1"),a(Jt,"stroke","#cccccc"),a(Jt,"stroke-width","0.8"),a(Jt,"stroke-linecap","round"),a(Jt,"stroke-linejoin","round"),a(Jt,"stroke-miterlimit","100"),a(Jt,"stroke-dasharray","none"),a(Jt,"stroke-opacity","1"),h(Jt,"id","rect3415"),h(Jt,"width","8.3345375"),h(Jt,"height","4.1914907"),h(Jt,"x","-3.7394707"),h(Jt,"y","0.42482772"),h(Jt,"rx","0.98275834"),a(Vt,"fill","#e75316"),a(Vt,"fill-opacity","1"),a(Vt,"stroke","#cccccc"),a(Vt,"stroke-width","0.8"),a(Vt,"stroke-linecap","round"),a(Vt,"stroke-linejoin","round"),a(Vt,"stroke-miterlimit","100"),a(Vt,"stroke-dasharray","none"),a(Vt,"stroke-opacity","1"),h(Vt,"id","rect3417"),h(Vt,"width","8.3345375"),h(Vt,"height","4.1914907"),h(Vt,"x","4.5950665"),h(Vt,"y","0.42482772"),h(Vt,"rx","0.98275834"),a(qt,"fill","#e75316"),a(qt,"fill-opacity","1"),a(qt,"stroke","#cccccc"),a(qt,"stroke-width","0.8"),a(qt,"stroke-linecap","round"),a(qt,"stroke-linejoin","round"),a(qt,"stroke-miterlimit","100"),a(qt,"stroke-dasharray","none"),a(qt,"stroke-opacity","1"),h(qt,"id","rect3419"),h(qt,"width","8.3345375"),h(qt,"height","4.1914907"),h(qt,"x","12.929604"),h(qt,"y","0.42482772"),h(qt,"rx","0.98275834"),a(Zt,"fill","#e75316"),a(Zt,"fill-opacity","1"),a(Zt,"stroke","#cccccc"),a(Zt,"stroke-width","0.8"),a(Zt,"stroke-linecap","round"),a(Zt,"stroke-linejoin","round"),a(Zt,"stroke-miterlimit","100"),a(Zt,"stroke-dasharray","none"),a(Zt,"stroke-opacity","1"),h(Zt,"id","rect3421"),h(Zt,"width","8.3345375"),h(Zt,"height","4.1914907"),h(Zt,"x","21.264141"),h(Zt,"y","0.42482772"),h(Zt,"rx","0.98275834"),a(Gt,"fill","#e75316"),a(Gt,"fill-opacity","1"),a(Gt,"stroke","#cccccc"),a(Gt,"stroke-width","0.8"),a(Gt,"stroke-linecap","round"),a(Gt,"stroke-linejoin","round"),a(Gt,"stroke-miterlimit","100"),a(Gt,"stroke-dasharray","none"),a(Gt,"stroke-opacity","1"),h(Gt,"id","rect3423"),h(Gt,"width","8.3345375"),h(Gt,"height","4.1914907"),h(Gt,"x","29.598679"),h(Gt,"y","0.42482772"),h(Gt,"rx","0.98275834"),a(St,"fill","#e75316"),a(St,"fill-opacity","1"),a(St,"stroke","#cccccc"),a(St,"stroke-width","0.8"),a(St,"stroke-linecap","round"),a(St,"stroke-linejoin","round"),a(St,"stroke-miterlimit","100"),a(St,"stroke-dasharray","none"),a(St,"stroke-opacity","1"),h(St,"id","rect3425"),h(St,"width","8.3345375"),h(St,"height","4.1914907"),h(St,"x","37.933216"),h(St,"y","0.42482772"),h(St,"rx","0.98275834"),a(Ut,"fill","#e75316"),a(Ut,"fill-opacity","1"),a(Ut,"stroke","#cccccc"),a(Ut,"stroke-width","0.8"),a(Ut,"stroke-linecap","round"),a(Ut,"stroke-linejoin","round"),a(Ut,"stroke-miterlimit","100"),a(Ut,"stroke-dasharray","none"),a(Ut,"stroke-opacity","1"),h(Ut,"id","rect3427"),h(Ut,"width","8.3345375"),h(Ut,"height","4.1914907"),h(Ut,"x","-3.7394707"),h(Ut,"y","0.42482772"),h(Ut,"rx","0.98275834"),a(fe,"fill","#e75316"),a(fe,"fill-opacity","1"),a(fe,"stroke","#cccccc"),a(fe,"stroke-width","0.8"),a(fe,"stroke-linecap","round"),a(fe,"stroke-linejoin","round"),a(fe,"stroke-miterlimit","100"),a(fe,"stroke-dasharray","none"),a(fe,"stroke-opacity","1"),h(fe,"id","rect3429"),h(fe,"width","8.3345375"),h(fe,"height","4.1914907"),h(fe,"x","4.5950665"),h(fe,"y","0.42482772"),h(fe,"rx","0.98275834"),a(ht,"fill","#e75316"),a(ht,"fill-opacity","1"),a(ht,"stroke","#cccccc"),a(ht,"stroke-width","0.8"),a(ht,"stroke-linecap","round"),a(ht,"stroke-linejoin","round"),a(ht,"stroke-miterlimit","100"),a(ht,"stroke-dasharray","none"),a(ht,"stroke-opacity","1"),h(ht,"id","rect3431"),h(ht,"width","8.3345375"),h(ht,"height","4.1914907"),h(ht,"x","12.929604"),h(ht,"y","0.42482772"),h(ht,"rx","0.98275834"),a(on,"fill","#e75316"),a(on,"fill-opacity","1"),a(on,"stroke","#cccccc"),a(on,"stroke-width","0.8"),a(on,"stroke-linecap","round"),a(on,"stroke-linejoin","round"),a(on,"stroke-miterlimit","100"),a(on,"stroke-dasharray","none"),a(on,"stroke-opacity","1"),h(on,"id","rect3433"),h(on,"width","8.3345375"),h(on,"height","4.1914907"),h(on,"x","21.264141"),h(on,"y","0.42482772"),h(on,"rx","0.98275834"),a(an,"fill","#e75316"),a(an,"fill-opacity","1"),a(an,"stroke","#cccccc"),a(an,"stroke-width","0.8"),a(an,"stroke-linecap","round"),a(an,"stroke-linejoin","round"),a(an,"stroke-miterlimit","100"),a(an,"stroke-dasharray","none"),a(an,"stroke-opacity","1"),h(an,"id","rect3435"),h(an,"width","8.3345375"),h(an,"height","4.1914907"),h(an,"x","29.598679"),h(an,"y","0.42482772"),h(an,"rx","0.98275834"),a(ln,"fill","#e75316"),a(ln,"fill-opacity","1"),a(ln,"stroke","#cccccc"),a(ln,"stroke-width","0.8"),a(ln,"stroke-linecap","round"),a(ln,"stroke-linejoin","round"),a(ln,"stroke-miterlimit","100"),a(ln,"stroke-dasharray","none"),a(ln,"stroke-opacity","1"),h(ln,"id","rect3437"),h(ln,"width","8.3345375"),h(ln,"height","4.1914907"),h(ln,"x","37.933216"),h(ln,"y","0.42482772"),h(ln,"rx","0.98275834"),a(un,"fill","#e75316"),a(un,"fill-opacity","1"),a(un,"stroke","#cccccc"),a(un,"stroke-width","0.8"),a(un,"stroke-linecap","round"),a(un,"stroke-linejoin","round"),a(un,"stroke-miterlimit","100"),a(un,"stroke-dasharray","none"),a(un,"stroke-opacity","1"),h(un,"id","rect3439"),h(un,"width","8.3345375"),h(un,"height","4.1914907"),h(un,"x","-3.7394707"),h(un,"y","0.42482772"),h(un,"rx","0.98275834"),a(hn,"fill","#e75316"),a(hn,"fill-opacity","1"),a(hn,"stroke","#cccccc"),a(hn,"stroke-width","0.8"),a(hn,"stroke-linecap","round"),a(hn,"stroke-linejoin","round"),a(hn,"stroke-miterlimit","100"),a(hn,"stroke-dasharray","none"),a(hn,"stroke-opacity","1"),h(hn,"id","rect3441"),h(hn,"width","8.3345375"),h(hn,"height","4.1914907"),h(hn,"x","4.5950665"),h(hn,"y","0.42482772"),h(hn,"rx","0.98275834"),a(Et,"fill","#e75316"),a(Et,"fill-opacity","1"),a(Et,"stroke","#cccccc"),a(Et,"stroke-width","0.8"),a(Et,"stroke-linecap","round"),a(Et,"stroke-linejoin","round"),a(Et,"stroke-miterlimit","100"),a(Et,"stroke-dasharray","none"),a(Et,"stroke-opacity","1"),h(Et,"id","rect3443"),h(Et,"width","8.3345375"),h(Et,"height","4.1914907"),h(Et,"x","12.929604"),h(Et,"y","0.42482772"),h(Et,"rx","0.98275834"),a(cn,"fill","#e75316"),a(cn,"fill-opacity","1"),a(cn,"stroke","#cccccc"),a(cn,"stroke-width","0.8"),a(cn,"stroke-linecap","round"),a(cn,"stroke-linejoin","round"),a(cn,"stroke-miterlimit","100"),a(cn,"stroke-dasharray","none"),a(cn,"stroke-opacity","1"),h(cn,"id","rect3445"),h(cn,"width","8.3345375"),h(cn,"height","4.1914907"),h(cn,"x","21.264141"),h(cn,"y","0.42482772"),h(cn,"rx","0.98275834"),a(dn,"fill","#e75316"),a(dn,"fill-opacity","1"),a(dn,"stroke","#cccccc"),a(dn,"stroke-width","0.8"),a(dn,"stroke-linecap","round"),a(dn,"stroke-linejoin","round"),a(dn,"stroke-miterlimit","100"),a(dn,"stroke-dasharray","none"),a(dn,"stroke-opacity","1"),h(dn,"id","rect3447"),h(dn,"width","8.3345375"),h(dn,"height","4.1914907"),h(dn,"x","29.598679"),h(dn,"y","0.42482772"),h(dn,"rx","0.98275834"),a(pn,"fill","#e75316"),a(pn,"fill-opacity","1"),a(pn,"stroke","#cccccc"),a(pn,"stroke-width","0.8"),a(pn,"stroke-linecap","round"),a(pn,"stroke-linejoin","round"),a(pn,"stroke-miterlimit","100"),a(pn,"stroke-dasharray","none"),a(pn,"stroke-opacity","1"),h(pn,"id","rect3449"),h(pn,"width","8.3345375"),h(pn,"height","4.1914907"),h(pn,"x","37.933216"),h(pn,"y","0.42482772"),h(pn,"rx","0.98275834"),h(C,"id","g4136"),h(C,"mask","url(#mask1309)"),h(A,"inkscape:label","Layer 1"),h(A,"inkscape:groupmode","layer"),h(A,"id","layer1"),a(A,"display","inline"),de(e,ls)},m(ti,eo){st(ti,e,eo),T(e,t),T(t,n),T(t,r),T(t,s),T(t,o),T(t,l),T(t,u),T(t,c),T(t,p),T(e,d),T(d,f),T(f,g),T(e,v),T(v,w),T(e,A),T(A,C),T(C,m),T(C,y),T(C,x),T(C,k),T(C,q),T(C,I),T(C,S),T(C,$),T(C,B),T(C,D),T(C,N),T(C,O),T(C,L),T(C,V),T(C,X),T(C,K),T(C,ee),T(C,z),T(C,J),T(C,H),T(C,Y),T(C,se),T(C,Q),T(C,ie),T(C,te),T(C,oe),T(C,ve),T(C,be),T(C,ye),T(C,re),T(C,he),T(C,Se),T(C,Re),T(C,we),T(C,Ee),T(C,qe),T(C,Be),T(C,Je),T(C,_e),T(C,Fe),T(C,Ge),T(C,Te),T(C,je),T(C,Ne),T(C,Oe),T(C,Le),T(C,Ye),T(C,Xe),T(C,at),T(C,it),T(C,Ze),T(C,ze),T(C,Ke),T(C,Qe),T(C,rt),T(C,bt),T(C,vt),T(C,ct),T(C,wt),T(C,dt),T(C,pt),T(C,Pe),T(C,_t),T(C,et),T(C,Ft),T(C,ft),T(C,$t),T(C,gt),T(C,mt),T(C,Bt),T(C,Nt),T(C,Ct),T(C,Lt),T(C,jt),T(C,yt),T(C,Mt),T(C,Tt),T(C,tt),T(C,xt),T(C,kt),T(C,lt),T(C,ut),T(C,Wt),T(C,At),T(C,Jt),T(C,Vt),T(C,qt),T(C,Zt),T(C,Gt),T(C,St),T(C,Ut),T(C,fe),T(C,ht),T(C,on),T(C,an),T(C,ln),T(C,un),T(C,hn),T(C,Et),T(C,cn),T(C,dn),T(C,pn),Qs||(la=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],Qs=!0)},p(ti,[eo]){de(e,ls=Ht(Di,[eo&1&&ti[0],{width:"40mm"},{height:"40mm"},{viewBox:"0 0 40 40"},{version:"1.1"},{id:"svg5"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"sodipodi:docname":"bick_wal_square.svg"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(ti){ti&&ot(e),Qs=!1,Yt(la)}}}function c9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class d9 extends It{constructor(e){super(),Dt(this,e,c9,h9,Rt,{color:1})}}function p9(i){let e,t,n,r,s,o,l,u,c,p,d,f,g,v,w,A,C,m,y,x,k,q,I,S,$,B,D,N,O,L,V,X,K,ee,z,J,H,Y,se,Q,ie,te,oe,ve,be,ye,re,he,Se,Re,we,Ee,qe,Be,Je,_e,Fe,Ge,Te,je,Ne,Oe,Le,Ye,Xe,at,it,Ze,ze,Ke,Qe,rt,bt,vt,ct,wt,dt,pt,Pe,_t,et,Ft,ft,$t,gt,mt,Bt,Nt,Ct,Lt,jt,yt,Mt,Tt,tt,xt,kt,lt,ut,Wt,At,Jt,Vt,qt,Zt,Gt,St,Ut,fe,ht,on,an,ln,un,hn,Et,cn,dn,pn,Qs,la,Di=[i[0],{width:"40mm"},{height:"40mm"},{viewBox:"0 0 40 40"},{version:"1.1"},{id:"svg5"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"sodipodi:docname":"bick_wal_round.svg"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],ls={};for(let ti=0;ti<Di.length;ti+=1)ls=Z(ls,Di[ti]);return{c(){e=_("svg"),t=_("sodipodi:namedview"),n=_("sodipodi:guide"),r=_("sodipodi:guide"),s=_("sodipodi:guide"),o=_("sodipodi:guide"),l=_("sodipodi:guide"),u=_("sodipodi:guide"),c=_("sodipodi:guide"),p=_("sodipodi:guide"),d=_("defs"),f=_("mask"),g=_("circle"),v=_("g"),w=_("circle"),A=_("g"),C=_("g"),m=_("rect"),y=_("rect"),x=_("rect"),k=_("rect"),q=_("rect"),I=_("rect"),S=_("rect"),$=_("rect"),B=_("rect"),D=_("rect"),N=_("rect"),O=_("rect"),L=_("rect"),V=_("rect"),X=_("rect"),K=_("rect"),ee=_("rect"),z=_("rect"),J=_("rect"),H=_("rect"),Y=_("rect"),se=_("rect"),Q=_("rect"),ie=_("rect"),te=_("rect"),oe=_("rect"),ve=_("rect"),be=_("rect"),ye=_("rect"),re=_("rect"),he=_("rect"),Se=_("rect"),Re=_("rect"),we=_("rect"),Ee=_("rect"),qe=_("rect"),Be=_("rect"),Je=_("rect"),_e=_("rect"),Fe=_("rect"),Ge=_("rect"),Te=_("rect"),je=_("rect"),Ne=_("rect"),Oe=_("rect"),Le=_("rect"),Ye=_("rect"),Xe=_("rect"),at=_("rect"),it=_("rect"),Ze=_("rect"),ze=_("rect"),Ke=_("rect"),Qe=_("rect"),rt=_("rect"),bt=_("rect"),vt=_("rect"),ct=_("rect"),wt=_("rect"),dt=_("rect"),pt=_("rect"),Pe=_("rect"),_t=_("rect"),et=_("rect"),Ft=_("rect"),ft=_("rect"),$t=_("rect"),gt=_("rect"),mt=_("rect"),Bt=_("rect"),Nt=_("rect"),Ct=_("rect"),Lt=_("rect"),jt=_("rect"),yt=_("rect"),Mt=_("rect"),Tt=_("rect"),tt=_("rect"),xt=_("rect"),kt=_("rect"),lt=_("rect"),ut=_("rect"),Wt=_("rect"),At=_("rect"),Jt=_("rect"),Vt=_("rect"),qt=_("rect"),Zt=_("rect"),Gt=_("rect"),St=_("rect"),Ut=_("rect"),fe=_("rect"),ht=_("rect"),on=_("rect"),an=_("rect"),ln=_("rect"),un=_("rect"),hn=_("rect"),Et=_("rect"),cn=_("rect"),dn=_("rect"),pn=_("rect"),h(n,"position","-1.158135,35.017833"),h(n,"orientation","0,-1"),h(n,"id","guide1027"),h(r,"position","-0.65554813,30.013816"),h(r,"orientation","0,-1"),h(r,"id","guide1029"),h(s,"position","-0.5462901,25.009798"),h(s,"orientation","0,-1"),h(s,"id","guide1031"),h(o,"position","-0.5025869,20.005781"),h(o,"orientation","0,-1"),h(o,"id","guide1033"),h(l,"position","-0.30592246,15.001764"),h(l,"orientation","0,-1"),h(l,"id","guide1035"),h(u,"position","-0.10925802,9.9977463"),h(u,"orientation","0,-1"),h(u,"id","guide1037"),h(c,"position","-0.021851604,4.993729"),h(c,"orientation","0,-1"),h(c,"id","guide1039"),h(p,"position","-0.15296123,0.033414841"),h(p,"orientation","0,-1"),h(p,"id","guide1041"),h(t,"id","namedview7"),h(t,"pagecolor","#ddda7c"),h(t,"bordercolor","#eeeeee"),h(t,"borderopacity","1"),h(t,"inkscape:pageshadow","0"),h(t,"inkscape:pageopacity","0.78431373"),h(t,"inkscape:pagecheckerboard","true"),h(t,"inkscape:document-units","mm"),h(t,"showgrid","false"),h(t,"showguides","true"),h(t,"inkscape:guide-bbox","true"),h(t,"inkscape:snap-global","true"),h(t,"inkscape:snap-others","false"),h(t,"inkscape:snap-to-guides","false"),h(t,"inkscape:zoom","3.6606033"),h(t,"inkscape:cx","81.407347"),h(t,"inkscape:cy","76.080356"),h(t,"inkscape:window-width","1920"),h(t,"inkscape:window-height","995"),h(t,"inkscape:window-x","0"),h(t,"inkscape:window-y","0"),h(t,"inkscape:window-maximized","1"),h(t,"inkscape:current-layer","layer1"),a(g,"fill","#ffffff"),a(g,"fill-opacity","1"),a(g,"stroke","none"),a(g,"stroke-width","0.787358"),a(g,"stroke-linecap","round"),a(g,"stroke-linejoin","round"),a(g,"stroke-miterlimit","100"),a(g,"stroke-dasharray","none"),a(g,"stroke-opacity","1"),h(g,"id","circle5187"),h(g,"cx","20"),h(g,"cy","20"),h(g,"r","20"),h(f,"maskUnits","userSpaceOnUse"),h(f,"id","mask5185"),h(d,"id","defs2"),a(w,"fill","#cccccc"),a(w,"fill-opacity","1"),a(w,"stroke","none"),a(w,"stroke-width","0.804731"),a(w,"stroke-linecap","round"),a(w,"stroke-linejoin","round"),a(w,"stroke-miterlimit","100"),a(w,"stroke-dasharray","none"),a(w,"stroke-opacity","1"),h(w,"id","path5371"),h(w,"cx","20"),h(w,"cy","20"),h(w,"r","20"),h(v,"inkscape:groupmode","layer"),h(v,"id","layer2"),h(v,"inkscape:label","bg"),a(v,"display","inline"),h(v,"sodipodi:insensitive","true"),a(m,"fill","#e75316"),a(m,"fill-opacity","1"),a(m,"stroke","#cccccc"),a(m,"stroke-width","0.8"),a(m,"stroke-linecap","round"),a(m,"stroke-linejoin","round"),a(m,"stroke-miterlimit","100"),a(m,"stroke-dasharray","none"),a(m,"stroke-opacity","1"),h(m,"id","rect1329"),h(m,"width","8.3345375"),h(m,"height","4.1914907"),h(m,"x","0.39070213"),h(m,"y","15.480371"),h(m,"rx","0.98275834"),a(y,"fill","#e75316"),a(y,"fill-opacity","1"),a(y,"stroke","#cccccc"),a(y,"stroke-width","0.8"),a(y,"stroke-linecap","round"),a(y,"stroke-linejoin","round"),a(y,"stroke-miterlimit","100"),a(y,"stroke-dasharray","none"),a(y,"stroke-opacity","1"),h(y,"id","rect3237"),h(y,"width","8.3345375"),h(y,"height","4.1914907"),h(y,"x","8.7252398"),h(y,"y","15.480371"),h(y,"rx","0.98275834"),a(x,"fill","#e75316"),a(x,"fill-opacity","1"),a(x,"stroke","#cccccc"),a(x,"stroke-width","0.8"),a(x,"stroke-linecap","round"),a(x,"stroke-linejoin","round"),a(x,"stroke-miterlimit","100"),a(x,"stroke-dasharray","none"),a(x,"stroke-opacity","1"),h(x,"id","rect3239"),h(x,"width","8.3345375"),h(x,"height","4.1914907"),h(x,"x","17.059776"),h(x,"y","15.480371"),h(x,"rx","0.98275834"),a(k,"fill","#e75316"),a(k,"fill-opacity","1"),a(k,"stroke","#cccccc"),a(k,"stroke-width","0.8"),a(k,"stroke-linecap","round"),a(k,"stroke-linejoin","round"),a(k,"stroke-miterlimit","100"),a(k,"stroke-dasharray","none"),a(k,"stroke-opacity","1"),h(k,"id","rect3241"),h(k,"width","8.3345375"),h(k,"height","4.1914907"),h(k,"x","25.394314"),h(k,"y","15.480371"),h(k,"rx","0.98275834"),a(q,"fill","#e75316"),a(q,"fill-opacity","1"),a(q,"stroke","#cccccc"),a(q,"stroke-width","0.8"),a(q,"stroke-linecap","round"),a(q,"stroke-linejoin","round"),a(q,"stroke-miterlimit","100"),a(q,"stroke-dasharray","none"),a(q,"stroke-opacity","1"),h(q,"id","rect3243"),h(q,"width","8.3345375"),h(q,"height","4.1914907"),h(q,"x","33.728851"),h(q,"y","15.480371"),h(q,"rx","0.98275834"),a(I,"fill","#e75316"),a(I,"fill-opacity","1"),a(I,"stroke","#cccccc"),a(I,"stroke-width","0.8"),a(I,"stroke-linecap","round"),a(I,"stroke-linejoin","round"),a(I,"stroke-miterlimit","100"),a(I,"stroke-dasharray","none"),a(I,"stroke-opacity","1"),h(I,"id","rect3245"),h(I,"width","8.3345375"),h(I,"height","4.1914907"),h(I,"x","-3.7394707"),h(I,"y","20.406551"),h(I,"rx","0.98275834"),a(S,"fill","#e75316"),a(S,"fill-opacity","1"),a(S,"stroke","#cccccc"),a(S,"stroke-width","0.8"),a(S,"stroke-linecap","round"),a(S,"stroke-linejoin","round"),a(S,"stroke-miterlimit","100"),a(S,"stroke-dasharray","none"),a(S,"stroke-opacity","1"),h(S,"id","rect3247"),h(S,"width","8.3345375"),h(S,"height","4.1914907"),h(S,"x","4.5950665"),h(S,"y","20.406551"),h(S,"rx","0.98275834"),a($,"fill","#e75316"),a($,"fill-opacity","1"),a($,"stroke","#cccccc"),a($,"stroke-width","0.8"),a($,"stroke-linecap","round"),a($,"stroke-linejoin","round"),a($,"stroke-miterlimit","100"),a($,"stroke-dasharray","none"),a($,"stroke-opacity","1"),h($,"id","rect3249"),h($,"width","8.3345375"),h($,"height","4.1914907"),h($,"x","12.929604"),h($,"y","20.406551"),h($,"rx","0.98275834"),a(B,"fill","#e75316"),a(B,"fill-opacity","1"),a(B,"stroke","#cccccc"),a(B,"stroke-width","0.8"),a(B,"stroke-linecap","round"),a(B,"stroke-linejoin","round"),a(B,"stroke-miterlimit","100"),a(B,"stroke-dasharray","none"),a(B,"stroke-opacity","1"),h(B,"id","rect3251"),h(B,"width","8.3345375"),h(B,"height","4.1914907"),h(B,"x","21.264141"),h(B,"y","20.406551"),h(B,"rx","0.98275834"),a(D,"fill","#e75316"),a(D,"fill-opacity","1"),a(D,"stroke","#cccccc"),a(D,"stroke-width","0.8"),a(D,"stroke-linecap","round"),a(D,"stroke-linejoin","round"),a(D,"stroke-miterlimit","100"),a(D,"stroke-dasharray","none"),a(D,"stroke-opacity","1"),h(D,"id","rect3253"),h(D,"width","8.3345375"),h(D,"height","4.1914907"),h(D,"x","29.598679"),h(D,"y","20.406551"),h(D,"rx","0.98275834"),a(N,"fill","#e75316"),a(N,"fill-opacity","1"),a(N,"stroke","#cccccc"),a(N,"stroke-width","0.8"),a(N,"stroke-linecap","round"),a(N,"stroke-linejoin","round"),a(N,"stroke-miterlimit","100"),a(N,"stroke-dasharray","none"),a(N,"stroke-opacity","1"),h(N,"id","rect3255"),h(N,"width","8.3345375"),h(N,"height","4.1914907"),h(N,"x","37.933216"),h(N,"y","20.406551"),h(N,"rx","0.98275834"),a(O,"fill","#e75316"),a(O,"fill-opacity","1"),a(O,"stroke","#cccccc"),a(O,"stroke-width","0.8"),a(O,"stroke-linecap","round"),a(O,"stroke-linejoin","round"),a(O,"stroke-miterlimit","100"),a(O,"stroke-dasharray","none"),a(O,"stroke-opacity","1"),h(O,"id","rect3257"),h(O,"width","8.3345375"),h(O,"height","4.1914907"),h(O,"x","0.39070213"),h(O,"y","5.4531813"),h(O,"rx","0.98275834"),a(L,"fill","#e75316"),a(L,"fill-opacity","1"),a(L,"stroke","#cccccc"),a(L,"stroke-width","0.8"),a(L,"stroke-linecap","round"),a(L,"stroke-linejoin","round"),a(L,"stroke-miterlimit","100"),a(L,"stroke-dasharray","none"),a(L,"stroke-opacity","1"),h(L,"id","rect3259"),h(L,"width","8.3345375"),h(L,"height","4.1914907"),h(L,"x","8.7252398"),h(L,"y","5.4531813"),h(L,"rx","0.98275834"),a(V,"fill","#e75316"),a(V,"fill-opacity","1"),a(V,"stroke","#cccccc"),a(V,"stroke-width","0.8"),a(V,"stroke-linecap","round"),a(V,"stroke-linejoin","round"),a(V,"stroke-miterlimit","100"),a(V,"stroke-dasharray","none"),a(V,"stroke-opacity","1"),h(V,"id","rect3261"),h(V,"width","8.3345375"),h(V,"height","4.1914907"),h(V,"x","17.059776"),h(V,"y","5.4531813"),h(V,"rx","0.98275834"),a(X,"fill","#e75316"),a(X,"fill-opacity","1"),a(X,"stroke","#cccccc"),a(X,"stroke-width","0.8"),a(X,"stroke-linecap","round"),a(X,"stroke-linejoin","round"),a(X,"stroke-miterlimit","100"),a(X,"stroke-dasharray","none"),a(X,"stroke-opacity","1"),h(X,"id","rect3263"),h(X,"width","8.3345375"),h(X,"height","4.1914907"),h(X,"x","25.394314"),h(X,"y","5.4531813"),h(X,"rx","0.98275834"),a(K,"fill","#e75316"),a(K,"fill-opacity","1"),a(K,"stroke","#cccccc"),a(K,"stroke-width","0.8"),a(K,"stroke-linecap","round"),a(K,"stroke-linejoin","round"),a(K,"stroke-miterlimit","100"),a(K,"stroke-dasharray","none"),a(K,"stroke-opacity","1"),h(K,"id","rect3265"),h(K,"width","8.3345375"),h(K,"height","4.1914907"),h(K,"x","33.728851"),h(K,"y","5.4531813"),h(K,"rx","0.98275834"),a(ee,"fill","#e75316"),a(ee,"fill-opacity","1"),a(ee,"stroke","#cccccc"),a(ee,"stroke-width","0.8"),a(ee,"stroke-linecap","round"),a(ee,"stroke-linejoin","round"),a(ee,"stroke-miterlimit","100"),a(ee,"stroke-dasharray","none"),a(ee,"stroke-opacity","1"),h(ee,"id","rect3267"),h(ee,"width","8.3345375"),h(ee,"height","4.1914907"),h(ee,"x","-3.7394707"),h(ee,"y","10.423086"),h(ee,"rx","0.98275834"),a(z,"fill","#e75316"),a(z,"fill-opacity","1"),a(z,"stroke","#cccccc"),a(z,"stroke-width","0.8"),a(z,"stroke-linecap","round"),a(z,"stroke-linejoin","round"),a(z,"stroke-miterlimit","100"),a(z,"stroke-dasharray","none"),a(z,"stroke-opacity","1"),h(z,"id","rect3269"),h(z,"width","8.3345375"),h(z,"height","4.1914907"),h(z,"x","4.5950665"),h(z,"y","10.423086"),h(z,"rx","0.98275834"),a(J,"fill","#e75316"),a(J,"fill-opacity","1"),a(J,"stroke","#cccccc"),a(J,"stroke-width","0.8"),a(J,"stroke-linecap","round"),a(J,"stroke-linejoin","round"),a(J,"stroke-miterlimit","100"),a(J,"stroke-dasharray","none"),a(J,"stroke-opacity","1"),h(J,"id","rect3271"),h(J,"width","8.3345375"),h(J,"height","4.1914907"),h(J,"x","12.929604"),h(J,"y","10.423086"),h(J,"rx","0.98275834"),a(H,"fill","#e75316"),a(H,"fill-opacity","1"),a(H,"stroke","#cccccc"),a(H,"stroke-width","0.8"),a(H,"stroke-linecap","round"),a(H,"stroke-linejoin","round"),a(H,"stroke-miterlimit","100"),a(H,"stroke-dasharray","none"),a(H,"stroke-opacity","1"),h(H,"id","rect3273"),h(H,"width","8.3345375"),h(H,"height","4.1914907"),h(H,"x","21.264141"),h(H,"y","10.423086"),h(H,"rx","0.98275834"),a(Y,"fill","#e75316"),a(Y,"fill-opacity","1"),a(Y,"stroke","#cccccc"),a(Y,"stroke-width","0.8"),a(Y,"stroke-linecap","round"),a(Y,"stroke-linejoin","round"),a(Y,"stroke-miterlimit","100"),a(Y,"stroke-dasharray","none"),a(Y,"stroke-opacity","1"),h(Y,"id","rect3275"),h(Y,"width","8.3345375"),h(Y,"height","4.1914907"),h(Y,"x","29.598679"),h(Y,"y","10.423086"),h(Y,"rx","0.98275834"),a(se,"fill","#e75316"),a(se,"fill-opacity","1"),a(se,"stroke","#cccccc"),a(se,"stroke-width","0.8"),a(se,"stroke-linecap","round"),a(se,"stroke-linejoin","round"),a(se,"stroke-miterlimit","100"),a(se,"stroke-dasharray","none"),a(se,"stroke-opacity","1"),h(se,"id","rect3277"),h(se,"width","8.3345375"),h(se,"height","4.1914907"),h(se,"x","37.933216"),h(se,"y","10.423086"),h(se,"rx","0.98275834"),a(Q,"fill","#e75316"),a(Q,"fill-opacity","1"),a(Q,"stroke","#cccccc"),a(Q,"stroke-width","0.8"),a(Q,"stroke-linecap","round"),a(Q,"stroke-linejoin","round"),a(Q,"stroke-miterlimit","100"),a(Q,"stroke-dasharray","none"),a(Q,"stroke-opacity","1"),h(Q,"id","rect3279"),h(Q,"width","8.3345375"),h(Q,"height","4.1914907"),h(Q,"x","0.39070213"),h(Q,"y","5.4531813"),h(Q,"rx","0.98275834"),a(ie,"fill","#e75316"),a(ie,"fill-opacity","1"),a(ie,"stroke","#cccccc"),a(ie,"stroke-width","0.8"),a(ie,"stroke-linecap","round"),a(ie,"stroke-linejoin","round"),a(ie,"stroke-miterlimit","100"),a(ie,"stroke-dasharray","none"),a(ie,"stroke-opacity","1"),h(ie,"id","rect3281"),h(ie,"width","8.3345375"),h(ie,"height","4.1914907"),h(ie,"x","8.7252398"),h(ie,"y","5.4531813"),h(ie,"rx","0.98275834"),a(te,"fill","#e75316"),a(te,"fill-opacity","1"),a(te,"stroke","#cccccc"),a(te,"stroke-width","0.8"),a(te,"stroke-linecap","round"),a(te,"stroke-linejoin","round"),a(te,"stroke-miterlimit","100"),a(te,"stroke-dasharray","none"),a(te,"stroke-opacity","1"),h(te,"id","rect3283"),h(te,"width","8.3345375"),h(te,"height","4.1914907"),h(te,"x","17.059776"),h(te,"y","5.4531813"),h(te,"rx","0.98275834"),a(oe,"fill","#e75316"),a(oe,"fill-opacity","1"),a(oe,"stroke","#cccccc"),a(oe,"stroke-width","0.8"),a(oe,"stroke-linecap","round"),a(oe,"stroke-linejoin","round"),a(oe,"stroke-miterlimit","100"),a(oe,"stroke-dasharray","none"),a(oe,"stroke-opacity","1"),h(oe,"id","rect3285"),h(oe,"width","8.3345375"),h(oe,"height","4.1914907"),h(oe,"x","25.394314"),h(oe,"y","5.4531813"),h(oe,"rx","0.98275834"),a(ve,"fill","#e75316"),a(ve,"fill-opacity","1"),a(ve,"stroke","#cccccc"),a(ve,"stroke-width","0.8"),a(ve,"stroke-linecap","round"),a(ve,"stroke-linejoin","round"),a(ve,"stroke-miterlimit","100"),a(ve,"stroke-dasharray","none"),a(ve,"stroke-opacity","1"),h(ve,"id","rect3287"),h(ve,"width","8.3345375"),h(ve,"height","4.1914907"),h(ve,"x","33.728851"),h(ve,"y","5.4531813"),h(ve,"rx","0.98275834"),a(be,"fill","#e75316"),a(be,"fill-opacity","1"),a(be,"stroke","#cccccc"),a(be,"stroke-width","0.8"),a(be,"stroke-linecap","round"),a(be,"stroke-linejoin","round"),a(be,"stroke-miterlimit","100"),a(be,"stroke-dasharray","none"),a(be,"stroke-opacity","1"),h(be,"id","rect3289"),h(be,"width","8.3345375"),h(be,"height","4.1914907"),h(be,"x","-3.7394707"),h(be,"y","10.423086"),h(be,"rx","0.98275834"),a(ye,"fill","#e75316"),a(ye,"fill-opacity","1"),a(ye,"stroke","#cccccc"),a(ye,"stroke-width","0.8"),a(ye,"stroke-linecap","round"),a(ye,"stroke-linejoin","round"),a(ye,"stroke-miterlimit","100"),a(ye,"stroke-dasharray","none"),a(ye,"stroke-opacity","1"),h(ye,"id","rect3291"),h(ye,"width","8.3345375"),h(ye,"height","4.1914907"),h(ye,"x","4.5950665"),h(ye,"y","10.423086"),h(ye,"rx","0.98275834"),a(re,"fill","#e75316"),a(re,"fill-opacity","1"),a(re,"stroke","#cccccc"),a(re,"stroke-width","0.8"),a(re,"stroke-linecap","round"),a(re,"stroke-linejoin","round"),a(re,"stroke-miterlimit","100"),a(re,"stroke-dasharray","none"),a(re,"stroke-opacity","1"),h(re,"id","rect3293"),h(re,"width","8.3345375"),h(re,"height","4.1914907"),h(re,"x","12.929604"),h(re,"y","10.423086"),h(re,"rx","0.98275834"),a(he,"fill","#e75316"),a(he,"fill-opacity","1"),a(he,"stroke","#cccccc"),a(he,"stroke-width","0.8"),a(he,"stroke-linecap","round"),a(he,"stroke-linejoin","round"),a(he,"stroke-miterlimit","100"),a(he,"stroke-dasharray","none"),a(he,"stroke-opacity","1"),h(he,"id","rect3295"),h(he,"width","8.3345375"),h(he,"height","4.1914907"),h(he,"x","21.264141"),h(he,"y","10.423086"),h(he,"rx","0.98275834"),a(Se,"fill","#e75316"),a(Se,"fill-opacity","1"),a(Se,"stroke","#cccccc"),a(Se,"stroke-width","0.8"),a(Se,"stroke-linecap","round"),a(Se,"stroke-linejoin","round"),a(Se,"stroke-miterlimit","100"),a(Se,"stroke-dasharray","none"),a(Se,"stroke-opacity","1"),h(Se,"id","rect3297"),h(Se,"width","8.3345375"),h(Se,"height","4.1914907"),h(Se,"x","29.598679"),h(Se,"y","10.423086"),h(Se,"rx","0.98275834"),a(Re,"fill","#e75316"),a(Re,"fill-opacity","1"),a(Re,"stroke","#cccccc"),a(Re,"stroke-width","0.8"),a(Re,"stroke-linecap","round"),a(Re,"stroke-linejoin","round"),a(Re,"stroke-miterlimit","100"),a(Re,"stroke-dasharray","none"),a(Re,"stroke-opacity","1"),h(Re,"id","rect3299"),h(Re,"width","8.3345375"),h(Re,"height","4.1914907"),h(Re,"x","37.933216"),h(Re,"y","10.423086"),h(Re,"rx","0.98275834"),a(we,"fill","#e75316"),a(we,"fill-opacity","1"),a(we,"stroke","#cccccc"),a(we,"stroke-width","0.8"),a(we,"stroke-linecap","round"),a(we,"stroke-linejoin","round"),a(we,"stroke-miterlimit","100"),a(we,"stroke-dasharray","none"),a(we,"stroke-opacity","1"),h(we,"id","rect3301"),h(we,"width","8.3345375"),h(we,"height","4.1914907"),h(we,"x","8.7252398"),h(we,"y","15.480371"),h(we,"rx","0.98275834"),a(Ee,"fill","#e75316"),a(Ee,"fill-opacity","1"),a(Ee,"stroke","#cccccc"),a(Ee,"stroke-width","0.8"),a(Ee,"stroke-linecap","round"),a(Ee,"stroke-linejoin","round"),a(Ee,"stroke-miterlimit","100"),a(Ee,"stroke-dasharray","none"),a(Ee,"stroke-opacity","1"),h(Ee,"id","rect3303"),h(Ee,"width","8.3345375"),h(Ee,"height","4.1914907"),h(Ee,"x","0.39070213"),h(Ee,"y","5.4531813"),h(Ee,"rx","0.98275834"),a(qe,"fill","#e75316"),a(qe,"fill-opacity","1"),a(qe,"stroke","#cccccc"),a(qe,"stroke-width","0.8"),a(qe,"stroke-linecap","round"),a(qe,"stroke-linejoin","round"),a(qe,"stroke-miterlimit","100"),a(qe,"stroke-dasharray","none"),a(qe,"stroke-opacity","1"),h(qe,"id","rect3305"),h(qe,"width","8.3345375"),h(qe,"height","4.1914907"),h(qe,"x","8.7252398"),h(qe,"y","5.4531813"),h(qe,"rx","0.98275834"),a(Be,"fill","#e75316"),a(Be,"fill-opacity","1"),a(Be,"stroke","#cccccc"),a(Be,"stroke-width","0.8"),a(Be,"stroke-linecap","round"),a(Be,"stroke-linejoin","round"),a(Be,"stroke-miterlimit","100"),a(Be,"stroke-dasharray","none"),a(Be,"stroke-opacity","1"),h(Be,"id","rect3307"),h(Be,"width","8.3345375"),h(Be,"height","4.1914907"),h(Be,"x","17.059776"),h(Be,"y","5.4531813"),h(Be,"rx","0.98275834"),a(Je,"fill","#e75316"),a(Je,"fill-opacity","1"),a(Je,"stroke","#cccccc"),a(Je,"stroke-width","0.8"),a(Je,"stroke-linecap","round"),a(Je,"stroke-linejoin","round"),a(Je,"stroke-miterlimit","100"),a(Je,"stroke-dasharray","none"),a(Je,"stroke-opacity","1"),h(Je,"id","rect3309"),h(Je,"width","8.3345375"),h(Je,"height","4.1914907"),h(Je,"x","25.394314"),h(Je,"y","5.4531813"),h(Je,"rx","0.98275834"),a(_e,"fill","#e75316"),a(_e,"fill-opacity","1"),a(_e,"stroke","#cccccc"),a(_e,"stroke-width","0.8"),a(_e,"stroke-linecap","round"),a(_e,"stroke-linejoin","round"),a(_e,"stroke-miterlimit","100"),a(_e,"stroke-dasharray","none"),a(_e,"stroke-opacity","1"),h(_e,"id","rect3311"),h(_e,"width","8.3345375"),h(_e,"height","4.1914907"),h(_e,"x","33.728851"),h(_e,"y","5.4531813"),h(_e,"rx","0.98275834"),a(Fe,"fill","#e75316"),a(Fe,"fill-opacity","1"),a(Fe,"stroke","#cccccc"),a(Fe,"stroke-width","0.8"),a(Fe,"stroke-linecap","round"),a(Fe,"stroke-linejoin","round"),a(Fe,"stroke-miterlimit","100"),a(Fe,"stroke-dasharray","none"),a(Fe,"stroke-opacity","1"),h(Fe,"id","rect3313"),h(Fe,"width","8.3345375"),h(Fe,"height","4.1914907"),h(Fe,"x","-3.7394707"),h(Fe,"y","10.423086"),h(Fe,"rx","0.98275834"),a(Ge,"fill","#e75316"),a(Ge,"fill-opacity","1"),a(Ge,"stroke","#cccccc"),a(Ge,"stroke-width","0.8"),a(Ge,"stroke-linecap","round"),a(Ge,"stroke-linejoin","round"),a(Ge,"stroke-miterlimit","100"),a(Ge,"stroke-dasharray","none"),a(Ge,"stroke-opacity","1"),h(Ge,"id","rect3315"),h(Ge,"width","8.3345375"),h(Ge,"height","4.1914907"),h(Ge,"x","4.5950665"),h(Ge,"y","10.423086"),h(Ge,"rx","0.98275834"),a(Te,"fill","#e75316"),a(Te,"fill-opacity","1"),a(Te,"stroke","#cccccc"),a(Te,"stroke-width","0.8"),a(Te,"stroke-linecap","round"),a(Te,"stroke-linejoin","round"),a(Te,"stroke-miterlimit","100"),a(Te,"stroke-dasharray","none"),a(Te,"stroke-opacity","1"),h(Te,"id","rect3317"),h(Te,"width","8.3345375"),h(Te,"height","4.1914907"),h(Te,"x","12.929604"),h(Te,"y","10.423086"),h(Te,"rx","0.98275834"),a(je,"fill","#e75316"),a(je,"fill-opacity","1"),a(je,"stroke","#cccccc"),a(je,"stroke-width","0.8"),a(je,"stroke-linecap","round"),a(je,"stroke-linejoin","round"),a(je,"stroke-miterlimit","100"),a(je,"stroke-dasharray","none"),a(je,"stroke-opacity","1"),h(je,"id","rect3319"),h(je,"width","8.3345375"),h(je,"height","4.1914907"),h(je,"x","21.264141"),h(je,"y","10.423086"),h(je,"rx","0.98275834"),a(Ne,"fill","#e75316"),a(Ne,"fill-opacity","1"),a(Ne,"stroke","#cccccc"),a(Ne,"stroke-width","0.8"),a(Ne,"stroke-linecap","round"),a(Ne,"stroke-linejoin","round"),a(Ne,"stroke-miterlimit","100"),a(Ne,"stroke-dasharray","none"),a(Ne,"stroke-opacity","1"),h(Ne,"id","rect3321"),h(Ne,"width","8.3345375"),h(Ne,"height","4.1914907"),h(Ne,"x","29.598679"),h(Ne,"y","10.423086"),h(Ne,"rx","0.98275834"),a(Oe,"fill","#e75316"),a(Oe,"fill-opacity","1"),a(Oe,"stroke","#cccccc"),a(Oe,"stroke-width","0.8"),a(Oe,"stroke-linecap","round"),a(Oe,"stroke-linejoin","round"),a(Oe,"stroke-miterlimit","100"),a(Oe,"stroke-dasharray","none"),a(Oe,"stroke-opacity","1"),h(Oe,"id","rect3323"),h(Oe,"width","8.3345375"),h(Oe,"height","4.1914907"),h(Oe,"x","37.933216"),h(Oe,"y","10.423086"),h(Oe,"rx","0.98275834"),a(Le,"fill","#e75316"),a(Le,"fill-opacity","1"),a(Le,"stroke","#cccccc"),a(Le,"stroke-width","0.8"),a(Le,"stroke-linecap","round"),a(Le,"stroke-linejoin","round"),a(Le,"stroke-miterlimit","100"),a(Le,"stroke-dasharray","none"),a(Le,"stroke-opacity","1"),h(Le,"id","rect3325"),h(Le,"width","8.3345375"),h(Le,"height","4.1914907"),h(Le,"x","0.39070213"),h(Le,"y","35.221924"),h(Le,"rx","0.98275834"),a(Ye,"fill","#e75316"),a(Ye,"fill-opacity","1"),a(Ye,"stroke","#cccccc"),a(Ye,"stroke-width","0.8"),a(Ye,"stroke-linecap","round"),a(Ye,"stroke-linejoin","round"),a(Ye,"stroke-miterlimit","100"),a(Ye,"stroke-dasharray","none"),a(Ye,"stroke-opacity","1"),h(Ye,"id","rect3327"),h(Ye,"width","8.3345375"),h(Ye,"height","4.1914907"),h(Ye,"x","8.7252398"),h(Ye,"y","35.221924"),h(Ye,"rx","0.98275834"),a(Xe,"fill","#e75316"),a(Xe,"fill-opacity","1"),a(Xe,"stroke","#cccccc"),a(Xe,"stroke-width","0.8"),a(Xe,"stroke-linecap","round"),a(Xe,"stroke-linejoin","round"),a(Xe,"stroke-miterlimit","100"),a(Xe,"stroke-dasharray","none"),a(Xe,"stroke-opacity","1"),h(Xe,"id","rect3329"),h(Xe,"width","8.3345375"),h(Xe,"height","4.1914907"),h(Xe,"x","17.059776"),h(Xe,"y","35.221924"),h(Xe,"rx","0.98275834"),a(at,"fill","#e75316"),a(at,"fill-opacity","1"),a(at,"stroke","#cccccc"),a(at,"stroke-width","0.8"),a(at,"stroke-linecap","round"),a(at,"stroke-linejoin","round"),a(at,"stroke-miterlimit","100"),a(at,"stroke-dasharray","none"),a(at,"stroke-opacity","1"),h(at,"id","rect3331"),h(at,"width","8.3345375"),h(at,"height","4.1914907"),h(at,"x","25.394314"),h(at,"y","35.221924"),h(at,"rx","0.98275834"),a(it,"fill","#e75316"),a(it,"fill-opacity","1"),a(it,"stroke","#cccccc"),a(it,"stroke-width","0.8"),a(it,"stroke-linecap","round"),a(it,"stroke-linejoin","round"),a(it,"stroke-miterlimit","100"),a(it,"stroke-dasharray","none"),a(it,"stroke-opacity","1"),h(it,"id","rect3333"),h(it,"width","8.3345375"),h(it,"height","4.1914907"),h(it,"x","33.728851"),h(it,"y","35.221924"),h(it,"rx","0.98275834"),a(Ze,"fill","#e75316"),a(Ze,"fill-opacity","1"),a(Ze,"stroke","#cccccc"),a(Ze,"stroke-width","0.8"),a(Ze,"stroke-linecap","round"),a(Ze,"stroke-linejoin","round"),a(Ze,"stroke-miterlimit","100"),a(Ze,"stroke-dasharray","none"),a(Ze,"stroke-opacity","1"),h(Ze,"id","rect3347"),h(Ze,"width","8.3345375"),h(Ze,"height","4.1914907"),h(Ze,"x","0.39070213"),h(Ze,"y","25.340094"),h(Ze,"rx","0.98275834"),a(ze,"fill","#e75316"),a(ze,"fill-opacity","1"),a(ze,"stroke","#cccccc"),a(ze,"stroke-width","0.8"),a(ze,"stroke-linecap","round"),a(ze,"stroke-linejoin","round"),a(ze,"stroke-miterlimit","100"),a(ze,"stroke-dasharray","none"),a(ze,"stroke-opacity","1"),h(ze,"id","rect3349"),h(ze,"width","8.3345375"),h(ze,"height","4.1914907"),h(ze,"x","8.7252398"),h(ze,"y","25.340094"),h(ze,"rx","0.98275834"),a(Ke,"fill","#e75316"),a(Ke,"fill-opacity","1"),a(Ke,"stroke","#cccccc"),a(Ke,"stroke-width","0.8"),a(Ke,"stroke-linecap","round"),a(Ke,"stroke-linejoin","round"),a(Ke,"stroke-miterlimit","100"),a(Ke,"stroke-dasharray","none"),a(Ke,"stroke-opacity","1"),h(Ke,"id","rect3351"),h(Ke,"width","8.3345375"),h(Ke,"height","4.1914907"),h(Ke,"x","17.059776"),h(Ke,"y","25.340094"),h(Ke,"rx","0.98275834"),a(Qe,"fill","#e75316"),a(Qe,"fill-opacity","1"),a(Qe,"stroke","#cccccc"),a(Qe,"stroke-width","0.8"),a(Qe,"stroke-linecap","round"),a(Qe,"stroke-linejoin","round"),a(Qe,"stroke-miterlimit","100"),a(Qe,"stroke-dasharray","none"),a(Qe,"stroke-opacity","1"),h(Qe,"id","rect3353"),h(Qe,"width","8.3345375"),h(Qe,"height","4.1914907"),h(Qe,"x","25.394314"),h(Qe,"y","25.340094"),h(Qe,"rx","0.98275834"),a(rt,"fill","#e75316"),a(rt,"fill-opacity","1"),a(rt,"stroke","#cccccc"),a(rt,"stroke-width","0.8"),a(rt,"stroke-linecap","round"),a(rt,"stroke-linejoin","round"),a(rt,"stroke-miterlimit","100"),a(rt,"stroke-dasharray","none"),a(rt,"stroke-opacity","1"),h(rt,"id","rect3355"),h(rt,"width","8.3345375"),h(rt,"height","4.1914907"),h(rt,"x","33.728851"),h(rt,"y","25.340094"),h(rt,"rx","0.98275834"),a(bt,"fill","#e75316"),a(bt,"fill-opacity","1"),a(bt,"stroke","#cccccc"),a(bt,"stroke-width","0.8"),a(bt,"stroke-linecap","round"),a(bt,"stroke-linejoin","round"),a(bt,"stroke-miterlimit","100"),a(bt,"stroke-dasharray","none"),a(bt,"stroke-opacity","1"),h(bt,"id","rect3357"),h(bt,"width","8.3345375"),h(bt,"height","4.1914907"),h(bt,"x","-3.7394707"),h(bt,"y","30.266273"),h(bt,"rx","0.98275834"),a(vt,"fill","#e75316"),a(vt,"fill-opacity","1"),a(vt,"stroke","#cccccc"),a(vt,"stroke-width","0.8"),a(vt,"stroke-linecap","round"),a(vt,"stroke-linejoin","round"),a(vt,"stroke-miterlimit","100"),a(vt,"stroke-dasharray","none"),a(vt,"stroke-opacity","1"),h(vt,"id","rect3359"),h(vt,"width","8.3345375"),h(vt,"height","4.1914907"),h(vt,"x","4.5950665"),h(vt,"y","30.266273"),h(vt,"rx","0.98275834"),a(ct,"fill","#e75316"),a(ct,"fill-opacity","1"),a(ct,"stroke","#cccccc"),a(ct,"stroke-width","0.8"),a(ct,"stroke-linecap","round"),a(ct,"stroke-linejoin","round"),a(ct,"stroke-miterlimit","100"),a(ct,"stroke-dasharray","none"),a(ct,"stroke-opacity","1"),h(ct,"id","rect3361"),h(ct,"width","8.3345375"),h(ct,"height","4.1914907"),h(ct,"x","12.929604"),h(ct,"y","30.266273"),h(ct,"rx","0.98275834"),a(wt,"fill","#e75316"),a(wt,"fill-opacity","1"),a(wt,"stroke","#cccccc"),a(wt,"stroke-width","0.8"),a(wt,"stroke-linecap","round"),a(wt,"stroke-linejoin","round"),a(wt,"stroke-miterlimit","100"),a(wt,"stroke-dasharray","none"),a(wt,"stroke-opacity","1"),h(wt,"id","rect3363"),h(wt,"width","8.3345375"),h(wt,"height","4.1914907"),h(wt,"x","21.264141"),h(wt,"y","30.266273"),h(wt,"rx","0.98275834"),a(dt,"fill","#e75316"),a(dt,"fill-opacity","1"),a(dt,"stroke","#cccccc"),a(dt,"stroke-width","0.8"),a(dt,"stroke-linecap","round"),a(dt,"stroke-linejoin","round"),a(dt,"stroke-miterlimit","100"),a(dt,"stroke-dasharray","none"),a(dt,"stroke-opacity","1"),h(dt,"id","rect3365"),h(dt,"width","8.3345375"),h(dt,"height","4.1914907"),h(dt,"x","29.598679"),h(dt,"y","30.266273"),h(dt,"rx","0.98275834"),a(pt,"fill","#e75316"),a(pt,"fill-opacity","1"),a(pt,"stroke","#cccccc"),a(pt,"stroke-width","0.8"),a(pt,"stroke-linecap","round"),a(pt,"stroke-linejoin","round"),a(pt,"stroke-miterlimit","100"),a(pt,"stroke-dasharray","none"),a(pt,"stroke-opacity","1"),h(pt,"id","rect3367"),h(pt,"width","8.3345375"),h(pt,"height","4.1914907"),h(pt,"x","37.933216"),h(pt,"y","30.266273"),h(pt,"rx","0.98275834"),a(Pe,"fill","#e75316"),a(Pe,"fill-opacity","1"),a(Pe,"stroke","#cccccc"),a(Pe,"stroke-width","0.8"),a(Pe,"stroke-linecap","round"),a(Pe,"stroke-linejoin","round"),a(Pe,"stroke-miterlimit","100"),a(Pe,"stroke-dasharray","none"),a(Pe,"stroke-opacity","1"),h(Pe,"id","rect3369"),h(Pe,"width","8.3345375"),h(Pe,"height","4.1914907"),h(Pe,"x","0.39070213"),h(Pe,"y","25.340094"),h(Pe,"rx","0.98275834"),a(_t,"fill","#e75316"),a(_t,"fill-opacity","1"),a(_t,"stroke","#cccccc"),a(_t,"stroke-width","0.8"),a(_t,"stroke-linecap","round"),a(_t,"stroke-linejoin","round"),a(_t,"stroke-miterlimit","100"),a(_t,"stroke-dasharray","none"),a(_t,"stroke-opacity","1"),h(_t,"id","rect3371"),h(_t,"width","8.3345375"),h(_t,"height","4.1914907"),h(_t,"x","8.7252398"),h(_t,"y","25.340094"),h(_t,"rx","0.98275834"),a(et,"fill","#e75316"),a(et,"fill-opacity","1"),a(et,"stroke","#cccccc"),a(et,"stroke-width","0.8"),a(et,"stroke-linecap","round"),a(et,"stroke-linejoin","round"),a(et,"stroke-miterlimit","100"),a(et,"stroke-dasharray","none"),a(et,"stroke-opacity","1"),h(et,"id","rect3373"),h(et,"width","8.3345375"),h(et,"height","4.1914907"),h(et,"x","17.059776"),h(et,"y","25.340094"),h(et,"rx","0.98275834"),a(Ft,"fill","#e75316"),a(Ft,"fill-opacity","1"),a(Ft,"stroke","#cccccc"),a(Ft,"stroke-width","0.8"),a(Ft,"stroke-linecap","round"),a(Ft,"stroke-linejoin","round"),a(Ft,"stroke-miterlimit","100"),a(Ft,"stroke-dasharray","none"),a(Ft,"stroke-opacity","1"),h(Ft,"id","rect3375"),h(Ft,"width","8.3345375"),h(Ft,"height","4.1914907"),h(Ft,"x","25.394314"),h(Ft,"y","25.340094"),h(Ft,"rx","0.98275834"),a(ft,"fill","#e75316"),a(ft,"fill-opacity","1"),a(ft,"stroke","#cccccc"),a(ft,"stroke-width","0.8"),a(ft,"stroke-linecap","round"),a(ft,"stroke-linejoin","round"),a(ft,"stroke-miterlimit","100"),a(ft,"stroke-dasharray","none"),a(ft,"stroke-opacity","1"),h(ft,"id","rect3377"),h(ft,"width","8.3345375"),h(ft,"height","4.1914907"),h(ft,"x","33.728851"),h(ft,"y","25.340094"),h(ft,"rx","0.98275834"),a($t,"fill","#e75316"),a($t,"fill-opacity","1"),a($t,"stroke","#cccccc"),a($t,"stroke-width","0.8"),a($t,"stroke-linecap","round"),a($t,"stroke-linejoin","round"),a($t,"stroke-miterlimit","100"),a($t,"stroke-dasharray","none"),a($t,"stroke-opacity","1"),h($t,"id","rect3379"),h($t,"width","8.3345375"),h($t,"height","4.1914907"),h($t,"x","-3.7394707"),h($t,"y","30.266273"),h($t,"rx","0.98275834"),a(gt,"fill","#e75316"),a(gt,"fill-opacity","1"),a(gt,"stroke","#cccccc"),a(gt,"stroke-width","0.8"),a(gt,"stroke-linecap","round"),a(gt,"stroke-linejoin","round"),a(gt,"stroke-miterlimit","100"),a(gt,"stroke-dasharray","none"),a(gt,"stroke-opacity","1"),h(gt,"id","rect3381"),h(gt,"width","8.3345375"),h(gt,"height","4.1914907"),h(gt,"x","4.5950665"),h(gt,"y","30.266273"),h(gt,"rx","0.98275834"),a(mt,"fill","#e75316"),a(mt,"fill-opacity","1"),a(mt,"stroke","#cccccc"),a(mt,"stroke-width","0.8"),a(mt,"stroke-linecap","round"),a(mt,"stroke-linejoin","round"),a(mt,"stroke-miterlimit","100"),a(mt,"stroke-dasharray","none"),a(mt,"stroke-opacity","1"),h(mt,"id","rect3383"),h(mt,"width","8.3345375"),h(mt,"height","4.1914907"),h(mt,"x","12.929604"),h(mt,"y","30.266273"),h(mt,"rx","0.98275834"),a(Bt,"fill","#e75316"),a(Bt,"fill-opacity","1"),a(Bt,"stroke","#cccccc"),a(Bt,"stroke-width","0.8"),a(Bt,"stroke-linecap","round"),a(Bt,"stroke-linejoin","round"),a(Bt,"stroke-miterlimit","100"),a(Bt,"stroke-dasharray","none"),a(Bt,"stroke-opacity","1"),h(Bt,"id","rect3385"),h(Bt,"width","8.3345375"),h(Bt,"height","4.1914907"),h(Bt,"x","21.264141"),h(Bt,"y","30.266273"),h(Bt,"rx","0.98275834"),a(Nt,"fill","#e75316"),a(Nt,"fill-opacity","1"),a(Nt,"stroke","#cccccc"),a(Nt,"stroke-width","0.8"),a(Nt,"stroke-linecap","round"),a(Nt,"stroke-linejoin","round"),a(Nt,"stroke-miterlimit","100"),a(Nt,"stroke-dasharray","none"),a(Nt,"stroke-opacity","1"),h(Nt,"id","rect3387"),h(Nt,"width","8.3345375"),h(Nt,"height","4.1914907"),h(Nt,"x","29.598679"),h(Nt,"y","30.266273"),h(Nt,"rx","0.98275834"),a(Ct,"fill","#e75316"),a(Ct,"fill-opacity","1"),a(Ct,"stroke","#cccccc"),a(Ct,"stroke-width","0.8"),a(Ct,"stroke-linecap","round"),a(Ct,"stroke-linejoin","round"),a(Ct,"stroke-miterlimit","100"),a(Ct,"stroke-dasharray","none"),a(Ct,"stroke-opacity","1"),h(Ct,"id","rect3389"),h(Ct,"width","8.3345375"),h(Ct,"height","4.1914907"),h(Ct,"x","37.933216"),h(Ct,"y","30.266273"),h(Ct,"rx","0.98275834"),a(Lt,"fill","#e75316"),a(Lt,"fill-opacity","1"),a(Lt,"stroke","#cccccc"),a(Lt,"stroke-width","0.8"),a(Lt,"stroke-linecap","round"),a(Lt,"stroke-linejoin","round"),a(Lt,"stroke-miterlimit","100"),a(Lt,"stroke-dasharray","none"),a(Lt,"stroke-opacity","1"),h(Lt,"id","rect3391"),h(Lt,"width","8.3345375"),h(Lt,"height","4.1914907"),h(Lt,"x","8.7252398"),h(Lt,"y","35.221924"),h(Lt,"rx","0.98275834"),a(jt,"fill","#e75316"),a(jt,"fill-opacity","1"),a(jt,"stroke","#cccccc"),a(jt,"stroke-width","0.8"),a(jt,"stroke-linecap","round"),a(jt,"stroke-linejoin","round"),a(jt,"stroke-miterlimit","100"),a(jt,"stroke-dasharray","none"),a(jt,"stroke-opacity","1"),h(jt,"id","rect3393"),h(jt,"width","8.3345375"),h(jt,"height","4.1914907"),h(jt,"x","0.39070213"),h(jt,"y","25.340094"),h(jt,"rx","0.98275834"),a(yt,"fill","#e75316"),a(yt,"fill-opacity","1"),a(yt,"stroke","#cccccc"),a(yt,"stroke-width","0.8"),a(yt,"stroke-linecap","round"),a(yt,"stroke-linejoin","round"),a(yt,"stroke-miterlimit","100"),a(yt,"stroke-dasharray","none"),a(yt,"stroke-opacity","1"),h(yt,"id","rect3395"),h(yt,"width","8.3345375"),h(yt,"height","4.1914907"),h(yt,"x","8.7252398"),h(yt,"y","25.340094"),h(yt,"rx","0.98275834"),a(Mt,"fill","#e75316"),a(Mt,"fill-opacity","1"),a(Mt,"stroke","#cccccc"),a(Mt,"stroke-width","0.8"),a(Mt,"stroke-linecap","round"),a(Mt,"stroke-linejoin","round"),a(Mt,"stroke-miterlimit","100"),a(Mt,"stroke-dasharray","none"),a(Mt,"stroke-opacity","1"),h(Mt,"id","rect3397"),h(Mt,"width","8.3345375"),h(Mt,"height","4.1914907"),h(Mt,"x","17.059776"),h(Mt,"y","25.340094"),h(Mt,"rx","0.98275834"),a(Tt,"fill","#e75316"),a(Tt,"fill-opacity","1"),a(Tt,"stroke","#cccccc"),a(Tt,"stroke-width","0.8"),a(Tt,"stroke-linecap","round"),a(Tt,"stroke-linejoin","round"),a(Tt,"stroke-miterlimit","100"),a(Tt,"stroke-dasharray","none"),a(Tt,"stroke-opacity","1"),h(Tt,"id","rect3399"),h(Tt,"width","8.3345375"),h(Tt,"height","4.1914907"),h(Tt,"x","25.394314"),h(Tt,"y","25.340094"),h(Tt,"rx","0.98275834"),a(tt,"fill","#e75316"),a(tt,"fill-opacity","1"),a(tt,"stroke","#cccccc"),a(tt,"stroke-width","0.8"),a(tt,"stroke-linecap","round"),a(tt,"stroke-linejoin","round"),a(tt,"stroke-miterlimit","100"),a(tt,"stroke-dasharray","none"),a(tt,"stroke-opacity","1"),h(tt,"id","rect3401"),h(tt,"width","8.3345375"),h(tt,"height","4.1914907"),h(tt,"x","33.728851"),h(tt,"y","25.340094"),h(tt,"rx","0.98275834"),a(xt,"fill","#e75316"),a(xt,"fill-opacity","1"),a(xt,"stroke","#cccccc"),a(xt,"stroke-width","0.8"),a(xt,"stroke-linecap","round"),a(xt,"stroke-linejoin","round"),a(xt,"stroke-miterlimit","100"),a(xt,"stroke-dasharray","none"),a(xt,"stroke-opacity","1"),h(xt,"id","rect3403"),h(xt,"width","8.3345375"),h(xt,"height","4.1914907"),h(xt,"x","-3.7394707"),h(xt,"y","30.266273"),h(xt,"rx","0.98275834"),a(kt,"fill","#e75316"),a(kt,"fill-opacity","1"),a(kt,"stroke","#cccccc"),a(kt,"stroke-width","0.8"),a(kt,"stroke-linecap","round"),a(kt,"stroke-linejoin","round"),a(kt,"stroke-miterlimit","100"),a(kt,"stroke-dasharray","none"),a(kt,"stroke-opacity","1"),h(kt,"id","rect3405"),h(kt,"width","8.3345375"),h(kt,"height","4.1914907"),h(kt,"x","4.5950665"),h(kt,"y","30.266273"),h(kt,"rx","0.98275834"),a(lt,"fill","#e75316"),a(lt,"fill-opacity","1"),a(lt,"stroke","#cccccc"),a(lt,"stroke-width","0.8"),a(lt,"stroke-linecap","round"),a(lt,"stroke-linejoin","round"),a(lt,"stroke-miterlimit","100"),a(lt,"stroke-dasharray","none"),a(lt,"stroke-opacity","1"),h(lt,"id","rect3407"),h(lt,"width","8.3345375"),h(lt,"height","4.1914907"),h(lt,"x","12.929604"),h(lt,"y","30.266273"),h(lt,"rx","0.98275834"),a(ut,"fill","#e75316"),a(ut,"fill-opacity","1"),a(ut,"stroke","#cccccc"),a(ut,"stroke-width","0.8"),a(ut,"stroke-linecap","round"),a(ut,"stroke-linejoin","round"),a(ut,"stroke-miterlimit","100"),a(ut,"stroke-dasharray","none"),a(ut,"stroke-opacity","1"),h(ut,"id","rect3409"),h(ut,"width","8.3345375"),h(ut,"height","4.1914907"),h(ut,"x","21.264141"),h(ut,"y","30.266273"),h(ut,"rx","0.98275834"),a(Wt,"fill","#e75316"),a(Wt,"fill-opacity","1"),a(Wt,"stroke","#cccccc"),a(Wt,"stroke-width","0.8"),a(Wt,"stroke-linecap","round"),a(Wt,"stroke-linejoin","round"),a(Wt,"stroke-miterlimit","100"),a(Wt,"stroke-dasharray","none"),a(Wt,"stroke-opacity","1"),h(Wt,"id","rect3411"),h(Wt,"width","8.3345375"),h(Wt,"height","4.1914907"),h(Wt,"x","29.598679"),h(Wt,"y","30.266273"),h(Wt,"rx","0.98275834"),a(At,"fill","#e75316"),a(At,"fill-opacity","1"),a(At,"stroke","#cccccc"),a(At,"stroke-width","0.8"),a(At,"stroke-linecap","round"),a(At,"stroke-linejoin","round"),a(At,"stroke-miterlimit","100"),a(At,"stroke-dasharray","none"),a(At,"stroke-opacity","1"),h(At,"id","rect3413"),h(At,"width","8.3345375"),h(At,"height","4.1914907"),h(At,"x","37.933216"),h(At,"y","30.266273"),h(At,"rx","0.98275834"),a(Jt,"fill","#e75316"),a(Jt,"fill-opacity","1"),a(Jt,"stroke","#cccccc"),a(Jt,"stroke-width","0.8"),a(Jt,"stroke-linecap","round"),a(Jt,"stroke-linejoin","round"),a(Jt,"stroke-miterlimit","100"),a(Jt,"stroke-dasharray","none"),a(Jt,"stroke-opacity","1"),h(Jt,"id","rect3415"),h(Jt,"width","8.3345375"),h(Jt,"height","4.1914907"),h(Jt,"x","-3.7394707"),h(Jt,"y","0.42482772"),h(Jt,"rx","0.98275834"),a(Vt,"fill","#e75316"),a(Vt,"fill-opacity","1"),a(Vt,"stroke","#cccccc"),a(Vt,"stroke-width","0.8"),a(Vt,"stroke-linecap","round"),a(Vt,"stroke-linejoin","round"),a(Vt,"stroke-miterlimit","100"),a(Vt,"stroke-dasharray","none"),a(Vt,"stroke-opacity","1"),h(Vt,"id","rect3417"),h(Vt,"width","8.3345375"),h(Vt,"height","4.1914907"),h(Vt,"x","4.5950665"),h(Vt,"y","0.42482772"),h(Vt,"rx","0.98275834"),a(qt,"fill","#e75316"),a(qt,"fill-opacity","1"),a(qt,"stroke","#cccccc"),a(qt,"stroke-width","0.8"),a(qt,"stroke-linecap","round"),a(qt,"stroke-linejoin","round"),a(qt,"stroke-miterlimit","100"),a(qt,"stroke-dasharray","none"),a(qt,"stroke-opacity","1"),h(qt,"id","rect3419"),h(qt,"width","8.3345375"),h(qt,"height","4.1914907"),h(qt,"x","12.929604"),h(qt,"y","0.42482772"),h(qt,"rx","0.98275834"),a(Zt,"fill","#e75316"),a(Zt,"fill-opacity","1"),a(Zt,"stroke","#cccccc"),a(Zt,"stroke-width","0.8"),a(Zt,"stroke-linecap","round"),a(Zt,"stroke-linejoin","round"),a(Zt,"stroke-miterlimit","100"),a(Zt,"stroke-dasharray","none"),a(Zt,"stroke-opacity","1"),h(Zt,"id","rect3421"),h(Zt,"width","8.3345375"),h(Zt,"height","4.1914907"),h(Zt,"x","21.264141"),h(Zt,"y","0.42482772"),h(Zt,"rx","0.98275834"),a(Gt,"fill","#e75316"),a(Gt,"fill-opacity","1"),a(Gt,"stroke","#cccccc"),a(Gt,"stroke-width","0.8"),a(Gt,"stroke-linecap","round"),a(Gt,"stroke-linejoin","round"),a(Gt,"stroke-miterlimit","100"),a(Gt,"stroke-dasharray","none"),a(Gt,"stroke-opacity","1"),h(Gt,"id","rect3423"),h(Gt,"width","8.3345375"),h(Gt,"height","4.1914907"),h(Gt,"x","29.598679"),h(Gt,"y","0.42482772"),h(Gt,"rx","0.98275834"),a(St,"fill","#e75316"),a(St,"fill-opacity","1"),a(St,"stroke","#cccccc"),a(St,"stroke-width","0.8"),a(St,"stroke-linecap","round"),a(St,"stroke-linejoin","round"),a(St,"stroke-miterlimit","100"),a(St,"stroke-dasharray","none"),a(St,"stroke-opacity","1"),h(St,"id","rect3425"),h(St,"width","8.3345375"),h(St,"height","4.1914907"),h(St,"x","37.933216"),h(St,"y","0.42482772"),h(St,"rx","0.98275834"),a(Ut,"fill","#e75316"),a(Ut,"fill-opacity","1"),a(Ut,"stroke","#cccccc"),a(Ut,"stroke-width","0.8"),a(Ut,"stroke-linecap","round"),a(Ut,"stroke-linejoin","round"),a(Ut,"stroke-miterlimit","100"),a(Ut,"stroke-dasharray","none"),a(Ut,"stroke-opacity","1"),h(Ut,"id","rect3427"),h(Ut,"width","8.3345375"),h(Ut,"height","4.1914907"),h(Ut,"x","-3.7394707"),h(Ut,"y","0.42482772"),h(Ut,"rx","0.98275834"),a(fe,"fill","#e75316"),a(fe,"fill-opacity","1"),a(fe,"stroke","#cccccc"),a(fe,"stroke-width","0.8"),a(fe,"stroke-linecap","round"),a(fe,"stroke-linejoin","round"),a(fe,"stroke-miterlimit","100"),a(fe,"stroke-dasharray","none"),a(fe,"stroke-opacity","1"),h(fe,"id","rect3429"),h(fe,"width","8.3345375"),h(fe,"height","4.1914907"),h(fe,"x","4.5950665"),h(fe,"y","0.42482772"),h(fe,"rx","0.98275834"),a(ht,"fill","#e75316"),a(ht,"fill-opacity","1"),a(ht,"stroke","#cccccc"),a(ht,"stroke-width","0.8"),a(ht,"stroke-linecap","round"),a(ht,"stroke-linejoin","round"),a(ht,"stroke-miterlimit","100"),a(ht,"stroke-dasharray","none"),a(ht,"stroke-opacity","1"),h(ht,"id","rect3431"),h(ht,"width","8.3345375"),h(ht,"height","4.1914907"),h(ht,"x","12.929604"),h(ht,"y","0.42482772"),h(ht,"rx","0.98275834"),a(on,"fill","#e75316"),a(on,"fill-opacity","1"),a(on,"stroke","#cccccc"),a(on,"stroke-width","0.8"),a(on,"stroke-linecap","round"),a(on,"stroke-linejoin","round"),a(on,"stroke-miterlimit","100"),a(on,"stroke-dasharray","none"),a(on,"stroke-opacity","1"),h(on,"id","rect3433"),h(on,"width","8.3345375"),h(on,"height","4.1914907"),h(on,"x","21.264141"),h(on,"y","0.42482772"),h(on,"rx","0.98275834"),a(an,"fill","#e75316"),a(an,"fill-opacity","1"),a(an,"stroke","#cccccc"),a(an,"stroke-width","0.8"),a(an,"stroke-linecap","round"),a(an,"stroke-linejoin","round"),a(an,"stroke-miterlimit","100"),a(an,"stroke-dasharray","none"),a(an,"stroke-opacity","1"),h(an,"id","rect3435"),h(an,"width","8.3345375"),h(an,"height","4.1914907"),h(an,"x","29.598679"),h(an,"y","0.42482772"),h(an,"rx","0.98275834"),a(ln,"fill","#e75316"),a(ln,"fill-opacity","1"),a(ln,"stroke","#cccccc"),a(ln,"stroke-width","0.8"),a(ln,"stroke-linecap","round"),a(ln,"stroke-linejoin","round"),a(ln,"stroke-miterlimit","100"),a(ln,"stroke-dasharray","none"),a(ln,"stroke-opacity","1"),h(ln,"id","rect3437"),h(ln,"width","8.3345375"),h(ln,"height","4.1914907"),h(ln,"x","37.933216"),h(ln,"y","0.42482772"),h(ln,"rx","0.98275834"),a(un,"fill","#e75316"),a(un,"fill-opacity","1"),a(un,"stroke","#cccccc"),a(un,"stroke-width","0.8"),a(un,"stroke-linecap","round"),a(un,"stroke-linejoin","round"),a(un,"stroke-miterlimit","100"),a(un,"stroke-dasharray","none"),a(un,"stroke-opacity","1"),h(un,"id","rect3439"),h(un,"width","8.3345375"),h(un,"height","4.1914907"),h(un,"x","-3.7394707"),h(un,"y","0.42482772"),h(un,"rx","0.98275834"),a(hn,"fill","#e75316"),a(hn,"fill-opacity","1"),a(hn,"stroke","#cccccc"),a(hn,"stroke-width","0.8"),a(hn,"stroke-linecap","round"),a(hn,"stroke-linejoin","round"),a(hn,"stroke-miterlimit","100"),a(hn,"stroke-dasharray","none"),a(hn,"stroke-opacity","1"),h(hn,"id","rect3441"),h(hn,"width","8.3345375"),h(hn,"height","4.1914907"),h(hn,"x","4.5950665"),h(hn,"y","0.42482772"),h(hn,"rx","0.98275834"),a(Et,"fill","#e75316"),a(Et,"fill-opacity","1"),a(Et,"stroke","#cccccc"),a(Et,"stroke-width","0.8"),a(Et,"stroke-linecap","round"),a(Et,"stroke-linejoin","round"),a(Et,"stroke-miterlimit","100"),a(Et,"stroke-dasharray","none"),a(Et,"stroke-opacity","1"),h(Et,"id","rect3443"),h(Et,"width","8.3345375"),h(Et,"height","4.1914907"),h(Et,"x","12.929604"),h(Et,"y","0.42482772"),h(Et,"rx","0.98275834"),a(cn,"fill","#e75316"),a(cn,"fill-opacity","1"),a(cn,"stroke","#cccccc"),a(cn,"stroke-width","0.8"),a(cn,"stroke-linecap","round"),a(cn,"stroke-linejoin","round"),a(cn,"stroke-miterlimit","100"),a(cn,"stroke-dasharray","none"),a(cn,"stroke-opacity","1"),h(cn,"id","rect3445"),h(cn,"width","8.3345375"),h(cn,"height","4.1914907"),h(cn,"x","21.264141"),h(cn,"y","0.42482772"),h(cn,"rx","0.98275834"),a(dn,"fill","#e75316"),a(dn,"fill-opacity","1"),a(dn,"stroke","#cccccc"),a(dn,"stroke-width","0.8"),a(dn,"stroke-linecap","round"),a(dn,"stroke-linejoin","round"),a(dn,"stroke-miterlimit","100"),a(dn,"stroke-dasharray","none"),a(dn,"stroke-opacity","1"),h(dn,"id","rect3447"),h(dn,"width","8.3345375"),h(dn,"height","4.1914907"),h(dn,"x","29.598679"),h(dn,"y","0.42482772"),h(dn,"rx","0.98275834"),a(pn,"fill","#e75316"),a(pn,"fill-opacity","1"),a(pn,"stroke","#cccccc"),a(pn,"stroke-width","0.8"),a(pn,"stroke-linecap","round"),a(pn,"stroke-linejoin","round"),a(pn,"stroke-miterlimit","100"),a(pn,"stroke-dasharray","none"),a(pn,"stroke-opacity","1"),h(pn,"id","rect3449"),h(pn,"width","8.3345375"),h(pn,"height","4.1914907"),h(pn,"x","37.933216"),h(pn,"y","0.42482772"),h(pn,"rx","0.98275834"),h(C,"id","g4136"),h(C,"mask","url(#mask5185)"),h(A,"inkscape:label","Layer 1"),h(A,"inkscape:groupmode","layer"),h(A,"id","layer1"),a(A,"display","inline"),h(A,"sodipodi:insensitive","true"),de(e,ls)},m(ti,eo){st(ti,e,eo),T(e,t),T(t,n),T(t,r),T(t,s),T(t,o),T(t,l),T(t,u),T(t,c),T(t,p),T(e,d),T(d,f),T(f,g),T(e,v),T(v,w),T(e,A),T(A,C),T(C,m),T(C,y),T(C,x),T(C,k),T(C,q),T(C,I),T(C,S),T(C,$),T(C,B),T(C,D),T(C,N),T(C,O),T(C,L),T(C,V),T(C,X),T(C,K),T(C,ee),T(C,z),T(C,J),T(C,H),T(C,Y),T(C,se),T(C,Q),T(C,ie),T(C,te),T(C,oe),T(C,ve),T(C,be),T(C,ye),T(C,re),T(C,he),T(C,Se),T(C,Re),T(C,we),T(C,Ee),T(C,qe),T(C,Be),T(C,Je),T(C,_e),T(C,Fe),T(C,Ge),T(C,Te),T(C,je),T(C,Ne),T(C,Oe),T(C,Le),T(C,Ye),T(C,Xe),T(C,at),T(C,it),T(C,Ze),T(C,ze),T(C,Ke),T(C,Qe),T(C,rt),T(C,bt),T(C,vt),T(C,ct),T(C,wt),T(C,dt),T(C,pt),T(C,Pe),T(C,_t),T(C,et),T(C,Ft),T(C,ft),T(C,$t),T(C,gt),T(C,mt),T(C,Bt),T(C,Nt),T(C,Ct),T(C,Lt),T(C,jt),T(C,yt),T(C,Mt),T(C,Tt),T(C,tt),T(C,xt),T(C,kt),T(C,lt),T(C,ut),T(C,Wt),T(C,At),T(C,Jt),T(C,Vt),T(C,qt),T(C,Zt),T(C,Gt),T(C,St),T(C,Ut),T(C,fe),T(C,ht),T(C,on),T(C,an),T(C,ln),T(C,un),T(C,hn),T(C,Et),T(C,cn),T(C,dn),T(C,pn),Qs||(la=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],Qs=!0)},p(ti,[eo]){de(e,ls=Ht(Di,[eo&1&&ti[0],{width:"40mm"},{height:"40mm"},{viewBox:"0 0 40 40"},{version:"1.1"},{id:"svg5"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"sodipodi:docname":"bick_wal_round.svg"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(ti){ti&&ot(e),Qs=!1,Yt(la)}}}function f9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class g9 extends It{constructor(e){super(),Dt(this,e,f9,p9,Rt,{color:1})}}function m9(i){let e,t,n,r,s,o,l,u=[i[0],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg5"},{"sodipodi:docname":"gps_arrow.svg"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],c={};for(let p=0;p<u.length;p+=1)c=Z(c,u[p]);return{c(){e=_("svg"),t=_("defs"),n=_("sodipodi:namedview"),r=_("g"),s=_("path"),h(t,"id","defs9"),h(n,"id","namedview7"),h(n,"pagecolor","#ffffff"),h(n,"bordercolor","#666666"),h(n,"borderopacity","1.0"),h(n,"inkscape:pageshadow","2"),h(n,"inkscape:pageopacity","0.0"),h(n,"inkscape:pagecheckerboard","0"),h(n,"showgrid","false"),h(n,"inkscape:zoom","1.7173333"),h(n,"inkscape:cx","187.79115"),h(n,"inkscape:cy","187.5"),h(n,"inkscape:window-width","1920"),h(n,"inkscape:window-height","1007"),h(n,"inkscape:window-x","0"),h(n,"inkscape:window-y","0"),h(n,"inkscape:window-maximized","1"),h(n,"inkscape:current-layer","svg5"),a(s,"fill","#5454eb"),a(s,"fill-opacity","0.98823529"),a(s,"fill-rule","nonzero"),a(s,"stroke","#ffffff"),a(s,"stroke-opacity","1"),a(s,"stroke-width","3.78656711"),a(s,"stroke-miterlimit","4"),a(s,"stroke-dasharray","none"),a(s,"stroke-linecap","round"),a(s,"stroke-linejoin","bevel"),h(s,"d","M 0,374.61719 C 0,373.62109 187.49609,-0.375 187.80469,0 188.84766,1.261719 375.34375,374.71094 375,374.85156 c -0.22266,0.0899 -42.48047,-18.05078 -93.90234,-40.3125 l -93.4961,-40.47265 -93.343748,40.46875 C 42.917969,356.78906 0.707031,375 0.457031,375 0.207031,375 0,374.82812 0,374.61719 Z m 0,0"),h(s,"id","path2"),h(r,"id","surface1"),h(r,"transform","matrix(0.63906155,0,0,0.98221939,67.675844,3.3354774)"),a(r,"stroke","#ffffff"),a(r,"stroke-opacity","1"),a(r,"stroke-width","3.78656711"),a(r,"stroke-miterlimit","4"),a(r,"stroke-dasharray","none"),a(r,"stroke-linecap","round"),a(r,"stroke-linejoin","bevel"),a(r,"fill","#5454eb"),a(r,"fill-opacity","0.98823529"),de(e,c)},m(p,d){st(p,e,d),T(e,t),T(e,n),T(e,r),T(r,s),o||(l=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],o=!0)},p(p,[d]){de(e,c=Ht(u,[d&1&&p[0],{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"},{id:"svg5"},{"sodipodi:docname":"gps_arrow.svg"},{"inkscape:version":"1.1.2 (0a00cf5339, 2022-02-04)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(p){p&&ot(e),o=!1,Yt(l)}}}function y9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class b9 extends It{constructor(e){super(),Dt(this,e,y9,m9,Rt,{color:1})}}function v9(i){let e,t,n,r,s;const o=i[2].default,l=vp(o,i,i[1],null);let u=[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 24 24"},{fill:"currentColor"},{"aria-hidden":"true"},i[0]],c={};for(let p=0;p<u.length;p+=1)c=Z(c,u[p]);return{c(){e=_("svg"),l&&l.c(),t=_("path"),h(t,"d","M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z"),de(e,c)},m(p,d){st(p,e,d),l&&l.m(e,null),T(e,t),n=!0,r||(s=[P(e,"click",i[3]),P(e,"mouseover",i[4]),P(e,"mouseenter",i[5]),P(e,"mouseleave",i[6]),P(e,"keydown",i[7])],r=!0)},p(p,[d]){l&&l.p&&(!n||d&2)&&wp(l,o,p,p[1],n?Cp(o,p[1],d,null):_p(p[1]),null),de(e,c=Ht(u,[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 24 24"},{fill:"currentColor"},{"aria-hidden":"true"},d&1&&p[0]]))},i(p){n||(We(l,p),n=!0)},o(p){Ue(l,p),n=!1},d(p){p&&ot(e),l&&l.d(p),r=!1,Yt(s)}}}function w9(i,e,t){const n=[];let r=pe(e,n),{$$slots:s={},$$scope:o}=e;function l(f){F.call(this,i,f)}function u(f){F.call(this,i,f)}function c(f){F.call(this,i,f)}function p(f){F.call(this,i,f)}function d(f){F.call(this,i,f)}return i.$$set=f=>{e=Z(Z({},e),Xt(f)),t(0,r=pe(e,n)),"$$scope"in f&&t(1,o=f.$$scope)},[r,o,s,l,u,c,p,d]}let _9=class extends It{constructor(e){super(),Dt(this,e,w9,v9,Rt,{})}};function C9(i){let e,t,n,r,s;const o=i[2].default,l=vp(o,i,i[1],null);let u=[{xmlns:"http://www.w3.org/2000/svg"},{fill:"none"},{viewBox:"0 0 24 24"},{"stroke-width":"1.5"},{stroke:"currentColor"},{"aria-hidden":"true"},i[0]],c={};for(let p=0;p<u.length;p+=1)c=Z(c,u[p]);return{c(){e=_("svg"),l&&l.c(),t=_("path"),h(t,"stroke-linecap","round"),h(t,"stroke-linejoin","round"),h(t,"d","M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z"),de(e,c)},m(p,d){st(p,e,d),l&&l.m(e,null),T(e,t),n=!0,r||(s=[P(e,"click",i[3]),P(e,"mouseover",i[4]),P(e,"mouseenter",i[5]),P(e,"mouseleave",i[6]),P(e,"keydown",i[7])],r=!0)},p(p,[d]){l&&l.p&&(!n||d&2)&&wp(l,o,p,p[1],n?Cp(o,p[1],d,null):_p(p[1]),null),de(e,c=Ht(u,[{xmlns:"http://www.w3.org/2000/svg"},{fill:"none"},{viewBox:"0 0 24 24"},{"stroke-width":"1.5"},{stroke:"currentColor"},{"aria-hidden":"true"},d&1&&p[0]]))},i(p){n||(We(l,p),n=!0)},o(p){Ue(l,p),n=!1},d(p){p&&ot(e),l&&l.d(p),r=!1,Yt(s)}}}function T9(i,e,t){const n=[];let r=pe(e,n),{$$slots:s={},$$scope:o}=e;function l(f){F.call(this,i,f)}function u(f){F.call(this,i,f)}function c(f){F.call(this,i,f)}function p(f){F.call(this,i,f)}function d(f){F.call(this,i,f)}return i.$$set=f=>{e=Z(Z({},e),Xt(f)),t(0,r=pe(e,n)),"$$scope"in f&&t(1,o=f.$$scope)},[r,o,s,l,u,c,p,d]}class x9 extends It{constructor(e){super(),Dt(this,e,T9,C9,Rt,{})}}function k9(i){let e,t,n,r,s,o,l,u=[i[0],{width:"157.33984"},{height:"157.33984"},{viewBox:"0 0 157.33984 157.33984"},{version:"1.1"},{id:"svg9"},{"sodipodi:docname":"confirm.svg"},{"inkscape:version":"1.1.2 (1:1.1+202202050950+0a00cf5339)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],c={};for(let p=0;p<u.length;p+=1)c=Z(c,u[p]);return{c(){e=_("svg"),t=_("defs"),n=_("sodipodi:namedview"),r=_("path"),s=_("path"),h(t,"id","defs13"),h(n,"id","namedview11"),h(n,"pagecolor","#505050"),h(n,"bordercolor","#eeeeee"),h(n,"borderopacity","1"),h(n,"inkscape:pageshadow","0"),h(n,"inkscape:pageopacity","0"),h(n,"inkscape:pagecheckerboard","0"),h(n,"showgrid","false"),h(n,"inkscape:zoom","2.312"),h(n,"inkscape:cx","-18.598616"),h(n,"inkscape:cy","57.093426"),h(n,"inkscape:current-layer","svg9"),a(r,"fill","#35d447"),a(r,"fill-opacity","1"),a(r,"fill-rule","nonzero"),a(r,"stroke","none"),h(r,"d","m 157.33984,78.66796 c 0,43.44922 -35.21875,78.67188 -78.66796,78.67188 C 35.22266,157.33984 0,122.11718 0,78.66796 0,35.22265 35.22266,0 78.67188,0 c 43.44921,0 78.66796,35.22265 78.66796,78.66796 z m 0,0"),h(r,"id","path4"),a(s,"fill","none",1),a(s,"stroke","#ffffff"),a(s,"stroke-width","19.7495"),a(s,"stroke-linecap","round"),a(s,"stroke-linejoin","miter"),a(s,"stroke-miterlimit","4"),a(s,"stroke-opacity","1"),h(s,"d","m 37.69921,75.49609 35.55078,39.5 47.39844,-63.19922"),h(s,"id","path6"),de(e,c)},m(p,d){st(p,e,d),T(e,t),T(e,n),T(e,r),T(e,s),o||(l=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],o=!0)},p(p,[d]){de(e,c=Ht(u,[d&1&&p[0],{width:"157.33984"},{height:"157.33984"},{viewBox:"0 0 157.33984 157.33984"},{version:"1.1"},{id:"svg9"},{"sodipodi:docname":"confirm.svg"},{"inkscape:version":"1.1.2 (1:1.1+202202050950+0a00cf5339)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(p){p&&ot(e),o=!1,Yt(l)}}}function A9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class q9 extends It{constructor(e){super(),Dt(this,e,A9,k9,Rt,{color:1})}}function S9(i){let e,t,n,r,s,o,l,u,c,p,d,f,g,v,w,A,C=[i[0],{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 36 36"}],m={};for(let y=0;y<C.length;y+=1)m=Z(m,C[y]);return{c(){e=_("svg"),t=_("path"),n=_("path"),r=_("path"),s=_("path"),o=_("path"),l=_("path"),u=_("path"),c=_("path"),p=_("path"),d=_("path"),f=_("path"),g=_("path"),v=_("path"),h(t,"fill","#60352A"),h(t,"d","M21.906 1.262c-2.02-.654-6.772-.475-7.96 1.069-3.089.059-6.713 2.851-7.188 6.535-.47 3.645.578 5.338.951 8.079.422 3.106 2.168 4.099 3.564 4.515C13.281 24.114 15.415 24 19 24c7 0 10.334-4.684 10.629-12.639.178-4.812-2.645-8.456-7.723-10.099z"),h(n,"fill","#FA743E"),h(n,"d","M27 21H9c-2.209 0-4 1.791-4 4v11h26V25c0-2.209-1.791-4-4-4z"),h(r,"fill","#AF7E57"),h(r,"d","M25.904 11.734c-.677-.938-1.545-1.693-3.446-1.96.713.327 1.396 1.455 1.485 2.079.089.624.178 1.129-.386.505-2.261-2.499-4.723-1.515-7.163-3.041-1.703-1.067-2.222-2.247-2.222-2.247s-.208 1.574-2.792 3.178c-.749.465-1.643 1.501-2.139 3.03-.356 1.099-.246 2.079-.246 3.754 0 4.889 4.029 9 9 9s9-4.147 9-9c0-3.041-.318-4.229-1.091-5.298z"),h(s,"fill","#DD551F"),h(s,"d","M10 27h1v9h-1z"),h(o,"fill","#90603E"),h(o,"d","M4.702 26.495l-.283-.059h-.511c0-.058.023-.112.035-.169-.348-.215-.546-.625-.458-1.048.112-.542.643-.89 1.186-.779l2.091.433h1.676c.863 0 1.562.7 1.562 1.564V28H6.253s-1.481-.669-1.551-1.505z"),h(l,"fill","#AF7E57"),h(l,"d","M0 25.655c0-.432.35-.782.781-.782l4.69.782h3.747c.432 0 .781.351.781.781V28H5L.781 26.437S0 26.087 0 25.655z"),h(u,"fill","#FA743E"),h(u,"d","M4 36h6v-8H5z"),h(c,"fill","#DD551F"),h(c,"d","M25 27h1v9h-1z"),h(p,"fill","#90603E"),h(p,"d","M31.298 26.495l.283-.059h.511c0-.058-.023-.112-.035-.169.348-.215.546-.625.458-1.048-.112-.542-.642-.89-1.185-.779l-2.091.433h-1.676c-.863 0-1.562.7-1.562 1.564V28h3.747c-.001 0 1.48-.669 1.55-1.505z"),h(d,"fill","#AF7E57"),h(d,"d","M36 25.655c0-.432-.35-.782-.781-.782l-4.691.782h-3.747c-.432 0-.781.351-.781.781V28h5l4.219-1.563s.781-.35.781-.782z"),h(f,"fill","#FA743E"),h(f,"d","M32 36h-6v-8h5z"),h(g,"fill","#915A34"),h(g,"d","M19 19.5h-2c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h2c.276 0 .5.224.5.5s-.224.5-.5.5zm1.5 3.5H20c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h.5c.276 0 .5.224.5.5s-.224.5-.5.5z"),h(v,"fill","#662113"),h(v,"d","M14 16c-.552 0-1-.448-1-1v-1c0-.552.448-1 1-1s1 .448 1 1v1c0 .552-.448 1-1 1zm8 0c-.553 0-1-.448-1-1v-1c0-.552.447-1 1-1s1 .448 1 1v1c0 .552-.447 1-1 1z"),de(e,m)},m(y,x){st(y,e,x),T(e,t),T(e,n),T(e,r),T(e,s),T(e,o),T(e,l),T(e,u),T(e,c),T(e,p),T(e,d),T(e,f),T(e,g),T(e,v),w||(A=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],w=!0)},p(y,[x]){de(e,m=Ht(C,[x&1&&y[0],{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 36 36"}]))},i:ge,o:ge,d(y){y&&ot(e),w=!1,Yt(A)}}}function E9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class I9 extends It{constructor(e){super(),Dt(this,e,E9,S9,Rt,{color:1})}}function D9(i){let e,t,n,r,s,o,l,u,c,p,d,f,g,v,w,A,C,m,y,x,k,q=[i[1],{"xmlns:dc":"http://purl.org/dc/elements/1.1/"},{"xmlns:cc":"http://creativecommons.org/ns#"},{"xmlns:rdf":"http://www.w3.org/1999/02/22-rdf-syntax-ns#"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{xmlns:"http://www.w3.org/2000/svg"},{version:"1.0"},{width:"860.50732pt"},{height:"860.50732pt"},{viewBox:"0 0 860.50732 860.50732"},{preserveAspectRatio:"xMidYMid meet"},{id:"svg14"},{"sodipodi:docname":"direction_gradient.svg"},{"inkscape:version":"0.92.5 (2060ec1f9f, 2020-04-08)"}],I={};for(let S=0;S<q.length;S+=1)I=Z(I,q[S]);return{c(){e=_("svg"),t=_("defs"),n=_("linearGradient"),r=_("stop"),s=_("stop"),o=_("radialGradient"),l=_("sodipodi:namedview"),u=_("sodipodi:guide"),c=_("sodipodi:guide"),p=_("sodipodi:guide"),d=_("metadata"),f=tg("Created by potrace 1.15, written by Peter Selinger 2001-2017         "),g=_("rdf:RDF"),v=_("cc:Work"),w=_("dc:format"),A=tg("image/svg+xml"),C=_("dc:type"),m=_("dc:title"),y=_("path"),a(r,"stop-color",i[0]),a(r,"stop-opacity","1"),h(r,"offset","0"),h(r,"id","stop828"),a(s,"stop-color",i[0]),a(s,"stop-opacity","0"),h(s,"offset","1"),h(s,"id","stop830"),h(n,"inkscape:collect","always"),h(n,"id","linearGradient832"),h(o,"inkscape:collect","always"),f2(o,"xlink:href","#linearGradient832"),h(o,"id","radialGradient838"),h(o,"cx","430.25363"),h(o,"cy","519.61188"),h(o,"fx","430.25363"),h(o,"fy","519.61188"),h(o,"r","305.54589"),h(o,"gradientTransform","matrix(0.95288409,-0.94890664,0.94542304,0.94938587,-470.98122,345.21193)"),h(o,"gradientUnits","userSpaceOnUse"),h(t,"id","defs18"),h(u,"position","430.25363,862.49682"),h(u,"orientation","1,0"),h(u,"id","guide832"),h(u,"inkscape:locked","false"),h(c,"position","-42.427977,430.25368"),h(c,"orientation","0,1"),h(c,"id","guide834"),h(c,"inkscape:locked","false"),h(p,"position","398.27788,720.18823"),h(p,"orientation","0,1"),h(p,"id","guide840"),h(p,"inkscape:locked","false"),h(l,"pagecolor","#ffffff"),h(l,"bordercolor","#666666"),h(l,"borderopacity","1"),h(l,"objecttolerance","10"),h(l,"gridtolerance","10"),h(l,"guidetolerance","10"),h(l,"inkscape:pageopacity","0"),h(l,"inkscape:pageshadow","2"),h(l,"inkscape:window-width","1920"),h(l,"inkscape:window-height","999"),h(l,"id","namedview16"),h(l,"showgrid","false"),h(l,"showguides","true"),h(l,"inkscape:guide-bbox","true"),h(l,"inkscape:zoom","0.70710678"),h(l,"inkscape:cx","279.00239"),h(l,"inkscape:cy","856.75313"),h(l,"inkscape:window-x","0"),h(l,"inkscape:window-y","0"),h(l,"inkscape:window-maximized","1"),h(l,"inkscape:current-layer","svg14"),h(C,"rdf:resource","http://purl.org/dc/dcmitype/StillImage"),h(v,"rdf:about",""),h(d,"id","metadata2"),a(y,"fill","url(#radialGradient838)"),a(y,"fill-opacity","1"),a(y,"stroke","none"),a(y,"stroke-width","2.83464575"),a(y,"stroke-linecap","round"),a(y,"stroke-linejoin","round"),a(y,"stroke-miterlimit","4"),a(y,"stroke-dasharray","none"),a(y,"stroke-opacity","1"),h(y,"d","M 735.79979,124.70799 C 654.79116,43.598883 544.88842,-2.0206645 430.25389,-2.121103 315.61937,-2.0206592 205.71663,43.598888 124.70801,124.70799 l 305.54588,305.54589 z"),h(y,"id","path836"),h(y,"inkscape:connector-curvature","0"),h(y,"sodipodi:nodetypes","ccccc"),de(e,I)},m(S,$){st(S,e,$),T(e,t),T(t,n),T(n,r),T(n,s),T(t,o),T(e,l),T(l,u),T(l,c),T(l,p),T(e,d),T(d,f),T(d,g),T(g,v),T(v,w),T(w,A),T(v,C),T(v,m),T(e,y),x||(k=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],x=!0)},p(S,[$]){$&1&&a(r,"stop-color",S[0]),$&1&&a(s,"stop-color",S[0]),de(e,I=Ht(q,[$&2&&S[1],{"xmlns:dc":"http://purl.org/dc/elements/1.1/"},{"xmlns:cc":"http://creativecommons.org/ns#"},{"xmlns:rdf":"http://www.w3.org/1999/02/22-rdf-syntax-ns#"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{xmlns:"http://www.w3.org/2000/svg"},{version:"1.0"},{width:"860.50732pt"},{height:"860.50732pt"},{viewBox:"0 0 860.50732 860.50732"},{preserveAspectRatio:"xMidYMid meet"},{id:"svg14"},{"sodipodi:docname":"direction_gradient.svg"},{"inkscape:version":"0.92.5 (2060ec1f9f, 2020-04-08)"}]))},i:ge,o:ge,d(S){S&&ot(e),x=!1,Yt(k)}}}function R9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class $9 extends It{constructor(e){super(),Dt(this,e,R9,D9,Rt,{color:0})}}function N9(i){let e,t,n,r,s,o=[i[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"61.076954mm"},{height:"65.47831mm"},{viewBox:"0 0 216.4144 232.00976"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("path"),n=_("path"),h(t,"fill","#2b90d9"),h(t,"d","M211.80734 139.0875c-3.18125 16.36625-28.4925 34.2775-57.5625 37.74875-15.15875 1.80875-30.08375 3.47125-45.99875 2.74125-26.0275-1.1925-46.565-6.2125-46.565-6.2125 0 2.53375.15625 4.94625.46875 7.2025 3.38375 25.68625 25.47 27.225 46.39125 27.9425 21.11625.7225 39.91875-5.20625 39.91875-5.20625l.8675 19.09s-14.77 7.93125-41.08125 9.39c-14.50875.7975-32.52375-.365-53.50625-5.91875C9.23234 213.82 1.40609 165.31125.20859 116.09125c-.365-14.61375-.14-28.39375-.14-39.91875 0-50.33 32.97625-65.0825 32.97625-65.0825C49.67234 3.45375 78.20359.2425 107.86484 0h.72875c29.66125.2425 58.21125 3.45375 74.8375 11.09 0 0 32.975 14.7525 32.975 65.0825 0 0 .41375 37.13375-4.59875 62.915"),h(n,"fill","#fff"),h(n,"d","M177.50984 80.077v60.94125h-24.14375v-59.15c0-12.46875-5.24625-18.7975-15.74-18.7975-11.6025 0-17.4175 7.5075-17.4175 22.3525v32.37625H96.20734V85.42325c0-14.845-5.81625-22.3525-17.41875-22.3525-10.49375 0-15.74 6.32875-15.74 18.7975v59.15H38.90484V80.077c0-12.455 3.17125-22.3525 9.54125-29.675 6.56875-7.3225 15.17125-11.07625 25.85-11.07625 12.355 0 21.71125 4.74875 27.8975 14.2475l6.01375 10.08125 6.015-10.08125c6.185-9.49875 15.54125-14.2475 27.8975-14.2475 10.6775 0 19.28 3.75375 25.85 11.07625 6.36875 7.3225 9.54 17.22 9.54 29.675"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(e,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){de(e,l=Ht(o,[c&1&&u[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"61.076954mm"},{height:"65.47831mm"},{viewBox:"0 0 216.4144 232.00976"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function L9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class M9 extends It{constructor(e){super(),Dt(this,e,L9,N9,Rt,{color:1})}}function O9(i){let e,t,n,r,s,o,l,u,c,p,d,f,g,v,w,A,C,m,y=[i[0],{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 36 36"}],x={};for(let k=0;k<y.length;k+=1)x=Z(x,y[k]);return{c(){e=_("svg"),t=_("path"),n=_("path"),r=_("path"),s=_("path"),o=_("path"),l=_("path"),u=_("path"),c=_("circle"),p=_("circle"),d=_("circle"),f=_("circle"),g=_("circle"),v=_("circle"),w=_("circle"),A=_("circle"),h(t,"fill","#DD2E44"),h(t,"d","M11.626 7.488c-.112.112-.197.247-.268.395l-.008-.008L.134 33.141l.011.011c-.208.403.14 1.223.853 1.937.713.713 1.533 1.061 1.936.853l.01.01L28.21 24.735l-.008-.009c.147-.07.282-.155.395-.269 1.562-1.562-.971-6.627-5.656-11.313-4.687-4.686-9.752-7.218-11.315-5.656z"),h(n,"fill","#EA596E"),h(n,"d","M13 12L.416 32.506l-.282.635.011.011c-.208.403.14 1.223.853 1.937.232.232.473.408.709.557L17 17l-4-5z"),h(r,"fill","#A0041E"),h(r,"d","M23.012 13.066c4.67 4.672 7.263 9.652 5.789 11.124-1.473 1.474-6.453-1.118-11.126-5.788-4.671-4.672-7.263-9.654-5.79-11.127 1.474-1.473 6.454 1.119 11.127 5.791z"),h(s,"fill","#AA8DD8"),h(s,"d","M18.59 13.609c-.199.161-.459.245-.734.215-.868-.094-1.598-.396-2.109-.873-.541-.505-.808-1.183-.735-1.862.128-1.192 1.324-2.286 3.363-2.066.793.085 1.147-.17 1.159-.292.014-.121-.277-.446-1.07-.532-.868-.094-1.598-.396-2.11-.873-.541-.505-.809-1.183-.735-1.862.13-1.192 1.325-2.286 3.362-2.065.578.062.883-.057 1.012-.134.103-.063.144-.123.148-.158.012-.121-.275-.446-1.07-.532-.549-.06-.947-.552-.886-1.102.059-.549.55-.946 1.101-.886 2.037.219 2.973 1.542 2.844 2.735-.13 1.194-1.325 2.286-3.364 2.067-.578-.063-.88.057-1.01.134-.103.062-.145.123-.149.157-.013.122.276.446 1.071.532 2.037.22 2.973 1.542 2.844 2.735-.129 1.192-1.324 2.286-3.362 2.065-.578-.062-.882.058-1.012.134-.104.064-.144.124-.148.158-.013.121.276.446 1.07.532.548.06.947.553.886 1.102-.028.274-.167.511-.366.671z"),h(o,"fill","#77B255"),h(o,"d","M30.661 22.857c1.973-.557 3.334.323 3.658 1.478.324 1.154-.378 2.615-2.35 3.17-.77.216-1.001.584-.97.701.034.118.425.312 1.193.095 1.972-.555 3.333.325 3.657 1.479.326 1.155-.378 2.614-2.351 3.17-.769.216-1.001.585-.967.702.033.117.423.311 1.192.095.53-.149 1.084.16 1.233.691.148.532-.161 1.084-.693 1.234-1.971.555-3.333-.323-3.659-1.479-.324-1.154.379-2.613 2.353-3.169.77-.217 1.001-.584.967-.702-.032-.117-.422-.312-1.19-.096-1.974.556-3.334-.322-3.659-1.479-.325-1.154.378-2.613 2.351-3.17.768-.215.999-.585.967-.701-.034-.118-.423-.312-1.192-.096-.532.15-1.083-.16-1.233-.691-.149-.53.161-1.082.693-1.232z"),h(l,"fill","#AA8DD8"),h(l,"d","M23.001 20.16c-.294 0-.584-.129-.782-.375-.345-.432-.274-1.061.156-1.406.218-.175 5.418-4.259 12.767-3.208.547.078.927.584.849 1.131-.078.546-.58.93-1.132.848-6.493-.922-11.187 2.754-11.233 2.791-.186.148-.406.219-.625.219z"),h(u,"fill","#77B255"),h(u,"d","M5.754 16c-.095 0-.192-.014-.288-.042-.529-.159-.829-.716-.67-1.245 1.133-3.773 2.16-9.794.898-11.364-.141-.178-.354-.353-.842-.316-.938.072-.849 2.051-.848 2.071.042.551-.372 1.031-.922 1.072-.559.034-1.031-.372-1.072-.923-.103-1.379.326-4.035 2.692-4.214 1.056-.08 1.933.287 2.552 1.057 2.371 2.951-.036 11.506-.542 13.192-.13.433-.528.712-.958.712z"),h(c,"fill","#5C913B"),h(c,"cx","25.5"),h(c,"cy","9.5"),h(c,"r","1.5"),h(p,"fill","#9266CC"),h(p,"cx","2"),h(p,"cy","18"),h(p,"r","2"),h(d,"fill","#5C913B"),h(d,"cx","32.5"),h(d,"cy","19.5"),h(d,"r","1.5"),h(f,"fill","#5C913B"),h(f,"cx","23.5"),h(f,"cy","31.5"),h(f,"r","1.5"),h(g,"fill","#FFCC4D"),h(g,"cx","28"),h(g,"cy","4"),h(g,"r","2"),h(v,"fill","#FFCC4D"),h(v,"cx","32.5"),h(v,"cy","8.5"),h(v,"r","1.5"),h(w,"fill","#FFCC4D"),h(w,"cx","29.5"),h(w,"cy","12.5"),h(w,"r","1.5"),h(A,"fill","#FFCC4D"),h(A,"cx","7.5"),h(A,"cy","23.5"),h(A,"r","1.5"),de(e,x)},m(k,q){st(k,e,q),T(e,t),T(e,n),T(e,r),T(e,s),T(e,o),T(e,l),T(e,u),T(e,c),T(e,p),T(e,d),T(e,f),T(e,g),T(e,v),T(e,w),T(e,A),C||(m=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],C=!0)},p(k,[q]){de(e,x=Ht(y,[q&1&&k[0],{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 36 36"}]))},i:ge,o:ge,d(k){k&&ot(e),C=!1,Yt(m)}}}function P9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class F9 extends It{constructor(e){super(),Dt(this,e,P9,O9,Rt,{color:1})}}function B9(i){let e,t,n,r,s,o,l=[i[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}],u={};for(let c=0;c<l.length;c+=1)u=Z(u,l[c]);return{c(){e=_("svg"),t=_("g"),n=_("path"),r=_("path"),a(n,"fill-rule","nonzero"),a(n,"fill","rgb(21.568628%,83.92157%,28.627452%)"),a(n,"fill-opacity","1"),a(n,"stroke-width","1"),a(n,"stroke-linecap","butt"),a(n,"stroke-linejoin","miter"),a(n,"stroke","rgb(37.64706%,37.64706%,37.64706%)"),a(n,"stroke-opacity","1"),a(n,"stroke-miterlimit","4"),h(n,"d","M 98 49.021438 C 98 76.083729 76.062292 98.021438 49 98.021438 C 21.937708 98.021438 0 76.083729 0 49.021438 C 0 21.959146 21.937708 0.0214375 49 0.0214375 C 76.062292 0.0214375 98 21.959146 98 49.021438 Z M 98 49.021438 "),h(n,"transform","matrix(3.826531,0,0,3.826531,0,0)"),a(r,"stroke","none"),a(r,"fill-rule","nonzero"),a(r,"fill","rgb(100%,100%,100%)"),a(r,"fill-opacity","1"),h(r,"d","M 185.398438 53.390625 C 176.808594 53.523438 168.636719 57.125 162.738281 63.378906 C 157.074219 69.394531 153.96875 77.378906 154.085938 85.640625 L 154.085938 152.132812 L 88.527344 152.132812 C 79.929688 152.011719 71.644531 155.371094 65.566406 161.453125 C 56.40625 170.613281 53.710938 184.414062 58.761719 196.347656 C 63.808594 208.28125 75.585938 215.960938 88.539062 215.765625 L 154.085938 215.765625 L 154.085938 281.003906 C 153.898438 292.488281 159.917969 303.183594 169.835938 308.984375 C 179.753906 314.785156 192.027344 314.785156 201.945312 308.992188 C 211.863281 303.199219 217.890625 292.503906 217.707031 281.019531 L 217.707031 215.765625 L 283.894531 215.765625 C 295.296875 215.820312 305.855469 209.769531 311.574219 199.90625 C 317.292969 190.042969 317.296875 177.871094 311.582031 168.007812 C 305.871094 158.140625 295.3125 152.085938 283.910156 152.132812 L 217.703125 152.132812 L 217.703125 85.640625 C 217.820312 77.042969 214.453125 68.765625 208.367188 62.6875 C 202.28125 56.613281 193.996094 53.261719 185.398438 53.390625 Z M 185.398438 53.390625 "),h(t,"id","surface1"),de(e,u)},m(c,p){st(c,e,p),T(e,t),T(t,n),T(t,r),s||(o=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],s=!0)},p(c,[p]){de(e,u=Ht(l,[p&1&&c[0],{xmlns:"http://www.w3.org/2000/svg"},{width:"375px"},{height:"375px"},{viewBox:"0 0 375 375"},{version:"1.1"}]))},i:ge,o:ge,d(c){c&&ot(e),s=!1,Yt(o)}}}function j9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(0,r=pe(e,n)),"color"in d&&t(1,s=d.color)},[r,s,o,l,u,c,p]}class W9 extends It{constructor(e){super(),Dt(this,e,j9,B9,Rt,{color:1})}}function J9(i){let e,t,n,r,s,o;const l=i[2].default,u=vp(l,i,i[1],null);let c=[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},i[0]],p={};for(let d=0;d<c.length;d+=1)p=Z(p,c[d]);return{c(){e=_("svg"),u&&u.c(),t=_("path"),n=_("path"),h(t,"d","M12.232 4.232a2.5 2.5 0 013.536 3.536l-1.225 1.224a.75.75 0 001.061 1.06l1.224-1.224a4 4 0 00-5.656-5.656l-3 3a4 4 0 00.225 5.865.75.75 0 00.977-1.138 2.5 2.5 0 01-.142-3.667l3-3z"),h(n,"d","M11.603 7.963a.75.75 0 00-.977 1.138 2.5 2.5 0 01.142 3.667l-3 3a2.5 2.5 0 01-3.536-3.536l1.225-1.224a.75.75 0 00-1.061-1.06l-1.224 1.224a4 4 0 105.656 5.656l3-3a4 4 0 00-.225-5.865z"),de(e,p)},m(d,f){st(d,e,f),u&&u.m(e,null),T(e,t),T(e,n),r=!0,s||(o=[P(e,"click",i[3]),P(e,"mouseover",i[4]),P(e,"mouseenter",i[5]),P(e,"mouseleave",i[6]),P(e,"keydown",i[7])],s=!0)},p(d,[f]){u&&u.p&&(!r||f&2)&&wp(u,l,d,d[1],r?Cp(l,d[1],f,null):_p(d[1]),null),de(e,p=Ht(c,[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},f&1&&d[0]]))},i(d){r||(We(u,d),r=!0)},o(d){Ue(u,d),r=!1},d(d){d&&ot(e),u&&u.d(d),s=!1,Yt(o)}}}function V9(i,e,t){const n=[];let r=pe(e,n),{$$slots:s={},$$scope:o}=e;function l(f){F.call(this,i,f)}function u(f){F.call(this,i,f)}function c(f){F.call(this,i,f)}function p(f){F.call(this,i,f)}function d(f){F.call(this,i,f)}return i.$$set=f=>{e=Z(Z({},e),Xt(f)),t(0,r=pe(e,n)),"$$scope"in f&&t(1,o=f.$$scope)},[r,o,s,l,u,c,p,d]}class G9 extends It{constructor(e){super(),Dt(this,e,V9,J9,Rt,{})}}function U9(i){let e,t,n,r,s,o=[i[1],{width:"500.94501"},{height:"500.94501"},{viewBox:"0 0 500.94501 500.94501"},{version:"1.1"},{id:"svg5"},{"sodipodi:docname":"square_rounded.svg"},{"inkscape:version":"1.3.2 (1:1.3.2+202311252150+091e20ef0f)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),h(t,"id","surface1"),h(t,"transform","translate(0.4725,0.4725)"),h(n,"class","selectable"),h(n,"id","rect1"),a(n,"fill",i[0]),h(n,"d","m 75.4725,0.4725 h 350 c 41.55,0 75,33.45 75,75 v 350 c 0,41.55 -33.45,75 -75,75 h -350 c -41.55,0 -75,-33.45 -75,-75 v -350 c 0,-41.55 33.45,-75 75,-75 z"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(e,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{width:"500.94501"},{height:"500.94501"},{viewBox:"0 0 500.94501 500.94501"},{version:"1.1"},{id:"svg5"},{"sodipodi:docname":"square_rounded.svg"},{"inkscape:version":"1.3.2 (1:1.3.2+202311252150+091e20ef0f)"},{"xmlns:inkscape":"http://www.inkscape.org/namespaces/inkscape"},{"xmlns:sodipodi":"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"},{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:svg":"http://www.w3.org/2000/svg"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function z9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class H9 extends It{constructor(e){super(),Dt(this,e,z9,U9,Rt,{color:0})}}function Y9(i){let e,t,n,r,s,o=[i[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"268px"},{height:"373px"},{viewBox:"0 0 268 373"},{version:"1.1"}],l={};for(let u=0;u<o.length;u+=1)l=Z(l,o[u]);return{c(){e=_("svg"),t=_("g"),n=_("path"),a(n,"stroke","none"),a(n,"fill-rule","nonzero"),a(n,"fill",i[0]),a(n,"fill-opacity","1"),h(n,"d","M 88.972656 57.019531 C 69.667969 77.699219 74.996094 110.734375 74.996094 110.734375 C 74.996094 110.734375 94.699219 134.046875 133.414062 134.046875 C 172.128906 134.046875 191.84375 110.734375 191.84375 110.734375 C 191.84375 110.734375 197.09375 78.144531 178.199219 57.4375 C 190.019531 50.871094 196.980469 41.378906 194.105469 34.921875 C 190.839844 27.648438 176.441406 27 161.882812 33.476562 C 156.472656 35.878906 151.863281 38.929688 148.28125 42.175781 C 143.742188 41.355469 138.925781 40.796875 133.414062 40.796875 C 128.28125 40.796875 123.714844 41.285156 119.414062 41.980469 C 115.886719 38.792969 111.359375 35.835938 106.074219 33.476562 C 91.515625 27.023438 77.09375 27.671875 73.851562 34.921875 C 71.023438 41.242188 77.609375 50.472656 88.972656 57.019531 Z M 235.433594 207.535156 C 232.417969 206.898438 229.542969 206.535156 226.761719 206.261719 C 226.761719 205.488281 226.898438 204.757812 226.898438 203.960938 C 226.898438 191.726562 225.164062 180.046875 222.355469 168.949219 C 228.359375 169.460938 236.003906 168.082031 243.738281 164.65625 C 258.296875 158.179688 267.472656 147.035156 264.230469 139.808594 C 260.992188 132.535156 246.566406 131.886719 232.007812 138.363281 C 225.207031 141.390625 219.664062 145.453125 215.945312 149.621094 C 213.113281 142.972656 209.917969 136.585938 206.152344 130.78125 C 195.132812 139.945312 174.273438 153.625 145.15625 156.664062 L 145.15625 273.875 C 145.15625 273.875 145.0625 285.53125 133.460938 285.53125 C 121.867188 285.53125 121.777344 273.875 121.777344 273.875 L 121.777344 156.710938 C 92.636719 153.671875 71.765625 139.964844 60.765625 130.824219 C 57.160156 136.402344 54.058594 142.480469 51.296875 148.800781 C 47.542969 144.929688 42.304688 141.207031 35.972656 138.382812 C 21.414062 131.929688 6.992188 132.578125 3.75 139.828125 C 0.5 147.082031 9.683594 158.203125 24.242188 164.679688 C 31.488281 167.902344 38.675781 169.347656 44.496094 169.085938 C 41.699219 180.160156 39.941406 191.792969 39.941406 203.984375 C 39.941406 204.78125 40.082031 205.535156 40.101562 206.351562 C 37.648438 206.625 35.105469 206.992188 32.515625 207.535156 C 13.539062 211.453125 -0.996094 221.242188 0.078125 229.324219 C 1.148438 237.453125 17.421875 240.796875 36.441406 236.859375 C 38.917969 236.359375 41.347656 235.722656 43.664062 235.015625 C 47.007812 249.882812 52.359375 263.675781 59.761719 275.5625 C 55.371094 277.769531 50.804688 281.023438 46.605469 285.257812 C 34.96875 296.871094 30.246094 310.984375 36.0625 316.789062 C 41.882812 322.597656 56.019531 317.882812 67.660156 306.296875 C 71.070312 302.878906 73.808594 299.285156 75.929688 295.730469 C 91.824219 311.257812 111.734375 320.546875 133.460938 320.546875 C 155.492188 320.546875 175.734375 310.984375 191.707031 295.070312 C 193.855469 298.828125 196.730469 302.652344 200.335938 306.25 C 211.949219 317.859375 226.121094 322.574219 231.941406 316.769531 C 237.757812 310.960938 233.035156 296.871094 221.398438 285.257812 C 216.902344 280.75 212.019531 277.335938 207.363281 275.082031 C 214.710938 263.246094 220.003906 249.449219 223.316406 234.628906 C 225.9375 235.445312 228.675781 236.222656 231.550781 236.835938 C 250.5625 240.773438 266.832031 237.40625 267.925781 229.300781 C 268.953125 221.242188 254.417969 211.453125 235.433594 207.535156 Z M 235.433594 207.535156 "),h(t,"id","surface1"),de(e,l)},m(u,c){st(u,e,c),T(e,t),T(t,n),r||(s=[P(e,"click",i[2]),P(e,"mouseover",i[3]),P(e,"mouseenter",i[4]),P(e,"mouseleave",i[5]),P(e,"keydown",i[6])],r=!0)},p(u,[c]){c&1&&a(n,"fill",u[0]),de(e,l=Ht(o,[c&2&&u[1],{xmlns:"http://www.w3.org/2000/svg"},{width:"268px"},{height:"373px"},{viewBox:"0 0 268 373"},{version:"1.1"}]))},i:ge,o:ge,d(u){u&&ot(e),r=!1,Yt(s)}}}function X9(i,e,t){const n=["color"];let r=pe(e,n),{color:s="#000000"}=e;function o(d){F.call(this,i,d)}function l(d){F.call(this,i,d)}function u(d){F.call(this,i,d)}function c(d){F.call(this,i,d)}function p(d){F.call(this,i,d)}return i.$$set=d=>{e=Z(Z({},e),Xt(d)),t(1,r=pe(e,n)),"color"in d&&t(0,s=d.color)},[s,r,o,l,u,c,p]}class Z9 extends It{constructor(e){super(),Dt(this,e,X9,Y9,Rt,{color:0})}}function Gm(i){let e,t,n,r;const s=[M7,L7,N7,$7,R7,D7,I7,E7,S7,q7,A7,k7,x7,T7,C7,_7,w7,v7,b7,y7,m7,g7,f7,p7,d7,c7,h7,u7,l7,a7,o7,s7,r7,i7,n7,t7,e7,Q9,K9],o=[];function l(u,c){return u[0]==="pin"?0:u[0]==="square"?1:u[0]==="square_rounded"?2:u[0]==="bug"?3:u[0]==="circle"?4:u[0]==="checkmark"?5:u[0]==="clock"?6:u[0]==="close"?7:u[0]==="crosshair"?8:u[0]==="help"?9:u[0]==="home"?10:u[0]==="invalid"?11:u[0]==="location"?12:u[0]==="location_empty"?13:u[0]==="location_locked"?14:u[0]==="note"?15:u[0]==="resolved"?16:u[0]==="ring"?17:u[0]==="scissors"?18:u[0]==="teardrop"?19:u[0]==="teardrop_with_hole_green"?20:u[0]==="triangle"?21:u[0]==="brick_wall_square"?22:u[0]==="brick_wall_round"?23:u[0]==="gps_arrow"?24:u[0]==="checkmark"?25:u[0]==="help"?26:u[0]==="close"?27:u[0]==="invalid"?28:u[0]==="heart"?29:u[0]==="heart_outline"?30:u[0]==="confirm"?31:u[0]==="direction"?32:u[0]==="not_found"?33:u[0]==="mastodon"?34:u[0]==="party"?35:u[0]==="addSmall"?36:u[0]==="link"?37:38}return e=l(i),t=o[e]=s[e](i),{c(){t.c(),n=Tp()},m(u,c){o[e].m(u,c),st(u,n,c),r=!0},p(u,c){let p=e;e=l(u),e===p?o[e].p(u,c):(tc(),Ue(o[p],1,1,()=>{o[p]=null}),ec(),t=o[e],t?t.p(u,c):(t=o[e]=s[e](u),t.c()),We(t,1),t.m(n.parentNode,n))},i(u){r||(We(t),r=!0)},o(u){Ue(t),r=!1},d(u){o[e].d(u),u&&ot(n)}}}function K9(i){let e,t,n;return{c(){e=xp("img"),h(e,"class",t=i[2]??"h-full w-full"),ng(e.src,n=i[0])||h(e,"src",n),h(e,"aria-hidden","true"),h(e,"alt","")},m(r,s){st(r,e,s)},p(r,s){s&4&&t!==(t=r[2]??"h-full w-full")&&h(e,"class",t),s&1&&!ng(e.src,n=r[0])&&h(e,"src",n)},i:ge,o:ge,d(r){r&&ot(e)}}}function Q9(i){let e,t;return e=new G9({props:{style:"--svg-color: "+i[1],class:Jo(i[2],"apply-fill")}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.style="--svg-color: "+n[1]),r&4&&(s.class=Jo(n[2],"apply-fill")),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function e7(i){let e,t;return e=new W9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function t7(i){let e,t;return e=new F9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function n7(i){let e,t;return e=new M9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function i7(i){let e,t;return e=new I9({props:{class:Jo(i[2],"no-image-background"),color:i[1]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&4&&(s.class=Jo(n[2],"no-image-background")),r&2&&(s.color=n[1]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function r7(i){let e,t;return e=new $9({props:{class:i[2],color:i[1]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&4&&(s.class=n[2]),r&2&&(s.color=n[1]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function s7(i){let e,t;return e=new q9({props:{class:i[2],color:i[1]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&4&&(s.class=n[2]),r&2&&(s.color=n[1]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function o7(i){let e,t;return e=new x9({props:{style:"--svg-color: "+i[1],class:Jo(i[2],"apply-fill")}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.style="--svg-color: "+n[1]),r&4&&(s.class=Jo(n[2],"apply-fill")),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function a7(i){let e,t;return e=new _9({props:{style:"--svg-color: "+i[1],class:Jo(i[2],"apply-fill")}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.style="--svg-color: "+n[1]),r&4&&(s.class=Jo(n[2],"apply-fill")),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function l7(i){let e,t;return e=new Qy({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function u7(i){let e,t;return e=new Zy({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function h7(i){let e,t;return e=new Ky({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function c7(i){let e,t;return e=new Xy({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function d7(i){let e,t;return e=new b9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function p7(i){let e,t;return e=new g9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function f7(i){let e,t;return e=new d9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function g7(i){let e,t;return e=new u9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function m7(i){let e,t;return e=new o9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function y7(i){let e,t;return e=new i9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function b7(i){let e,t;return e=new e9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function v7(i){let e,t;return e=new Z6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function w7(i){let e,t;return e=new H6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function _7(i){let e,t;return e=new G6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function C7(i){let e,t;return e=new W6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function T7(i){let e,t;return e=new F6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function x7(i){let e,t;return e=new M6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function k7(i){let e,t;return e=new Qy({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function A7(i){let e,t;return e=new D6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function q7(i){let e,t;return e=new Ky({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function S7(i){let e,t;return e=new A6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function E7(i){let e,t;return e=new Zy({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function I7(i){let e,t;return e=new _6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function D7(i){let e,t;return e=new Xy({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function R7(i){let e,t;return e=new m6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function $7(i){let e,t;return e=new Z9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function N7(i){let e,t;return e=new H9({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function L7(i){let e,t;return e=new p6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function M7(i){let e,t;return e=new h6({props:{color:i[1],class:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.color=n[1]),r&4&&(s.class=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function O7(i){let e,t,n=i[0]&&Gm(i);return{c(){n&&n.c(),e=Tp()},m(r,s){n&&n.m(r,s),st(r,e,s),t=!0},p(r,[s]){r[0]?n?(n.p(r,s),s&1&&We(n,1)):(n=Gm(r),n.c(),We(n,1),n.m(e.parentNode,e)):n&&(tc(),Ue(n,1,1,()=>{n=null}),ec())},i(r){t||(We(n),t=!0)},o(r){Ue(n),t=!1},d(r){n&&n.d(r),r&&ot(e)}}}function P7(i,e,t){let{icon:n}=e,{color:r=void 0}=e,{clss:s=void 0}=e;return i.$$set=o=>{"icon"in o&&t(0,n=o.icon),"color"in o&&t(1,r=o.color),"clss"in o&&t(2,s=o.clss)},[n,r,s]}class F7 extends It{constructor(e){super(),Dt(this,e,P7,O7,Rt,{icon:0,color:1,clss:2})}}function B7(i){let e,t;return e=new F7({props:{icon:i[1],color:i[2]}}),{c(){nn(e.$$.fragment)},m(n,r){rn(e,n,r),t=!0},p(n,[r]){const s={};r&2&&(s.icon=n[1]),r&4&&(s.color=n[2]),e.$set(s)},i(n){t||(We(e.$$.fragment,n),t=!0)},o(n){Ue(e.$$.fragment,n),t=!1},d(n){sn(e,n)}}}function j7(i,e,t){var p,d,f,g,v;let n,r=ge,s=()=>(r(),r=l0(l,w=>t(4,n=w)),l);i.$$.on_destroy.push(()=>r());let{icon:o}=e,{tags:l}=e;s();let u=(f=(d=(p=o.icon)==null?void 0:p.GetRenderValue(n))==null?void 0:d.Subs(n))==null?void 0:f.txt,c=((v=(g=o.color)==null?void 0:g.GetRenderValue(n))==null?void 0:v.txt)??"#000000";return i.$$set=w=>{"icon"in w&&t(3,o=w.icon),"tags"in w&&s(t(0,l=w.tags))},i.$$.update=()=>{var w,A,C,m,y;i.$$.dirty&24&&t(1,u=(C=(A=(w=o.icon)==null?void 0:w.GetRenderValue(n))==null?void 0:A.Subs(n))==null?void 0:C.txt),i.$$.dirty&24&&t(2,c=((y=(m=o.color)==null?void 0:m.GetRenderValue(n))==null?void 0:y.txt)??"#000000")},[l,u,c,o,n]}class W7 extends It{constructor(e){super(),Dt(this,e,j7,B7,Rt,{icon:3,tags:0})}}const Kh=class Kh{constructor(){R(this,"gotMeasurement",new xr(!1));R(this,"alpha",new xr(void 0));R(this,"beta",new xr(void 0));R(this,"gamma",new xr(void 0));R(this,"absolute",new xr(void 0));R(this,"arrowDirection",new xr(void 0));R(this,"_measurementsStarted",!1);R(this,"_animateFakeMeasurements",!1)}fakeMeasurements(e=!0){console.log("Starting fake measurements of orientation sensors",{alpha:this.alpha,beta:this.beta,gamma:this.gamma,absolute:this.absolute}),this.alpha.setData(45),e&&(this._animateFakeMeasurements=!0,u0.Chronic(25).addCallback(t=>{if(this.alpha.setData(t.getTime()/50%360),!this._animateFakeMeasurements)return!0})),this.beta.setData(20),this.gamma.setData(30),this.absolute.setData(!0),this.gotMeasurement.setData(!0)}startMeasurements(){if(!this._measurementsStarted){this._measurementsStarted=!0,console.log("Starting device orientation listener");try{window.addEventListener("deviceorientationabsolute",e=>this.update(e))}catch(e){console.log("Could not init device orientation api due to",e)}}}update(e){e.alpha===null||e.beta===null||e.gamma===null||(this.gotMeasurement.setData(!0),this.alpha.setData(Math.floor(360-e.alpha)),this.beta.setData(Math.floor(e.beta)),this.gamma.setData(Math.floor(e.gamma)),this.absolute.setData(e.absolute),this.beta.data<0?this.arrowDirection.setData(this.gamma.data+180):this.arrowDirection.setData(-this.gamma.data))}};R(Kh,"singleton",new Kh);let ap=Kh;function Um(i,e,t){const n=i.slice();return n[5]=e[t],n}function zm(i){let e,t,n,r=i[0],s=[];for(let l=0;l<r.length;l+=1)s[l]=Hm(Um(i,r,l));const o=l=>Ue(s[l],1,1,()=>{s[l]=null});return{c(){e=xp("div");for(let l=0;l<s.length;l+=1)s[l].c();h(e,"class","relative h-full w-full"),h(e,"style",t=`transform: rotate(${i[3]})`)},m(l,u){st(l,e,u);for(let c=0;c<s.length;c+=1)s[c]&&s[c].m(e,null);n=!0},p(l,u){if(u&3){r=l[0];let c;for(c=0;c<r.length;c+=1){const p=Um(l,r,c);s[c]?(s[c].p(p,u),We(s[c],1)):(s[c]=Hm(p),s[c].c(),We(s[c],1),s[c].m(e,null))}for(tc(),c=r.length;c<s.length;c+=1)o(c);ec()}(!n||u&8&&t!==(t=`transform: rotate(${l[3]})`))&&h(e,"style",t)},i(l){if(!n){for(let u=0;u<r.length;u+=1)We(s[u]);n=!0}},o(l){s=s.filter(Boolean);for(let u=0;u<s.length;u+=1)Ue(s[u]);n=!1},d(l){l&&ot(e),g2(s,l)}}}function Hm(i){let e,t,n,r;return t=new W7({props:{icon:i[5],tags:i[1]}}),{c(){e=xp("div"),nn(t.$$.fragment),n=m2(),h(e,"class","absolute top-0 left-0 h-full w-full")},m(s,o){st(s,e,o),rn(t,e,null),T(e,n),r=!0},p(s,o){const l={};o&1&&(l.icon=s[5]),o&2&&(l.tags=s[1]),t.$set(l)},i(s){r||(We(t.$$.fragment,s),r=!0)},o(s){Ue(t.$$.fragment,s),r=!1},d(s){s&&ot(e),sn(t)}}}function J7(i){let e,t,n=i[0]&&i[0]&&zm(i);return{c(){n&&n.c(),e=Tp()},m(r,s){n&&n.m(r,s),st(r,e,s),t=!0},p(r,[s]){r[0]&&r[0]?n?(n.p(r,s),s&1&&We(n,1)):(n=zm(r),n.c(),We(n,1),n.m(e.parentNode,e)):n&&(tc(),Ue(n,1,1,()=>{n=null}),ec())},i(r){t||(We(n),t=!0)},o(r){Ue(n),t=!1},d(r){n&&n.d(r),r&&ot(e)}}}function V7(i,e,t){var p;let n,r=ge,s=()=>(r(),r=l0(c,d=>t(3,n=d)),c);i.$$.on_destroy.push(()=>r());let{marker:o}=e,{tags:l}=e,{rotation:u=void 0}=e,c=u?l.map(d=>u.GetRenderValue(d).Subs(d).txt):new Su("0deg");return s(),((p=u==null?void 0:u.render)==null?void 0:p.txt)==="{alpha}deg"&&s(c=ap.singleton.alpha.map(d=>d?d+"deg":"0deg  ")),i.$$set=d=>{"marker"in d&&t(0,o=d.marker),"tags"in d&&t(1,l=d.tags),"rotation"in d&&t(4,u=d.rotation)},[o,l,c,n,u]}class md extends It{constructor(e){super(),Dt(this,e,V7,J7,Rt,{marker:0,tags:1,rotation:4})}}const Qh=class Qh extends _c{constructor(t,n){super(t,n);R(this,"icon");R(this,"color");this.icon=this.tr("icon"),this.color=this.tr("color")}};R(Qh,"defaultIcon",new Qh({icon:"pin",color:"#ff9939"}));let Jh=Qh;const su=class su extends _c{constructor(t,n){super(t,n);R(this,"location");R(this,"marker");R(this,"iconBadges");R(this,"iconSize");R(this,"anchor");R(this,"label");R(this,"labelCss");R(this,"labelCssClasses");R(this,"rotation");R(this,"cssDef");R(this,"cssClasses");R(this,"pitchAlignment");R(this,"rotationAlignment");if(t==null)throw`At ${n}: Invalid PointRenderingConfig: undefined or null`;if(typeof t.location=="string"&&(t.location=[t.location]),this.location=new Set(t.location),this.location.forEach(r=>{const s=su.allowed_location_codes;if(!s.has(r))throw`A point rendering has an invalid location: '${r}' is not one of ${Array.from(s).join(", ")} (at ${n}.location)`}),this.marker=(t.marker??[]).map(r=>new Jh(r)),t.css!==void 0&&(this.cssDef=this.tr("css",void 0)),this.cssClasses=this.tr("cssClasses",void 0),this.labelCss=this.tr("labelCss",void 0),this.labelCssClasses=this.tr("labelCssClasses",void 0),this.iconBadges=(t.iconBadges??[]).map((r,s)=>({if:In.Tag(r.if),then:new jo(r.then,`iconBadges.${s}`)})),typeof t.iconSize=="string"){const r=t.iconSize;if(["bottom","top","center"].some(s=>r.endsWith(s)))throw"At "+n+" in : iconSize uses legacy ,bottom, center or top postfix. Use the field `anchor` instead."}this.iconSize=this.tr("iconSize","40,40",n+".iconsize"),this.anchor=this.tr("anchor","center",n+".anchor"),this.label=this.tr("label",void 0,n+".label"),this.rotation=this.tr("rotation","0",n+".rotation"),this.pitchAlignment=this.tr("pitchAlignment","canvas",n+".pitchAlignment"),this.rotationAlignment=this.tr("rotationAlignment",t.pitchAlignment==="map"?"map":"canvas",n+".rotationAlignment")}static FromHtmlMulti(t,n){const r=[];for(const s of t.split(";")){const[o,l]=s.split(":");r.push(new Jh({icon:o,color:l}))}return new Jr(md,{marker:r,tags:n}).SetClass("w-full h-full block absolute top-0 left-0")}GetBaseIcon(t){return new Jr(md,{marker:this.marker,rotation:this.rotation,tags:new Su(t)})}RenderIcon(t,n){var x,k,q,I,S,$;function r(B,D=40){const N=Number(B);return isNaN(N)?D:N}function s(B,D){var O;if(t===void 0)return D;const N=((O=B==null?void 0:B.GetRenderValue(t.data))==null?void 0:O.txt)??D;return ke.SubstituteKeys(N,t.data).replace(/{.*}/g,"")}let o=0,l=0;const u=s(this.anchor,"center"),c=((x=u==null?void 0:u.trim())==null?void 0:x.toLowerCase())??"center",p=this.iconSize.GetRenderValue(t.data).Subs(t).txt??"[40,40]",[d,f]=p.split(",").map(B=>r(B));c==="left"&&(o=-d/2),c==="right"&&(o=d/2),c==="top"&&(l=f/2),c==="bottom"&&(l=-f/2);const g=((k=this.marker)==null?void 0:k.length)>0?new Jr(md,{marker:this.marker,rotation:this.rotation,tags:t}).SetClass("w-full h-full"):void 0;let v;((n==null?void 0:n.includeBadges)??!0)&&(v=this.GetBadges(t,n==null?void 0:n.metatags));const w=new Qt([g,v]).SetClass("block relative");n!=null&&n.noSize?w.SetClass("w-full h-full"):t.map(B=>this.iconSize.GetRenderValue(B).Subs(B).txt??"[40,40]").map(B=>{const[D,N]=B.split(",").map(O=>r(O));w.SetStyle(`width: ${D}px; height: ${N}px`)});const A=(I=(q=this.cssDef)==null?void 0:q.GetRenderValue(t.data))==null?void 0:I.txt,C=($=(S=this.cssClasses)==null?void 0:S.GetRenderValue(t.data))==null?void 0:$.txt;let m=this.GetLabel(t,g===void 0),y;return g===void 0&&m===void 0?y=void 0:g===void 0?y=m:m===void 0?y=new Qt([w]):y=new Qt([w,m]).SetStyle("flex flex-col"),A!==void 0&&(y==null||y.SetStyle(A)),C!==void 0&&(y==null||y.SetClass(C)),{html:y,iconAnchor:[o,l]}}GetBadges(t,n){if(this.iconBadges.length!==0)return new _h(t.map(r=>{const s=this.iconBadges.map(o=>{var p,d;if(!o.if.matchesProperties(r))return;const l=o.then.metacondition;if(l&&n&&!l.matchesProperties(n.data))return;const u=ke.SubstituteKeys((p=o.then.GetRenderValue(r))==null?void 0:p.txt,r);if(u.startsWith("<")&&u.endsWith(">"))return new Zi(ke.SubstituteKeys(u,r)).SetStyle("width: 1.5rem").SetClass("block");if(!u)return;const c=(d=su.FromHtmlMulti(u,t))==null?void 0:d.SetClass("block relative");if(c!==void 0)return new Qt([c]).SetStyle("width: 1.5rem").SetClass("block")});return new Qt(s).SetClass("inline-flex h-full")},[n])).SetClass("absolute bottom-0 right-1/3 h-1/2 w-0")}GetLabel(t,n){var l,u,c,p;if(this.label===void 0)return;const r=(u=(l=this.labelCss)==null?void 0:l.GetRenderValue(t.data))==null?void 0:u.txt,s=(p=(c=this.labelCssClasses)==null?void 0:c.GetRenderValue(t.data))==null?void 0:p.txt,o=this;return new _h(t.map(d=>{var g,v,w,A;const f=(A=(w=(v=(g=o.label)==null?void 0:g.GetRenderValue(d))==null?void 0:v.Subs(d))==null?void 0:w.SetClass("flex items-center justify-center absolute marker-label"))==null?void 0:A.SetClass(s);if(r)f.SetStyle(r);else if(n)return f==null?void 0:f.SetStyle("transform: translate(-50%, -50%);");return new Qt([f]).SetClass("flex flex-col items-center")}))}};R(su,"allowed_location_codes",new Set(["point","centroid","start","end","projected_centerpoint","polygon_centroid"]));let lp=su;class G7 extends _c{constructor(t,n){super(t,n);R(this,"color");R(this,"width");R(this,"dashArray");R(this,"lineCap");R(this,"offset");R(this,"fill");R(this,"fillColor");R(this,"leftRightSensitive");R(this,"imageAlongWay");if(this.color=this.tr("color","#0000ff"),this.width=this.tr("width","7"),this.dashArray=t.dashArray,this.lineCap=this.tr("lineCap","round"),this.fill=this.tr("fill",void 0),this.fillColor=this.tr("fillColor",void 0),this.imageAlongWay=[],t.imageAlongWay)if(typeof t.imageAlongWay=="string")this.imageAlongWay.push({then:t.imageAlongWay});else for(let r=0;r<t.imageAlongWay.length;r++){const s=t.imageAlongWay[r],o=n+".imageAlongWay["+r+"]";if(!s.then.endsWith(".png"))throw"An imageAlongWay should always be a PNG image";this.imageAlongWay.push({if:In.Tag(s.if,o),then:s.then})}typeof t.offset=="string"&&(t.offset=parseFloat(t.offset)),this.leftRightSensitive=t.offset!==void 0&&t.offset!==0,this.offset=this.tr("offset","0")}}class gf{constructor(e,t,n,r,s=!0){R(this,"_filter");R(this,"_interpreterUrl");R(this,"_timeout");R(this,"_extraScripts");R(this,"_includeMeta");this._timeout=r??new Su(90),this._interpreterUrl=n;const o=e.optimize();if(o===!0||o===!1)throw"Invalid filter: optimizes to true of false";this._filter=o,this._extraScripts=t,this._includeMeta=s}async queryGeoJson(e){const t="[bbox:"+e.getSouth()+","+e.getWest()+","+e.getNorth()+","+e.getEast()+"]",n=this.buildScript(t);return await this.ExecuteQuery(n)}buildUrl(e){return`${this._interpreterUrl}?data=${encodeURIComponent(e)}`}async ExecuteQuery(e){const t=await ke.downloadJson(this.buildUrl(e));if(t.elements.length===0&&t.remark!==void 0)throw console.warn("Timeout or other runtime error while querying overpass",t.remark),`Runtime error (timeout or similar)${t.remark}`;t.elements.length===0&&console.warn("No features for",t);const n=x2(t),r=new Date(t.osm3s.timestamp_osm_base);return[n,r]}buildScript(e,t="",n=!1){const r=this._filter.asOverpass();let s="";for(const o of r)n&&(s+="    "),s+="nwr"+o+t+";",n&&(s+=`
`);for(const o of this._extraScripts)s+="("+o+");";return`[out:json][timeout:${this._timeout.data}]${e};(${s});out body;${this._includeMeta?"out meta;":""}>;out skel qt;`}buildScriptInArea(e,t=!1){const n=this._filter.asOverpass();let r="";for(const o of n)t&&(r+="    "),r+="nwr"+o+"(area.searchArea);",t&&(r+=`
`);for(const o of this._extraScripts)r+="("+o+");";let s=e.osm_id;return e.osm_type==="relation"&&(s+=36e8),`[out:json][timeout:${this._timeout.data}];
        area(id:${s})->.searchArea;
        (${r});
        out body;${this._includeMeta?"out meta;":""}>;out skel qt;`}buildQuery(e){return this.buildUrl(this.buildScript(e))}static AsOverpassTurboLink(e){const n=new gf(e,[],"",void 0,!1).buildScript("","({{bbox}})",!0);return"http://overpass-turbo.eu/?Q="+encodeURIComponent(n)}}class U7 extends _c{constructor(t,n,r=!0){var l,u,c,p,d,f;n=n+"."+t.id;const s="layers:"+t.id;super(t,n);R(this,"id");R(this,"name");R(this,"description");R(this,"source");R(this,"calculatedTags");R(this,"doNotDownload");R(this,"passAllFeatures");R(this,"isShown");R(this,"minzoom");R(this,"minzoomVisible");R(this,"title");R(this,"titleIcons");R(this,"mapRendering");R(this,"lineRendering");R(this,"units");R(this,"deletion");R(this,"allowMove");R(this,"allowSplit");R(this,"shownByDefault");R(this,"doCount");R(this,"maxAgeOfCache");R(this,"presets");R(this,"tagRenderings");R(this,"filters");R(this,"filterIsSameAs");R(this,"forceLoad");R(this,"syncSelection");R(this,"_needsFullNodeDatabase");R(this,"popupInFloatover");if(this.id=t.id,(t.source==="special"||t.source==="special:library")&&(this.source=null),this.syncSelection=t.syncSelection??"no",typeof t.source!="string"&&(this.maxAgeOfCache=t.source.maxCacheAge??24*60*60*30,this.source=new p3({osmTags:In.Tag(t.source.osmTags,n+"source.osmTags"),geojsonSource:t.source.geoJson,geojsonSourceLevel:t.source.geoJsonZoomLevel,overpassScript:t.source.overpassScript,isOsmCache:t.source.isOsmCache,mercatorCrs:t.source.mercatorCrs,idKey:t.source.idKey},t.id)),this.allowSplit=t.allowSplit??!1,this.name=De.T(t.name,s+".name"),t.units!==void 0&&!Array.isArray(t.units))throw"At "+n+".units: the 'units'-section should be a list; you probably have an object there";if(this.units=[].concat(...(t.units??[]).map((g,v)=>sp.fromJson(g,`${n}.unit[${v}]`))),t.description!==void 0&&Object.keys(t.description).length===0&&(t.description=void 0),this.description=De.T(t.description,s+".description"),this.calculatedTags=void 0,t.calculatedTags!==void 0){r||console.warn(`Unofficial theme ${this.id} with custom javascript! This is a security risk`),this.calculatedTags=[];for(const g of t.calculatedTags){const v=g.indexOf("=");let w=g.substring(0,v).trim();const A="[a-z_][a-z0-9:]*";if(w.match(A)===null)throw"At "+n+" invalid key for calculated tag: "+w+"; it should match "+A;const C=w.endsWith(":");C&&(w=w.substr(0,w.length-1));const m=g.substring(v+1);this.calculatedTags.push([w,m,C])}}if(this.doNotDownload=t.doNotDownload??!1,this.passAllFeatures=t.passAllFeatures??!1,this.minzoom=t.minzoom??0,this._needsFullNodeDatabase=t.fullNodeDatabase??!1,t.minZoom!==void 0)throw"At "+n+": minzoom is written all lowercase";if(this.minzoomVisible=t.minzoomVisible??this.minzoom,this.shownByDefault=t.shownByDefault??!0,this.doCount=t.isCounted??this.shownByDefault??!0,this.forceLoad=t.forceLoad??!1,t.presets===null&&(t.presets=void 0),t.presets!==void 0&&((l=t.presets)==null?void 0:l.map)===void 0)throw"Presets should be a list of items (at "+n+")";if(this.presets=(t.presets??[]).map((g,v)=>{let w={preferredBackground:["photo"],snapToLayers:void 0,maxSnapDistance:void 0};if(g.preciseInput!==void 0)throw"Layer "+this.id+" still uses the old 'preciseInput'-field. For snapping to layers, use 'snapToLayer' instead";return g.snapToLayer!==void 0&&(w={snapToLayers:g.snapToLayer,maxSnapDistance:g.maxSnapDistance??10}),{title:De.T(g.title,`${s}.presets.${v}.title`),tags:g.tags.map(C=>In.SimpleTag(C)),description:De.T(g.description,`${s}.presets.${v}.description`),preciseInput:w,exampleImages:g.exampleImages}}),t.pointRendering===void 0&&t.lineRendering===void 0)throw"Both pointRendering and lineRendering are undefined in "+n;t.lineRendering?this.lineRendering=ke.NoNull(t.lineRendering).map((g,v)=>new G7(g,`${n}[${v}]`)):this.lineRendering=[],t.pointRendering?this.mapRendering=ke.NoNull(t.pointRendering).map((g,v)=>new lp(g,`${n}[${v}](${this.id})`)):this.mapRendering=[];{const g=this.mapRendering.some(v=>v.location.has("centroid")||v.location.has("projected_centerpoint")||v.location.has("start")||v.location.has("end"));if(t.pointRendering!==null&&t.lineRendering!==null&&this.lineRendering.length===0&&this.mapRendering.length===0)throw"The layer "+this.id+` does not have any maprenderings defined and will thus not show up on the map at all:
	 ${(u=this.lineRendering)==null?void 0:u.length} linerenderings and ${(c=this.mapRendering)==null?void 0:c.length} pointRenderings.
	 If this is intentional, set \`pointRendering\` and \`lineRendering\` to 'null' instead of '[]'`;if(!g&&this.lineRendering.length===0&&c2.priviliged_layers.indexOf(this.id)<0&&this.source!==null&&!((d=(p=this.source)==null?void 0:p.geojsonSource)!=null&&d.startsWith("https://api.openstreetmap.org/api/0.6/notes.json")))throw"The layer "+this.id+" might not render ways. This might result in dropped information (at "+n+")"}const o=((f=ke.NoNull(t.tagRenderings))==null?void 0:f.filter(g=>typeof g!="string"&&g.builtin===void 0&&g.id===void 0&&g.rewrite===void 0))??[];if((o==null?void 0:o.length)>0&&r)throw console.error("Some tagRenderings of",this.id,"are missing an id:",o),"Missing ids in tagrenderings";this.tagRenderings=(ke.NoNull(t.tagRenderings)??[]).map((g,v)=>new jo(g,this.id+".tagRenderings["+v+"]")),t.filter!==void 0&&t.filter!==null&&t.filter.sameAs!==void 0?(this.filterIsSameAs=t.filter.sameAs,this.filters=[]):this.filters=(t.filter??[]).map((g,v)=>new Wh(g,`layers:${this.id}.filter.${v}`));{const g=ke.Duplicates(this.filters.map(v=>v.id));if(g.length>0)throw`Some filters have a duplicate id: ${g} (at ${n}.filters)`}if(t.filters!==void 0)throw"Error in "+n+": use 'filter' instead of 'filters'";if(this.titleIcons=this.ParseTagRenderings(t.titleIcons??[],{readOnlyMode:!0}),this.title=this.tr("title",void 0,s),this.isShown=In.TagD(t.isShown,n+".isShown"),this.deletion=null,t.deletion===!0&&(t.deletion={}),t.deletion!==void 0&&t.deletion!==!1&&(this.deletion=new op(t.deletion,`${n}.deletion`)),this.allowMove=null,t.allowMove===!1?this.allowMove=null:t.allowMove===!0?this.allowMove=new Vm({},n+".allowMove"):t.allowMove!==void 0&&(this.allowMove=new Vm(t.allowMove,n+".allowMove")),t.showIf!==void 0)throw"Invalid key on layerconfig "+this.id+": showIf. Did you mean 'isShown' instead?";this.popupInFloatover=t.popupInFloatover??!1}defaultIcon(){if(this.mapRendering===void 0||this.mapRendering===null)return;const t=this.mapRendering.filter(n=>n.location.has("point"))[0];if(t!==void 0)return t.GetBaseIcon(this.GetBaseTags())}GetBaseTags(){var t,n;return In.changeAsProperties(((n=(t=this.source)==null?void 0:t.osmTags)==null?void 0:n.asChange({id:"node/-1"}))??[{k:"id",v:"node/-1"}])}GenerateDocumentation(t,n,r=[],s=!1,o=!0){var w;const l=[];l.push("This layer is shown at zoomlevel **"+this.minzoom+"** and higher"),o?(s&&l.push("**This layer is included automatically in every theme. This layer might contain no points**"),this.shownByDefault===!1&&l.push("This layer is not visible by default and must be enabled in the filter by the user. "),this.title===void 0&&l.push("Elements don't have a title set and cannot be toggled nor will they show up in the dashboard. If you import this layer in your theme, override `title` to make this toggleable."),this.name===void 0&&this.shownByDefault===!1&&l.push("This layer is not visible by default and the visibility cannot be toggled, effectively resulting in a fully hidden layer. This can be useful, e.g. to calculate some metatags. If you want to render this layer (e.g. for debugging), enable it by setting the URL-parameter layer-<id>=true"),this.name===void 0&&l.push("Not visible in the layer selection by default. If you want to make this layer toggable, override `name`"),this.mapRendering.length===0&&l.push("Not rendered on the map by default. If you want to rendering this on the map, override `mapRenderings`"),((w=this.source)==null?void 0:w.geojsonSource)!==void 0&&l.push(new Qt([ke.runningFromConsole?"<img src='../warning.svg' height='1rem'/>":void 0,"This layer is loaded from an external source, namely ",new Zi(this.source.geojsonSource).SetClass("code")]))):l.push("This layer can **not** be included in a theme. It is solely used by [special renderings](SpecialRenderings.md) showing a minimap with custom data.");let u=[];s||((t==null?void 0:t.length)>0?u=[new tr("Themes using this layer",4),new Jd((t??[]).map(A=>new $s(A,"https://mapcomplete.org/"+A)))]:this.source!==null&&(u=[new Zi("No themes use this layer")]));for(const A of r)l.push(new Qt(["This layer will automatically load ",new $s(A.neededLayer,"./"+A.neededLayer+".md")," into the layout as it depends on it: ",A.reason,"("+A.context+")"]));for(const A of ke.Dedup((n==null?void 0:n.get(this.id))??[]))l.push(new Qt(["This layer is needed as dependency for layer",new $s(A,"#"+A)]));const c=ke.NoNull(this.tagRenderings.map(A=>A.FreeformValues()).map(A=>{var m;if(A==null)return;const C=((m=A.values)==null?void 0:m.map(y=>$s.OsmWiki(A.key,y,!0).SetClass("mr-2")))??["_no preset options defined, or no values in them_"];return[new Qt([new $s("<img src='https://mapcomplete.org/assets/svg/statistics.svg' height='18px'>","https://taginfo.openstreetmap.org/keys/"+A.key+"#values",!0),$s.OsmWiki(A.key)]).SetClass("flex"),A.type===void 0?"Multiple choice":new $s(A.type,"../SpecialInputElements.md#"+A.type),new Qt(C).SetClass("flex")]}));let p;c.length>0&&(p=new Qt([new Zi("Warning: ").SetClass("bold"),"this quick overview is incomplete",new El(["attribute","type","values which are supported by this layer"],c).SetClass("zebra-table")]).SetClass("flex-col flex"));let d=new Zi("");ke.runningFromConsole||(d=this.mapRendering.filter(A=>A.location.has("point")).map(A=>A.RenderIcon(new Su({id:"node/-1"}),{includeBadges:!1}).html).find(A=>A!==void 0));let f;if(this.source!==void 0)try{f=new $s("Execute on overpass",gf.AsOverpassTurboLink(this.source.osmTags.optimize()).replaceAll("(","%28").replaceAll(")","%29"))}catch{console.error("Could not generate overpasslink for "+this.id)}const g=[];this.filters.length>0&&(g.push(new tr("Filters",4)),g.push(...this.filters.map(A=>A.GenerateDocs())));const v=[];if(this.source!==null){v.push(new tr("Basic tags for this layer",2));const A=this.source.osmTags.optimize();if(A.and){const C=A.and;v.push("Elements must match **all** of the following expressions:",C.map((m,y)=>y+". "+m.asHumanString(!0,!1,{})).join(`
`))}else if(A.or){const C=A.or;v.push("Elements must match **any** of the following expressions:",C.map(m=>" - "+m.asHumanString(!0,!1,{})).join(`
`))}else v.push("Elements must match the expression **"+A.asHumanString(!0,!1,{})+"**");v.push(f)}else v.push("This is a special layer - data is not sourced from OpenStreetMap");return new Qt([new Qt([new tr(this.id,1),d,this.description,`
`]).SetClass("flex flex-col"),new Jd(l),...u,...v,new tr("Supported attributes",2),p,...this.tagRenderings.map(A=>A.GenerateDocumentation()),...g]).SetClass("flex-col").SetClass("link-underline")}CustomCodeSnippets(){return this.calculatedTags===void 0?[]:this.calculatedTags.map(t=>t[1])}AllTagRenderings(){return ke.NoNull([...this.tagRenderings,...this.titleIcons,this.title])}isLeftRightSensitive(){return this.lineRendering.some(t=>t.leftRightSensitive)}}R(U7,"syncSelectionAllowed",["no","local","theme-only","global"]);const Xi=class Xi{constructor(e,t,n){R(this,"path");R(this,"operation");R(this,"messages");R(this,"_hasErrors",!1);if(this.path=t,this.operation=n??[],this.messages=e,this.path.some(r=>typeof r=="object"||r==="[object Object]"))throw"ConversionMessage: got an object as path entry:"+JSON.stringify(t);this.path.some(r=>typeof r=="number"&&r<0)&&(Xi.reported||(Xi.reported=!0,console.trace("ConversionContext: got a path containing a negative number")))}static construct(e,t){return new Xi([],[...e],[...t])}static test(e){return new Xi([],e?[e]:[],["test"])}static print(e){const t=e.context.path.filter(n=>typeof n!="string"&&typeof n!="number");t.length>0&&console.warn("Non-string value in path:",...t),e.level==="error"?console.error(Xi.red("ERR "),e.context.path.join("."),Xi.red(e.message),e.context.operation.join(".")):e.level==="warning"?console.warn(Xi.red("<!> "),e.context.path.join("."),Xi.yellow(e.message),e.context.operation.join(".")):console.log("    ",e.context.path.join("."),e.message)}static yellow(e){return"\x1B[33m"+e+"\x1B[0m"}static red(e){return"\x1B[31m"+e+"\x1B[0m"}rewriteMessages(e){for(let t=0;t<this.messages.length;t++){const n=this.messages[t],r=e(n.context.path);if(!r)continue;const s=new Xi(this.messages,r,n.context.operation);this.messages[t]={...n,context:s}}}enter(e){if(!Array.isArray(e)){if(typeof e=="number"&&e<0)throw console.trace("Invalid key"),"Invalid key: <0";return new Xi(this.messages,[...this.path,e],this.operation)}return new Xi(this.messages,[...this.path,...e],this.operation)}enters(...e){return this.enter(e)}inOperation(e){return new Xi(this.messages,this.path,[...this.operation,e])}warn(e){this.messages.push({context:this,level:"warning",message:e})}err(e){this._hasErrors=!0,this.messages.push({context:this,level:"error",message:e})}info(e){this.messages.push({context:this,level:"information",message:e})}getAll(e){return this.messages.filter(t=>t.level===e)}hasErrors(){var t;if(this._hasErrors)return!0;const e=((t=this.messages)==null?void 0:t.find(n=>n.level==="error"))!==void 0;return this._hasErrors=e,e}debug(e){this.messages.push({context:this,level:"debug",message:e})}};R(Xi,"reported",!1);let Vh=Xi;class sa{constructor(e,t=[],n){R(this,"modifiedAttributes");R(this,"name");R(this,"doc");this.modifiedAttributes=t,this.doc=e+`

Modified attributes are
`+t.join(", "),this.name=n}convertStrict(e,t){t??(t=Vh.construct([],[])),t=t.inOperation(this.name);const n=this.convert(e,t);for(const r of t.messages)r.level!=="debug"&&Vh.print(r);if(t.hasErrors())throw"Detected one or more errors, stopping now";return n}andThenF(e){return new z7(this,new H7(e))}}class Pu extends sa{}class z7 extends sa{constructor(t,n){super("Merges two steps with different types",[],`Pipe(${t.name}, ${n.name})`);R(this,"_step0");R(this,"_step1");this._step0=t,this._step1=n}convert(t,n){const r=this._step0.convert(t,n.inOperation(this._step0.name));return this._step1.convert(r,n.inOperation(this._step1.name))}}class H7 extends sa{constructor(t){super("Wrapper around a pure function",[],"Pure");R(this,"_f");this._f=t}convert(t,n){return this._f(t)}}class bx extends Pu{constructor(t,n){super("Applies the step on the object, if the object satisfies the predicate",[],"Bypass");R(this,"_applyIf");R(this,"_step");this._applyIf=t,this._step=n}convert(t,n){return this._applyIf(t)?this._step.convert(t,n):t}}class Y7 extends sa{constructor(t,n){super("Applies the given step on every element of the list",[],"OnEach("+t.name+")");R(this,"_step");R(this,"_msg");this._step=t,this._msg=n==null?void 0:n.msg}convert(t,n){var l,u;if(t==null)return t;const r=this._step,s=[],o=n.inOperation("each");for(let c=0;c<t.length;c++){this._msg&&console.log(this._msg,`: ${c+1}/${t.length}`,((l=t[c])==null?void 0:l.id)!==void 0?(u=t[c])==null?void 0:u.id:"");const p=r.convert(t[c],o.enter(c));s.push(p)}return s}}class vx extends Pu{constructor(t,n){super("Applies "+n.name+" onto property `"+t+"`",[t],`On(${t}, ${n.name})`);R(this,"key");R(this,"step");typeof n=="function"?this.step=n:this.step=r=>n,this.key=t}convert(t,n){const r=this.key,s=t==null?void 0:t[r];if(s==null)return t;t={...t};const o=this.step(t);return t[r]=o.convert(s,n.enter(r).inOperation("on["+r+"]")),t}}class wx extends sa{constructor(e){super(e??"Does nothing, often to swap out steps in testing",[],"Pass")}convert(e,t){return e}}class _x extends sa{constructor(t){super("Executes the given step, flattens the resulting list",[],"Concat("+t.name+")");R(this,"_step");this._step=t}convert(t,n){if(t==null)return t;const r=new Y7(this._step).convert(t,n.inOperation("concat"));return[].concat(...r)}}class Cx extends sa{constructor(t){super("Picks the first result of the conversion step",[],"FirstOf("+t.name+")");R(this,"_conversion");this._conversion=t}convert(t,n){const r=this._conversion.convert(t,n.inOperation("firstOf"));if(r.length!==0)return r[0]}}class Tx extends Pu{constructor(t,...n){super((t??"")+"This fused pipeline of the following steps: "+n.map(r=>r.name).join(", "),ke.Dedup([].concat(...n.map(r=>r.modifiedAttributes))),"Fuse("+n.map(r=>r.name).join(", ")+")");R(this,"debug",!1);R(this,"steps");this.steps=ke.NoNull(n)}enableDebugging(){return this.debug=!0,this}convert(t,n){const r=[];for(let s=0;s<this.steps.length;s++){const o=new Date,l=this.steps[s];try{const u=l.convert(t,n.inOperation(l.name));if(u==null)break;t=u}catch(u){throw console.error("Step "+l.name+" failed due to ",u,u.stack),u}if(this.debug){const c=new Date().getTime()-o.getTime();r.push(c)}}return this.debug&&console.log("Time needed,",r.join(", ")),t}}class xx extends Pu{constructor(t,n,r=!1){super("Sets "+t+" to a default value if undefined",[],"SetDefault of "+t);R(this,"value");R(this,"key");R(this,"_overrideEmptyString");this.key=t,this.value=n,this._overrideEmptyString=r}convert(t,n){if(t!==void 0)return(t[this.key]===void 0||t[this.key]===""&&this._overrideEmptyString)&&(t={...t},t[this.key]=this.value),t}}const e1=[{path:[],required:!1,hints:{},type:"object",description:`Defines the entire theme.
A theme is the collection of the layers that are shown; the intro text, the icon, ...
It more or less defines the entire experience.
Most of the fields defined here are metadata about the theme, such as its name, description, supported languages, default starting location, ...
The main chunk of the json will however be the 'layers'-array, where the details of your layers are.
General remark: a type (string | any) indicates either a fixed or a translatable string.`},{path:["id"],required:!0,hints:{typehint:"id",group:"basic",question:"What is the id of this layout?"},type:"string",description:`The id is a unique string to identify the theme
It should be
- in english
- describe the theme in a single word (or a few words)
- all lowercase and with only [a-z] or underscores (_)
This is used as hashtag in the changeset message, which will read something like "Adding data with #mapcomplete for theme #<the theme id>"
On official themes, it'll become the name of the page, e.g.
'cyclestreets' which become 'cyclestreets.html'`},{path:["title"],required:!0,hints:{group:"basic",question:"What is the title of this theme?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"The human-readable title, as shown in the welcome message and the index page"},{path:["mustHaveLanguage"],required:!1,hints:{},type:"array",description:`Only used in 'generateLayerOverview': if present, every translation will be checked to make sure it is fully translated.
This must be a list of two-letter, lowercase codes which identifies the language, e.g. "en", "nl", ...`},{path:["description"],required:!0,hints:{group:"basic",question:"How would you describe this theme?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"The description, as shown in the welcome message and the more-screen"},{path:["shortDescription"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A short description, showed as social description and in the 'more theme'-buttons.
Note that if this one is not defined, the first sentence of 'description' is used`},{path:["descriptionTail"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A part of the description, shown under the login-button."},{path:["icon"],required:!0,hints:{typehint:"icon",group:"basic",question:"What icon should be used to represent this theme?"},type:"string",description:`Used as logo in the more-screen and (for official themes) as favicon, webmanifest logo, ...
Either a URL or a base64 encoded value (which should include 'data:image/svg+xml;base64)`},{path:["socialImage"],required:!1,hints:{typehint:"image",group:"basic",question:"What image should be used as social image preview?",ifunset:"use the default social image of mapcomplete (or generate one based on the icon)"},type:"string",description:`This is included as og:image-tag on official themes.
See https://www.h3xed.com/web-and-internet/how-to-use-og-image-meta-tag-facebook-reddit for more information`},{path:["extraLink"],required:!1,hints:{group:"advanced",question:"should an extra help button be shown in certain circumstances?",ifunset:"show a link to open MapComplete full screen if used in an iframe"},type:"object",description:`Adds an additional button on the top-left of the application.
This can link to an arbitrary location.
For example {icon: "./assets/svg/pop-out.svg", href: 'https://mapcomplete.org/{theme}.html?lat={lat}&lon={lon}&z={zoom}, requirements: ["iframe","no-welcome-message]},`},{path:["extraLink","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown in the link button?",ifunset:"do not show an icon"},type:"string",description:""},{path:["extraLink","text"],required:!1,hints:{question:"What text should be shown in the link icon?",ifunset:"do not show a text"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Note that {lat},{lon},{zoom}, {language} and {theme} will be replaced"},{path:["extraLink","href"],required:!0,hints:{typehint:"url",question:"if clicked, what webpage should open?"},type:"string",description:"Note that {lat},{lon},{zoom}, {language} and {theme} will be replaced"},{path:["extraLink","newTab"],required:!1,hints:{question:"Should the link open in a new tab?",iftrue:"Open in a new tab",iffalse:"do not open in a new tab",ifunset:"do not open in a new tab"},type:"boolean",description:""},{path:["extraLink","requirements"],required:!1,hints:{question:"When should the extra button be shown?",suggestions:[{if:"value=iframe",then:"When shown in an iframe"},{if:"value=no-iframe",then:"When shown as stand-alone webpage"},{if:"value=welcome-message",then:"When the welcome messages are enabled"},{if:"value=iframe",then:"When the welcome messages are disabled"}]},type:"array",description:""},{path:["startZoom"],required:!1,hints:{typehint:"float",group:"start_location",question:"At what zoomlevel should this theme open?",ifunset:"Use the default startzoom (0)"},type:"number",description:`Default location and zoom to start.
Note that this is barely used. Once the user has visited mapcomplete at least once, the previous location of the user will be used`},{path:["startLat"],required:!1,hints:{typehint:"float",group:"start_location",question:"At what start latitude should this theme open?",ifunset:"Use 0 as start latitude"},type:"number",description:`Default location and zoom to start.
Note that this is barely used. Once the user has visited mapcomplete at least once, the previous location of the user will be used`},{path:["startLon"],required:!1,hints:{typehint:"float",group:"start_location",question:"At what start longitude should this theme open?",ifunset:"Use 0 as start longitude"},type:"number",description:`Default location and zoom to start.
Note that this is barely used. Once the user has visited mapcomplete at least once, the previous location of the user will be used`},{path:["defaultBackgroundId"],required:!1,hints:{},type:"string",description:"The id of the default background. BY default: vanilla OSM"},{path:["credits"],required:!1,hints:{},type:[{type:"array",items:{type:"string"}},{type:"string"}],description:"Who helped to create this theme and should be attributed?"},{path:["hideFromOverview"],required:!1,hints:{},type:"boolean",description:"If set to true, this layout will not be shown in the overview with more themes"},{path:["layers"],required:!0,hints:{typehint:"layer[]",types:"hidden | layer | hidden",group:"layers",question:"What layers should this map show?",suggestions:[{if:"value=address",then:"address - Addresses"},{if:"value=advertising",then:"advertising - We will complete data from advertising features with reference, operator and lit"},{if:"value=aerialway",then:"aerialway - Various forms of transport for passengers and goods that use wires, including cable cars, gondolas, chair lifts, drag lifts, and zip lines. "},{if:"value=ambulancestation",then:"ambulancestation - An ambulance station is an area for storage of ambulance vehicles, medical equipment, personal protective equipment, and other medical supplies."},{if:"value=animal_shelter",then:"animal_shelter - An animal shelter is a facility where animals in trouble are brought and facility's staff (volunteers or not) feeds them and cares of them, rehabilitating and healing them if necessary. This definition includes kennels for abandoned dogs, catteries for abandoned cats, shelters for other abandoned pets and wildlife recovery centres. "},{if:"value=artwork",then:"artwork - An open map of statues, busts, graffitis and other artwork all over the world"},{if:"value=assembly_point",then:"assembly_point - This layer contains assembly points and waiting areas where all employees, passengers or a large crowd assemble in case of an emergency."},{if:"value=atm",then:"atm - ATMs to withdraw money"},{if:"value=bank",then:"bank - A financial institution to deposit money"},{if:"value=barrier",then:"barrier - Obstacles while cycling, such as bollards and cycle barriers"},{if:"value=bench",then:"bench - A bench is a wooden, metal, stone, … surface where a human can sit. This layers visualises them and asks a few questions about them."},{if:"value=bench_at_pt",then:"bench_at_pt - A layer showing all public-transport-stops which do have a bench"},{if:"value=bicycle_library",then:"bicycle_library - A facility where bicycles can be lent for longer period of times"},{if:"value=bicycle_rental",then:"bicycle_rental - Bicycle rental stations"},{if:"value=bicycle_tube_vending_machine",then:"bicycle_tube_vending_machine - A layer showing vending machines for bicycle tubes (either purpose-built bicycle tube vending machines or classical vending machines with bicycle tubes and optionally additional bicycle related objects such as lights, gloves, locks, …)"},{if:"value=bike_cafe",then:"bike_cafe - A bike café is a café geared towards cyclists, for example with services such as a pump, with lots of bicycle-related decoration, …"},{if:"value=bike_cleaning",then:"bike_cleaning - A layer showing facilities where one can clean their bike"},{if:"value=bike_parking",then:"bike_parking - A layer showing where you can park your bike"},{if:"value=bike_repair_station",then:"bike_repair_station - A layer showing bicycle pumps and bicycle repair tool stands"},{if:"value=bike_shop",then:"bike_shop - A shop specifically selling bicycles or related items"},{if:"value=bike_themed_object",then:"bike_themed_object - A layer with bike-themed objects but who don't match any other layer"},{if:"value=binocular",then:"binocular - Binoculars"},{if:"value=birdhide",then:"birdhide - A birdhide"},{if:"value=brothel",then:"brothel - An establishment specifically dedicated to prostitution. "},{if:"value=cafe_pub",then:"cafe_pub - A layer showing cafés and pubs where one can gather around a drink. The layer asks for some relevant questions"},{if:"value=car_rental",then:"car_rental - Places where you can rent a car"},{if:"value=charging_station",then:"charging_station - A charging station"},{if:"value=cinema",then:"cinema -  A place showing movies (films), generally open to the public for a fee. Commonly referred to as a movie theater in the US"},{if:"value=climbing",then:"climbing - A dummy layer which contains tagrenderings, shared among the climbing layers"},{if:"value=climbing_area",then:"climbing_area - An area where climbing is possible, e.g. a crag, site, boulder, … Contains aggregation of routes"},{if:"value=climbing_club",then:"climbing_club - A climbing club or organisation"},{if:"value=climbing_gym",then:"climbing_gym - A climbing gym"},{if:"value=climbing_opportunity",then:"climbing_opportunity - Fallback layer with items on which climbing _might_ be possible. It is loaded when zoomed in a lot, to prevent duplicate items to be added"},{if:"value=climbing_route",then:"climbing_route - A single climbing route and its properties. Some properties are derived from the containing features"},{if:"value=clock",then:"clock - Layer with public clocks"},{if:"value=conflation",then:"conflation - If the import-button moves OSM points, the imported way points or conflates, a preview is shown. This layer defines how this preview is rendered. This layer cannot be included in a theme."},{if:"value=crab_address",then:"crab_address - Address data for Flanders by the governement, suited for import into OpenStreetMap. Datadump from 2021-10-26. This layer contains only visualisation logic. Import buttons should be added via an override. Note that HNRLABEL contains the original value, whereas _HNRLABEL contains a slightly cleaned version"},{if:"value=crossings",then:"crossings - Crossings for pedestrians and cyclists"},{if:"value=current_view",then:`current_view - A meta-layer which contains one single feature, namely the bounding box of the current map view. This can be used to trigger special actions. If a popup is defined for this layer, this popup will be accessible via an extra button on screen.

The icon on the button is the default icon of the layer, but can be customized by detecting 'button=yes'.`},{if:"value=cycleways_and_roads",then:"cycleways_and_roads - All infrastructure that someone can cycle over, accompanied with questions about this infrastructure"},{if:"value=defibrillator",then:"defibrillator - A layer showing defibrillators which can be used in case of emergency. This contains public defibrillators, but also defibrillators which might need staff to fetch the actual device"},{if:"value=dentist",then:"dentist - This layer shows dentist offices"},{if:"value=direction",then:"direction - This layer visualizes directions"},{if:"value=disaster_response",then:"disaster_response - This layer contains organizations that have the main objective to help the civil population during and after natural or anthropogenic disasters by working in the affected area."},{if:"value=doctors",then:"doctors - This layer shows doctor offices"},{if:"value=dogpark",then:"dogpark - A layer showing dogparks, which are areas where dog are allowed to run without a leash"},{if:"value=drinking_water",then:"drinking_water - A layer showing drinking water fountains"},{if:"value=elevator",then:"elevator - This layer show elevators and asks for operational status and elevator dimensions. Useful for wheelchair accessibility information"},{if:"value=elongated_coin",then:"elongated_coin - Layer showing penny presses."},{if:"value=entrance",then:"entrance - A layer showing entrances and offering capabilities to survey some advanced data which is important for e.g. wheelchair users (but also bicycle users, people who want to deliver, …)"},{if:"value=etymology",then:"etymology - All objects which have an etymology known"},{if:"value=extinguisher",then:"extinguisher - Map layer to show fire extinguishers."},{if:"value=filters",then:"filters - This layer acts as library for common filters"},{if:"value=fire_station",then:"fire_station - Map layer to show fire stations."},{if:"value=fitness_centre",then:"fitness_centre - Layer showing fitness centres"},{if:"value=fitness_station",then:"fitness_station - Find a fitness station near you, and add missing ones."},{if:"value=fixme",then:"fixme - OSM objects that likely need to be fixed, based on a FIXME tag."},{if:"value=food",then:"food - A layer showing restaurants and fast-food amenities (with a special rendering for friteries)"},{if:"value=ghost_bike",then:"ghost_bike - A layer showing memorials for cyclists, killed in road accidents"},{if:"value=governments",then:"governments - This layer show governmental buildings. It was setup as commissioned layer for the client of OSOC '22"},{if:"value=gps_location",then:"gps_location - Meta layer showing the current location of the user. Add this to your theme and override the icon to change the appearance of the current location. The object will always have `id=gps` and will have _all_ the properties included in the [`Coordinates`-object](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates) (except latitude and longitude) returned by the browser, such as `speed`, `altitude`, `heading`, ...."},{if:"value=gps_location_history",then:"gps_location_history - Meta layer which contains the previous locations of the user as single points. This is mainly for technical reasons, e.g. to keep match the distance to the modified object"},{if:"value=gps_track",then:"gps_track - Meta layer showing the previous locations of the user as single line with controls, e.g. to erase, upload or download this track. Add this to your theme and override the maprendering to change the appearance of the travelled track."},{if:"value=guidepost",then:"guidepost - Guideposts (also known as fingerposts or finger posts) are often found along official hiking/cycling/riding/skiing routes to indicate the directions to different destinations"},{if:"value=hackerspace",then:"hackerspace - Hackerspace"},{if:"value=home_location",then:"home_location - Meta layer showing the home location of the user. The home location can be set in the [profile settings](https://www.openstreetmap.org/profile/edit) of OpenStreetMap."},{if:"value=hospital",then:"hospital - A layer showing hospital grounds"},{if:"value=hotel",then:"hotel - Layer showing all hotels"},{if:"value=hydrant",then:"hydrant - Map layer to show fire hydrants."},{if:"value=ice_cream",then:"ice_cream - A place where ice cream is sold over the counter"},{if:"value=icons",then:"icons - A layer acting as library for icon-tagrenderings, especially to show as badge next to a POI"},{if:"value=id_presets",then:"id_presets - Layer containing various presets and questions generated by ID. These are meant to be reused in other layers by importing the tagRenderings with `id_preset.<tagrendering>"},{if:"value=import_candidate",then:"import_candidate - Layer used as template in the importHelper"},{if:"value=indoors",then:"indoors - Basic indoor mapping: shows room outlines"},{if:"value=information_board",then:"information_board - A layer showing touristical, road side information boards (e.g. giving information about the landscape, a building, a feature, a map, …)"},{if:"value=kerbs",then:"kerbs - A layer showing kerbs."},{if:"value=kindergarten_childcare",then:"kindergarten_childcare - Shows kindergartens and preschools. Both are grouped in one layer, as they are regularly confused with each other"},{if:"value=last_click",then:"last_click - This layer defines how to render the 'last click'-location. By default, it will show a marker with the possibility to add a new point (if there are some presets) and/or to add a new note (if the 'note' layer attribute is set). If none are possible, this layer won't show up"},{if:"value=love_hotel",then:"love_hotel - A love hotel is a type of short-stay hotel found around the world operated primarily for the purpose of allowing guests privacy for sexual activities"},{if:"value=map",then:"map - A map, meant for tourists which is permanently installed in the public space"},{if:"value=maproulette",then:"maproulette - Layer showing all tasks in MapRoulette"},{if:"value=maproulette_challenge",then:"maproulette_challenge - Layer showing tasks of a single MapRoulette challenge. This layer is intended to be reused and extended in themes; refer to [the documentation](https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Integrating_Maproulette.md) on how to do this."},{if:"value=maxspeed",then:"maxspeed - Shows the allowed speed for every road"},{if:"value=memorial",then:"memorial - Layer showing memorial plaques, based upon a unofficial theme. Can be expanded to have multiple types of memorials later on"},{if:"value=mountain_rescue",then:"mountain_rescue - A building where first aid responders store material and might be on watch"},{if:"value=named_streets",then:"named_streets - Hidden layer with all streets which have a name. Useful to detect addresses"},{if:"value=nature_reserve",then:"nature_reserve - A nature reserve is an area where nature can take its course"},{if:"value=note",then:"note - This layer shows notes on OpenStreetMap. Having this layer in your theme will trigger the 'add new note' functionality in the 'addNewPoint'-popup (or if your theme has no presets, it'll enable adding notes)"},{if:"value=observation_tower",then:"observation_tower - Towers with a panoramic view"},{if:"value=osm_community_index",then:"osm_community_index - A layer showing the OpenStreetMap Communities"},{if:"value=parcel_lockers",then:"parcel_lockers - Layer showing parcel lockers for collecting and sending parcels."},{if:"value=parking",then:"parking - A layer showing car parkings"},{if:"value=parking_spaces",then:"parking_spaces - Layer showing individual parking spaces."},{if:"value=parking_ticket_machine",then:"parking_ticket_machine - Layer with parking ticket machines to pay for parking."},{if:"value=pedestrian_path",then:"pedestrian_path - Pedestrian footpaths, especially used for indoor navigation and snapping entrances to this layer"},{if:"value=pharmacy",then:"pharmacy - A layer showing pharmacies, which (probably) dispense prescription drugs"},{if:"value=physiotherapist",then:"physiotherapist - This layer shows physiotherapists"},{if:"value=picnic_table",then:"picnic_table - The layer showing picnic tables"},{if:"value=play_forest",then:"play_forest - Een speelbos is een vrij toegankelijke zone in een bos"},{if:"value=playground",then:"playground - Playgrounds"},{if:"value=postboxes",then:"postboxes - The layer showing postboxes."},{if:"value=postoffices",then:"postoffices - A layer showing post offices."},{if:"value=public_bookcase",then:"public_bookcase - A streetside cabinet with books, accessible to anyone"},{if:"value=questions",then:"questions - Special library layer which does not need a '.questions'-prefix before being imported"},{if:"value=railway_platforms",then:"railway_platforms - Find every platform in the station, and the train routes that use them."},{if:"value=rainbow_crossings",then:"rainbow_crossings - A layer showing pedestrian crossings with rainbow paintings"},{if:"value=range",then:"range - Meta-layer, simply showing a bbox in red"},{if:"value=reception_desk",then:"reception_desk - A layer showing where the reception desks are and which asks some accessibility information"},{if:"value=recycling",then:"recycling - A layer with recycling containers and centres"},{if:"value=route_marker",then:"route_marker - Route markers are small markers often found along official hiking/cycling/riding/skiing routes to indicate the direction of the route."},{if:"value=school",then:"school - Schools giving primary and secondary education and post-secondary, non-tertiary education. Note that this level of education does not imply an age of the pupiles"},{if:"value=selected_element",then:"selected_element - Highlights the currently selected element. Override this layer to have different colors"},{if:"value=shelter",then:"shelter - Layer showing shelter structures"},{if:"value=shops",then:"shops - A shop"},{if:"value=shower",then:"shower - A layer showing (public) showers"},{if:"value=ski_piste",then:"ski_piste - Ski and snowboard pistes"},{if:"value=slow_roads",then:"slow_roads - All carfree roads"},{if:"value=speed_camera",then:"speed_camera - Layer showing speed cameras"},{if:"value=speed_display",then:"speed_display - Layer showing speed displays that alert drivers of their speed."},{if:"value=split_point",then:"split_point - Layer rendering the little scissors for the minimap in the 'splitRoadWizard'"},{if:"value=split_road",then:"split_road - Layer rendering the way to split in the 'splitRoadWizard'. This one is used instead of the variable rendering by the themes themselves, as they might not always be very visible"},{if:"value=sport_pitch",then:"sport_pitch - A sport pitch"},{if:"value=sports_centre",then:"sports_centre - Indoor and outdoor sports centres can be found on this layer"},{if:"value=stairs",then:"stairs - Layer showing stairs and escalators"},{if:"value=street_lamps",then:"street_lamps - A layer showing street lights"},{if:"value=stripclub",then:"stripclub - A venue where erotic dance, striptease, or lap dances are performed commercially. "},{if:"value=surveillance_camera",then:"surveillance_camera - This layer shows surveillance cameras and allows a contributor to update information and add new cameras"},{if:"value=tertiary_education",then:"tertiary_education - Layer with all tertiary education institutes (ISCED:2011 levels 6,7 and 8)"},{if:"value=ticket_machine",then:"ticket_machine - Find ticket machines for public transport tickets"},{if:"value=ticket_validator",then:"ticket_validator - Find ticket validators to validate public transport tickets"},{if:"value=toilet",then:"toilet - A layer showing (public) toilets"},{if:"value=toilet_at_amenity",then:"toilet_at_amenity - A layer showing (public) toilets located at different places."},{if:"value=trail",then:"trail - Waymarked trails"},{if:"value=transit_routes",then:"transit_routes - Layer showing bus lines"},{if:"value=transit_stops",then:"transit_stops - Layer showing different types of transit stops."},{if:"value=tree_node",then:"tree_node - A layer showing trees"},{if:"value=trolley_bay",then:"trolley_bay - Find trolley bays for shopping trolleys."},{if:"value=unit",then:"unit - Library layer with all common units.  Units can _only_ be imported from this file."},{if:"value=usersettings",then:"usersettings - A special layer which is not meant to be shown on a map, but which is used to set user settings"},{if:"value=vending_machine",then:"vending_machine - Layer showing vending machines"},{if:"value=veterinary",then:"veterinary - A layer showing veterinarians"},{if:"value=viewpoint",then:"viewpoint - A nice viewpoint or nice view. Ideal to add an image if no other category fits"},{if:"value=village_green",then:"village_green - A layer showing village-green (which are communal green areas, but not quite parks)"},{if:"value=visitor_information_centre",then:"visitor_information_centre - A visitor center offers information about a specific attraction or place of interest where it is located."},{if:"value=walls_and_buildings",then:"walls_and_buildings - Special builtin layer providing all walls and buildings. This layer is useful in presets for objects which can be placed against walls (e.g. AEDs, postboxes, entrances, addresses, surveillance cameras, …). This layer is invisible by default and not toggleable by the user."},{if:"value=waste_basket",then:"waste_basket - This is a public waste basket, thrash can, where you can throw away your thrash."},{if:"value=waste_disposal",then:"waste_disposal - Waste Disposal Bin, medium to large bin for disposal of (household) waste"},{if:"value=windturbine",then:"windturbine - Modern windmills generating electricity"}]},type:[{description:"Configuration for a single layer",type:"object",properties:{id:{description:`question: What is the identifier of this layer?

This should be a simple, lowercase, human readable string that is used to identify the layer.
 A good ID is:
 - a noun
 - written in singular
 - describes the object
 - in english
 - only has lowercase letters, numbers or underscores. Do not use a space or a dash

type: id
group: Basic`,type:"string"},name:{description:`Used in the layer control panel to toggle a layer on and of.

ifunset: This will hide the layer in the layer control, making it not filterable and not toggleable

group: Basic
question: What is the name of this layer?`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},description:{description:`A description for the features shown in this layer.
This often resembles the introduction of the wiki.osm.org-page for this feature.

group: Basic
question: How would you describe the features that are shown on this layer?`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},source:{description:`Question: Where should the data be fetched from?
title: Data Source

This determines where the data for the layer is fetched: from OSM or from an external geojson dataset.

If no 'geojson' is defined, data will be fetched from overpass and the OSM-API.

Every source _must_ define which tags _must_ be present in order to be picked up.

Note: a source must always be defined. 'special' is only allowed if this is a builtin-layer

types: Load data with specific tags from OpenStreetMap ; Load data from an external geojson source ;
typesdefault: 0
group: Basic`,anyOf:[{type:"object",properties:{osmTags:{$ref:"#/definitions/TagConfigJson",description:`question: Which tags must be present on the feature to show it in this layer?
Every source must set which tags have to be present in order to load the given layer.`},maxCacheAge:{description:`question: How long (in seconds) is the data allowed to remain cached until it must be refreshed?
The maximum amount of seconds that a tile is allowed to linger in the cache

type: nat
default: 30 days
group: expert`,type:"number"}},required:["osmTags"]},{type:"object",properties:{geoJson:{description:`The actual source of the data to load, if loaded via geojson.

# A single geojson-file
source: {geoJson: "https://my.source.net/some-geo-data.geojson"}
 fetches a geojson from a third party source

# A tiled geojson source
source: {geoJson: "https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson", geoJsonZoomLevel: 14}
 to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer

Some API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}

question: What is the URL of the geojson?
type: url`,type:"string"},geoJsonZoomLevel:{description:`To load a tiled geojson layer, set the zoomlevel of the tiles

question: If using a tiled geojson, what is the zoomlevel of the tiles?
ifunset: This is not a tiled geojson`,type:"number"},isOsmCache:{description:`Indicates that the upstream geojson data is OSM-derived.
Useful for e.g. merging or for scripts generating this cache.
This also indicates that making changes on this data is possible

question: Is this geojson a cache of OpenStreetMap data?
ifunset: This is not an OpenStreetMap cache
iftrue: this is based on OpenStreetMap and can thus be edited
group: expert`,type:"boolean"},mercatorCrs:{description:`Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag \`mercatorCrs: true\`  in the source for this

question: Does this geojson use  EPSG:900913 instead of WGS84 as projection?
iftrue: This geojson uses EPSG:900913 instead of WGS84
ifunset: This geojson uses WGS84 just like most geojson (default)`,type:"boolean"},idKey:{description:`Some API's have an id-field, but give it a different name.
Setting this key will rename this field into 'id'

ifunset: An id with key \`id\` will be assigned automatically if no attribute \`id\` is set
inline: This geojson uses <b>{value}</b> as attribute to set the id
question: What is the name of the attribute containing the ID of the object?`,type:"string"}},required:["geoJson"]},{enum:["special","special:library"],type:"string"}]},calculatedTags:{description:`A list of extra tags to calculate, specified as "keyToAssignTo=javascript-expression".
There are a few extra functions available. Refer to <a>Docs/CalculatedTags.md</a> for more information
The functions will be run in order, e.g.
[
 "_max_overlap_m2=Math.max(...feat.overlapsWith("someOtherLayer").map(o => o.overlap))
 "_max_overlap_ratio=Number(feat._max_overlap_m2)/feat.area
]

The specified tags are evaluated lazily. E.g. if a calculated tag is only used in the popup (e.g. the number of nearby features),
the expensive calculation will only be performed then for that feature. This avoids clogging up the contributors PC when all features are loaded.

If a tag has to be evaluated strictly, use ':=' instead:

[
"_some_key:=some_javascript_expression"
]

See the full documentation on [https://github.com/pietervdvn/MapComplete/blob/master/Docs/CalculatedTags.md]

group: expert
question: What extra attributes should be calculated with javascript?`,type:"array",items:{type:"string"}},isShown:{description:`If set, only features matching this extra tag will be shown.
This is useful to hide certain features from view based on a calculated tag or if the features are provided by a different layer.

question: What other tags should features match for being shown?
group: advanced
ifunset: all features which match the 'source'-specification are shown.`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},minzoom:{description:`The minimum needed zoomlevel required to start loading and displaying the data.
This can be used to only show common features (e.g. a bicycle parking) only when the map is zoomed in very much (17).
This prevents cluttering the map with thousands of parkings if one is looking to an entire city.

Default: 0
group: Basic
type: nat
question: At what zoom level should features of the layer be shown?
ifunset: Always load this layer, even if the entire world is in view.`,type:"number"},shownByDefault:{description:`Indicates if this layer is shown by default;
can be used to hide a layer from start, or to load the layer but only to show it when appropriate (e.g. for advanced users)

question: Should this layer be enabled when opening the map for the first time?
iftrue: the layer is enabled when opening the map
iffalse: the layer is hidden until the contributor enables it. (If the filter-popup is disabled, this might never get enabled nor loaded)
default: true
group: advanced`,type:"boolean"},minzoomVisible:{description:`The zoom level at which point the data is hidden again
Default: 100 (thus: always visible

group: expert`,type:"number"},title:{description:`question: Edit the popup title
The title shown in a popup for elements of this layer.

group: title
types: use a fixed translation ; Use a dynamic tagRendering ; hidden
typesdefault: 1
type: translation
inline: {translated{value}}`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}]},popupInFloatover:{description:`Question: Should the information for this layer be shown in the sidebar or in a splash screen?

If set, open the selectedElementView in a floatOver instead of on the right.

iftrue: show the infobox in the splashscreen floating over the entire UI
iffalse: show the infobox in a sidebar on the right
group: advanced
default: sidebar`,type:"boolean"},titleIcons:{description:`Small icons shown next to the title.
If not specified, the OsmLink and wikipedia links will be used by default.
Use an empty array to hide them.
Note that "defaults" will insert all the default titleIcons (which are added automatically)

Use \`auto:<tagrenderingId>\` to automatically create an icon based on a tagRendering which has icons

Type: icon[]
group: infobox`,anyOf:[{type:"array",items:{anyOf:[{allOf:[{$ref:"#/definitions/TagRenderingConfigJson"},{type:"object",properties:{id:{type:"string"}}}]},{type:"string"}]}},{type:"array",items:[{type:"string",enum:["defaults"]}],minItems:1,maxItems:1}]},pointRendering:{description:`Creates points to render on the map.
This can render points for point-objects, lineobjects or areaobjects; use 'location' to indicate where it should be rendered

group: pointrendering`,type:"array",items:{$ref:"#/definitions/default_4"}},lineRendering:{description:`Creates lines and areas to render on the map
group: linerendering`,type:"array",items:{$ref:"#/definitions/default_5"}},passAllFeatures:{description:`If set, this layer will pass all the features it receives onto the next layer.
This is ideal for decoration, e.g. directions on cameras
iftrue: Make the features from this layer also available to the other layer; might result in this object being rendered by multiple layers
iffalse: normal behaviour: don't pass features allong
question: should this layer pass features to the next layers?
group: expert`,type:"boolean"},doNotDownload:{description:`If set, this layer will not query overpass; but it'll still match the tags above which are by chance returned by other layers.
Works well together with 'passAllFeatures', to add decoration
The opposite of \`forceLoad\`

iftrue: Do not attempt to query the data for this layer from overpass/the OSM API
iffalse: download the data as usual
group: expert
question: Should this layer be downloaded or is the data provided by a different layer (which has 'passAllFeatures'-set)?
default: false`,type:"boolean"},forceLoad:{description:`Advanced option - might be set by the theme compiler

If true, this data will _always_ be loaded, even if the theme is disabled by a filter or hidden.
The opposite of \`doNotDownload\`

question: Should this layer be forcibly loaded?
ifftrue: always download this layer, even if it is disabled
iffalse: only download data for this layer when needed (default)
default: false
group: expert`,type:"boolean"},presets:{description:`Presets for this layer.
A preset shows up when clicking the map on a without data (or when right-clicking/long-pressing);
it will prompt the user to add a new point.

The most important aspect are the tags, which define which tags the new point will have;
The title is shown in the dialog, along with the first sentence of the description.

Upon confirmation, the full description is shown beneath the buttons - perfect to add pictures and examples.

Note: the icon of the preset is determined automatically based on the tags and the icon above. Don't worry about that!
NB: if no presets are defined, the popup to add new points doesn't show up at all

group: presets`,type:"array",items:{type:"object",properties:{title:{description:`The title - shown on the 'add-new'-button.

This should include the article of the noun, e.g. 'a hydrant', 'a bicycle pump'.
This text will be inserted into \`Add {category} here\`, becoming \`Add a hydrant here\`.

Do _not_ indicate 'new': 'add a new shop here' is incorrect, as the shop might have existed forever, it could just be unmapped!

question: What is the word to describe this object?
inline: Add {translated(value)::font-bold} here`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},tags:{description:`A single tag (encoded as <code>key=value</code>) out of all the tags to add onto the newly created point.
Note that the icon in the UI will be chosen automatically based on the tags provided here.

question: What tag should be added to the new object?
type: simple_tag
typeHelper: uploadableOnly`,type:"array",items:{type:"string"}},description:{description:`An extra explanation of what the feature is, if it is not immediately clear from the title alone.

The _first sentence_ of the description is shown on the button of the \`add\` menu.
The full description is shown in the confirmation dialog.

(The first sentence is until the first '.'-character in the description)

question: How would you describe this feature?
ifunset: No extra description is given. This can be used to further explain the preset`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},exampleImages:{description:`The URL of an example image which shows a real-life example of what such a feature might look like.

Type: image
question: What is the URL of an image showing such a feature?`,type:"array",items:{type:"string"}},snapToLayer:{description:`question: Should the created point be snapped to a line layer?

If specified, these layers will be shown in the precise location picker  and the new point will be snapped towards it.
For example, this can be used to snap against \`walls_and_buildings\` (e.g. to attach a defibrillator, an entrance, an artwork, ... to the wall)
or to snap an obstacle (such as a bollard) to the \`cycleways_and_roads\`.

suggestions: return Array.from(layers.keys()).map(key => ({if: "value="+key, then: key+" - "+layers.get(key).description}))`,type:"array",items:{type:"string"}},maxSnapDistance:{description:`question: What is the maximum distance in the location-input that a point can be moved to be snapped to a way?

inline: a point is snapped if the location input is at most <b>{value}m</b> away from an object

If specified, a new point will only be snapped if it is within this range.
If further away, it'll be placed in the center of the location input
Distance in meter

ifunset: Do not snap to a layer`,type:"number"}},required:["tags","title"]}},tagRenderings:{description:`question: Edit this way this attributed is displayed or queried

A tag rendering is a block that either shows the known value or asks a question.

Refer to the class \`TagRenderingConfigJson\` to see the possibilities.

Note that we can also use a string here - where the string refers to a tag rendering defined in \`assets/questions/questions.json\`,
where a few very general questions are defined e.g. website, phone number, ...
Furthermore, _all_ the questions of another layer can be reused with \`otherlayer.*\`
If you need only a single of the tagRenderings, use \`otherlayer.tagrenderingId\`
If one or more questions have a 'group' or 'label' set, select all the entries with the corresponding group or label with \`otherlayer.*group\`
Remark: if a tagRendering is 'lent' from another layer, the 'source'-tags are copied and added as condition.
If they are not wanted, remove them with an override

A special value is 'questions', which indicates the location of the questions box. If not specified, it'll be appended to the bottom of the featureInfobox.

At last, one can define a group of renderings where parts of all strings will be replaced by multiple other strings.
This is mainly create questions for a 'left' and a 'right' side of the road.
These will be grouped and questions will be asked together

type: tagrendering[]
group: tagrenderings`,type:"array",items:{anyOf:[{description:`A QuestionableTagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
If the desired tags are missing and a question is defined, a question will be shown instead.`,type:"object",properties:{id:{type:"string"},mappings:{description:`Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes

question: What are common options?`,type:"array",items:{$ref:"#/definitions/MappingConfigJson"}},multiAnswer:{description:`If true, use checkboxes instead of radio buttons when asking the question

question: Should a contributor be allowed to select multiple mappings?

iftrue: allow to select multiple mappings
iffalse: only allow to select a single mapping
ifunset: only allow to select a single mapping`,type:"boolean"},freeform:{description:"Allow freeform text input from the user",type:"object",properties:{key:{description:`question: What is the name of the attribute that should be written to?
This is the OpenStreetMap-key that that value will be written to
ifunset: do not offer a freeform textfield as answer option`,type:"string"},type:{description:`question: What is the input type?
The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values
ifunset: use an unconstrained <b>string</b> as input (default)
suggestions: return validators.AllValidators.filter(type => !type.isMeta).map((type) => ({if: "value="+type.name, then: "<b>"+type.name+"</b> "+type.explanation.split("\\n")[0]}))`,type:"string"},placeholder:{description:`question: What placeholder text should be shown in the input-element if there is no input?
A (translated) text that is shown (as gray text) within the textfield
type: translation
group: expert`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},helperArgs:{description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'
group: expert`,type:"array",items:{}},addExtraTags:{description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'
group: expert`,type:"array",items:{type:"string"}},inline:{description:`question: Show the freeform as box within the question?
Instead of showing a full-width text field, the text field will be shown within the rendering of the question.

This combines badly with special input elements, as it'll distort the layout.
ifunset: show the freeform input field full-width
iftrue: show the freeform input field as a small field within the question
group: expert`,type:"boolean"},default:{description:`question: What value should be entered in the text field if no value is set?
This can help people to quickly enter the most common option
ifunset: do not prefill the textfield
group: expert`,type:"string"},invalidValues:{description:`question: What values of the freeform key should be interpreted as 'unknown'?
For example, if a feature has \`shop=yes\`, the question 'what type of shop is this?' should still asked
ifunset: The question will be considered answered if any value is set for the key
group: expert`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]}}},question:{description:`question: What question should be shown to the contributor?

A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well.

ifunset: This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},questionHint:{description:`question: Should some extra information be shown to the contributor, alongside the question?
This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like
ifunset: No extra hint is given`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},editButtonAriaLabel:{description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},labels:{description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer",type:"array",items:{type:"string"}},render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},required:["id"],additionalProperties:!1},{type:"object",properties:{id:{type:"string"},builtin:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},override:{$ref:"#/definitions/Partial<QuestionableTagRenderingConfigJson>"}},required:["builtin","override"]},{allOf:[{$ref:"#/definitions/default<(string|QuestionableTagRenderingConfigJson|{builtin:string;override:Partial<QuestionableTagRenderingConfigJson>;})[]>"},{type:"object",properties:{id:{type:"string"}},required:["id"]}]},{type:"string"}]}},filter:{description:`All the extra questions for filtering.
If a string is given, mapComplete will search in 'filters.json' for the appropriate filter or will try to parse it as \`layername.filterid\` and us that one

group: filters`,anyOf:[{type:"array",items:{anyOf:[{$ref:"#/definitions/default_1"},{type:"string"}]}},{type:"object",properties:{sameAs:{type:"string"}},required:["sameAs"]}]},deletion:{description:`This block defines under what circumstances the delete dialog is shown for objects of this layer.
If set, a dialog is shown to the user to (soft) delete the point.
The dialog is built to be user friendly and to prevent mistakes.
If deletion is not possible, the dialog will hide itself and show the reason of non-deletability instead.

To configure, the following values are possible:

- false: never ever show the delete button
- true: show the default delete button
- undefined: use the mapcomplete default to show deletion or not. Currently, this is the same as 'false' but this will change in the future
- or: a hash with options (see below)

### The delete dialog



#### Hard deletion if enough experience

A feature can only be deleted from OpenStreetMap by mapcomplete if:

- It is a node
- No ways or relations use the node
- The logged-in user has enough experience OR the user is the only one to have edited the point previously
- The logged-in user has no unread messages (or has a ton of experience)
- The user did not select one of the 'non-delete-options' (see below)

In all other cases, a 'soft deletion' is used.

#### Soft deletion

A 'soft deletion' is when the point isn't deleted fromOSM but retagged so that it'll won't how up in the mapcomplete theme anymore.
This makes it look like it was deleted, without doing damage. A fixme will be added to the point.

Note that a soft deletion is _only_ possible if these tags are provided by the theme creator, as they'll be different for every theme

##### No-delete options

In some cases, the contributor might want to delete something for the wrong reason (e.g. someone who wants to have a path removed "because the path is on their private property").
However, the path exists in reality and should thus be on OSM - otherwise the next contributor will pass by and notice "hey, there is a path missing here! Let me redraw it in OSM!)

The correct approach is to retag the feature in such a way that it is semantically correct *and* that it doesn't show up on the theme anymore.
A no-delete option is offered as 'reason to delete it', but secretly retags.

group: editing
types: Use an advanced delete configuration ; boolean
iftrue: Allow deletion
iffalse: Do not allow deletion
ifunset: Do not allow deletion`,anyOf:[{type:"object",properties:{neededChangesets:{description:`*
By default, the contributor needs 20 previous changesets to delete points edited by others.
For some small features (e.g. bicycle racks) this is too much and this requirement can be lowered or dropped, which can be done here.

type: nat
question: How many changesets must a contributor have before being allowed to delete a point?`,type:"number"},extraDeleteReasons:{description:`*
By default, three reasons to delete a point are shown:

- The point does not exist anymore
- The point was a testing point
- THe point could not be found

However, for some layers, there might be different or more specific reasons for deletion which can be user friendly to set, e.g.:

- the shop has closed
- the climbing route has been closed of for nature conservation reasons
- ...

These reasons can be stated here and will be shown in the list of options the user can choose from`,type:"array",items:{type:"object",properties:{explanation:{description:`The text that will be shown to the user as option for why this point does not exist anymore.
Note that the most common reasons (test point, does not exist anymore, cannot be found) are already offered by default

question: For what extra reason might this feature be removed in real-life?`},changesetMessage:{description:`The text that will be uploaded into the changeset or will be used in the fixme in case of a soft deletion
Should be a few words, in english

question: What should be added to the changeset as delete reason?`,type:"string"}},required:["changesetMessage","explanation"]}},nonDeleteMappings:{description:`In some cases, a (starting) contributor might wish to delete a feature even though deletion is not appropriate.
(The most relevant case are small paths running over private property. These should be marked as 'private' instead of deleted, as the community might trace the path again from aerial imagery, gettting us back to the original situation).

By adding a 'nonDeleteMapping', an option can be added into the list which will retag the feature.
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!`,type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`The tags that will be given to the object.
This must remove tags so that the 'source/osmTags' won't match anymore

question: What tags should be applied to the object?`},then:{description:`The human explanation for the options

question: What text should be shown to the contributor for this reason?`}},required:["if","then"]}},softDeletionTags:{description:`In some cases, the contributor is not allowed to delete the current feature (e.g. because it isn't a point, the point is referenced by a relation or the user isn't experienced enough).
To still offer the user a 'delete'-option, the feature is retagged with these tags. This is a soft deletion, as the point isn't actually removed from OSM but rather marked as 'disused'
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!

Example (note that "amenity=" erases the 'amenity'-key alltogether):

\`\`\`
{
    "and": ["disussed:amenity=public_bookcase", "amenity="]
}
\`\`\`

or (notice the use of the ':='-tag to copy the old value of 'shop=*' into 'disused:shop='):

\`\`\`
{
    "and": ["disused:shop:={shop}", "shop="]
}
\`\`\`

question: If a hard delete is not possible, what tags should be applied to mark this feature as deleted?
type: tag`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},omitDefaultDeleteReasons:{description:`Set this flag if the default delete reasons should be omitted from the dialog.
This requires at least one extraDeleteReason or nonDeleteMapping

question: Should the default delete reasons be hidden?
iftrue: Hide the default delete reasons
iffalse: Show the default delete reasons
ifunset: Show the default delete reasons (default behaviour)`,anyOf:[{type:"array",items:{type:"string"}},{type:"boolean"}]}},additionalProperties:!1},{type:"boolean"}]},allowMove:{description:`Indicates if a point can be moved and why.

A feature can be moved by MapComplete if:

- It is a point
- The point is _not_ part of a way or a a relation.

types: use an advanced move configuration ; boolean
group: editing
question: Is deleting a point allowed?
iftrue: Allow contributors to move a point (for accuracy or a relocation)
iffalse: Don't allow contributors to move points
ifunset: Don't allow contributors to move points (default)`,anyOf:[{type:"object",properties:{enableImproveAccuracy:{description:`question: Should moving this type of point to improve the accuracy be allowed?
iftrue: This point can be moved to improve the accuracy
ifunset: (default) This point can be moved to improve the accuracy
iffalse: This point cannot be moved to improve the accuracy`,type:"boolean"},enableRelocation:{description:"question: Should moving this type of point due to a relocation be allowed?\n\nThis will erase the attributes `addr:street`, `addr:housenumber`, `addr:city` and `addr:postcode`\n\niftrue: This type of point can be moved due to a relocation (and will remove address information when this is done)\nifunset: (default) This type of point can be moved due to a relocation (and will remove address information when this is done)\niffalse: This type of point cannot be moved due to a relocation",type:"boolean"}},additionalProperties:!1},{type:"boolean"}]},allowSplit:{description:`If set, a 'split this way' button is shown on objects rendered as LineStrings, e.g. highways.

If the way is part of a relation, MapComplete will attempt to update this relation as well
question: Should the contributor be able to split ways using this layer?
iftrue: enable the 'split-roads'-component
iffalse: don't enable the split-roads component
ifunset: don't enable the split-roads component
group: editing`,type:"boolean"},units:{type:"array",items:{anyOf:[{$ref:"#/definitions/default_2"},{$ref:"#/definitions/Record<string,string|{quantity:string;denominations:string[];canonical?:string|undefined;}>"}]}},syncSelection:{description:`If set, synchronizes whether or not this layer is enabled.

group: advanced
question: Should enabling/disabling the layer be saved (locally or in the cloud)?
suggestions: return [{if: "value=no", then: "Don't save, always revert to the default"}, {if: "value=local", then: "Save selection in local storage"}, {if: "value=theme-only", then: "Save the state in the OSM-usersettings, but apply on this theme only (default)"}, {if: "value=global", then: "Save in OSM-usersettings and toggle on _all_ themes using this layer"}]`,enum:["global","local","no","theme-only"],type:"string"},"#":{description:`Used for comments and/or to disable some checks

no-question-hint-check: disables a check in MiscTagRenderingChecks which complains about 'div', 'span' or 'class=subtle'-HTML elements in the tagRendering

group: hidden`,type:"string"},fullNodeDatabase:{description:`_Set automatically by MapComplete, please ignore_

group: hidden`,type:"boolean"}},required:["id","pointRendering","source"],additionalProperties:!1},{type:"object",properties:{builtin:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},override:{$ref:"#/definitions/Partial<LayerConfigJson>"},hideTagRenderingsWithLabels:{description:`TagRenderings with any of these labels will be removed from the layer.
Note that the 'id' and 'group' are considered labels too`,type:"array",items:{type:"string"}}},required:["builtin","override"]},{type:"string"}],description:`Every layer contains a description of which feature to display - the overpassTags which are queried.
Instead of running one query for every layer, the query is fused.
Afterwards, every layer is given the list of features.
Every layer takes away the features that match with them*, and give the leftovers to the next layers.
This implies that the _order_ of the layers is important in the case of features with the same tags;
as the later layers might never receive their feature.
*layers can also remove 'leftover'-features if the leftovers overlap with a feature in the layer itself
Note that builtin layers can be reused. Either put in the name of the layer to reuse, or use {builtin: "layername", override: ...}
The 'override'-object will be copied over the original values of the layer, which allows to change certain aspects of the layer
For example: If you would like to use layer nature reserves, but only from a specific operator (eg. Natuurpunt) you would use the following in your theme:
\`\`\`
"layer": {
 "builtin": "nature_reserve",
 "override": {"source":
 {"osmTags": {
 "+and":["operator=Natuurpunt"]
   }
  }
 }
}
\`\`\`
It's also possible to load multiple layers at once, for example, if you would like for both drinking water and benches to start at the zoomlevel at 12, you would use the following:
\`\`\`
"layer": {
 "builtin": ["benches", "drinking_water"],
 "override": {"minzoom": 12}
}
\`\`\``},{path:["layers","id"],required:!0,hints:{typehint:"id",group:"Basic",question:"What is the identifier of this layer?"},type:"string",description:`This should be a simple, lowercase, human readable string that is used to identify the layer.
 A good ID is:
 - a noun
 - written in singular
 - describes the object
 - in english
 - only has lowercase letters, numbers or underscores. Do not use a space or a dash`},{path:["layers","name"],required:!1,hints:{group:"Basic",question:"What is the name of this layer?",ifunset:"This will hide the layer in the layer control, making it not filterable and not toggleable"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Used in the layer control panel to toggle a layer on and of."},{path:["layers","description"],required:!1,hints:{group:"Basic",question:"How would you describe the features that are shown on this layer?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A description for the features shown in this layer.
This often resembles the introduction of the wiki.osm.org-page for this feature.`},{path:["layers","source"],required:!0,hints:{types:"Load data with specific tags from OpenStreetMap ; Load data from an external geojson source ;",typesdefault:"0",group:"Basic",question:"Where should the data be fetched from?",title:"Data Source"},type:[{type:"object",properties:{osmTags:{$ref:"#/definitions/TagConfigJson",description:`question: Which tags must be present on the feature to show it in this layer?
Every source must set which tags have to be present in order to load the given layer.`},maxCacheAge:{description:`question: How long (in seconds) is the data allowed to remain cached until it must be refreshed?
The maximum amount of seconds that a tile is allowed to linger in the cache

type: nat
default: 30 days
group: expert`,type:"number"}},required:["osmTags"]},{type:"object",properties:{geoJson:{description:`The actual source of the data to load, if loaded via geojson.

# A single geojson-file
source: {geoJson: "https://my.source.net/some-geo-data.geojson"}
 fetches a geojson from a third party source

# A tiled geojson source
source: {geoJson: "https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson", geoJsonZoomLevel: 14}
 to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer

Some API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}

question: What is the URL of the geojson?
type: url`,type:"string"},geoJsonZoomLevel:{description:`To load a tiled geojson layer, set the zoomlevel of the tiles

question: If using a tiled geojson, what is the zoomlevel of the tiles?
ifunset: This is not a tiled geojson`,type:"number"},isOsmCache:{description:`Indicates that the upstream geojson data is OSM-derived.
Useful for e.g. merging or for scripts generating this cache.
This also indicates that making changes on this data is possible

question: Is this geojson a cache of OpenStreetMap data?
ifunset: This is not an OpenStreetMap cache
iftrue: this is based on OpenStreetMap and can thus be edited
group: expert`,type:"boolean"},mercatorCrs:{description:`Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag \`mercatorCrs: true\`  in the source for this

question: Does this geojson use  EPSG:900913 instead of WGS84 as projection?
iftrue: This geojson uses EPSG:900913 instead of WGS84
ifunset: This geojson uses WGS84 just like most geojson (default)`,type:"boolean"},idKey:{description:`Some API's have an id-field, but give it a different name.
Setting this key will rename this field into 'id'

ifunset: An id with key \`id\` will be assigned automatically if no attribute \`id\` is set
inline: This geojson uses <b>{value}</b> as attribute to set the id
question: What is the name of the attribute containing the ID of the object?`,type:"string"}},required:["geoJson"]},{enum:["special","special:library"],type:"string"}],description:`This determines where the data for the layer is fetched: from OSM or from an external geojson dataset.
If no 'geojson' is defined, data will be fetched from overpass and the OSM-API.
Every source _must_ define which tags _must_ be present in order to be picked up.
Note: a source must always be defined. 'special' is only allowed if this is a builtin-layer`},{path:["layers","source","osmTags"],required:!0,hints:{typehint:"tag",question:"Which tags must be present on the feature to show it in this layer?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"Every source must set which tags have to be present in order to load the given layer."},{path:["layers","source","maxCacheAge"],required:!1,hints:{typehint:"nat",group:"expert",default:"30 days",question:"How long (in seconds) is the data allowed to remain cached until it must be refreshed?"},type:"number",description:"The maximum amount of seconds that a tile is allowed to linger in the cache"},{path:["layers","source","geoJson"],required:!0,hints:{typehint:"url",question:"What is the URL of the geojson?"},type:"string",description:`The actual source of the data to load, if loaded via geojson.
# A single geojson-file
source: {geoJson: "https://my.source.net/some-geo-data.geojson"}
 fetches a geojson from a third party source
# A tiled geojson source
source: {geoJson: "https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson", geoJsonZoomLevel: 14}
 to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer
Some API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}`},{path:["layers","source","geoJsonZoomLevel"],required:!1,hints:{question:"If using a tiled geojson, what is the zoomlevel of the tiles?",ifunset:"This is not a tiled geojson"},type:"number",description:"To load a tiled geojson layer, set the zoomlevel of the tiles"},{path:["layers","source","isOsmCache"],required:!1,hints:{group:"expert",question:"Is this geojson a cache of OpenStreetMap data?",iftrue:"this is based on OpenStreetMap and can thus be edited",ifunset:"This is not an OpenStreetMap cache"},type:"boolean",description:`Indicates that the upstream geojson data is OSM-derived.
Useful for e.g. merging or for scripts generating this cache.
This also indicates that making changes on this data is possible`},{path:["layers","source","mercatorCrs"],required:!1,hints:{question:"Does this geojson use  EPSG:900913 instead of WGS84 as projection?",iftrue:"This geojson uses EPSG:900913 instead of WGS84",ifunset:"This geojson uses WGS84 just like most geojson (default)"},type:"boolean",description:"Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag `mercatorCrs: true`  in the source for this"},{path:["layers","source","idKey"],required:!1,hints:{question:"What is the name of the attribute containing the ID of the object?",ifunset:"An id with key `id` will be assigned automatically if no attribute `id` is set",inline:"This geojson uses <b>{value}</b> as attribute to set the id"},type:"string",description:`Some API's have an id-field, but give it a different name.
Setting this key will rename this field into 'id'`},{path:["layers","calculatedTags"],required:!1,hints:{group:"expert",question:"What extra attributes should be calculated with javascript?"},type:"array",description:`A list of extra tags to calculate, specified as "keyToAssignTo=javascript-expression".
There are a few extra functions available. Refer to <a>Docs/CalculatedTags.md</a> for more information
The functions will be run in order, e.g.
[
 "_max_overlap_m2=Math.max(...feat.overlapsWith("someOtherLayer").map(o => o.overlap))
 "_max_overlap_ratio=Number(feat._max_overlap_m2)/feat.area
]
The specified tags are evaluated lazily. E.g. if a calculated tag is only used in the popup (e.g. the number of nearby features),
the expensive calculation will only be performed then for that feature. This avoids clogging up the contributors PC when all features are loaded.
If a tag has to be evaluated strictly, use ':=' instead:
[
"_some_key:=some_javascript_expression"
]
See the full documentation on [https://github.com/pietervdvn/MapComplete/blob/master/Docs/CalculatedTags.md]`},{path:["layers","isShown"],required:!1,hints:{group:"advanced",question:"What other tags should features match for being shown?",ifunset:"all features which match the 'source'-specification are shown."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, only features matching this extra tag will be shown.
This is useful to hide certain features from view based on a calculated tag or if the features are provided by a different layer.`},{path:["layers","isShown","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","isShown","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","minzoom"],required:!1,hints:{typehint:"nat",group:"Basic",default:"0",question:"At what zoom level should features of the layer be shown?",ifunset:"Always load this layer, even if the entire world is in view."},type:"number",description:`The minimum needed zoomlevel required to start loading and displaying the data.
This can be used to only show common features (e.g. a bicycle parking) only when the map is zoomed in very much (17).
This prevents cluttering the map with thousands of parkings if one is looking to an entire city.`},{path:["layers","shownByDefault"],required:!1,hints:{group:"advanced",default:"true",question:"Should this layer be enabled when opening the map for the first time?",iftrue:"the layer is enabled when opening the map",iffalse:"the layer is hidden until the contributor enables it. (If the filter-popup is disabled, this might never get enabled nor loaded)"},type:"boolean",description:`Indicates if this layer is shown by default;
can be used to hide a layer from start, or to load the layer but only to show it when appropriate (e.g. for advanced users)`},{path:["layers","minzoomVisible"],required:!1,hints:{group:"expert",default:"100 (thus: always visible"},type:"number",description:"The zoom level at which point the data is hidden again"},{path:["layers","title"],required:!1,hints:{typehint:"translation",types:"use a fixed translation ; Use a dynamic tagRendering ; hidden",typesdefault:"1",group:"title",question:"Edit the popup title",inline:"{translated{value}}"},type:[{$ref:"#/definitions/Record<string,string>"},{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"The title shown in a popup for elements of this layer."},{path:["layers","title","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","title","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","title","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","title","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","title","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","title","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","title","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","title","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","title","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","title","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","title","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","title","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","title","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","title","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","title","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","title","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","title","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","title","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","title","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","title","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","popupInFloatover"],required:!1,hints:{group:"advanced",default:"sidebar",question:"Should the information for this layer be shown in the sidebar or in a splash screen?",iftrue:"show the infobox in the splashscreen floating over the entire UI",iffalse:"show the infobox in a sidebar on the right"},type:"boolean",description:"If set, open the selectedElementView in a floatOver instead of on the right."},{path:["layers","titleIcons"],required:!1,hints:{typehint:"icon[]",group:"infobox"},type:[{type:"array",items:{anyOf:[{allOf:[{$ref:"#/definitions/TagRenderingConfigJson"},{type:"object",properties:{id:{type:"string"}}}]},{type:"string"}]}},{type:"array",items:[{type:"string",enum:["defaults"]}],minItems:1,maxItems:1}],description:`Small icons shown next to the title.
If not specified, the OsmLink and wikipedia links will be used by default.
Use an empty array to hide them.
Note that "defaults" will insert all the default titleIcons (which are added automatically)
Use \`auto:<tagrenderingId>\` to automatically create an icon based on a tagRendering which has icons`},{path:["layers","titleIcons"],required:!1,hints:{},type:"object",description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`},{path:["layers","titleIcons","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","titleIcons","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","titleIcons","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","titleIcons","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","titleIcons","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","titleIcons","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","titleIcons","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","titleIcons","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","titleIcons","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","titleIcons","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","titleIcons","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","titleIcons","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","titleIcons","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","titleIcons","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","titleIcons","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","titleIcons","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","titleIcons","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","titleIcons","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","titleIcons","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","titleIcons","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering"],required:!0,hints:{group:"pointrendering"},type:"array",description:`Creates points to render on the map.
This can render points for point-objects, lineobjects or areaobjects; use 'location' to indicate where it should be rendered`},{path:["layers","pointRendering"],required:!1,hints:{},type:"object",description:`The PointRenderingConfig gives all details onto how to render a single point of a feature.
This can be used if:
- The feature is a point
- To render something at the centroid of an area, or at the start, end or projected centroid of a way`},{path:["layers","pointRendering","location"],required:!0,hints:{question:"At what location should this icon be shown?",suggestions:[{if:"value=point",then:"Show an icon for point (node) objects"},{if:"value=centroid",then:"Show an icon for line or polygon (way) objects at their centroid location"},{if:"value=start",then:"Show an icon for line (way) objects at the start"},{if:"value=end",then:"Show an icon for line (way) object at the end"},{if:"value=projected_centerpoint",then:"Show an icon for line (way) object near the centroid location, but moved onto the line"}],multianswer:"true"},type:"array",description:""},{path:["layers","pointRendering","marker"],required:!1,hints:{},type:"array",description:"The marker for an element.\nNote that this also defines the icon for this layer (rendered with the overpass-tags) <i>and</i> the icon in the presets.\nThe result of the icon is rendered as follows:\n- The first icon is rendered on the map\n- The second entry is overlayed on top of it\n- ...\nAs a result, on could use a generic icon (`pin`, `circle`, `square`) with a color, then overlay it with a specific icon."},{path:["layers","pointRendering","marker","icon"],required:!0,hints:{typehint:"icon",question:"What icon should be used?",suggestions:[{if:"value=pin",then:"pin",icon:"pin"},{if:"value=bug",then:"bug",icon:"bug"},{if:"value=square",then:"square",icon:"square"},{if:"value=square_rounded",then:"square_rounded",icon:"square_rounded"},{if:"value=circle",then:"circle",icon:"circle"},{if:"value=checkmark",then:"checkmark",icon:"checkmark"},{if:"value=clock",then:"clock",icon:"clock"},{if:"value=close",then:"close",icon:"close"},{if:"value=crosshair",then:"crosshair",icon:"crosshair"},{if:"value=help",then:"help",icon:"help"},{if:"value=home",then:"home",icon:"home"},{if:"value=invalid",then:"invalid",icon:"invalid"},{if:"value=location",then:"location",icon:"location"},{if:"value=location_empty",then:"location_empty",icon:"location_empty"},{if:"value=location_locked",then:"location_locked",icon:"location_locked"},{if:"value=note",then:"note",icon:"note"},{if:"value=resolved",then:"resolved",icon:"resolved"},{if:"value=ring",then:"ring",icon:"ring"},{if:"value=scissors",then:"scissors",icon:"scissors"},{if:"value=teardrop",then:"teardrop",icon:"teardrop"},{if:"value=teardrop_with_hole_green",then:"teardrop_with_hole_green",icon:"teardrop_with_hole_green"},{if:"value=triangle",then:"triangle",icon:"triangle"},{if:"value=brick_wall_square",then:"brick_wall_square",icon:"brick_wall_square"},{if:"value=brick_wall_round",then:"brick_wall_round",icon:"brick_wall_round"},{if:"value=gps_arrow",then:"gps_arrow",icon:"gps_arrow"},{if:"value=checkmark",then:"checkmark",icon:"checkmark"},{if:"value=help",then:"help",icon:"help"},{if:"value=close",then:"close",icon:"close"},{if:"value=invalid",then:"invalid",icon:"invalid"},{if:"value=heart",then:"heart",icon:"heart"},{if:"value=heart_outline",then:"heart_outline",icon:"heart_outline"},{if:"value=link",then:"link",icon:"link"},{if:"value=confirm",then:"confirm",icon:"confirm"},{if:"value=direction",then:"direction",icon:"direction"},{if:"value=not_found",then:"not_found",icon:"not_found"},{if:"value=mastodon",then:"mastodon",icon:"mastodon"},{if:"value=party",then:"party",icon:"party"},{if:"value=addSmall",then:"addSmall",icon:"addSmall"}]},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"object",properties:{builtin:{type:"string"},override:{}},required:["builtin","override"]},{type:"string"}],description:""},{path:["layers","pointRendering","marker","icon","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","pointRendering","marker","icon","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","marker","icon","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","marker","icon","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","marker","color"],required:!1,hints:{typehint:"color",question:"What colour should the icon be?"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"object",properties:{builtin:{type:"string"},override:{}},required:["builtin","override"]},{type:"string"}],description:"This will only work for the default icons such as `pin`,`circle`,..."},{path:["layers","pointRendering","marker","color","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","pointRendering","marker","color","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","marker","color","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","marker","color","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","iconBadges"],required:!1,hints:{group:"hidden"},type:"array",description:"A list of extra badges to show next to the icon as small badge\nThey will be added as a 25% height icon at the bottom right of the icon, with all the badges in a flex layout.\nNote: strings are interpreted as icons, so layering and substituting is supported. You can use `circle:white;./my_icon.svg` to add a background circle"},{path:["layers","pointRendering","iconBadges","if"],required:!0,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","iconBadges","then"],required:!0,hints:{typehint:"icon"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:"Badge to show"},{path:["layers","pointRendering","iconBadges","then","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","pointRendering","iconBadges","then","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","iconBadges","then","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","iconBadges","then","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","iconSize"],required:!1,hints:{question:"What size should the marker be on the map?",ifunset:"Use the default size (<b>40,40</b> px)"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:'A string containing "<width>,<height>" in pixels'},{path:["layers","pointRendering","iconSize","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","iconSize","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","iconSize","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","iconSize","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","iconSize","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","iconSize","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","iconSize","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","iconSize","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","iconSize","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","iconSize","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","iconSize","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","iconSize","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","iconSize","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","iconSize","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","iconSize","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","iconSize","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","iconSize","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","iconSize","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","iconSize","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","iconSize","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","anchor"],required:!1,hints:{question:"What is the anchorpoint of the icon?",ifunset:"Use MapComplete-default (<b>center</b>)",suggestions:[{if:"value=center",then:"Place the <b>center</b> of the icon on the geographical location"},{if:"value=top",then:"Place the <b>top</b> of the icon on the geographical location"},{if:"value=bottom",then:"Place the <b>bottom</b> of the icon on the geographical location"},{if:"value=left",then:"Place the <b>left</b> of the icon on the geographical location"},{if:"value=right",then:"Place the <b>right</b> of the icon on the geographical location"}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"This matches the geographical point with a location on the icon."},{path:["layers","pointRendering","anchor","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","anchor","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","anchor","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","anchor","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","anchor","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","anchor","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","anchor","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","anchor","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","anchor","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","anchor","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","anchor","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","anchor","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","anchor","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","anchor","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","anchor","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","anchor","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","anchor","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","anchor","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","anchor","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","anchor","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","rotation"],required:!1,hints:{question:"What rotation should be applied on the icon?",ifunset:"Do not rotate"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"This is mostly useful for items that face a specific direction, such as surveillance cameras\nThis is interpreted as css property for 'rotate', thus has to end with 'deg', e.g. `90deg`, `{direction}deg`, `calc(90deg - {camera:direction}deg)``"},{path:["layers","pointRendering","rotation","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","rotation","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","rotation","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","rotation","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","rotation","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","rotation","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotation","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotation","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","rotation","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotation","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotation","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","rotation","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","rotation","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","rotation","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","rotation","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","rotation","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","rotation","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","rotation","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","rotation","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","rotation","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","label"],required:!1,hints:{types:"Dynamic value based on the attributes ; string",question:"What label should be shown beneath the marker?",ifunset:"Do not show a label beneath the marker",inline:"Always show label <b>{value}</b> beneath the marker"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:'For example: `&LT;div style="background: white">{name}&LT;/div>`\nIf the icon is undefined, then the label is shown in the center of the feature.'},{path:["layers","pointRendering","label","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","label","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","label","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","label","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","label","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","label","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","label","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","label","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","label","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","label","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","label","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","label","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","label","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","label","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","label","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","label","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","label","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","label","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","label","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","label","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","labelCss"],required:!1,hints:{types:"Dynamic value ; string",group:"expert",question:"What CSS should be applied to the label?",ifunset:"Do not apply extra CSS-labels to the label",inline:"Apply CSS-style <b>{value}</b> to the label"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"You can set the css-properties here, e.g. `background: red; font-size: 12px; `"},{path:["layers","pointRendering","labelCss","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","labelCss","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","labelCss","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","labelCss","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","labelCss","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","labelCss","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCss","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCss","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","labelCss","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCss","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCss","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","labelCss","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","labelCss","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","labelCss","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","labelCss","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","labelCss","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","labelCss","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","labelCss","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","labelCss","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","labelCss","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","labelCssClasses"],required:!1,hints:{types:"Dynamic value ; string",question:"Which CSS-classes should be applied to the label?",ifunset:"Do not apply extra CSS-classes to the label",inline:"Apply CSS-classes <b>{value}</b> to the label",suggestions:[{if:"value=bg-white rounded px-2",then:"Draw on a white background"}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"The classes should be separated by a space (` `)\nYou can use most Tailwind-css classes, see https://tailwindcss.com/ for more information\nFor example: `center bg-gray-500 mx-2 my-1 rounded-full`"},{path:["layers","pointRendering","labelCssClasses","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","labelCssClasses","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","labelCssClasses","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","labelCssClasses","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","labelCssClasses","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","labelCssClasses","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCssClasses","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCssClasses","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","labelCssClasses","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCssClasses","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","labelCssClasses","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","labelCssClasses","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","labelCssClasses","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","labelCssClasses","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","labelCssClasses","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","labelCssClasses","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","labelCssClasses","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","labelCssClasses","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","labelCssClasses","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","labelCssClasses","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","css"],required:!1,hints:{types:"Dynamic value ; string",group:"expert",question:"What CSS should be applied to the entire marker?",ifunset:"Do not apply extra CSS element to the entire marker",inline:"Apply CSS-style <b>{value}</b> to the _entire marker_"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"You can set the css-properties here, e.g. `background: red; font-size: 12px; `\nThis will be applied to the _container_ containing both the marker and the label"},{path:["layers","pointRendering","css","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","css","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","css","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","css","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","css","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","css","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","css","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","css","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","css","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","css","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","css","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","css","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","css","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","css","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","css","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","css","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","css","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","css","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","css","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","css","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","cssClasses"],required:!1,hints:{types:"Dynamic value ; string",group:"expert",question:"Which CSS-classes should be applied to the entire marker?",ifunset:"Do not apply extra CSS-classes to the label",inline:"Apply CSS-classes <b>{value}</b> to the entire container"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"This will be applied to the _container_ containing both the marker and the label\nThe classes should be separated by a space (` `)\nYou can use most Tailwind-css classes, see https://tailwindcss.com/ for more information\nFor example: `center bg-gray-500 mx-2 my-1 rounded-full`"},{path:["layers","pointRendering","cssClasses","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","cssClasses","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","cssClasses","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","cssClasses","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","cssClasses","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","cssClasses","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","cssClasses","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","cssClasses","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","cssClasses","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","cssClasses","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","cssClasses","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","cssClasses","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","cssClasses","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","cssClasses","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","cssClasses","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","cssClasses","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","cssClasses","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","cssClasses","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","cssClasses","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","cssClasses","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","pitchAlignment"],required:!1,hints:{group:"expert",question:"If the map is pitched, should the icon stay parallel to the screen or to the groundplane?",suggestions:[{if:"value=canvas",then:"The icon will stay upward and not be transformed as if it sticks to the screen"},{if:"value=map",then:"The icon will be transformed as if it were painted onto the ground. (Automatically sets rotationAlignment)"}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{enum:["canvas","map"],type:"string"}],description:""},{path:["layers","pointRendering","pitchAlignment","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","pitchAlignment","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","pitchAlignment","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","pitchAlignment","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","pitchAlignment","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","pitchAlignment","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","pitchAlignment","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","pitchAlignment","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","pitchAlignment","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","pitchAlignment","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","pitchAlignment","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","pitchAlignment","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","pitchAlignment","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","pitchAlignment","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","pitchAlignment","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","pitchAlignment","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","pitchAlignment","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","pitchAlignment","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","pitchAlignment","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","pitchAlignment","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","pointRendering","rotationAlignment"],required:!1,hints:{group:"expert",question:"Should the icon be rotated if the map is rotated?",ifunset:"Do not rotate or tilt icons. Always keep the icons straight",suggestions:[{if:"value=canvas",then:"Never rotate the icon"},{if:"value=map",then:"If the map is rotated, rotate the icon as well. This gives the impression of an icon that floats perpendicular above the ground."}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{enum:["canvas","map"],type:"string"}],description:""},{path:["layers","pointRendering","rotationAlignment","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","pointRendering","rotationAlignment","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","pointRendering","rotationAlignment","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","rotationAlignment","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","rotationAlignment","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","pointRendering","rotationAlignment","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotationAlignment","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotationAlignment","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","pointRendering","rotationAlignment","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotationAlignment","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","pointRendering","rotationAlignment","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","pointRendering","rotationAlignment","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","pointRendering","rotationAlignment","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","pointRendering","rotationAlignment","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","pointRendering","rotationAlignment","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","pointRendering","rotationAlignment","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","pointRendering","rotationAlignment","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","pointRendering","rotationAlignment","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","pointRendering","rotationAlignment","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","pointRendering","rotationAlignment","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","lineRendering"],required:!1,hints:{group:"linerendering"},type:"array",description:"Creates lines and areas to render on the map"},{path:["layers","lineRendering"],required:!1,hints:{},type:"object",description:`The LineRenderingConfig gives all details onto how to render a single line of a feature.
This can be used if:
- The feature is a line
- The feature is an area`},{path:["layers","lineRendering","color"],required:!1,hints:{typehint:"color",types:"dynamic value ; string",question:"What color should lines be drawn in?",inline:"The line colour always is <b>{value}</b>",title:"Line Colour"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:`For an area, this will be the colour of the outside line.
If the value starts with "--", the style of the body element will be queried for the corresponding variable instead`},{path:["layers","lineRendering","color","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","lineRendering","color","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","lineRendering","color","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","lineRendering","color","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","lineRendering","width"],required:!1,hints:{typehint:"pnat",types:"dynamic value ; string",question:"How wide should the line be?",ifunset:"Use the default-linewidth of 7 pixels",inline:"The line width is <b>{value} pixels</b>",title:"Line width"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:["string","number"]}],description:"The stroke-width for way-elements"},{path:["layers","lineRendering","width","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","lineRendering","width","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","lineRendering","width","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","lineRendering","width","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","lineRendering","dashArray"],required:!1,hints:{question:"Should a dasharray be used to render the lines?",ifunset:"Ways are rendered with a full line"},type:"string",description:"The dasharray defines 'pixels of line, pixels of gap, pixels of line, pixels of gap, ...'. For example, `5 6` will be 5 pixels of line followed by a 6 pixel gap.\nCannot be a dynamic property due to a mapbox limitation"},{path:["layers","lineRendering","lineCap"],required:!1,hints:{types:"dynamic value ; string",question:"What form should the line-ending have?",ifunset:"Use the default value (round ending)",suggestions:[{if:"value=round",then:"Round endings"},{if:"value=square",then:"square endings"},{if:"value=butt",then:"no ending (square ending at the end, without padding)"}],title:"Line Cap"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:""},{path:["layers","lineRendering","lineCap","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","lineRendering","lineCap","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","lineRendering","lineCap","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","lineRendering","lineCap","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","lineRendering","fillColor"],required:!1,hints:{typehint:"color",types:"dynamic value ; string",question:"What colour should be used as fill colour for polygons?",ifunset:"The polygon fill colour will be a more transparent version of the stroke colour",inline:"The fill colour is <b>{value}</b>",suggestions:[{if:"value=#00000000",then:"Use a transparent fill (only render the outline)"}]},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:""},{path:["layers","lineRendering","fillColor","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","lineRendering","fillColor","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","lineRendering","fillColor","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","lineRendering","fillColor","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","lineRendering","offset"],required:!1,hints:{typehint:"int",types:"dynamic value ; number",question:"Should the lines be moved (offsetted) with a number of pixels against the geographical lines?",ifunset:"don't offset lines on the map",inline:"Pixel offset by <b>{value}</b> pixels"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"number"}],description:`The number of pixels this line should be moved.
Use a positive number to move to the right in the drawing direction or a negative to move to the left (left/right as defined by the drawing direction of the line).
IMPORTANT: MapComplete will already normalize 'key:both:property' and 'key:both' into the corresponding 'key:left' and 'key:right' tagging (same for 'sidewalk=left/right/both' which is rewritten to 'sidewalk:left' and 'sidewalk:right')
This simplifies programming. Refer to the CalculatedTags.md-documentation for more details`},{path:["layers","lineRendering","offset","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","lineRendering","offset","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","lineRendering","offset","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","lineRendering","offset","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","lineRendering","imageAlongWay"],required:!1,hints:{typehint:"image",question:"What PNG-image should be shown along the way?",ifunset:"no image is shown along the way"},type:[{type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation

type: tag`},then:{type:"string"}},required:["if","then"]}},{type:"string"}],description:""},{path:["layers","lineRendering","imageAlongWay","if"],required:!0,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","passAllFeatures"],required:!1,hints:{group:"expert",question:"should this layer pass features to the next layers?",iftrue:"Make the features from this layer also available to the other layer; might result in this object being rendered by multiple layers",iffalse:"normal behaviour: don't pass features allong"},type:"boolean",description:`If set, this layer will pass all the features it receives onto the next layer.
This is ideal for decoration, e.g. directions on cameras`},{path:["layers","doNotDownload"],required:!1,hints:{group:"expert",default:"false",question:"Should this layer be downloaded or is the data provided by a different layer (which has 'passAllFeatures'-set)?",iftrue:"Do not attempt to query the data for this layer from overpass/the OSM API",iffalse:"download the data as usual"},type:"boolean",description:"If set, this layer will not query overpass; but it'll still match the tags above which are by chance returned by other layers.\nWorks well together with 'passAllFeatures', to add decoration\nThe opposite of `forceLoad`"},{path:["layers","forceLoad"],required:!1,hints:{group:"expert",default:"false",question:"Should this layer be forcibly loaded?",iffalse:"only download data for this layer when needed (default)"},type:"boolean",description:`Advanced option - might be set by the theme compiler
If true, this data will _always_ be loaded, even if the theme is disabled by a filter or hidden.
The opposite of \`doNotDownload\`
ifftrue: always download this layer, even if it is disabled`},{path:["layers","presets"],required:!1,hints:{group:"presets"},type:"array",description:`Presets for this layer.
A preset shows up when clicking the map on a without data (or when right-clicking/long-pressing);
it will prompt the user to add a new point.
The most important aspect are the tags, which define which tags the new point will have;
The title is shown in the dialog, along with the first sentence of the description.
Upon confirmation, the full description is shown beneath the buttons - perfect to add pictures and examples.
Note: the icon of the preset is determined automatically based on the tags and the icon above. Don't worry about that!
NB: if no presets are defined, the popup to add new points doesn't show up at all`},{path:["layers","presets","title"],required:!0,hints:{question:"What is the word to describe this object?",inline:"Add {translated(value)::font-bold} here"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"The title - shown on the 'add-new'-button.\nThis should include the article of the noun, e.g. 'a hydrant', 'a bicycle pump'.\nThis text will be inserted into `Add {category} here`, becoming `Add a hydrant here`.\nDo _not_ indicate 'new': 'add a new shop here' is incorrect, as the shop might have existed forever, it could just be unmapped!"},{path:["layers","presets","tags"],required:!0,hints:{typehint:"simple_tag",typehelper:"uploadableOnly",question:"What tag should be added to the new object?"},type:"array",description:`A single tag (encoded as <code>key=value</code>) out of all the tags to add onto the newly created point.
Note that the icon in the UI will be chosen automatically based on the tags provided here.`},{path:["layers","presets","description"],required:!1,hints:{question:"How would you describe this feature?",ifunset:"No extra description is given. This can be used to further explain the preset"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`An extra explanation of what the feature is, if it is not immediately clear from the title alone.
The _first sentence_ of the description is shown on the button of the \`add\` menu.
The full description is shown in the confirmation dialog.
(The first sentence is until the first '.'-character in the description)`},{path:["layers","presets","exampleImages"],required:!1,hints:{typehint:"image",question:"What is the URL of an image showing such a feature?"},type:"array",description:"The URL of an example image which shows a real-life example of what such a feature might look like."},{path:["layers","presets","snapToLayer"],required:!1,hints:{question:"Should the created point be snapped to a line layer?",suggestions:[{if:"value=address",then:"address - Addresses"},{if:"value=advertising",then:"advertising - We will complete data from advertising features with reference, operator and lit"},{if:"value=aerialway",then:"aerialway - Various forms of transport for passengers and goods that use wires, including cable cars, gondolas, chair lifts, drag lifts, and zip lines. "},{if:"value=ambulancestation",then:"ambulancestation - An ambulance station is an area for storage of ambulance vehicles, medical equipment, personal protective equipment, and other medical supplies."},{if:"value=animal_shelter",then:"animal_shelter - An animal shelter is a facility where animals in trouble are brought and facility's staff (volunteers or not) feeds them and cares of them, rehabilitating and healing them if necessary. This definition includes kennels for abandoned dogs, catteries for abandoned cats, shelters for other abandoned pets and wildlife recovery centres. "},{if:"value=artwork",then:"artwork - An open map of statues, busts, graffitis and other artwork all over the world"},{if:"value=assembly_point",then:"assembly_point - This layer contains assembly points and waiting areas where all employees, passengers or a large crowd assemble in case of an emergency."},{if:"value=atm",then:"atm - ATMs to withdraw money"},{if:"value=bank",then:"bank - A financial institution to deposit money"},{if:"value=barrier",then:"barrier - Obstacles while cycling, such as bollards and cycle barriers"},{if:"value=bench",then:"bench - A bench is a wooden, metal, stone, … surface where a human can sit. This layers visualises them and asks a few questions about them."},{if:"value=bench_at_pt",then:"bench_at_pt - A layer showing all public-transport-stops which do have a bench"},{if:"value=bicycle_library",then:"bicycle_library - A facility where bicycles can be lent for longer period of times"},{if:"value=bicycle_rental",then:"bicycle_rental - Bicycle rental stations"},{if:"value=bicycle_tube_vending_machine",then:"bicycle_tube_vending_machine - A layer showing vending machines for bicycle tubes (either purpose-built bicycle tube vending machines or classical vending machines with bicycle tubes and optionally additional bicycle related objects such as lights, gloves, locks, …)"},{if:"value=bike_cafe",then:"bike_cafe - A bike café is a café geared towards cyclists, for example with services such as a pump, with lots of bicycle-related decoration, …"},{if:"value=bike_cleaning",then:"bike_cleaning - A layer showing facilities where one can clean their bike"},{if:"value=bike_parking",then:"bike_parking - A layer showing where you can park your bike"},{if:"value=bike_repair_station",then:"bike_repair_station - A layer showing bicycle pumps and bicycle repair tool stands"},{if:"value=bike_shop",then:"bike_shop - A shop specifically selling bicycles or related items"},{if:"value=bike_themed_object",then:"bike_themed_object - A layer with bike-themed objects but who don't match any other layer"},{if:"value=binocular",then:"binocular - Binoculars"},{if:"value=birdhide",then:"birdhide - A birdhide"},{if:"value=brothel",then:"brothel - An establishment specifically dedicated to prostitution. "},{if:"value=cafe_pub",then:"cafe_pub - A layer showing cafés and pubs where one can gather around a drink. The layer asks for some relevant questions"},{if:"value=car_rental",then:"car_rental - Places where you can rent a car"},{if:"value=charging_station",then:"charging_station - A charging station"},{if:"value=cinema",then:"cinema -  A place showing movies (films), generally open to the public for a fee. Commonly referred to as a movie theater in the US"},{if:"value=climbing",then:"climbing - A dummy layer which contains tagrenderings, shared among the climbing layers"},{if:"value=climbing_area",then:"climbing_area - An area where climbing is possible, e.g. a crag, site, boulder, … Contains aggregation of routes"},{if:"value=climbing_club",then:"climbing_club - A climbing club or organisation"},{if:"value=climbing_gym",then:"climbing_gym - A climbing gym"},{if:"value=climbing_opportunity",then:"climbing_opportunity - Fallback layer with items on which climbing _might_ be possible. It is loaded when zoomed in a lot, to prevent duplicate items to be added"},{if:"value=climbing_route",then:"climbing_route - A single climbing route and its properties. Some properties are derived from the containing features"},{if:"value=clock",then:"clock - Layer with public clocks"},{if:"value=conflation",then:"conflation - If the import-button moves OSM points, the imported way points or conflates, a preview is shown. This layer defines how this preview is rendered. This layer cannot be included in a theme."},{if:"value=crab_address",then:"crab_address - Address data for Flanders by the governement, suited for import into OpenStreetMap. Datadump from 2021-10-26. This layer contains only visualisation logic. Import buttons should be added via an override. Note that HNRLABEL contains the original value, whereas _HNRLABEL contains a slightly cleaned version"},{if:"value=crossings",then:"crossings - Crossings for pedestrians and cyclists"},{if:"value=current_view",then:`current_view - A meta-layer which contains one single feature, namely the bounding box of the current map view. This can be used to trigger special actions. If a popup is defined for this layer, this popup will be accessible via an extra button on screen.

The icon on the button is the default icon of the layer, but can be customized by detecting 'button=yes'.`},{if:"value=cycleways_and_roads",then:"cycleways_and_roads - All infrastructure that someone can cycle over, accompanied with questions about this infrastructure"},{if:"value=defibrillator",then:"defibrillator - A layer showing defibrillators which can be used in case of emergency. This contains public defibrillators, but also defibrillators which might need staff to fetch the actual device"},{if:"value=dentist",then:"dentist - This layer shows dentist offices"},{if:"value=direction",then:"direction - This layer visualizes directions"},{if:"value=disaster_response",then:"disaster_response - This layer contains organizations that have the main objective to help the civil population during and after natural or anthropogenic disasters by working in the affected area."},{if:"value=doctors",then:"doctors - This layer shows doctor offices"},{if:"value=dogpark",then:"dogpark - A layer showing dogparks, which are areas where dog are allowed to run without a leash"},{if:"value=drinking_water",then:"drinking_water - A layer showing drinking water fountains"},{if:"value=elevator",then:"elevator - This layer show elevators and asks for operational status and elevator dimensions. Useful for wheelchair accessibility information"},{if:"value=elongated_coin",then:"elongated_coin - Layer showing penny presses."},{if:"value=entrance",then:"entrance - A layer showing entrances and offering capabilities to survey some advanced data which is important for e.g. wheelchair users (but also bicycle users, people who want to deliver, …)"},{if:"value=etymology",then:"etymology - All objects which have an etymology known"},{if:"value=extinguisher",then:"extinguisher - Map layer to show fire extinguishers."},{if:"value=filters",then:"filters - This layer acts as library for common filters"},{if:"value=fire_station",then:"fire_station - Map layer to show fire stations."},{if:"value=fitness_centre",then:"fitness_centre - Layer showing fitness centres"},{if:"value=fitness_station",then:"fitness_station - Find a fitness station near you, and add missing ones."},{if:"value=fixme",then:"fixme - OSM objects that likely need to be fixed, based on a FIXME tag."},{if:"value=food",then:"food - A layer showing restaurants and fast-food amenities (with a special rendering for friteries)"},{if:"value=ghost_bike",then:"ghost_bike - A layer showing memorials for cyclists, killed in road accidents"},{if:"value=governments",then:"governments - This layer show governmental buildings. It was setup as commissioned layer for the client of OSOC '22"},{if:"value=gps_location",then:"gps_location - Meta layer showing the current location of the user. Add this to your theme and override the icon to change the appearance of the current location. The object will always have `id=gps` and will have _all_ the properties included in the [`Coordinates`-object](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates) (except latitude and longitude) returned by the browser, such as `speed`, `altitude`, `heading`, ...."},{if:"value=gps_location_history",then:"gps_location_history - Meta layer which contains the previous locations of the user as single points. This is mainly for technical reasons, e.g. to keep match the distance to the modified object"},{if:"value=gps_track",then:"gps_track - Meta layer showing the previous locations of the user as single line with controls, e.g. to erase, upload or download this track. Add this to your theme and override the maprendering to change the appearance of the travelled track."},{if:"value=guidepost",then:"guidepost - Guideposts (also known as fingerposts or finger posts) are often found along official hiking/cycling/riding/skiing routes to indicate the directions to different destinations"},{if:"value=hackerspace",then:"hackerspace - Hackerspace"},{if:"value=home_location",then:"home_location - Meta layer showing the home location of the user. The home location can be set in the [profile settings](https://www.openstreetmap.org/profile/edit) of OpenStreetMap."},{if:"value=hospital",then:"hospital - A layer showing hospital grounds"},{if:"value=hotel",then:"hotel - Layer showing all hotels"},{if:"value=hydrant",then:"hydrant - Map layer to show fire hydrants."},{if:"value=ice_cream",then:"ice_cream - A place where ice cream is sold over the counter"},{if:"value=icons",then:"icons - A layer acting as library for icon-tagrenderings, especially to show as badge next to a POI"},{if:"value=id_presets",then:"id_presets - Layer containing various presets and questions generated by ID. These are meant to be reused in other layers by importing the tagRenderings with `id_preset.<tagrendering>"},{if:"value=import_candidate",then:"import_candidate - Layer used as template in the importHelper"},{if:"value=indoors",then:"indoors - Basic indoor mapping: shows room outlines"},{if:"value=information_board",then:"information_board - A layer showing touristical, road side information boards (e.g. giving information about the landscape, a building, a feature, a map, …)"},{if:"value=kerbs",then:"kerbs - A layer showing kerbs."},{if:"value=kindergarten_childcare",then:"kindergarten_childcare - Shows kindergartens and preschools. Both are grouped in one layer, as they are regularly confused with each other"},{if:"value=last_click",then:"last_click - This layer defines how to render the 'last click'-location. By default, it will show a marker with the possibility to add a new point (if there are some presets) and/or to add a new note (if the 'note' layer attribute is set). If none are possible, this layer won't show up"},{if:"value=love_hotel",then:"love_hotel - A love hotel is a type of short-stay hotel found around the world operated primarily for the purpose of allowing guests privacy for sexual activities"},{if:"value=map",then:"map - A map, meant for tourists which is permanently installed in the public space"},{if:"value=maproulette",then:"maproulette - Layer showing all tasks in MapRoulette"},{if:"value=maproulette_challenge",then:"maproulette_challenge - Layer showing tasks of a single MapRoulette challenge. This layer is intended to be reused and extended in themes; refer to [the documentation](https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Integrating_Maproulette.md) on how to do this."},{if:"value=maxspeed",then:"maxspeed - Shows the allowed speed for every road"},{if:"value=memorial",then:"memorial - Layer showing memorial plaques, based upon a unofficial theme. Can be expanded to have multiple types of memorials later on"},{if:"value=mountain_rescue",then:"mountain_rescue - A building where first aid responders store material and might be on watch"},{if:"value=named_streets",then:"named_streets - Hidden layer with all streets which have a name. Useful to detect addresses"},{if:"value=nature_reserve",then:"nature_reserve - A nature reserve is an area where nature can take its course"},{if:"value=note",then:"note - This layer shows notes on OpenStreetMap. Having this layer in your theme will trigger the 'add new note' functionality in the 'addNewPoint'-popup (or if your theme has no presets, it'll enable adding notes)"},{if:"value=observation_tower",then:"observation_tower - Towers with a panoramic view"},{if:"value=osm_community_index",then:"osm_community_index - A layer showing the OpenStreetMap Communities"},{if:"value=parcel_lockers",then:"parcel_lockers - Layer showing parcel lockers for collecting and sending parcels."},{if:"value=parking",then:"parking - A layer showing car parkings"},{if:"value=parking_spaces",then:"parking_spaces - Layer showing individual parking spaces."},{if:"value=parking_ticket_machine",then:"parking_ticket_machine - Layer with parking ticket machines to pay for parking."},{if:"value=pedestrian_path",then:"pedestrian_path - Pedestrian footpaths, especially used for indoor navigation and snapping entrances to this layer"},{if:"value=pharmacy",then:"pharmacy - A layer showing pharmacies, which (probably) dispense prescription drugs"},{if:"value=physiotherapist",then:"physiotherapist - This layer shows physiotherapists"},{if:"value=picnic_table",then:"picnic_table - The layer showing picnic tables"},{if:"value=play_forest",then:"play_forest - Een speelbos is een vrij toegankelijke zone in een bos"},{if:"value=playground",then:"playground - Playgrounds"},{if:"value=postboxes",then:"postboxes - The layer showing postboxes."},{if:"value=postoffices",then:"postoffices - A layer showing post offices."},{if:"value=public_bookcase",then:"public_bookcase - A streetside cabinet with books, accessible to anyone"},{if:"value=questions",then:"questions - Special library layer which does not need a '.questions'-prefix before being imported"},{if:"value=railway_platforms",then:"railway_platforms - Find every platform in the station, and the train routes that use them."},{if:"value=rainbow_crossings",then:"rainbow_crossings - A layer showing pedestrian crossings with rainbow paintings"},{if:"value=range",then:"range - Meta-layer, simply showing a bbox in red"},{if:"value=reception_desk",then:"reception_desk - A layer showing where the reception desks are and which asks some accessibility information"},{if:"value=recycling",then:"recycling - A layer with recycling containers and centres"},{if:"value=route_marker",then:"route_marker - Route markers are small markers often found along official hiking/cycling/riding/skiing routes to indicate the direction of the route."},{if:"value=school",then:"school - Schools giving primary and secondary education and post-secondary, non-tertiary education. Note that this level of education does not imply an age of the pupiles"},{if:"value=selected_element",then:"selected_element - Highlights the currently selected element. Override this layer to have different colors"},{if:"value=shelter",then:"shelter - Layer showing shelter structures"},{if:"value=shops",then:"shops - A shop"},{if:"value=shower",then:"shower - A layer showing (public) showers"},{if:"value=ski_piste",then:"ski_piste - Ski and snowboard pistes"},{if:"value=slow_roads",then:"slow_roads - All carfree roads"},{if:"value=speed_camera",then:"speed_camera - Layer showing speed cameras"},{if:"value=speed_display",then:"speed_display - Layer showing speed displays that alert drivers of their speed."},{if:"value=split_point",then:"split_point - Layer rendering the little scissors for the minimap in the 'splitRoadWizard'"},{if:"value=split_road",then:"split_road - Layer rendering the way to split in the 'splitRoadWizard'. This one is used instead of the variable rendering by the themes themselves, as they might not always be very visible"},{if:"value=sport_pitch",then:"sport_pitch - A sport pitch"},{if:"value=sports_centre",then:"sports_centre - Indoor and outdoor sports centres can be found on this layer"},{if:"value=stairs",then:"stairs - Layer showing stairs and escalators"},{if:"value=street_lamps",then:"street_lamps - A layer showing street lights"},{if:"value=stripclub",then:"stripclub - A venue where erotic dance, striptease, or lap dances are performed commercially. "},{if:"value=surveillance_camera",then:"surveillance_camera - This layer shows surveillance cameras and allows a contributor to update information and add new cameras"},{if:"value=tertiary_education",then:"tertiary_education - Layer with all tertiary education institutes (ISCED:2011 levels 6,7 and 8)"},{if:"value=ticket_machine",then:"ticket_machine - Find ticket machines for public transport tickets"},{if:"value=ticket_validator",then:"ticket_validator - Find ticket validators to validate public transport tickets"},{if:"value=toilet",then:"toilet - A layer showing (public) toilets"},{if:"value=toilet_at_amenity",then:"toilet_at_amenity - A layer showing (public) toilets located at different places."},{if:"value=trail",then:"trail - Waymarked trails"},{if:"value=transit_routes",then:"transit_routes - Layer showing bus lines"},{if:"value=transit_stops",then:"transit_stops - Layer showing different types of transit stops."},{if:"value=tree_node",then:"tree_node - A layer showing trees"},{if:"value=trolley_bay",then:"trolley_bay - Find trolley bays for shopping trolleys."},{if:"value=unit",then:"unit - Library layer with all common units.  Units can _only_ be imported from this file."},{if:"value=usersettings",then:"usersettings - A special layer which is not meant to be shown on a map, but which is used to set user settings"},{if:"value=vending_machine",then:"vending_machine - Layer showing vending machines"},{if:"value=veterinary",then:"veterinary - A layer showing veterinarians"},{if:"value=viewpoint",then:"viewpoint - A nice viewpoint or nice view. Ideal to add an image if no other category fits"},{if:"value=village_green",then:"village_green - A layer showing village-green (which are communal green areas, but not quite parks)"},{if:"value=visitor_information_centre",then:"visitor_information_centre - A visitor center offers information about a specific attraction or place of interest where it is located."},{if:"value=walls_and_buildings",then:"walls_and_buildings - Special builtin layer providing all walls and buildings. This layer is useful in presets for objects which can be placed against walls (e.g. AEDs, postboxes, entrances, addresses, surveillance cameras, …). This layer is invisible by default and not toggleable by the user."},{if:"value=waste_basket",then:"waste_basket - This is a public waste basket, thrash can, where you can throw away your thrash."},{if:"value=waste_disposal",then:"waste_disposal - Waste Disposal Bin, medium to large bin for disposal of (household) waste"},{if:"value=windturbine",then:"windturbine - Modern windmills generating electricity"}]},type:"array",description:"If specified, these layers will be shown in the precise location picker  and the new point will be snapped towards it.\nFor example, this can be used to snap against `walls_and_buildings` (e.g. to attach a defibrillator, an entrance, an artwork, ... to the wall)\nor to snap an obstacle (such as a bollard) to the `cycleways_and_roads`."},{path:["layers","presets","maxSnapDistance"],required:!1,hints:{question:"What is the maximum distance in the location-input that a point can be moved to be snapped to a way?",ifunset:"Do not snap to a layer",inline:"a point is snapped if the location input is at most <b>{value}m</b> away from an object"},type:"number",description:`If specified, a new point will only be snapped if it is within this range.
If further away, it'll be placed in the center of the location input
Distance in meter`},{path:["layers","tagRenderings"],required:!1,hints:{typehint:"tagrendering[]",group:"tagrenderings",question:"Edit this way this attributed is displayed or queried"},type:[{description:`A QuestionableTagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
If the desired tags are missing and a question is defined, a question will be shown instead.`,type:"object",properties:{id:{type:"string"},mappings:{description:`Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes

question: What are common options?`,type:"array",items:{$ref:"#/definitions/MappingConfigJson"}},multiAnswer:{description:`If true, use checkboxes instead of radio buttons when asking the question

question: Should a contributor be allowed to select multiple mappings?

iftrue: allow to select multiple mappings
iffalse: only allow to select a single mapping
ifunset: only allow to select a single mapping`,type:"boolean"},freeform:{description:"Allow freeform text input from the user",type:"object",properties:{key:{description:`question: What is the name of the attribute that should be written to?
This is the OpenStreetMap-key that that value will be written to
ifunset: do not offer a freeform textfield as answer option`,type:"string"},type:{description:`question: What is the input type?
The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values
ifunset: use an unconstrained <b>string</b> as input (default)
suggestions: return validators.AllValidators.filter(type => !type.isMeta).map((type) => ({if: "value="+type.name, then: "<b>"+type.name+"</b> "+type.explanation.split("\\n")[0]}))`,type:"string"},placeholder:{description:`question: What placeholder text should be shown in the input-element if there is no input?
A (translated) text that is shown (as gray text) within the textfield
type: translation
group: expert`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},helperArgs:{description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'
group: expert`,type:"array",items:{}},addExtraTags:{description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'
group: expert`,type:"array",items:{type:"string"}},inline:{description:`question: Show the freeform as box within the question?
Instead of showing a full-width text field, the text field will be shown within the rendering of the question.

This combines badly with special input elements, as it'll distort the layout.
ifunset: show the freeform input field full-width
iftrue: show the freeform input field as a small field within the question
group: expert`,type:"boolean"},default:{description:`question: What value should be entered in the text field if no value is set?
This can help people to quickly enter the most common option
ifunset: do not prefill the textfield
group: expert`,type:"string"},invalidValues:{description:`question: What values of the freeform key should be interpreted as 'unknown'?
For example, if a feature has \`shop=yes\`, the question 'what type of shop is this?' should still asked
ifunset: The question will be considered answered if any value is set for the key
group: expert`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]}}},question:{description:`question: What question should be shown to the contributor?

A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well.

ifunset: This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},questionHint:{description:`question: Should some extra information be shown to the contributor, alongside the question?
This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like
ifunset: No extra hint is given`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},editButtonAriaLabel:{description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},labels:{description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer",type:"array",items:{type:"string"}},render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},required:["id"],additionalProperties:!1},{type:"object",properties:{id:{type:"string"},builtin:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},override:{$ref:"#/definitions/Partial<QuestionableTagRenderingConfigJson>"}},required:["builtin","override"]},{allOf:[{$ref:"#/definitions/default<(string|QuestionableTagRenderingConfigJson|{builtin:string;override:Partial<QuestionableTagRenderingConfigJson>;})[]>"},{type:"object",properties:{id:{type:"string"}},required:["id"]}]},{type:"string"}],description:`A tag rendering is a block that either shows the known value or asks a question.
Refer to the class \`TagRenderingConfigJson\` to see the possibilities.
Note that we can also use a string here - where the string refers to a tag rendering defined in \`assets/questions/questions.json\`,
where a few very general questions are defined e.g. website, phone number, ...
Furthermore, _all_ the questions of another layer can be reused with \`otherlayer.*\`
If you need only a single of the tagRenderings, use \`otherlayer.tagrenderingId\`
If one or more questions have a 'group' or 'label' set, select all the entries with the corresponding group or label with \`otherlayer.*group\`
Remark: if a tagRendering is 'lent' from another layer, the 'source'-tags are copied and added as condition.
If they are not wanted, remove them with an override
A special value is 'questions', which indicates the location of the questions box. If not specified, it'll be appended to the bottom of the featureInfobox.
At last, one can define a group of renderings where parts of all strings will be replaced by multiple other strings.
This is mainly create questions for a 'left' and a 'right' side of the road.
These will be grouped and questions will be asked together`},{path:["layers","tagRenderings","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","tagRenderings","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","tagRenderings","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","tagRenderings","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","tagRenderings","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","tagRenderings","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","tagRenderings","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","tagRenderings","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","tagRenderings","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","tagRenderings","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","tagRenderings","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","tagRenderings","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","tagRenderings","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","tagRenderings","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","tagRenderings","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","tagRenderings","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","tagRenderings","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","tagRenderings","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","tagRenderings","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","tagRenderings","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","tagRenderings","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","tagRenderings","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","tagRenderings","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","tagRenderings","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","tagRenderings","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","tagRenderings","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","tagRenderings","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","tagRenderings","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","tagRenderings","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","tagRenderings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","tagRenderings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","tagRenderings","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","tagRenderings","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","tagRenderings","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","tagRenderings","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","tagRenderings","override","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","tagRenderings","override","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","tagRenderings","override","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","tagRenderings","override","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","tagRenderings","override","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","tagRenderings","override","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","tagRenderings","override","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","tagRenderings","override","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","tagRenderings","override","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","tagRenderings","override","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","tagRenderings","override","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","tagRenderings","override","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","tagRenderings","override","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","tagRenderings","override","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","tagRenderings","override","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","tagRenderings","override","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","tagRenderings","override","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","tagRenderings","override","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","tagRenderings","override","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","tagRenderings","override","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","tagRenderings","override","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","tagRenderings","override","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","tagRenderings","override","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","tagRenderings","override","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","tagRenderings","override","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","tagRenderings","override","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","tagRenderings","override","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","tagRenderings","override","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","tagRenderings","override","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","tagRenderings","override","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","tagRenderings","override","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","tagRenderings","override","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","tagRenderings","override","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","tagRenderings","override","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","override","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","tagRenderings","override","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","tagRenderings"],required:!1,hints:{},type:"object",description:`Rewrites and multiplies the given renderings of type T.
This can be used for introducing many similar questions automatically,
which also makes translations easier.
(Note that the key does _not_ need to be wrapped in {}.
However, we recommend to use them if the key is used in a translation, as missing keys will be picked up and warned for by the translation scripts)
For example:
\`\`\`
{
    rewrite: {
        sourceString: ["key", "a|b|c"],
        into: [
            ["X", 0]
            ["Y", 1],
            ["Z", 2]
        ],
        renderings: [{
            "key":"a|b|c"
        }]
    }
}
\`\`\`
will result in _three_ copies (as the values to rewrite into have three values, namely:
[
  {
  # The first pair: key --> X, a|b|c --> 0
      "X": 0
  },
  {
      "Y": 1
  },
  {
      "Z": 2
  }
]`},{path:["layers","tagRenderings","renderings","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","tagRenderings","renderings","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","tagRenderings","renderings","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","tagRenderings","renderings","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","tagRenderings","renderings","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","tagRenderings","renderings","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","tagRenderings","renderings","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","tagRenderings","renderings","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","tagRenderings","renderings","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","tagRenderings","renderings","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","tagRenderings","renderings","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","tagRenderings","renderings","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","tagRenderings","renderings","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","tagRenderings","renderings","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","tagRenderings","renderings","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","tagRenderings","renderings","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","tagRenderings","renderings","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","tagRenderings","renderings","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","tagRenderings","renderings","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","tagRenderings","renderings","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","tagRenderings","renderings","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","tagRenderings","renderings","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","tagRenderings","renderings","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","tagRenderings","renderings","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","tagRenderings","renderings","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","tagRenderings","renderings","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","tagRenderings","renderings","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","tagRenderings","renderings","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","tagRenderings","renderings","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","tagRenderings","renderings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","tagRenderings","renderings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","tagRenderings","renderings","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","tagRenderings","renderings","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","tagRenderings","renderings","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","tagRenderings","renderings","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","tagRenderings","renderings","override","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","tagRenderings","renderings","override","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","tagRenderings","renderings","override","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","tagRenderings","renderings","override","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","tagRenderings","renderings","override","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","tagRenderings","renderings","override","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","tagRenderings","renderings","override","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","tagRenderings","renderings","override","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","tagRenderings","renderings","override","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","tagRenderings","renderings","override","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","tagRenderings","renderings","override","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","tagRenderings","renderings","override","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","tagRenderings","renderings","override","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","tagRenderings","renderings","override","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","tagRenderings","renderings","override","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","tagRenderings","renderings","override","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","tagRenderings","renderings","override","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","tagRenderings","renderings","override","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","tagRenderings","renderings","override","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","tagRenderings","renderings","override","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","tagRenderings","renderings","override","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","tagRenderings","renderings","override","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","tagRenderings","renderings","override","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","tagRenderings","renderings","override","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","tagRenderings","renderings","override","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","tagRenderings","renderings","override","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","tagRenderings","renderings","override","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","tagRenderings","renderings","override","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","tagRenderings","renderings","override","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","tagRenderings","renderings","override","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","tagRenderings","renderings","override","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","tagRenderings","renderings","override","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","tagRenderings","renderings","override","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","tagRenderings","renderings","override","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","tagRenderings","renderings","override","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","tagRenderings","renderings","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","tagRenderings","renderings","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","tagRenderings","renderings","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","tagRenderings","renderings","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","tagRenderings","renderings","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","tagRenderings","renderings","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","tagRenderings","renderings","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","tagRenderings","renderings","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","tagRenderings","renderings","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","tagRenderings","renderings","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","tagRenderings","renderings","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","tagRenderings","renderings","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","tagRenderings","renderings","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","tagRenderings","renderings","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","tagRenderings","renderings","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","tagRenderings","renderings","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","tagRenderings","renderings","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","tagRenderings","renderings","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","tagRenderings","renderings","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","tagRenderings","renderings","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","tagRenderings","renderings","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","tagRenderings","renderings","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","tagRenderings","renderings","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","tagRenderings","renderings","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","tagRenderings","renderings","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","tagRenderings","renderings","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","tagRenderings","renderings","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","tagRenderings","renderings","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","tagRenderings","renderings","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","tagRenderings","renderings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","tagRenderings","renderings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","tagRenderings","renderings","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","tagRenderings","renderings","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","tagRenderings","renderings","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","tagRenderings","renderings","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","tagRenderings","renderings","override","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","tagRenderings","renderings","override","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","tagRenderings","renderings","override","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","tagRenderings","renderings","override","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","tagRenderings","renderings","override","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","tagRenderings","renderings","override","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","tagRenderings","renderings","override","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","tagRenderings","renderings","override","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","tagRenderings","renderings","override","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","tagRenderings","renderings","override","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","tagRenderings","renderings","override","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","tagRenderings","renderings","override","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","tagRenderings","renderings","override","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","tagRenderings","renderings","override","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","tagRenderings","renderings","override","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","tagRenderings","renderings","override","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","tagRenderings","renderings","override","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","tagRenderings","renderings","override","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","tagRenderings","renderings","override","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","tagRenderings","renderings","override","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","tagRenderings","renderings","override","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","tagRenderings","renderings","override","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","tagRenderings","renderings","override","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","tagRenderings","renderings","override","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","tagRenderings","renderings","override","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","tagRenderings","renderings","override","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","tagRenderings","renderings","override","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","tagRenderings","renderings","override","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","tagRenderings","renderings","override","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","tagRenderings","renderings","override","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","tagRenderings","renderings","override","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","tagRenderings","renderings","override","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","tagRenderings","renderings","override","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","tagRenderings","renderings","override","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","tagRenderings","renderings","override","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","tagRenderings","renderings","override","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","filter"],required:!1,hints:{group:"filters"},type:[{type:"array",items:{anyOf:[{$ref:"#/definitions/default_1"},{type:"string"}]}},{type:"object",properties:{sameAs:{type:"string"}},required:["sameAs"]}],description:"All the extra questions for filtering.\nIf a string is given, mapComplete will search in 'filters.json' for the appropriate filter or will try to parse it as `layername.filterid` and us that one"},{path:["layers","filter","id"],required:!0,hints:{},type:"string",description:"An id/name for this filter, used to set the URL parameters"},{path:["layers","filter","options"],required:!0,hints:{},type:"array",description:`The options for a filter
If there are multiple options these will be a list of radio buttons
If there is only one option this will be a checkbox
Filtering is done based on the given osmTags that are compared to the objects in that layer.
An example which searches by name:
\`\`\`
{
      "id": "shop-name",
      "options": [
        {
          "fields": [
            {
              "name": "search",
              "type": "string"
            }
          ],
          "osmTags": "name~i~.*{search}.*",
          "question": {
            "en": "Only show shops with name {search}",
          }
        }
      ]
    }
    \`\`\``},{path:["layers","filter","options","osmTags"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","filter","options","osmTags","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","filter","options","osmTags","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","filter","options","fields","name"],required:!0,hints:{},type:"string",description:'If name is `search`, use  "_first_comment~.*{search}.*" as osmTags'},{path:["layers","filter","#"],required:!1,hints:{},type:"string",description:'Used for comments or to disable a check\n"ignore-possible-duplicate": disables a check in `DetectDuplicateFilters` which complains that a filter can be replaced by a filter from the `filters`-library-layer'},{path:["layers","deletion"],required:!1,hints:{types:"Use an advanced delete configuration ; boolean",group:"editing",iftrue:"Allow deletion",iffalse:"Do not allow deletion",ifunset:"Do not allow deletion"},type:[{type:"object",properties:{neededChangesets:{description:`*
By default, the contributor needs 20 previous changesets to delete points edited by others.
For some small features (e.g. bicycle racks) this is too much and this requirement can be lowered or dropped, which can be done here.

type: nat
question: How many changesets must a contributor have before being allowed to delete a point?`,type:"number"},extraDeleteReasons:{description:`*
By default, three reasons to delete a point are shown:

- The point does not exist anymore
- The point was a testing point
- THe point could not be found

However, for some layers, there might be different or more specific reasons for deletion which can be user friendly to set, e.g.:

- the shop has closed
- the climbing route has been closed of for nature conservation reasons
- ...

These reasons can be stated here and will be shown in the list of options the user can choose from`,type:"array",items:{type:"object",properties:{explanation:{description:`The text that will be shown to the user as option for why this point does not exist anymore.
Note that the most common reasons (test point, does not exist anymore, cannot be found) are already offered by default

question: For what extra reason might this feature be removed in real-life?`},changesetMessage:{description:`The text that will be uploaded into the changeset or will be used in the fixme in case of a soft deletion
Should be a few words, in english

question: What should be added to the changeset as delete reason?`,type:"string"}},required:["changesetMessage","explanation"]}},nonDeleteMappings:{description:`In some cases, a (starting) contributor might wish to delete a feature even though deletion is not appropriate.
(The most relevant case are small paths running over private property. These should be marked as 'private' instead of deleted, as the community might trace the path again from aerial imagery, gettting us back to the original situation).

By adding a 'nonDeleteMapping', an option can be added into the list which will retag the feature.
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!`,type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`The tags that will be given to the object.
This must remove tags so that the 'source/osmTags' won't match anymore

question: What tags should be applied to the object?`},then:{description:`The human explanation for the options

question: What text should be shown to the contributor for this reason?`}},required:["if","then"]}},softDeletionTags:{description:`In some cases, the contributor is not allowed to delete the current feature (e.g. because it isn't a point, the point is referenced by a relation or the user isn't experienced enough).
To still offer the user a 'delete'-option, the feature is retagged with these tags. This is a soft deletion, as the point isn't actually removed from OSM but rather marked as 'disused'
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!

Example (note that "amenity=" erases the 'amenity'-key alltogether):

\`\`\`
{
    "and": ["disussed:amenity=public_bookcase", "amenity="]
}
\`\`\`

or (notice the use of the ':='-tag to copy the old value of 'shop=*' into 'disused:shop='):

\`\`\`
{
    "and": ["disused:shop:={shop}", "shop="]
}
\`\`\`

question: If a hard delete is not possible, what tags should be applied to mark this feature as deleted?
type: tag`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},omitDefaultDeleteReasons:{description:`Set this flag if the default delete reasons should be omitted from the dialog.
This requires at least one extraDeleteReason or nonDeleteMapping

question: Should the default delete reasons be hidden?
iftrue: Hide the default delete reasons
iffalse: Show the default delete reasons
ifunset: Show the default delete reasons (default behaviour)`,anyOf:[{type:"array",items:{type:"string"}},{type:"boolean"}]}},additionalProperties:!1},{type:"boolean"}],description:`This block defines under what circumstances the delete dialog is shown for objects of this layer.
If set, a dialog is shown to the user to (soft) delete the point.
The dialog is built to be user friendly and to prevent mistakes.
If deletion is not possible, the dialog will hide itself and show the reason of non-deletability instead.
To configure, the following values are possible:
- false: never ever show the delete button
- true: show the default delete button
- undefined: use the mapcomplete default to show deletion or not. Currently, this is the same as 'false' but this will change in the future
- or: a hash with options (see below)
### The delete dialog
#### Hard deletion if enough experience
A feature can only be deleted from OpenStreetMap by mapcomplete if:
- It is a node
- No ways or relations use the node
- The logged-in user has enough experience OR the user is the only one to have edited the point previously
- The logged-in user has no unread messages (or has a ton of experience)
- The user did not select one of the 'non-delete-options' (see below)
In all other cases, a 'soft deletion' is used.
#### Soft deletion
A 'soft deletion' is when the point isn't deleted fromOSM but retagged so that it'll won't how up in the mapcomplete theme anymore.
This makes it look like it was deleted, without doing damage. A fixme will be added to the point.
Note that a soft deletion is _only_ possible if these tags are provided by the theme creator, as they'll be different for every theme
##### No-delete options
In some cases, the contributor might want to delete something for the wrong reason (e.g. someone who wants to have a path removed "because the path is on their private property").
However, the path exists in reality and should thus be on OSM - otherwise the next contributor will pass by and notice "hey, there is a path missing here! Let me redraw it in OSM!)
The correct approach is to retag the feature in such a way that it is semantically correct *and* that it doesn't show up on the theme anymore.
A no-delete option is offered as 'reason to delete it', but secretly retags.`},{path:["layers","deletion","neededChangesets"],required:!1,hints:{typehint:"nat",question:"How many changesets must a contributor have before being allowed to delete a point?"},type:"number",description:`*
By default, the contributor needs 20 previous changesets to delete points edited by others.
For some small features (e.g. bicycle racks) this is too much and this requirement can be lowered or dropped, which can be done here.`},{path:["layers","deletion","extraDeleteReasons"],required:!1,hints:{},type:"array",description:`*
By default, three reasons to delete a point are shown:
- The point does not exist anymore
- The point was a testing point
- THe point could not be found
However, for some layers, there might be different or more specific reasons for deletion which can be user friendly to set, e.g.:
- the shop has closed
- the climbing route has been closed of for nature conservation reasons
- ...
These reasons can be stated here and will be shown in the list of options the user can choose from`},{path:["layers","deletion","extraDeleteReasons","explanation"],required:!0,hints:{question:"For what extra reason might this feature be removed in real-life?"},description:`The text that will be shown to the user as option for why this point does not exist anymore.
Note that the most common reasons (test point, does not exist anymore, cannot be found) are already offered by default`},{path:["layers","deletion","extraDeleteReasons","changesetMessage"],required:!0,hints:{question:"What should be added to the changeset as delete reason?"},type:"string",description:`The text that will be uploaded into the changeset or will be used in the fixme in case of a soft deletion
Should be a few words, in english`},{path:["layers","deletion","nonDeleteMappings"],required:!1,hints:{},type:"array",description:`In some cases, a (starting) contributor might wish to delete a feature even though deletion is not appropriate.
(The most relevant case are small paths running over private property. These should be marked as 'private' instead of deleted, as the community might trace the path again from aerial imagery, gettting us back to the original situation).
By adding a 'nonDeleteMapping', an option can be added into the list which will retag the feature.
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!`},{path:["layers","deletion","nonDeleteMappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be applied to the object?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The tags that will be given to the object.
This must remove tags so that the 'source/osmTags' won't match anymore`},{path:["layers","deletion","nonDeleteMappings","then"],required:!0,hints:{question:"What text should be shown to the contributor for this reason?"},description:"The human explanation for the options"},{path:["layers","deletion","softDeletionTags"],required:!1,hints:{typehint:"tag",question:"If a hard delete is not possible, what tags should be applied to mark this feature as deleted?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`In some cases, the contributor is not allowed to delete the current feature (e.g. because it isn't a point, the point is referenced by a relation or the user isn't experienced enough).
To still offer the user a 'delete'-option, the feature is retagged with these tags. This is a soft deletion, as the point isn't actually removed from OSM but rather marked as 'disused'
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!
Example (note that "amenity=" erases the 'amenity'-key alltogether):
\`\`\`
{
    "and": ["disussed:amenity=public_bookcase", "amenity="]
}
\`\`\`
or (notice the use of the ':='-tag to copy the old value of 'shop=*' into 'disused:shop='):
\`\`\`
{
    "and": ["disused:shop:={shop}", "shop="]
}
\`\`\``},{path:["layers","deletion","softDeletionTags","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","deletion","softDeletionTags","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","deletion","omitDefaultDeleteReasons"],required:!1,hints:{question:"Should the default delete reasons be hidden?",iftrue:"Hide the default delete reasons",iffalse:"Show the default delete reasons",ifunset:"Show the default delete reasons (default behaviour)"},type:[{type:"array",items:{type:"string"}},{type:"boolean"}],description:`Set this flag if the default delete reasons should be omitted from the dialog.
This requires at least one extraDeleteReason or nonDeleteMapping`},{path:["layers","allowMove"],required:!1,hints:{types:"use an advanced move configuration ; boolean",group:"editing",question:"Is deleting a point allowed?",iftrue:"Allow contributors to move a point (for accuracy or a relocation)",iffalse:"Don't allow contributors to move points",ifunset:"Don't allow contributors to move points (default)"},type:[{type:"object",properties:{enableImproveAccuracy:{description:`question: Should moving this type of point to improve the accuracy be allowed?
iftrue: This point can be moved to improve the accuracy
ifunset: (default) This point can be moved to improve the accuracy
iffalse: This point cannot be moved to improve the accuracy`,type:"boolean"},enableRelocation:{description:"question: Should moving this type of point due to a relocation be allowed?\n\nThis will erase the attributes `addr:street`, `addr:housenumber`, `addr:city` and `addr:postcode`\n\niftrue: This type of point can be moved due to a relocation (and will remove address information when this is done)\nifunset: (default) This type of point can be moved due to a relocation (and will remove address information when this is done)\niffalse: This type of point cannot be moved due to a relocation",type:"boolean"}},additionalProperties:!1},{type:"boolean"}],description:`Indicates if a point can be moved and why.
A feature can be moved by MapComplete if:
- It is a point
- The point is _not_ part of a way or a a relation.`},{path:["layers","allowMove","enableImproveAccuracy"],required:!1,hints:{question:"Should moving this type of point to improve the accuracy be allowed?",iftrue:"This point can be moved to improve the accuracy",iffalse:"This point cannot be moved to improve the accuracy",ifunset:"(default) This point can be moved to improve the accuracy"},type:"boolean",description:""},{path:["layers","allowMove","enableRelocation"],required:!1,hints:{question:"Should moving this type of point due to a relocation be allowed?",iftrue:"This type of point can be moved due to a relocation (and will remove address information when this is done)",iffalse:"This type of point cannot be moved due to a relocation",ifunset:"(default) This type of point can be moved due to a relocation (and will remove address information when this is done)"},type:"boolean",description:"This will erase the attributes `addr:street`, `addr:housenumber`, `addr:city` and `addr:postcode`"},{path:["layers","allowSplit"],required:!1,hints:{group:"editing",question:"Should the contributor be able to split ways using this layer?",iftrue:"enable the 'split-roads'-component",iffalse:"don't enable the split-roads component",ifunset:"don't enable the split-roads component"},type:"boolean",description:`If set, a 'split this way' button is shown on objects rendered as LineStrings, e.g. highways.
If the way is part of a relation, MapComplete will attempt to update this relation as well`},{path:["layers","units","quantity"],required:!1,hints:{},type:"string",description:"What is quantified? E.g. 'speed', 'length' (including width, diameter, ...), 'electric tension', 'electric current', 'duration'"},{path:["layers","units","appliesToKey"],required:!1,hints:{},type:"array",description:"Every key from this list will be normalized.\nTo render the value properly (with a human readable denomination), use `{canonical(<key>)}`"},{path:["layers","units","eraseInvalidValues"],required:!1,hints:{},type:"boolean",description:`If set, invalid values will be erased in the MC application (but not in OSM of course!)
Be careful with setting this`},{path:["layers","units","applicableUnits"],required:!0,hints:{},type:"array",description:`The possible denominations for this unit.
For length, denominations could be "meter", "kilometer", "miles", "foot"`},{path:["layers","units","applicableUnits","useIfNoUnitGiven"],required:!1,hints:{},type:[{type:"array",items:{type:"string"}},{type:"boolean"}],description:`If this evaluates to true and the value to interpret has _no_ unit given, assumes that this unit is meant.
Alternatively, a list of country codes can be given where this acts as the default interpretation
E.g., a denomination using "meter" would probably set this flag to "true";
a denomination for "mp/h" will use the condition "_country=gb" to indicate that it is the default in the UK.
If none of the units indicate that they are the default, the first denomination will be used instead`},{path:["layers","units","applicableUnits","canonicalDenomination"],required:!0,hints:{},type:"string",description:`The canonical value for this denomination which will be added to the value in OSM.
e.g. "m" for meters
If the user inputs '42', the canonical value will be added and it'll become '42m'.
Important: often, _no_ canonical values are expected, e.g. in the case of 'maxspeed' where 'km/h' is the default.
In this case, an empty string should be used`},{path:["layers","units","applicableUnits","canonicalDenominationSingular"],required:!1,hints:{},type:"string",description:"The canonical denomination in the case that the unit is precisely '1'.\nUsed for display purposes only.\nE.g.: for duration of something in minutes: `2 minutes` but `1 minute`; the `minute` goes here"},{path:["layers","units","applicableUnits","alternativeDenomination"],required:!1,hints:{},type:"array",description:"A list of alternative values which can occur in the OSM database - used for parsing.\nE.g.: while 'm' is canonical, `meter`, `mtrs`, ... can occur as well"},{path:["layers","units","applicableUnits","human"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`The value for humans in the dropdown. This should not use abbreviations and should be translated, e.g.
{
    "en": "meter",
    "fr": "metre"
}`},{path:["layers","units","applicableUnits","humanSingular"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`The value for humans in the dropdown. This should not use abbreviations and should be translated, e.g.
{
    "en": "minute",
    "nl": "minuut"
}`},{path:["layers","units","applicableUnits","prefix"],required:!1,hints:{},type:"boolean",description:`If set, then the canonical value will be prefixed instead, e.g. for '€'
Note that if all values use 'prefix', the dropdown might move to before the text field`},{path:["layers","units","applicableUnits","addSpace"],required:!1,hints:{},type:"boolean",description:"If set, add a space between the quantity and the denomination.\nE.g.: `50 mph` instad of `50mph`"},{path:["layers","units","defaultInput"],required:!1,hints:{},type:"string",description:`In some cases, the default denomination is not the most user friendly to input.
E.g., when measuring kerb heights, it is illogical to ask contributors to input an amount in meters.
When a default input method should be used, this can be specified by setting the canonical denomination here, e.g.
\`defaultInput: "cm"\`. This must be a denomination which appears in the applicableUnits`},{path:["layers","syncSelection"],required:!1,hints:{group:"advanced",question:"Should enabling/disabling the layer be saved (locally or in the cloud)?",suggestions:[{if:"value=no",then:"Don't save, always revert to the default"},{if:"value=local",then:"Save selection in local storage"},{if:"value=theme-only",then:"Save the state in the OSM-usersettings, but apply on this theme only (default)"},{if:"value=global",then:"Save in OSM-usersettings and toggle on _all_ themes using this layer"}]},type:"string",description:"If set, synchronizes whether or not this layer is enabled."},{path:["layers","#"],required:!1,hints:{group:"hidden"},type:"string",description:`Used for comments and/or to disable some checks
no-question-hint-check: disables a check in MiscTagRenderingChecks which complains about 'div', 'span' or 'class=subtle'-HTML elements in the tagRendering`},{path:["layers","fullNodeDatabase"],required:!1,hints:{group:"hidden"},type:"boolean",description:"_Set automatically by MapComplete, please ignore_"},{path:["layers","override","id"],required:!1,hints:{typehint:"id",group:"Basic",question:"What is the identifier of this layer?"},type:"string",description:`This should be a simple, lowercase, human readable string that is used to identify the layer.
 A good ID is:
 - a noun
 - written in singular
 - describes the object
 - in english
 - only has lowercase letters, numbers or underscores. Do not use a space or a dash`},{path:["layers","override","name"],required:!1,hints:{group:"Basic",question:"What is the name of this layer?",ifunset:"This will hide the layer in the layer control, making it not filterable and not toggleable"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Used in the layer control panel to toggle a layer on and of."},{path:["layers","override","description"],required:!1,hints:{group:"Basic",question:"How would you describe the features that are shown on this layer?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A description for the features shown in this layer.
This often resembles the introduction of the wiki.osm.org-page for this feature.`},{path:["layers","override","source"],required:!1,hints:{types:"Load data with specific tags from OpenStreetMap ; Load data from an external geojson source ;",typesdefault:"0",group:"Basic",question:"Where should the data be fetched from?",title:"Data Source"},type:[{type:"object",properties:{osmTags:{$ref:"#/definitions/TagConfigJson",description:`question: Which tags must be present on the feature to show it in this layer?
Every source must set which tags have to be present in order to load the given layer.`},maxCacheAge:{description:`question: How long (in seconds) is the data allowed to remain cached until it must be refreshed?
The maximum amount of seconds that a tile is allowed to linger in the cache

type: nat
default: 30 days
group: expert`,type:"number"}},required:["osmTags"]},{type:"object",properties:{geoJson:{description:`The actual source of the data to load, if loaded via geojson.

# A single geojson-file
source: {geoJson: "https://my.source.net/some-geo-data.geojson"}
 fetches a geojson from a third party source

# A tiled geojson source
source: {geoJson: "https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson", geoJsonZoomLevel: 14}
 to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer

Some API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}

question: What is the URL of the geojson?
type: url`,type:"string"},geoJsonZoomLevel:{description:`To load a tiled geojson layer, set the zoomlevel of the tiles

question: If using a tiled geojson, what is the zoomlevel of the tiles?
ifunset: This is not a tiled geojson`,type:"number"},isOsmCache:{description:`Indicates that the upstream geojson data is OSM-derived.
Useful for e.g. merging or for scripts generating this cache.
This also indicates that making changes on this data is possible

question: Is this geojson a cache of OpenStreetMap data?
ifunset: This is not an OpenStreetMap cache
iftrue: this is based on OpenStreetMap and can thus be edited
group: expert`,type:"boolean"},mercatorCrs:{description:`Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag \`mercatorCrs: true\`  in the source for this

question: Does this geojson use  EPSG:900913 instead of WGS84 as projection?
iftrue: This geojson uses EPSG:900913 instead of WGS84
ifunset: This geojson uses WGS84 just like most geojson (default)`,type:"boolean"},idKey:{description:`Some API's have an id-field, but give it a different name.
Setting this key will rename this field into 'id'

ifunset: An id with key \`id\` will be assigned automatically if no attribute \`id\` is set
inline: This geojson uses <b>{value}</b> as attribute to set the id
question: What is the name of the attribute containing the ID of the object?`,type:"string"}},required:["geoJson"]},{enum:["special","special:library"],type:"string"}],description:`This determines where the data for the layer is fetched: from OSM or from an external geojson dataset.
If no 'geojson' is defined, data will be fetched from overpass and the OSM-API.
Every source _must_ define which tags _must_ be present in order to be picked up.
Note: a source must always be defined. 'special' is only allowed if this is a builtin-layer`},{path:["layers","override","source","osmTags"],required:!0,hints:{typehint:"tag",question:"Which tags must be present on the feature to show it in this layer?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"Every source must set which tags have to be present in order to load the given layer."},{path:["layers","override","source","maxCacheAge"],required:!1,hints:{typehint:"nat",group:"expert",default:"30 days",question:"How long (in seconds) is the data allowed to remain cached until it must be refreshed?"},type:"number",description:"The maximum amount of seconds that a tile is allowed to linger in the cache"},{path:["layers","override","source","geoJson"],required:!0,hints:{typehint:"url",question:"What is the URL of the geojson?"},type:"string",description:`The actual source of the data to load, if loaded via geojson.
# A single geojson-file
source: {geoJson: "https://my.source.net/some-geo-data.geojson"}
 fetches a geojson from a third party source
# A tiled geojson source
source: {geoJson: "https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson", geoJsonZoomLevel: 14}
 to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer
Some API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}`},{path:["layers","override","source","geoJsonZoomLevel"],required:!1,hints:{question:"If using a tiled geojson, what is the zoomlevel of the tiles?",ifunset:"This is not a tiled geojson"},type:"number",description:"To load a tiled geojson layer, set the zoomlevel of the tiles"},{path:["layers","override","source","isOsmCache"],required:!1,hints:{group:"expert",question:"Is this geojson a cache of OpenStreetMap data?",iftrue:"this is based on OpenStreetMap and can thus be edited",ifunset:"This is not an OpenStreetMap cache"},type:"boolean",description:`Indicates that the upstream geojson data is OSM-derived.
Useful for e.g. merging or for scripts generating this cache.
This also indicates that making changes on this data is possible`},{path:["layers","override","source","mercatorCrs"],required:!1,hints:{question:"Does this geojson use  EPSG:900913 instead of WGS84 as projection?",iftrue:"This geojson uses EPSG:900913 instead of WGS84",ifunset:"This geojson uses WGS84 just like most geojson (default)"},type:"boolean",description:"Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag `mercatorCrs: true`  in the source for this"},{path:["layers","override","source","idKey"],required:!1,hints:{question:"What is the name of the attribute containing the ID of the object?",ifunset:"An id with key `id` will be assigned automatically if no attribute `id` is set",inline:"This geojson uses <b>{value}</b> as attribute to set the id"},type:"string",description:`Some API's have an id-field, but give it a different name.
Setting this key will rename this field into 'id'`},{path:["layers","override","calculatedTags"],required:!1,hints:{group:"expert",question:"What extra attributes should be calculated with javascript?"},type:"array",description:`A list of extra tags to calculate, specified as "keyToAssignTo=javascript-expression".
There are a few extra functions available. Refer to <a>Docs/CalculatedTags.md</a> for more information
The functions will be run in order, e.g.
[
 "_max_overlap_m2=Math.max(...feat.overlapsWith("someOtherLayer").map(o => o.overlap))
 "_max_overlap_ratio=Number(feat._max_overlap_m2)/feat.area
]
The specified tags are evaluated lazily. E.g. if a calculated tag is only used in the popup (e.g. the number of nearby features),
the expensive calculation will only be performed then for that feature. This avoids clogging up the contributors PC when all features are loaded.
If a tag has to be evaluated strictly, use ':=' instead:
[
"_some_key:=some_javascript_expression"
]
See the full documentation on [https://github.com/pietervdvn/MapComplete/blob/master/Docs/CalculatedTags.md]`},{path:["layers","override","isShown"],required:!1,hints:{group:"advanced",question:"What other tags should features match for being shown?",ifunset:"all features which match the 'source'-specification are shown."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, only features matching this extra tag will be shown.
This is useful to hide certain features from view based on a calculated tag or if the features are provided by a different layer.`},{path:["layers","override","isShown","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","isShown","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","minzoom"],required:!1,hints:{typehint:"nat",group:"Basic",default:"0",question:"At what zoom level should features of the layer be shown?",ifunset:"Always load this layer, even if the entire world is in view."},type:"number",description:`The minimum needed zoomlevel required to start loading and displaying the data.
This can be used to only show common features (e.g. a bicycle parking) only when the map is zoomed in very much (17).
This prevents cluttering the map with thousands of parkings if one is looking to an entire city.`},{path:["layers","override","shownByDefault"],required:!1,hints:{group:"advanced",default:"true",question:"Should this layer be enabled when opening the map for the first time?",iftrue:"the layer is enabled when opening the map",iffalse:"the layer is hidden until the contributor enables it. (If the filter-popup is disabled, this might never get enabled nor loaded)"},type:"boolean",description:`Indicates if this layer is shown by default;
can be used to hide a layer from start, or to load the layer but only to show it when appropriate (e.g. for advanced users)`},{path:["layers","override","minzoomVisible"],required:!1,hints:{group:"expert",default:"100 (thus: always visible"},type:"number",description:"The zoom level at which point the data is hidden again"},{path:["layers","override","title"],required:!1,hints:{typehint:"translation",types:"use a fixed translation ; Use a dynamic tagRendering ; hidden",typesdefault:"1",group:"title",question:"Edit the popup title",inline:"{translated{value}}"},type:[{$ref:"#/definitions/Record<string,string>"},{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"The title shown in a popup for elements of this layer."},{path:["layers","override","title","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","title","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","title","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","title","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","title","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","title","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","title","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","title","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","title","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","title","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","title","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","title","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","title","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","title","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","title","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","title","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","title","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","title","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","title","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","title","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","popupInFloatover"],required:!1,hints:{group:"advanced",default:"sidebar",question:"Should the information for this layer be shown in the sidebar or in a splash screen?",iftrue:"show the infobox in the splashscreen floating over the entire UI",iffalse:"show the infobox in a sidebar on the right"},type:"boolean",description:"If set, open the selectedElementView in a floatOver instead of on the right."},{path:["layers","override","titleIcons"],required:!1,hints:{typehint:"icon[]",group:"infobox"},type:[{type:"array",items:{anyOf:[{allOf:[{$ref:"#/definitions/TagRenderingConfigJson"},{type:"object",properties:{id:{type:"string"}}}]},{type:"string"}]}},{type:"array",items:[{type:"string",enum:["defaults"]}],minItems:1,maxItems:1}],description:`Small icons shown next to the title.
If not specified, the OsmLink and wikipedia links will be used by default.
Use an empty array to hide them.
Note that "defaults" will insert all the default titleIcons (which are added automatically)
Use \`auto:<tagrenderingId>\` to automatically create an icon based on a tagRendering which has icons`},{path:["layers","override","titleIcons"],required:!1,hints:{},type:"object",description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`},{path:["layers","override","titleIcons","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","titleIcons","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","titleIcons","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","titleIcons","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","titleIcons","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","titleIcons","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","titleIcons","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","titleIcons","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","titleIcons","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","titleIcons","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","titleIcons","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","titleIcons","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","titleIcons","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","titleIcons","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","titleIcons","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","titleIcons","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","titleIcons","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","titleIcons","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","titleIcons","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","titleIcons","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering"],required:!1,hints:{group:"pointrendering"},type:"array",description:`Creates points to render on the map.
This can render points for point-objects, lineobjects or areaobjects; use 'location' to indicate where it should be rendered`},{path:["layers","override","pointRendering"],required:!1,hints:{},type:"object",description:`The PointRenderingConfig gives all details onto how to render a single point of a feature.
This can be used if:
- The feature is a point
- To render something at the centroid of an area, or at the start, end or projected centroid of a way`},{path:["layers","override","pointRendering","location"],required:!0,hints:{question:"At what location should this icon be shown?",suggestions:[{if:"value=point",then:"Show an icon for point (node) objects"},{if:"value=centroid",then:"Show an icon for line or polygon (way) objects at their centroid location"},{if:"value=start",then:"Show an icon for line (way) objects at the start"},{if:"value=end",then:"Show an icon for line (way) object at the end"},{if:"value=projected_centerpoint",then:"Show an icon for line (way) object near the centroid location, but moved onto the line"}],multianswer:"true"},type:"array",description:""},{path:["layers","override","pointRendering","marker"],required:!1,hints:{},type:"array",description:"The marker for an element.\nNote that this also defines the icon for this layer (rendered with the overpass-tags) <i>and</i> the icon in the presets.\nThe result of the icon is rendered as follows:\n- The first icon is rendered on the map\n- The second entry is overlayed on top of it\n- ...\nAs a result, on could use a generic icon (`pin`, `circle`, `square`) with a color, then overlay it with a specific icon."},{path:["layers","override","pointRendering","marker","icon"],required:!0,hints:{typehint:"icon",question:"What icon should be used?",suggestions:[{if:"value=pin",then:"pin",icon:"pin"},{if:"value=bug",then:"bug",icon:"bug"},{if:"value=square",then:"square",icon:"square"},{if:"value=square_rounded",then:"square_rounded",icon:"square_rounded"},{if:"value=circle",then:"circle",icon:"circle"},{if:"value=checkmark",then:"checkmark",icon:"checkmark"},{if:"value=clock",then:"clock",icon:"clock"},{if:"value=close",then:"close",icon:"close"},{if:"value=crosshair",then:"crosshair",icon:"crosshair"},{if:"value=help",then:"help",icon:"help"},{if:"value=home",then:"home",icon:"home"},{if:"value=invalid",then:"invalid",icon:"invalid"},{if:"value=location",then:"location",icon:"location"},{if:"value=location_empty",then:"location_empty",icon:"location_empty"},{if:"value=location_locked",then:"location_locked",icon:"location_locked"},{if:"value=note",then:"note",icon:"note"},{if:"value=resolved",then:"resolved",icon:"resolved"},{if:"value=ring",then:"ring",icon:"ring"},{if:"value=scissors",then:"scissors",icon:"scissors"},{if:"value=teardrop",then:"teardrop",icon:"teardrop"},{if:"value=teardrop_with_hole_green",then:"teardrop_with_hole_green",icon:"teardrop_with_hole_green"},{if:"value=triangle",then:"triangle",icon:"triangle"},{if:"value=brick_wall_square",then:"brick_wall_square",icon:"brick_wall_square"},{if:"value=brick_wall_round",then:"brick_wall_round",icon:"brick_wall_round"},{if:"value=gps_arrow",then:"gps_arrow",icon:"gps_arrow"},{if:"value=checkmark",then:"checkmark",icon:"checkmark"},{if:"value=help",then:"help",icon:"help"},{if:"value=close",then:"close",icon:"close"},{if:"value=invalid",then:"invalid",icon:"invalid"},{if:"value=heart",then:"heart",icon:"heart"},{if:"value=heart_outline",then:"heart_outline",icon:"heart_outline"},{if:"value=link",then:"link",icon:"link"},{if:"value=confirm",then:"confirm",icon:"confirm"},{if:"value=direction",then:"direction",icon:"direction"},{if:"value=not_found",then:"not_found",icon:"not_found"},{if:"value=mastodon",then:"mastodon",icon:"mastodon"},{if:"value=party",then:"party",icon:"party"},{if:"value=addSmall",then:"addSmall",icon:"addSmall"}]},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"object",properties:{builtin:{type:"string"},override:{}},required:["builtin","override"]},{type:"string"}],description:""},{path:["layers","override","pointRendering","marker","icon","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","pointRendering","marker","icon","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","marker","icon","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","marker","icon","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","marker","color"],required:!1,hints:{typehint:"color",question:"What colour should the icon be?"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"object",properties:{builtin:{type:"string"},override:{}},required:["builtin","override"]},{type:"string"}],description:"This will only work for the default icons such as `pin`,`circle`,..."},{path:["layers","override","pointRendering","marker","color","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","pointRendering","marker","color","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","marker","color","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","marker","color","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","iconBadges"],required:!1,hints:{group:"hidden"},type:"array",description:"A list of extra badges to show next to the icon as small badge\nThey will be added as a 25% height icon at the bottom right of the icon, with all the badges in a flex layout.\nNote: strings are interpreted as icons, so layering and substituting is supported. You can use `circle:white;./my_icon.svg` to add a background circle"},{path:["layers","override","pointRendering","iconBadges","if"],required:!0,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","iconBadges","then"],required:!0,hints:{typehint:"icon"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:"Badge to show"},{path:["layers","override","pointRendering","iconBadges","then","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","pointRendering","iconBadges","then","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","iconBadges","then","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","iconBadges","then","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","iconSize"],required:!1,hints:{question:"What size should the marker be on the map?",ifunset:"Use the default size (<b>40,40</b> px)"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:'A string containing "<width>,<height>" in pixels'},{path:["layers","override","pointRendering","iconSize","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","iconSize","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","iconSize","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","iconSize","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","iconSize","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","iconSize","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","iconSize","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","iconSize","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","iconSize","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","iconSize","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","iconSize","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","iconSize","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","iconSize","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","iconSize","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","iconSize","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","iconSize","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","iconSize","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","iconSize","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","iconSize","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","iconSize","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","anchor"],required:!1,hints:{question:"What is the anchorpoint of the icon?",ifunset:"Use MapComplete-default (<b>center</b>)",suggestions:[{if:"value=center",then:"Place the <b>center</b> of the icon on the geographical location"},{if:"value=top",then:"Place the <b>top</b> of the icon on the geographical location"},{if:"value=bottom",then:"Place the <b>bottom</b> of the icon on the geographical location"},{if:"value=left",then:"Place the <b>left</b> of the icon on the geographical location"},{if:"value=right",then:"Place the <b>right</b> of the icon on the geographical location"}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"This matches the geographical point with a location on the icon."},{path:["layers","override","pointRendering","anchor","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","anchor","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","anchor","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","anchor","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","anchor","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","anchor","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","anchor","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","anchor","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","anchor","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","anchor","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","anchor","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","anchor","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","anchor","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","anchor","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","anchor","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","anchor","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","anchor","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","anchor","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","anchor","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","anchor","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","rotation"],required:!1,hints:{question:"What rotation should be applied on the icon?",ifunset:"Do not rotate"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"This is mostly useful for items that face a specific direction, such as surveillance cameras\nThis is interpreted as css property for 'rotate', thus has to end with 'deg', e.g. `90deg`, `{direction}deg`, `calc(90deg - {camera:direction}deg)``"},{path:["layers","override","pointRendering","rotation","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","rotation","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","rotation","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","rotation","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","rotation","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","rotation","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotation","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotation","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","rotation","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotation","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotation","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","rotation","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","rotation","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","rotation","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","rotation","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","rotation","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","rotation","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","rotation","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","rotation","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","rotation","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","label"],required:!1,hints:{types:"Dynamic value based on the attributes ; string",question:"What label should be shown beneath the marker?",ifunset:"Do not show a label beneath the marker",inline:"Always show label <b>{value}</b> beneath the marker"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:'For example: `&LT;div style="background: white">{name}&LT;/div>`\nIf the icon is undefined, then the label is shown in the center of the feature.'},{path:["layers","override","pointRendering","label","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","label","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","label","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","label","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","label","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","label","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","label","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","label","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","label","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","label","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","label","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","label","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","label","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","label","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","label","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","label","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","label","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","label","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","label","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","label","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","labelCss"],required:!1,hints:{types:"Dynamic value ; string",group:"expert",question:"What CSS should be applied to the label?",ifunset:"Do not apply extra CSS-labels to the label",inline:"Apply CSS-style <b>{value}</b> to the label"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"You can set the css-properties here, e.g. `background: red; font-size: 12px; `"},{path:["layers","override","pointRendering","labelCss","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","labelCss","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","labelCss","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","labelCss","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","labelCss","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","labelCss","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCss","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCss","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","labelCss","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCss","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCss","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","labelCss","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","labelCss","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","labelCss","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","labelCss","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","labelCss","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","labelCss","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","labelCss","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","labelCss","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","labelCss","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","labelCssClasses"],required:!1,hints:{types:"Dynamic value ; string",question:"Which CSS-classes should be applied to the label?",ifunset:"Do not apply extra CSS-classes to the label",inline:"Apply CSS-classes <b>{value}</b> to the label",suggestions:[{if:"value=bg-white rounded px-2",then:"Draw on a white background"}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"The classes should be separated by a space (` `)\nYou can use most Tailwind-css classes, see https://tailwindcss.com/ for more information\nFor example: `center bg-gray-500 mx-2 my-1 rounded-full`"},{path:["layers","override","pointRendering","labelCssClasses","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","labelCssClasses","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","labelCssClasses","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","labelCssClasses","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","labelCssClasses","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","labelCssClasses","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCssClasses","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCssClasses","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","labelCssClasses","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCssClasses","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","labelCssClasses","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","labelCssClasses","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","labelCssClasses","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","labelCssClasses","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","labelCssClasses","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","labelCssClasses","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","labelCssClasses","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","labelCssClasses","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","labelCssClasses","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","labelCssClasses","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","css"],required:!1,hints:{types:"Dynamic value ; string",group:"expert",question:"What CSS should be applied to the entire marker?",ifunset:"Do not apply extra CSS element to the entire marker",inline:"Apply CSS-style <b>{value}</b> to the _entire marker_"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"You can set the css-properties here, e.g. `background: red; font-size: 12px; `\nThis will be applied to the _container_ containing both the marker and the label"},{path:["layers","override","pointRendering","css","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","css","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","css","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","css","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","css","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","css","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","css","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","css","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","css","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","css","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","css","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","css","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","css","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","css","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","css","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","css","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","css","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","css","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","css","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","css","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","cssClasses"],required:!1,hints:{types:"Dynamic value ; string",group:"expert",question:"Which CSS-classes should be applied to the entire marker?",ifunset:"Do not apply extra CSS-classes to the label",inline:"Apply CSS-classes <b>{value}</b> to the entire container"},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{type:"string"}],description:"This will be applied to the _container_ containing both the marker and the label\nThe classes should be separated by a space (` `)\nYou can use most Tailwind-css classes, see https://tailwindcss.com/ for more information\nFor example: `center bg-gray-500 mx-2 my-1 rounded-full`"},{path:["layers","override","pointRendering","cssClasses","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","cssClasses","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","cssClasses","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","cssClasses","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","cssClasses","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","cssClasses","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","cssClasses","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","cssClasses","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","cssClasses","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","cssClasses","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","cssClasses","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","cssClasses","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","cssClasses","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","cssClasses","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","cssClasses","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","cssClasses","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","cssClasses","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","cssClasses","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","cssClasses","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","cssClasses","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","pitchAlignment"],required:!1,hints:{group:"expert",question:"If the map is pitched, should the icon stay parallel to the screen or to the groundplane?",suggestions:[{if:"value=canvas",then:"The icon will stay upward and not be transformed as if it sticks to the screen"},{if:"value=map",then:"The icon will be transformed as if it were painted onto the ground. (Automatically sets rotationAlignment)"}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{enum:["canvas","map"],type:"string"}],description:""},{path:["layers","override","pointRendering","pitchAlignment","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","pitchAlignment","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","pitchAlignment","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","pitchAlignment","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","pitchAlignment","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","pitchAlignment","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","pitchAlignment","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","pitchAlignment","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","pitchAlignment","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","pitchAlignment","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","pitchAlignment","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","pitchAlignment","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","pitchAlignment","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","pitchAlignment","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","pitchAlignment","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","pitchAlignment","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","pitchAlignment","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","pitchAlignment","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","pitchAlignment","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","pitchAlignment","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","pointRendering","rotationAlignment"],required:!1,hints:{group:"expert",question:"Should the icon be rotated if the map is rotated?",ifunset:"Do not rotate or tilt icons. Always keep the icons straight",suggestions:[{if:"value=canvas",then:"Never rotate the icon"},{if:"value=map",then:"If the map is rotated, rotate the icon as well. This gives the impression of an icon that floats perpendicular above the ground."}]},type:[{description:`A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
For an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one`,type:"object",properties:{render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},freeform:{description:`question: Should a freeform text field be shown?
Allow freeform text input from the user
ifunset: Do not add a freeform text field`,type:"object",properties:{key:{description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`,type:"string"}}},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered",anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},icon:{description:`question: What icon should be added to this mapping?
ifunset: Do not show an extra icon next to the render value

An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number
inline: <img src='{icon}' class="w-8 h-8" /> {icon}
Type: icon`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]}},required:["if","then"]}},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},additionalProperties:!1},{enum:["canvas","map"],type:"string"}],description:""},{path:["layers","override","pointRendering","rotationAlignment","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","pointRendering","rotationAlignment","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","pointRendering","rotationAlignment","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","rotationAlignment","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","rotationAlignment","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","pointRendering","rotationAlignment","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotationAlignment","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotationAlignment","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","pointRendering","rotationAlignment","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotationAlignment","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","pointRendering","rotationAlignment","freeform"],required:!1,hints:{question:"Should a freeform text field be shown?",ifunset:"Do not add a freeform text field"},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","pointRendering","rotationAlignment","freeform","key"],required:!1,hints:{},type:"string",description:`What attribute should be filled out
If this key is present in the feature, then 'render' is used to display the value.
If this is undefined, the rendering is _always_ shown`},{path:["layers","override","pointRendering","rotationAlignment","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","pointRendering","rotationAlignment","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","pointRendering","rotationAlignment","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","pointRendering","rotationAlignment","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be added to this mapping?",ifunset:"Do not show an extra icon next to the render value",inline:`<img src='{icon}' class="w-8 h-8" /> {icon}`},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon supporting this mapping; typically shown pretty small.
This can be used to show a 'phone'-icon next to the phone number`},{path:["layers","override","pointRendering","rotationAlignment","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","pointRendering","rotationAlignment","mappings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","pointRendering","rotationAlignment","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","pointRendering","rotationAlignment","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","lineRendering"],required:!1,hints:{group:"linerendering"},type:"array",description:"Creates lines and areas to render on the map"},{path:["layers","override","lineRendering"],required:!1,hints:{},type:"object",description:`The LineRenderingConfig gives all details onto how to render a single line of a feature.
This can be used if:
- The feature is a line
- The feature is an area`},{path:["layers","override","lineRendering","color"],required:!1,hints:{typehint:"color",types:"dynamic value ; string",question:"What color should lines be drawn in?",inline:"The line colour always is <b>{value}</b>",title:"Line Colour"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:`For an area, this will be the colour of the outside line.
If the value starts with "--", the style of the body element will be queried for the corresponding variable instead`},{path:["layers","override","lineRendering","color","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","lineRendering","color","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","lineRendering","color","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","lineRendering","color","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","lineRendering","width"],required:!1,hints:{typehint:"pnat",types:"dynamic value ; string",question:"How wide should the line be?",ifunset:"Use the default-linewidth of 7 pixels",inline:"The line width is <b>{value} pixels</b>",title:"Line width"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:["string","number"]}],description:"The stroke-width for way-elements"},{path:["layers","override","lineRendering","width","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","lineRendering","width","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","lineRendering","width","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","lineRendering","width","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","lineRendering","dashArray"],required:!1,hints:{question:"Should a dasharray be used to render the lines?",ifunset:"Ways are rendered with a full line"},type:"string",description:"The dasharray defines 'pixels of line, pixels of gap, pixels of line, pixels of gap, ...'. For example, `5 6` will be 5 pixels of line followed by a 6 pixel gap.\nCannot be a dynamic property due to a mapbox limitation"},{path:["layers","override","lineRendering","lineCap"],required:!1,hints:{types:"dynamic value ; string",question:"What form should the line-ending have?",ifunset:"Use the default value (round ending)",suggestions:[{if:"value=round",then:"Round endings"},{if:"value=square",then:"square endings"},{if:"value=butt",then:"no ending (square ending at the end, without padding)"}],title:"Line Cap"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:""},{path:["layers","override","lineRendering","lineCap","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","lineRendering","lineCap","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","lineRendering","lineCap","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","lineRendering","lineCap","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","lineRendering","fillColor"],required:!1,hints:{typehint:"color",types:"dynamic value ; string",question:"What colour should be used as fill colour for polygons?",ifunset:"The polygon fill colour will be a more transparent version of the stroke colour",inline:"The fill colour is <b>{value}</b>",suggestions:[{if:"value=#00000000",then:"Use a transparent fill (only render the outline)"}]},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"string"}],description:""},{path:["layers","override","lineRendering","fillColor","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","lineRendering","fillColor","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","lineRendering","fillColor","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","lineRendering","fillColor","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","lineRendering","offset"],required:!1,hints:{typehint:"int",types:"dynamic value ; number",question:"Should the lines be moved (offsetted) with a number of pixels against the geographical lines?",ifunset:"don't offset lines on the map",inline:"Pixel offset by <b>{value}</b> pixels"},type:[{description:"Mostly used for lineRendering and pointRendering",type:"object",properties:{render:{description:`question: What value should be shown (if no predifined option matches)?

This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.

This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``,type:"string"},mappings:{description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes",type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`question: When should this single mapping match?

If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.

For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}

This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},then:{description:"question: What text should be shown?\n\nIf the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option",type:"string"}},required:["if","then"]}}},additionalProperties:!1},{type:"number"}],description:`The number of pixels this line should be moved.
Use a positive number to move to the right in the drawing direction or a negative to move to the left (left/right as defined by the drawing direction of the line).
IMPORTANT: MapComplete will already normalize 'key:both:property' and 'key:both' into the corresponding 'key:left' and 'key:right' tagging (same for 'sidewalk=left/right/both' which is rewritten to 'sidewalk:left' and 'sidewalk:right')
This simplifies programming. Refer to the CalculatedTags.md-documentation for more details`},{path:["layers","override","lineRendering","offset","render"],required:!1,hints:{question:"What value should be shown (if no predifined option matches)?"},type:"string",description:`This piece of text will be shown in the infobox.
Note that "&LBRACEkey&RBRACE"-parts are substituted by the corresponding values of the element.
This value will be used if there is no mapping which matches (or there are no matches)
Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\``},{path:["layers","override","lineRendering","offset","mappings"],required:!1,hints:{},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","lineRendering","offset","mappings","if"],required:!0,hints:{typehint:"tag",question:"When should this single mapping match?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`If this condition is met, then the text under \`then\` will be shown.
If no value matches, and the user selects this mapping as an option, then these tags will be uploaded to OSM.
For example: {'if': 'diet:vegetarion=yes', 'then':'A vegetarian option is offered here'}
This can be an substituting-tag as well, e.g. {'if': 'addr:street:={_calculated_nearby_streetname}', 'then': '{_calculated_nearby_streetname}'}`},{path:["layers","override","lineRendering","offset","mappings","then"],required:!0,hints:{question:"What text should be shown?"},type:"string",description:"If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"},{path:["layers","override","lineRendering","imageAlongWay"],required:!1,hints:{typehint:"image",question:"What PNG-image should be shown along the way?",ifunset:"no image is shown along the way"},type:[{type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation

type: tag`},then:{type:"string"}},required:["if","then"]}},{type:"string"}],description:""},{path:["layers","override","lineRendering","imageAlongWay","if"],required:!0,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","passAllFeatures"],required:!1,hints:{group:"expert",question:"should this layer pass features to the next layers?",iftrue:"Make the features from this layer also available to the other layer; might result in this object being rendered by multiple layers",iffalse:"normal behaviour: don't pass features allong"},type:"boolean",description:`If set, this layer will pass all the features it receives onto the next layer.
This is ideal for decoration, e.g. directions on cameras`},{path:["layers","override","doNotDownload"],required:!1,hints:{group:"expert",default:"false",question:"Should this layer be downloaded or is the data provided by a different layer (which has 'passAllFeatures'-set)?",iftrue:"Do not attempt to query the data for this layer from overpass/the OSM API",iffalse:"download the data as usual"},type:"boolean",description:"If set, this layer will not query overpass; but it'll still match the tags above which are by chance returned by other layers.\nWorks well together with 'passAllFeatures', to add decoration\nThe opposite of `forceLoad`"},{path:["layers","override","forceLoad"],required:!1,hints:{group:"expert",default:"false",question:"Should this layer be forcibly loaded?",iffalse:"only download data for this layer when needed (default)"},type:"boolean",description:`Advanced option - might be set by the theme compiler
If true, this data will _always_ be loaded, even if the theme is disabled by a filter or hidden.
The opposite of \`doNotDownload\`
ifftrue: always download this layer, even if it is disabled`},{path:["layers","override","presets"],required:!1,hints:{group:"presets"},type:"array",description:`Presets for this layer.
A preset shows up when clicking the map on a without data (or when right-clicking/long-pressing);
it will prompt the user to add a new point.
The most important aspect are the tags, which define which tags the new point will have;
The title is shown in the dialog, along with the first sentence of the description.
Upon confirmation, the full description is shown beneath the buttons - perfect to add pictures and examples.
Note: the icon of the preset is determined automatically based on the tags and the icon above. Don't worry about that!
NB: if no presets are defined, the popup to add new points doesn't show up at all`},{path:["layers","override","presets","title"],required:!0,hints:{question:"What is the word to describe this object?",inline:"Add {translated(value)::font-bold} here"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"The title - shown on the 'add-new'-button.\nThis should include the article of the noun, e.g. 'a hydrant', 'a bicycle pump'.\nThis text will be inserted into `Add {category} here`, becoming `Add a hydrant here`.\nDo _not_ indicate 'new': 'add a new shop here' is incorrect, as the shop might have existed forever, it could just be unmapped!"},{path:["layers","override","presets","tags"],required:!0,hints:{typehint:"simple_tag",typehelper:"uploadableOnly",question:"What tag should be added to the new object?"},type:"array",description:`A single tag (encoded as <code>key=value</code>) out of all the tags to add onto the newly created point.
Note that the icon in the UI will be chosen automatically based on the tags provided here.`},{path:["layers","override","presets","description"],required:!1,hints:{question:"How would you describe this feature?",ifunset:"No extra description is given. This can be used to further explain the preset"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`An extra explanation of what the feature is, if it is not immediately clear from the title alone.
The _first sentence_ of the description is shown on the button of the \`add\` menu.
The full description is shown in the confirmation dialog.
(The first sentence is until the first '.'-character in the description)`},{path:["layers","override","presets","exampleImages"],required:!1,hints:{typehint:"image",question:"What is the URL of an image showing such a feature?"},type:"array",description:"The URL of an example image which shows a real-life example of what such a feature might look like."},{path:["layers","override","presets","snapToLayer"],required:!1,hints:{question:"Should the created point be snapped to a line layer?",suggestions:[{if:"value=address",then:"address - Addresses"},{if:"value=advertising",then:"advertising - We will complete data from advertising features with reference, operator and lit"},{if:"value=aerialway",then:"aerialway - Various forms of transport for passengers and goods that use wires, including cable cars, gondolas, chair lifts, drag lifts, and zip lines. "},{if:"value=ambulancestation",then:"ambulancestation - An ambulance station is an area for storage of ambulance vehicles, medical equipment, personal protective equipment, and other medical supplies."},{if:"value=animal_shelter",then:"animal_shelter - An animal shelter is a facility where animals in trouble are brought and facility's staff (volunteers or not) feeds them and cares of them, rehabilitating and healing them if necessary. This definition includes kennels for abandoned dogs, catteries for abandoned cats, shelters for other abandoned pets and wildlife recovery centres. "},{if:"value=artwork",then:"artwork - An open map of statues, busts, graffitis and other artwork all over the world"},{if:"value=assembly_point",then:"assembly_point - This layer contains assembly points and waiting areas where all employees, passengers or a large crowd assemble in case of an emergency."},{if:"value=atm",then:"atm - ATMs to withdraw money"},{if:"value=bank",then:"bank - A financial institution to deposit money"},{if:"value=barrier",then:"barrier - Obstacles while cycling, such as bollards and cycle barriers"},{if:"value=bench",then:"bench - A bench is a wooden, metal, stone, … surface where a human can sit. This layers visualises them and asks a few questions about them."},{if:"value=bench_at_pt",then:"bench_at_pt - A layer showing all public-transport-stops which do have a bench"},{if:"value=bicycle_library",then:"bicycle_library - A facility where bicycles can be lent for longer period of times"},{if:"value=bicycle_rental",then:"bicycle_rental - Bicycle rental stations"},{if:"value=bicycle_tube_vending_machine",then:"bicycle_tube_vending_machine - A layer showing vending machines for bicycle tubes (either purpose-built bicycle tube vending machines or classical vending machines with bicycle tubes and optionally additional bicycle related objects such as lights, gloves, locks, …)"},{if:"value=bike_cafe",then:"bike_cafe - A bike café is a café geared towards cyclists, for example with services such as a pump, with lots of bicycle-related decoration, …"},{if:"value=bike_cleaning",then:"bike_cleaning - A layer showing facilities where one can clean their bike"},{if:"value=bike_parking",then:"bike_parking - A layer showing where you can park your bike"},{if:"value=bike_repair_station",then:"bike_repair_station - A layer showing bicycle pumps and bicycle repair tool stands"},{if:"value=bike_shop",then:"bike_shop - A shop specifically selling bicycles or related items"},{if:"value=bike_themed_object",then:"bike_themed_object - A layer with bike-themed objects but who don't match any other layer"},{if:"value=binocular",then:"binocular - Binoculars"},{if:"value=birdhide",then:"birdhide - A birdhide"},{if:"value=brothel",then:"brothel - An establishment specifically dedicated to prostitution. "},{if:"value=cafe_pub",then:"cafe_pub - A layer showing cafés and pubs where one can gather around a drink. The layer asks for some relevant questions"},{if:"value=car_rental",then:"car_rental - Places where you can rent a car"},{if:"value=charging_station",then:"charging_station - A charging station"},{if:"value=cinema",then:"cinema -  A place showing movies (films), generally open to the public for a fee. Commonly referred to as a movie theater in the US"},{if:"value=climbing",then:"climbing - A dummy layer which contains tagrenderings, shared among the climbing layers"},{if:"value=climbing_area",then:"climbing_area - An area where climbing is possible, e.g. a crag, site, boulder, … Contains aggregation of routes"},{if:"value=climbing_club",then:"climbing_club - A climbing club or organisation"},{if:"value=climbing_gym",then:"climbing_gym - A climbing gym"},{if:"value=climbing_opportunity",then:"climbing_opportunity - Fallback layer with items on which climbing _might_ be possible. It is loaded when zoomed in a lot, to prevent duplicate items to be added"},{if:"value=climbing_route",then:"climbing_route - A single climbing route and its properties. Some properties are derived from the containing features"},{if:"value=clock",then:"clock - Layer with public clocks"},{if:"value=conflation",then:"conflation - If the import-button moves OSM points, the imported way points or conflates, a preview is shown. This layer defines how this preview is rendered. This layer cannot be included in a theme."},{if:"value=crab_address",then:"crab_address - Address data for Flanders by the governement, suited for import into OpenStreetMap. Datadump from 2021-10-26. This layer contains only visualisation logic. Import buttons should be added via an override. Note that HNRLABEL contains the original value, whereas _HNRLABEL contains a slightly cleaned version"},{if:"value=crossings",then:"crossings - Crossings for pedestrians and cyclists"},{if:"value=current_view",then:`current_view - A meta-layer which contains one single feature, namely the bounding box of the current map view. This can be used to trigger special actions. If a popup is defined for this layer, this popup will be accessible via an extra button on screen.

The icon on the button is the default icon of the layer, but can be customized by detecting 'button=yes'.`},{if:"value=cycleways_and_roads",then:"cycleways_and_roads - All infrastructure that someone can cycle over, accompanied with questions about this infrastructure"},{if:"value=defibrillator",then:"defibrillator - A layer showing defibrillators which can be used in case of emergency. This contains public defibrillators, but also defibrillators which might need staff to fetch the actual device"},{if:"value=dentist",then:"dentist - This layer shows dentist offices"},{if:"value=direction",then:"direction - This layer visualizes directions"},{if:"value=disaster_response",then:"disaster_response - This layer contains organizations that have the main objective to help the civil population during and after natural or anthropogenic disasters by working in the affected area."},{if:"value=doctors",then:"doctors - This layer shows doctor offices"},{if:"value=dogpark",then:"dogpark - A layer showing dogparks, which are areas where dog are allowed to run without a leash"},{if:"value=drinking_water",then:"drinking_water - A layer showing drinking water fountains"},{if:"value=elevator",then:"elevator - This layer show elevators and asks for operational status and elevator dimensions. Useful for wheelchair accessibility information"},{if:"value=elongated_coin",then:"elongated_coin - Layer showing penny presses."},{if:"value=entrance",then:"entrance - A layer showing entrances and offering capabilities to survey some advanced data which is important for e.g. wheelchair users (but also bicycle users, people who want to deliver, …)"},{if:"value=etymology",then:"etymology - All objects which have an etymology known"},{if:"value=extinguisher",then:"extinguisher - Map layer to show fire extinguishers."},{if:"value=filters",then:"filters - This layer acts as library for common filters"},{if:"value=fire_station",then:"fire_station - Map layer to show fire stations."},{if:"value=fitness_centre",then:"fitness_centre - Layer showing fitness centres"},{if:"value=fitness_station",then:"fitness_station - Find a fitness station near you, and add missing ones."},{if:"value=fixme",then:"fixme - OSM objects that likely need to be fixed, based on a FIXME tag."},{if:"value=food",then:"food - A layer showing restaurants and fast-food amenities (with a special rendering for friteries)"},{if:"value=ghost_bike",then:"ghost_bike - A layer showing memorials for cyclists, killed in road accidents"},{if:"value=governments",then:"governments - This layer show governmental buildings. It was setup as commissioned layer for the client of OSOC '22"},{if:"value=gps_location",then:"gps_location - Meta layer showing the current location of the user. Add this to your theme and override the icon to change the appearance of the current location. The object will always have `id=gps` and will have _all_ the properties included in the [`Coordinates`-object](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates) (except latitude and longitude) returned by the browser, such as `speed`, `altitude`, `heading`, ...."},{if:"value=gps_location_history",then:"gps_location_history - Meta layer which contains the previous locations of the user as single points. This is mainly for technical reasons, e.g. to keep match the distance to the modified object"},{if:"value=gps_track",then:"gps_track - Meta layer showing the previous locations of the user as single line with controls, e.g. to erase, upload or download this track. Add this to your theme and override the maprendering to change the appearance of the travelled track."},{if:"value=guidepost",then:"guidepost - Guideposts (also known as fingerposts or finger posts) are often found along official hiking/cycling/riding/skiing routes to indicate the directions to different destinations"},{if:"value=hackerspace",then:"hackerspace - Hackerspace"},{if:"value=home_location",then:"home_location - Meta layer showing the home location of the user. The home location can be set in the [profile settings](https://www.openstreetmap.org/profile/edit) of OpenStreetMap."},{if:"value=hospital",then:"hospital - A layer showing hospital grounds"},{if:"value=hotel",then:"hotel - Layer showing all hotels"},{if:"value=hydrant",then:"hydrant - Map layer to show fire hydrants."},{if:"value=ice_cream",then:"ice_cream - A place where ice cream is sold over the counter"},{if:"value=icons",then:"icons - A layer acting as library for icon-tagrenderings, especially to show as badge next to a POI"},{if:"value=id_presets",then:"id_presets - Layer containing various presets and questions generated by ID. These are meant to be reused in other layers by importing the tagRenderings with `id_preset.<tagrendering>"},{if:"value=import_candidate",then:"import_candidate - Layer used as template in the importHelper"},{if:"value=indoors",then:"indoors - Basic indoor mapping: shows room outlines"},{if:"value=information_board",then:"information_board - A layer showing touristical, road side information boards (e.g. giving information about the landscape, a building, a feature, a map, …)"},{if:"value=kerbs",then:"kerbs - A layer showing kerbs."},{if:"value=kindergarten_childcare",then:"kindergarten_childcare - Shows kindergartens and preschools. Both are grouped in one layer, as they are regularly confused with each other"},{if:"value=last_click",then:"last_click - This layer defines how to render the 'last click'-location. By default, it will show a marker with the possibility to add a new point (if there are some presets) and/or to add a new note (if the 'note' layer attribute is set). If none are possible, this layer won't show up"},{if:"value=love_hotel",then:"love_hotel - A love hotel is a type of short-stay hotel found around the world operated primarily for the purpose of allowing guests privacy for sexual activities"},{if:"value=map",then:"map - A map, meant for tourists which is permanently installed in the public space"},{if:"value=maproulette",then:"maproulette - Layer showing all tasks in MapRoulette"},{if:"value=maproulette_challenge",then:"maproulette_challenge - Layer showing tasks of a single MapRoulette challenge. This layer is intended to be reused and extended in themes; refer to [the documentation](https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Integrating_Maproulette.md) on how to do this."},{if:"value=maxspeed",then:"maxspeed - Shows the allowed speed for every road"},{if:"value=memorial",then:"memorial - Layer showing memorial plaques, based upon a unofficial theme. Can be expanded to have multiple types of memorials later on"},{if:"value=mountain_rescue",then:"mountain_rescue - A building where first aid responders store material and might be on watch"},{if:"value=named_streets",then:"named_streets - Hidden layer with all streets which have a name. Useful to detect addresses"},{if:"value=nature_reserve",then:"nature_reserve - A nature reserve is an area where nature can take its course"},{if:"value=note",then:"note - This layer shows notes on OpenStreetMap. Having this layer in your theme will trigger the 'add new note' functionality in the 'addNewPoint'-popup (or if your theme has no presets, it'll enable adding notes)"},{if:"value=observation_tower",then:"observation_tower - Towers with a panoramic view"},{if:"value=osm_community_index",then:"osm_community_index - A layer showing the OpenStreetMap Communities"},{if:"value=parcel_lockers",then:"parcel_lockers - Layer showing parcel lockers for collecting and sending parcels."},{if:"value=parking",then:"parking - A layer showing car parkings"},{if:"value=parking_spaces",then:"parking_spaces - Layer showing individual parking spaces."},{if:"value=parking_ticket_machine",then:"parking_ticket_machine - Layer with parking ticket machines to pay for parking."},{if:"value=pedestrian_path",then:"pedestrian_path - Pedestrian footpaths, especially used for indoor navigation and snapping entrances to this layer"},{if:"value=pharmacy",then:"pharmacy - A layer showing pharmacies, which (probably) dispense prescription drugs"},{if:"value=physiotherapist",then:"physiotherapist - This layer shows physiotherapists"},{if:"value=picnic_table",then:"picnic_table - The layer showing picnic tables"},{if:"value=play_forest",then:"play_forest - Een speelbos is een vrij toegankelijke zone in een bos"},{if:"value=playground",then:"playground - Playgrounds"},{if:"value=postboxes",then:"postboxes - The layer showing postboxes."},{if:"value=postoffices",then:"postoffices - A layer showing post offices."},{if:"value=public_bookcase",then:"public_bookcase - A streetside cabinet with books, accessible to anyone"},{if:"value=questions",then:"questions - Special library layer which does not need a '.questions'-prefix before being imported"},{if:"value=railway_platforms",then:"railway_platforms - Find every platform in the station, and the train routes that use them."},{if:"value=rainbow_crossings",then:"rainbow_crossings - A layer showing pedestrian crossings with rainbow paintings"},{if:"value=range",then:"range - Meta-layer, simply showing a bbox in red"},{if:"value=reception_desk",then:"reception_desk - A layer showing where the reception desks are and which asks some accessibility information"},{if:"value=recycling",then:"recycling - A layer with recycling containers and centres"},{if:"value=route_marker",then:"route_marker - Route markers are small markers often found along official hiking/cycling/riding/skiing routes to indicate the direction of the route."},{if:"value=school",then:"school - Schools giving primary and secondary education and post-secondary, non-tertiary education. Note that this level of education does not imply an age of the pupiles"},{if:"value=selected_element",then:"selected_element - Highlights the currently selected element. Override this layer to have different colors"},{if:"value=shelter",then:"shelter - Layer showing shelter structures"},{if:"value=shops",then:"shops - A shop"},{if:"value=shower",then:"shower - A layer showing (public) showers"},{if:"value=ski_piste",then:"ski_piste - Ski and snowboard pistes"},{if:"value=slow_roads",then:"slow_roads - All carfree roads"},{if:"value=speed_camera",then:"speed_camera - Layer showing speed cameras"},{if:"value=speed_display",then:"speed_display - Layer showing speed displays that alert drivers of their speed."},{if:"value=split_point",then:"split_point - Layer rendering the little scissors for the minimap in the 'splitRoadWizard'"},{if:"value=split_road",then:"split_road - Layer rendering the way to split in the 'splitRoadWizard'. This one is used instead of the variable rendering by the themes themselves, as they might not always be very visible"},{if:"value=sport_pitch",then:"sport_pitch - A sport pitch"},{if:"value=sports_centre",then:"sports_centre - Indoor and outdoor sports centres can be found on this layer"},{if:"value=stairs",then:"stairs - Layer showing stairs and escalators"},{if:"value=street_lamps",then:"street_lamps - A layer showing street lights"},{if:"value=stripclub",then:"stripclub - A venue where erotic dance, striptease, or lap dances are performed commercially. "},{if:"value=surveillance_camera",then:"surveillance_camera - This layer shows surveillance cameras and allows a contributor to update information and add new cameras"},{if:"value=tertiary_education",then:"tertiary_education - Layer with all tertiary education institutes (ISCED:2011 levels 6,7 and 8)"},{if:"value=ticket_machine",then:"ticket_machine - Find ticket machines for public transport tickets"},{if:"value=ticket_validator",then:"ticket_validator - Find ticket validators to validate public transport tickets"},{if:"value=toilet",then:"toilet - A layer showing (public) toilets"},{if:"value=toilet_at_amenity",then:"toilet_at_amenity - A layer showing (public) toilets located at different places."},{if:"value=trail",then:"trail - Waymarked trails"},{if:"value=transit_routes",then:"transit_routes - Layer showing bus lines"},{if:"value=transit_stops",then:"transit_stops - Layer showing different types of transit stops."},{if:"value=tree_node",then:"tree_node - A layer showing trees"},{if:"value=trolley_bay",then:"trolley_bay - Find trolley bays for shopping trolleys."},{if:"value=unit",then:"unit - Library layer with all common units.  Units can _only_ be imported from this file."},{if:"value=usersettings",then:"usersettings - A special layer which is not meant to be shown on a map, but which is used to set user settings"},{if:"value=vending_machine",then:"vending_machine - Layer showing vending machines"},{if:"value=veterinary",then:"veterinary - A layer showing veterinarians"},{if:"value=viewpoint",then:"viewpoint - A nice viewpoint or nice view. Ideal to add an image if no other category fits"},{if:"value=village_green",then:"village_green - A layer showing village-green (which are communal green areas, but not quite parks)"},{if:"value=visitor_information_centre",then:"visitor_information_centre - A visitor center offers information about a specific attraction or place of interest where it is located."},{if:"value=walls_and_buildings",then:"walls_and_buildings - Special builtin layer providing all walls and buildings. This layer is useful in presets for objects which can be placed against walls (e.g. AEDs, postboxes, entrances, addresses, surveillance cameras, …). This layer is invisible by default and not toggleable by the user."},{if:"value=waste_basket",then:"waste_basket - This is a public waste basket, thrash can, where you can throw away your thrash."},{if:"value=waste_disposal",then:"waste_disposal - Waste Disposal Bin, medium to large bin for disposal of (household) waste"},{if:"value=windturbine",then:"windturbine - Modern windmills generating electricity"}]},type:"array",description:"If specified, these layers will be shown in the precise location picker  and the new point will be snapped towards it.\nFor example, this can be used to snap against `walls_and_buildings` (e.g. to attach a defibrillator, an entrance, an artwork, ... to the wall)\nor to snap an obstacle (such as a bollard) to the `cycleways_and_roads`."},{path:["layers","override","presets","maxSnapDistance"],required:!1,hints:{question:"What is the maximum distance in the location-input that a point can be moved to be snapped to a way?",ifunset:"Do not snap to a layer",inline:"a point is snapped if the location input is at most <b>{value}m</b> away from an object"},type:"number",description:`If specified, a new point will only be snapped if it is within this range.
If further away, it'll be placed in the center of the location input
Distance in meter`},{path:["layers","override","tagRenderings"],required:!1,hints:{typehint:"tagrendering[]",group:"tagrenderings",question:"Edit this way this attributed is displayed or queried"},type:[{description:`A QuestionableTagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
If the desired tags are missing and a question is defined, a question will be shown instead.`,type:"object",properties:{id:{type:"string"},mappings:{description:`Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes

question: What are common options?`,type:"array",items:{$ref:"#/definitions/MappingConfigJson"}},multiAnswer:{description:`If true, use checkboxes instead of radio buttons when asking the question

question: Should a contributor be allowed to select multiple mappings?

iftrue: allow to select multiple mappings
iffalse: only allow to select a single mapping
ifunset: only allow to select a single mapping`,type:"boolean"},freeform:{description:"Allow freeform text input from the user",type:"object",properties:{key:{description:`question: What is the name of the attribute that should be written to?
This is the OpenStreetMap-key that that value will be written to
ifunset: do not offer a freeform textfield as answer option`,type:"string"},type:{description:`question: What is the input type?
The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values
ifunset: use an unconstrained <b>string</b> as input (default)
suggestions: return validators.AllValidators.filter(type => !type.isMeta).map((type) => ({if: "value="+type.name, then: "<b>"+type.name+"</b> "+type.explanation.split("\\n")[0]}))`,type:"string"},placeholder:{description:`question: What placeholder text should be shown in the input-element if there is no input?
A (translated) text that is shown (as gray text) within the textfield
type: translation
group: expert`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},helperArgs:{description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'
group: expert`,type:"array",items:{}},addExtraTags:{description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'
group: expert`,type:"array",items:{type:"string"}},inline:{description:`question: Show the freeform as box within the question?
Instead of showing a full-width text field, the text field will be shown within the rendering of the question.

This combines badly with special input elements, as it'll distort the layout.
ifunset: show the freeform input field full-width
iftrue: show the freeform input field as a small field within the question
group: expert`,type:"boolean"},default:{description:`question: What value should be entered in the text field if no value is set?
This can help people to quickly enter the most common option
ifunset: do not prefill the textfield
group: expert`,type:"string"},invalidValues:{description:`question: What values of the freeform key should be interpreted as 'unknown'?
For example, if a feature has \`shop=yes\`, the question 'what type of shop is this?' should still asked
ifunset: The question will be considered answered if any value is set for the key
group: expert`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]}}},question:{description:`question: What question should be shown to the contributor?

A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well.

ifunset: This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},questionHint:{description:`question: Should some extra information be shown to the contributor, alongside the question?
This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like
ifunset: No extra hint is given`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},editButtonAriaLabel:{description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},labels:{description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer",type:"array",items:{type:"string"}},render:{description:`question: What text should be rendered?

This piece of text will be shown in the infobox.
In this text, values within braces (such as {braced(key)}) are replaced by the corresponding \`value\` in the object.
For example, if the object contains tags \`amenity=school; name=Windy Hill School\`, the render string \`This school is named {name}\` will be shown to the user as \`This school is named Windy Hill School\`

This text will be shown if:
- there is no mapping which matches (or there are no matches)
- no question, no mappings and no 'freeform' is set

Note that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as \`This is of type A &lt;br>&lt;img src='typeA-icon.svg' />\`
type: rendered
ifunset: No text is shown if no predefined options match.`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}]},icon:{description:`question: what icon should be shown next to the 'render' value?
An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value
Type: icon
ifunset: No additional icon is shown next to the always shown text`,anyOf:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}]},condition:{description:`question: When should this item be shown?
type: tag
ifunset: No specific condition set; always show this tagRendering or ask the question if unkown

Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.

This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`

A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},metacondition:{description:`question: When should this item be shown (including special conditions)?
type: tag

If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},description:{description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`,anyOf:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}]},classes:{description:`question: What css-classes should be applied to showing this attribute?

A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.

Values are split on \` \`  (space)`,type:"string"}},required:["id"],additionalProperties:!1},{type:"object",properties:{id:{type:"string"},builtin:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},override:{$ref:"#/definitions/Partial<QuestionableTagRenderingConfigJson>"}},required:["builtin","override"]},{allOf:[{$ref:"#/definitions/default<(string|QuestionableTagRenderingConfigJson|{builtin:string;override:Partial<QuestionableTagRenderingConfigJson>;})[]>"},{type:"object",properties:{id:{type:"string"}},required:["id"]}]},{type:"string"}],description:`A tag rendering is a block that either shows the known value or asks a question.
Refer to the class \`TagRenderingConfigJson\` to see the possibilities.
Note that we can also use a string here - where the string refers to a tag rendering defined in \`assets/questions/questions.json\`,
where a few very general questions are defined e.g. website, phone number, ...
Furthermore, _all_ the questions of another layer can be reused with \`otherlayer.*\`
If you need only a single of the tagRenderings, use \`otherlayer.tagrenderingId\`
If one or more questions have a 'group' or 'label' set, select all the entries with the corresponding group or label with \`otherlayer.*group\`
Remark: if a tagRendering is 'lent' from another layer, the 'source'-tags are copied and added as condition.
If they are not wanted, remove them with an override
A special value is 'questions', which indicates the location of the questions box. If not specified, it'll be appended to the bottom of the featureInfobox.
At last, one can define a group of renderings where parts of all strings will be replaced by multiple other strings.
This is mainly create questions for a 'left' and a 'right' side of the road.
These will be grouped and questions will be asked together`},{path:["layers","override","tagRenderings","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","tagRenderings","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","override","tagRenderings","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","override","tagRenderings","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","override","tagRenderings","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","override","tagRenderings","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","override","tagRenderings","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","override","tagRenderings","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","override","tagRenderings","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","override","tagRenderings","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","override","tagRenderings","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","override","tagRenderings","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","override","tagRenderings","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","override","tagRenderings","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","override","tagRenderings","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","tagRenderings","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","override","tagRenderings","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","override","tagRenderings","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","override","tagRenderings","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","override","tagRenderings","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","override","tagRenderings","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","override","tagRenderings","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","override","tagRenderings","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","override","tagRenderings","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","override","tagRenderings","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","override","tagRenderings","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","override","tagRenderings","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","override","tagRenderings","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","tagRenderings","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","tagRenderings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","tagRenderings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","tagRenderings","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","tagRenderings","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","tagRenderings","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","tagRenderings","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","tagRenderings","override","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","tagRenderings","override","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","override","tagRenderings","override","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","override","tagRenderings","override","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","override","tagRenderings","override","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","override","tagRenderings","override","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","override","tagRenderings","override","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","override","tagRenderings","override","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","override","tagRenderings","override","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","override","tagRenderings","override","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","override","tagRenderings","override","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","override","tagRenderings","override","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","override","tagRenderings","override","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","override","tagRenderings","override","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","override","tagRenderings","override","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","tagRenderings","override","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","override","tagRenderings","override","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","override","tagRenderings","override","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","override","tagRenderings","override","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","override","tagRenderings","override","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","override","tagRenderings","override","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","override","tagRenderings","override","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","override","tagRenderings","override","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","override","tagRenderings","override","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","override","tagRenderings","override","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","override","tagRenderings","override","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","override","tagRenderings","override","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","override","tagRenderings","override","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","tagRenderings","override","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","tagRenderings","override","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","tagRenderings","override","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","tagRenderings","override","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","tagRenderings","override","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","tagRenderings","override","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","override","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","tagRenderings","override","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","tagRenderings"],required:!1,hints:{},type:"object",description:`Rewrites and multiplies the given renderings of type T.
This can be used for introducing many similar questions automatically,
which also makes translations easier.
(Note that the key does _not_ need to be wrapped in {}.
However, we recommend to use them if the key is used in a translation, as missing keys will be picked up and warned for by the translation scripts)
For example:
\`\`\`
{
    rewrite: {
        sourceString: ["key", "a|b|c"],
        into: [
            ["X", 0]
            ["Y", 1],
            ["Z", 2]
        ],
        renderings: [{
            "key":"a|b|c"
        }]
    }
}
\`\`\`
will result in _three_ copies (as the values to rewrite into have three values, namely:
[
  {
  # The first pair: key --> X, a|b|c --> 0
      "X": 0
  },
  {
      "Y": 1
  },
  {
      "Z": 2
  }
]`},{path:["layers","override","tagRenderings","renderings","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","tagRenderings","renderings","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","override","tagRenderings","renderings","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","override","tagRenderings","renderings","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","override","tagRenderings","renderings","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","override","tagRenderings","renderings","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","override","tagRenderings","renderings","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","override","tagRenderings","renderings","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","override","tagRenderings","renderings","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","override","tagRenderings","renderings","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","override","tagRenderings","renderings","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","override","tagRenderings","renderings","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","override","tagRenderings","renderings","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","override","tagRenderings","renderings","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","override","tagRenderings","renderings","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","tagRenderings","renderings","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","override","tagRenderings","renderings","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","override","tagRenderings","renderings","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","override","tagRenderings","renderings","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","override","tagRenderings","renderings","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","override","tagRenderings","renderings","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","override","tagRenderings","renderings","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","override","tagRenderings","renderings","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","override","tagRenderings","renderings","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","override","tagRenderings","renderings","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","override","tagRenderings","renderings","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","override","tagRenderings","renderings","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","override","tagRenderings","renderings","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","tagRenderings","renderings","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","tagRenderings","renderings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","tagRenderings","renderings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","tagRenderings","renderings","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","tagRenderings","renderings","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","tagRenderings","renderings","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","tagRenderings","renderings","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","tagRenderings","renderings","override","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","tagRenderings","renderings","override","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","override","tagRenderings","renderings","override","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","override","tagRenderings","renderings","override","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","override","tagRenderings","renderings","override","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","override","tagRenderings","renderings","override","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","override","tagRenderings","renderings","override","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","override","tagRenderings","renderings","override","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","override","tagRenderings","renderings","override","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","override","tagRenderings","renderings","override","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","override","tagRenderings","renderings","override","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","override","tagRenderings","renderings","override","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","override","tagRenderings","renderings","override","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","override","tagRenderings","renderings","override","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","override","tagRenderings","renderings","override","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","tagRenderings","renderings","override","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","override","tagRenderings","renderings","override","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","override","tagRenderings","renderings","override","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","override","tagRenderings","renderings","override","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","override","tagRenderings","renderings","override","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","override","tagRenderings","renderings","override","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","override","tagRenderings","renderings","override","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","override","tagRenderings","renderings","override","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","override","tagRenderings","renderings","override","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","override","tagRenderings","renderings","override","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","override","tagRenderings","renderings","override","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","override","tagRenderings","renderings","override","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","override","tagRenderings","renderings","override","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","tagRenderings","renderings","override","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","tagRenderings","renderings","override","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","tagRenderings","renderings","override","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","tagRenderings","renderings","override","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","tagRenderings","renderings","override","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","tagRenderings","renderings","override","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","tagRenderings","renderings","override","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","tagRenderings","renderings","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","tagRenderings","renderings","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","override","tagRenderings","renderings","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","override","tagRenderings","renderings","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","override","tagRenderings","renderings","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","override","tagRenderings","renderings","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","override","tagRenderings","renderings","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","override","tagRenderings","renderings","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","override","tagRenderings","renderings","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","override","tagRenderings","renderings","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","override","tagRenderings","renderings","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","override","tagRenderings","renderings","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","override","tagRenderings","renderings","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","override","tagRenderings","renderings","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","override","tagRenderings","renderings","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","tagRenderings","renderings","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","override","tagRenderings","renderings","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","override","tagRenderings","renderings","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","override","tagRenderings","renderings","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","override","tagRenderings","renderings","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","override","tagRenderings","renderings","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","override","tagRenderings","renderings","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","override","tagRenderings","renderings","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","override","tagRenderings","renderings","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","override","tagRenderings","renderings","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","override","tagRenderings","renderings","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","override","tagRenderings","renderings","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","override","tagRenderings","renderings","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","tagRenderings","renderings","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","tagRenderings","renderings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","tagRenderings","renderings","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","tagRenderings","renderings","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","tagRenderings","renderings","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","tagRenderings","renderings","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","tagRenderings","renderings","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","tagRenderings","renderings","override","mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["layers","override","tagRenderings","renderings","override","mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["layers","override","tagRenderings","renderings","override","mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["layers","override","tagRenderings","renderings","override","mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["layers","override","tagRenderings","renderings","override","mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["layers","override","tagRenderings","renderings","override","mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["layers","override","tagRenderings","renderings","override","mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["layers","override","tagRenderings","renderings","override","mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["layers","override","tagRenderings","renderings","override","mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["layers","override","tagRenderings","renderings","override","mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["layers","override","tagRenderings","renderings","override","mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["layers","override","tagRenderings","renderings","override","mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["layers","override","tagRenderings","renderings","override","mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["layers","override","tagRenderings","renderings","override","multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["layers","override","tagRenderings","renderings","override","freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["layers","override","tagRenderings","renderings","override","freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["layers","override","tagRenderings","renderings","override","freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["layers","override","tagRenderings","renderings","override","freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["layers","override","tagRenderings","renderings","override","freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["layers","override","tagRenderings","renderings","override","freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["layers","override","tagRenderings","renderings","override","freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["layers","override","tagRenderings","renderings","override","freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["layers","override","tagRenderings","renderings","override","freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["layers","override","tagRenderings","renderings","override","freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["layers","override","tagRenderings","renderings","override","questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["layers","override","tagRenderings","renderings","override","editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["layers","override","tagRenderings","renderings","override","labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["layers","override","tagRenderings","renderings","override","render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["layers","override","tagRenderings","renderings","override","icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["layers","override","tagRenderings","renderings","override","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["layers","override","tagRenderings","renderings","override","icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["layers","override","tagRenderings","renderings","override","condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["layers","override","tagRenderings","renderings","override","condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["layers","override","tagRenderings","renderings","override","metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","tagRenderings","renderings","override","description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["layers","override","tagRenderings","renderings","override","classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`},{path:["layers","override","filter"],required:!1,hints:{group:"filters"},type:[{type:"array",items:{anyOf:[{$ref:"#/definitions/default_1"},{type:"string"}]}},{type:"object",properties:{sameAs:{type:"string"}},required:["sameAs"]}],description:"All the extra questions for filtering.\nIf a string is given, mapComplete will search in 'filters.json' for the appropriate filter or will try to parse it as `layername.filterid` and us that one"},{path:["layers","override","filter","id"],required:!0,hints:{},type:"string",description:"An id/name for this filter, used to set the URL parameters"},{path:["layers","override","filter","options"],required:!0,hints:{},type:"array",description:`The options for a filter
If there are multiple options these will be a list of radio buttons
If there is only one option this will be a checkbox
Filtering is done based on the given osmTags that are compared to the objects in that layer.
An example which searches by name:
\`\`\`
{
      "id": "shop-name",
      "options": [
        {
          "fields": [
            {
              "name": "search",
              "type": "string"
            }
          ],
          "osmTags": "name~i~.*{search}.*",
          "question": {
            "en": "Only show shops with name {search}",
          }
        }
      ]
    }
    \`\`\``},{path:["layers","override","filter","options","osmTags"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","filter","options","osmTags","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","filter","options","osmTags","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","filter","options","fields","name"],required:!0,hints:{},type:"string",description:'If name is `search`, use  "_first_comment~.*{search}.*" as osmTags'},{path:["layers","override","filter","#"],required:!1,hints:{},type:"string",description:'Used for comments or to disable a check\n"ignore-possible-duplicate": disables a check in `DetectDuplicateFilters` which complains that a filter can be replaced by a filter from the `filters`-library-layer'},{path:["layers","override","deletion"],required:!1,hints:{types:"Use an advanced delete configuration ; boolean",group:"editing",iftrue:"Allow deletion",iffalse:"Do not allow deletion",ifunset:"Do not allow deletion"},type:[{type:"object",properties:{neededChangesets:{description:`*
By default, the contributor needs 20 previous changesets to delete points edited by others.
For some small features (e.g. bicycle racks) this is too much and this requirement can be lowered or dropped, which can be done here.

type: nat
question: How many changesets must a contributor have before being allowed to delete a point?`,type:"number"},extraDeleteReasons:{description:`*
By default, three reasons to delete a point are shown:

- The point does not exist anymore
- The point was a testing point
- THe point could not be found

However, for some layers, there might be different or more specific reasons for deletion which can be user friendly to set, e.g.:

- the shop has closed
- the climbing route has been closed of for nature conservation reasons
- ...

These reasons can be stated here and will be shown in the list of options the user can choose from`,type:"array",items:{type:"object",properties:{explanation:{description:`The text that will be shown to the user as option for why this point does not exist anymore.
Note that the most common reasons (test point, does not exist anymore, cannot be found) are already offered by default

question: For what extra reason might this feature be removed in real-life?`},changesetMessage:{description:`The text that will be uploaded into the changeset or will be used in the fixme in case of a soft deletion
Should be a few words, in english

question: What should be added to the changeset as delete reason?`,type:"string"}},required:["changesetMessage","explanation"]}},nonDeleteMappings:{description:`In some cases, a (starting) contributor might wish to delete a feature even though deletion is not appropriate.
(The most relevant case are small paths running over private property. These should be marked as 'private' instead of deleted, as the community might trace the path again from aerial imagery, gettting us back to the original situation).

By adding a 'nonDeleteMapping', an option can be added into the list which will retag the feature.
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!`,type:"array",items:{type:"object",properties:{if:{$ref:"#/definitions/TagConfigJson",description:`The tags that will be given to the object.
This must remove tags so that the 'source/osmTags' won't match anymore

question: What tags should be applied to the object?`},then:{description:`The human explanation for the options

question: What text should be shown to the contributor for this reason?`}},required:["if","then"]}},softDeletionTags:{description:`In some cases, the contributor is not allowed to delete the current feature (e.g. because it isn't a point, the point is referenced by a relation or the user isn't experienced enough).
To still offer the user a 'delete'-option, the feature is retagged with these tags. This is a soft deletion, as the point isn't actually removed from OSM but rather marked as 'disused'
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!

Example (note that "amenity=" erases the 'amenity'-key alltogether):

\`\`\`
{
    "and": ["disussed:amenity=public_bookcase", "amenity="]
}
\`\`\`

or (notice the use of the ':='-tag to copy the old value of 'shop=*' into 'disused:shop='):

\`\`\`
{
    "and": ["disused:shop:={shop}", "shop="]
}
\`\`\`

question: If a hard delete is not possible, what tags should be applied to mark this feature as deleted?
type: tag`,anyOf:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}]},omitDefaultDeleteReasons:{description:`Set this flag if the default delete reasons should be omitted from the dialog.
This requires at least one extraDeleteReason or nonDeleteMapping

question: Should the default delete reasons be hidden?
iftrue: Hide the default delete reasons
iffalse: Show the default delete reasons
ifunset: Show the default delete reasons (default behaviour)`,anyOf:[{type:"array",items:{type:"string"}},{type:"boolean"}]}},additionalProperties:!1},{type:"boolean"}],description:`This block defines under what circumstances the delete dialog is shown for objects of this layer.
If set, a dialog is shown to the user to (soft) delete the point.
The dialog is built to be user friendly and to prevent mistakes.
If deletion is not possible, the dialog will hide itself and show the reason of non-deletability instead.
To configure, the following values are possible:
- false: never ever show the delete button
- true: show the default delete button
- undefined: use the mapcomplete default to show deletion or not. Currently, this is the same as 'false' but this will change in the future
- or: a hash with options (see below)
### The delete dialog
#### Hard deletion if enough experience
A feature can only be deleted from OpenStreetMap by mapcomplete if:
- It is a node
- No ways or relations use the node
- The logged-in user has enough experience OR the user is the only one to have edited the point previously
- The logged-in user has no unread messages (or has a ton of experience)
- The user did not select one of the 'non-delete-options' (see below)
In all other cases, a 'soft deletion' is used.
#### Soft deletion
A 'soft deletion' is when the point isn't deleted fromOSM but retagged so that it'll won't how up in the mapcomplete theme anymore.
This makes it look like it was deleted, without doing damage. A fixme will be added to the point.
Note that a soft deletion is _only_ possible if these tags are provided by the theme creator, as they'll be different for every theme
##### No-delete options
In some cases, the contributor might want to delete something for the wrong reason (e.g. someone who wants to have a path removed "because the path is on their private property").
However, the path exists in reality and should thus be on OSM - otherwise the next contributor will pass by and notice "hey, there is a path missing here! Let me redraw it in OSM!)
The correct approach is to retag the feature in such a way that it is semantically correct *and* that it doesn't show up on the theme anymore.
A no-delete option is offered as 'reason to delete it', but secretly retags.`},{path:["layers","override","deletion","neededChangesets"],required:!1,hints:{typehint:"nat",question:"How many changesets must a contributor have before being allowed to delete a point?"},type:"number",description:`*
By default, the contributor needs 20 previous changesets to delete points edited by others.
For some small features (e.g. bicycle racks) this is too much and this requirement can be lowered or dropped, which can be done here.`},{path:["layers","override","deletion","extraDeleteReasons"],required:!1,hints:{},type:"array",description:`*
By default, three reasons to delete a point are shown:
- The point does not exist anymore
- The point was a testing point
- THe point could not be found
However, for some layers, there might be different or more specific reasons for deletion which can be user friendly to set, e.g.:
- the shop has closed
- the climbing route has been closed of for nature conservation reasons
- ...
These reasons can be stated here and will be shown in the list of options the user can choose from`},{path:["layers","override","deletion","extraDeleteReasons","explanation"],required:!0,hints:{question:"For what extra reason might this feature be removed in real-life?"},description:`The text that will be shown to the user as option for why this point does not exist anymore.
Note that the most common reasons (test point, does not exist anymore, cannot be found) are already offered by default`},{path:["layers","override","deletion","extraDeleteReasons","changesetMessage"],required:!0,hints:{question:"What should be added to the changeset as delete reason?"},type:"string",description:`The text that will be uploaded into the changeset or will be used in the fixme in case of a soft deletion
Should be a few words, in english`},{path:["layers","override","deletion","nonDeleteMappings"],required:!1,hints:{},type:"array",description:`In some cases, a (starting) contributor might wish to delete a feature even though deletion is not appropriate.
(The most relevant case are small paths running over private property. These should be marked as 'private' instead of deleted, as the community might trace the path again from aerial imagery, gettting us back to the original situation).
By adding a 'nonDeleteMapping', an option can be added into the list which will retag the feature.
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!`},{path:["layers","override","deletion","nonDeleteMappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be applied to the object?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The tags that will be given to the object.
This must remove tags so that the 'source/osmTags' won't match anymore`},{path:["layers","override","deletion","nonDeleteMappings","then"],required:!0,hints:{question:"What text should be shown to the contributor for this reason?"},description:"The human explanation for the options"},{path:["layers","override","deletion","softDeletionTags"],required:!1,hints:{typehint:"tag",question:"If a hard delete is not possible, what tags should be applied to mark this feature as deleted?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`In some cases, the contributor is not allowed to delete the current feature (e.g. because it isn't a point, the point is referenced by a relation or the user isn't experienced enough).
To still offer the user a 'delete'-option, the feature is retagged with these tags. This is a soft deletion, as the point isn't actually removed from OSM but rather marked as 'disused'
It is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!
Example (note that "amenity=" erases the 'amenity'-key alltogether):
\`\`\`
{
    "and": ["disussed:amenity=public_bookcase", "amenity="]
}
\`\`\`
or (notice the use of the ':='-tag to copy the old value of 'shop=*' into 'disused:shop='):
\`\`\`
{
    "and": ["disused:shop:={shop}", "shop="]
}
\`\`\``},{path:["layers","override","deletion","softDeletionTags","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","deletion","softDeletionTags","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["layers","override","deletion","omitDefaultDeleteReasons"],required:!1,hints:{question:"Should the default delete reasons be hidden?",iftrue:"Hide the default delete reasons",iffalse:"Show the default delete reasons",ifunset:"Show the default delete reasons (default behaviour)"},type:[{type:"array",items:{type:"string"}},{type:"boolean"}],description:`Set this flag if the default delete reasons should be omitted from the dialog.
This requires at least one extraDeleteReason or nonDeleteMapping`},{path:["layers","override","allowMove"],required:!1,hints:{types:"use an advanced move configuration ; boolean",group:"editing",question:"Is deleting a point allowed?",iftrue:"Allow contributors to move a point (for accuracy or a relocation)",iffalse:"Don't allow contributors to move points",ifunset:"Don't allow contributors to move points (default)"},type:[{type:"object",properties:{enableImproveAccuracy:{description:`question: Should moving this type of point to improve the accuracy be allowed?
iftrue: This point can be moved to improve the accuracy
ifunset: (default) This point can be moved to improve the accuracy
iffalse: This point cannot be moved to improve the accuracy`,type:"boolean"},enableRelocation:{description:"question: Should moving this type of point due to a relocation be allowed?\n\nThis will erase the attributes `addr:street`, `addr:housenumber`, `addr:city` and `addr:postcode`\n\niftrue: This type of point can be moved due to a relocation (and will remove address information when this is done)\nifunset: (default) This type of point can be moved due to a relocation (and will remove address information when this is done)\niffalse: This type of point cannot be moved due to a relocation",type:"boolean"}},additionalProperties:!1},{type:"boolean"}],description:`Indicates if a point can be moved and why.
A feature can be moved by MapComplete if:
- It is a point
- The point is _not_ part of a way or a a relation.`},{path:["layers","override","allowMove","enableImproveAccuracy"],required:!1,hints:{question:"Should moving this type of point to improve the accuracy be allowed?",iftrue:"This point can be moved to improve the accuracy",iffalse:"This point cannot be moved to improve the accuracy",ifunset:"(default) This point can be moved to improve the accuracy"},type:"boolean",description:""},{path:["layers","override","allowMove","enableRelocation"],required:!1,hints:{question:"Should moving this type of point due to a relocation be allowed?",iftrue:"This type of point can be moved due to a relocation (and will remove address information when this is done)",iffalse:"This type of point cannot be moved due to a relocation",ifunset:"(default) This type of point can be moved due to a relocation (and will remove address information when this is done)"},type:"boolean",description:"This will erase the attributes `addr:street`, `addr:housenumber`, `addr:city` and `addr:postcode`"},{path:["layers","override","allowSplit"],required:!1,hints:{group:"editing",question:"Should the contributor be able to split ways using this layer?",iftrue:"enable the 'split-roads'-component",iffalse:"don't enable the split-roads component",ifunset:"don't enable the split-roads component"},type:"boolean",description:`If set, a 'split this way' button is shown on objects rendered as LineStrings, e.g. highways.
If the way is part of a relation, MapComplete will attempt to update this relation as well`},{path:["layers","override","units","quantity"],required:!1,hints:{},type:"string",description:"What is quantified? E.g. 'speed', 'length' (including width, diameter, ...), 'electric tension', 'electric current', 'duration'"},{path:["layers","override","units","appliesToKey"],required:!1,hints:{},type:"array",description:"Every key from this list will be normalized.\nTo render the value properly (with a human readable denomination), use `{canonical(<key>)}`"},{path:["layers","override","units","eraseInvalidValues"],required:!1,hints:{},type:"boolean",description:`If set, invalid values will be erased in the MC application (but not in OSM of course!)
Be careful with setting this`},{path:["layers","override","units","applicableUnits"],required:!0,hints:{},type:"array",description:`The possible denominations for this unit.
For length, denominations could be "meter", "kilometer", "miles", "foot"`},{path:["layers","override","units","applicableUnits","useIfNoUnitGiven"],required:!1,hints:{},type:[{type:"array",items:{type:"string"}},{type:"boolean"}],description:`If this evaluates to true and the value to interpret has _no_ unit given, assumes that this unit is meant.
Alternatively, a list of country codes can be given where this acts as the default interpretation
E.g., a denomination using "meter" would probably set this flag to "true";
a denomination for "mp/h" will use the condition "_country=gb" to indicate that it is the default in the UK.
If none of the units indicate that they are the default, the first denomination will be used instead`},{path:["layers","override","units","applicableUnits","canonicalDenomination"],required:!0,hints:{},type:"string",description:`The canonical value for this denomination which will be added to the value in OSM.
e.g. "m" for meters
If the user inputs '42', the canonical value will be added and it'll become '42m'.
Important: often, _no_ canonical values are expected, e.g. in the case of 'maxspeed' where 'km/h' is the default.
In this case, an empty string should be used`},{path:["layers","override","units","applicableUnits","canonicalDenominationSingular"],required:!1,hints:{},type:"string",description:"The canonical denomination in the case that the unit is precisely '1'.\nUsed for display purposes only.\nE.g.: for duration of something in minutes: `2 minutes` but `1 minute`; the `minute` goes here"},{path:["layers","override","units","applicableUnits","alternativeDenomination"],required:!1,hints:{},type:"array",description:"A list of alternative values which can occur in the OSM database - used for parsing.\nE.g.: while 'm' is canonical, `meter`, `mtrs`, ... can occur as well"},{path:["layers","override","units","applicableUnits","human"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`The value for humans in the dropdown. This should not use abbreviations and should be translated, e.g.
{
    "en": "meter",
    "fr": "metre"
}`},{path:["layers","override","units","applicableUnits","humanSingular"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`The value for humans in the dropdown. This should not use abbreviations and should be translated, e.g.
{
    "en": "minute",
    "nl": "minuut"
}`},{path:["layers","override","units","applicableUnits","prefix"],required:!1,hints:{},type:"boolean",description:`If set, then the canonical value will be prefixed instead, e.g. for '€'
Note that if all values use 'prefix', the dropdown might move to before the text field`},{path:["layers","override","units","applicableUnits","addSpace"],required:!1,hints:{},type:"boolean",description:"If set, add a space between the quantity and the denomination.\nE.g.: `50 mph` instad of `50mph`"},{path:["layers","override","units","defaultInput"],required:!1,hints:{},type:"string",description:`In some cases, the default denomination is not the most user friendly to input.
E.g., when measuring kerb heights, it is illogical to ask contributors to input an amount in meters.
When a default input method should be used, this can be specified by setting the canonical denomination here, e.g.
\`defaultInput: "cm"\`. This must be a denomination which appears in the applicableUnits`},{path:["layers","override","syncSelection"],required:!1,hints:{group:"advanced",question:"Should enabling/disabling the layer be saved (locally or in the cloud)?",suggestions:[{if:"value=no",then:"Don't save, always revert to the default"},{if:"value=local",then:"Save selection in local storage"},{if:"value=theme-only",then:"Save the state in the OSM-usersettings, but apply on this theme only (default)"},{if:"value=global",then:"Save in OSM-usersettings and toggle on _all_ themes using this layer"}]},type:"string",description:"If set, synchronizes whether or not this layer is enabled."},{path:["layers","override","#"],required:!1,hints:{group:"hidden"},type:"string",description:`Used for comments and/or to disable some checks
no-question-hint-check: disables a check in MiscTagRenderingChecks which complains about 'div', 'span' or 'class=subtle'-HTML elements in the tagRendering`},{path:["layers","override","fullNodeDatabase"],required:!1,hints:{group:"hidden"},type:"boolean",description:"_Set automatically by MapComplete, please ignore_"},{path:["layers","hideTagRenderingsWithLabels"],required:!1,hints:{},type:"array",description:`TagRenderings with any of these labels will be removed from the layer.
Note that the 'id' and 'group' are considered labels too`},{path:["overrideAll"],required:!1,hints:{},type:"object",description:`An override applied on all layers of the theme.
E.g.: if there are two layers defined:
\`\`\`
"layers":[
 {"title": ..., "tagRenderings": [...], "osmSource":{"tags": ...}},
 {"title", ..., "tagRenderings", [...], "osmSource":{"tags" ...}}
]
\`\`\`
and overrideAll is specified:
\`\`\`
"overrideAll": {
    "osmSource":{"geoJsonSource":"xyz"}
}
then the result will be that all the layers will have these properties applied and result in:
"layers":[
 {"title": ..., "tagRenderings": [...], "osmSource":{"tags": ..., "geoJsonSource":"xyz"}},
 {"title", ..., "tagRenderings", [...], "osmSource":{"tags" ..., "geoJsonSource":"xyz"}}
]
\`\`\`
If the overrideAll contains a list where the keys starts with a plus, the values will be appended (instead of discarding the old list), for example
"overrideAll": {
  "+tagRenderings": [ { ... some tagrendering ... }]
}
In the above scenario, \`sometagrendering\` will be added at the beginning of the tagrenderings of every layer`},{path:["tileLayerSources"],required:!1,hints:{},type:"array",description:"Define some (overlay) slippy map tilesources"},{path:["tileLayerSources","name"],required:!0,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"The name of the imagery source"},{path:["customCss"],required:!1,hints:{group:"advanced"},type:"string",description:"The URL of a custom CSS stylesheet to modify the layout"},{path:["lockLocation"],required:!1,hints:{},type:[{type:"array",items:[{type:"array",items:[{type:"number"},{type:"number"}],minItems:2,maxItems:2},{type:"array",items:[{type:"number"},{type:"number"}],minItems:2,maxItems:2}],minItems:2,maxItems:2},{type:"array",items:{type:"array",items:{type:"number"}}}],description:`If set to true, the basemap will not scroll outside of the area visible on initial zoom.
If set to [[lon, lat], [lon, lat]], the map will not scroll outside of those bounds.
Off by default, which will enable panning to the entire world`},{path:["enableUserBadge"],required:!1,hints:{group:"feature_switches",question:"Should a user be able to login with OpenStreetMap?",iftrue:"Enable the possiblity to login with OpenStreetMap",iffalse:"Do not enable to login with OpenStreetMap, have a read-only view of MapComplete.",ifunset:"Enable the possiblity to login with OpenStreetMap (default)"},type:"boolean",description:`If not logged in, will not show the login buttons and hide all the editable elements.
As such, MapComplete will become read-only and a purely visualisation tool.`},{path:["enableShareScreen"],required:!1,hints:{group:"feature_switches",question:"Should the tab with options to share the current screen be enabled?",iftrue:"Enable the share screen",iffalse:"Do not enable the share screen",ifunset:"Enable the sharescreen (default)"},type:"boolean",description:"On can get the iFrame embed code here"},{path:["enableMoreQuests"],required:!1,hints:{group:"feature_switches",question:"Should the user be able to switch to different themes?",iftrue:"enable to go back to the index page showing all themes",iffalse:"do not enable to go back to the index page showing all themes; hide the 'more themes' buttons",ifunset:"mapcomplete default: enable to go back to the index page showing all themes"},type:"boolean",description:"Typically enabled in iframes and/or on commisioned themes"},{path:["enableLayers"],required:!1,hints:{group:"feature_switches",question:"Should the user be able to enable/disable layers and to filter the layers?",iftrue:"enable the filters/layers pane",iffalse:"do not enable to filter or to disable layers; hide the 'filter' tab from the overview and the button at the bottom-left",ifunset:"mapcomplete default: enable to filter or to enable/disable layers"},type:"boolean",description:"The corresponding URL-parameter is 'fs-filters' instead of 'fs-layers'"},{path:["enableSearch"],required:!1,hints:{group:"feature_switches",question:"Should the user be able to search for locations?",iftrue:"Allow to search",iffalse:"Do not allow to search; hide the search-bar",ifunset:"MapComplete default: allow to search"},type:"boolean",description:""},{path:["enableAddNewPoints"],required:!1,hints:{group:"feature_switches",question:"Should the user be able to add new points?",iftrue:"Allow to create new points",iffalse:"Do not allow to create new points, even if the layers in this theme support creating new points",ifunset:"MapComplete default: allow to create new points"},type:"boolean",description:`Adding new points is only possible if the loaded layers have presets set.
Some layers do not have presets. If the theme only has layers without presets, then adding new points will not be possible.`},{path:["enableGeolocation"],required:!1,hints:{group:"feature_switches",question:"Should the user be able to use their GPS to geolocate themselfes on the map?",iftrue:"Allow to use the GPS",iffalse:"Do not allow to use the GPS, hide the geolocation-buttons",ifunset:"MapComplete default: allow to use the GPS"},type:"boolean",description:""},{path:["enableBackgroundLayerSelection"],required:!1,hints:{group:"feature_switches",question:"Should the user be able to switch the background layer?",iftrue:"Allow to switch the background layer",iffalse:"Do not allow to switch the background layer",ifunset:"MapComplete default: Allow to switch the background layer"},type:"boolean",description:`Enable switching the backgroundlayer.
If false, the quickswitch-buttons are removed (bottom left) and the dropdown in the layer selection is removed as well`},{path:["enableShowAllQuestions"],required:!1,hints:{group:"feature_switches",question:"Should the questions about a feature be presented one by one or all at once?",iftrue:"Show all unanswered questions at the same time",iffalse:"Show unanswered questions one by one",ifunset:"MapComplete default: Use the preference of the user to show questions at the same time or one by one"},type:"boolean",description:""},{path:["enableDownload"],required:!1,hints:{group:"feature_switches",question:"Should the 'download as CSV'- and 'download as Geojson'-buttons be enabled?",iftrue:"Enable the option to download the map as CSV and GeoJson",iffalse:"Enable the option to download the map as CSV and GeoJson",ifunset:"MapComplete default: Enable the option to download the map as CSV and GeoJson"},type:"boolean",description:""},{path:["enablePdfDownload"],required:!1,hints:{group:"feature_switches",question:"Should the 'download as PDF'-button be enabled?",iftrue:"Enable the option to download the map as PDF",iffalse:"Enable the option to download the map as PDF",ifunset:"MapComplete default: Enable the option to download the map as PDF"},type:"boolean",description:""},{path:["enableNoteImports"],required:!1,hints:{group:"advanced",question:"Should the 'notes' from OpenStreetMap be loaded and parsed for import helper notes?",iftrue:"Load notes and show import notes",iffalse:"Do not load import notes",ifunset:"MapComplete default: do not load import notes for sideloaded themes but do load them for official themes"},type:"boolean",description:`If true, notes will be loaded and parsed. If a note is an import (as created by the import_helper.html-tool from mapcomplete),
these notes will be shown if a relevant layer is present.`},{path:["enableTerrain"],required:!1,hints:{group:"advanced",question:"Should the map use elevation data to give a 3D-feel?",iftrue:"Use elevation and render 3D",iffalse:"Do not use terrain"},type:"boolean",description:`This is especially useful for hiking maps, skiing maps etc...
funset: MapComplete default: don't use terrain`},{path:["overpassUrl"],required:!1,hints:{group:"advanced",question:"What overpass-api instance should be used for this layout?",ifunset:"Use the default, builtin collection of overpass instances"},type:"array",description:""},{path:["overpassTimeout"],required:!1,hints:{typehint:"pnat",group:"advanced",question:"After how much seconds should the overpass-query stop?",ifunset:"use the default amount of 30 seconds as timeout"},type:"number",description:`If a query takes too long, the overpass-server will abort.
Once can set the amount of time before overpass gives up here.`},{path:["widenFactor"],required:!1,hints:{},type:"number",description:`When a query is run, the data within bounds of the visible map is loaded.
However, users tend to pan and zoom a lot. It is pretty annoying if every single pan means a reloading of the data.
For this, the bounds are widened in order to make a small pan still within bounds of the loaded data.
IF widenfactor is 1, this feature is disabled. A recommended value is between 1 and 3`},{path:["overpassMaxZoom"],required:!1,hints:{},type:"number",description:`At low zoom levels, overpass is used to query features.
At high zoom level, the OSM api is used to fetch one or more BBOX aligning with a slippy tile.
The overpassMaxZoom controls the flipoverpoint: if the zoom is this or lower, overpass is used.`},{path:["osmApiTileSize"],required:!1,hints:{default:"overpassMaxZoom + 1"},type:"number",description:`When the OSM-api is used to fetch features, it does so in a tiled fashion.
These tiles are using a ceratin zoom level, that can be controlled here`},{path:["enableNodeDatabase"],required:!1,hints:{group:"hidden"},type:"boolean",description:`Enables tracking of all nodes when data is loaded.
This is useful for the 'ImportWay' and 'ConflateWay'-buttons who need this database.
Note: this flag will be automatically set and can thus be ignored.`}],t1=[{path:[],required:!1,hints:{},type:"object",description:`A QuestionableTagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.
If the desired tags are missing and a question is defined, a question will be shown instead.`},{path:["mappings"],required:!1,hints:{question:"What are common options?"},type:"array",description:"Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"},{path:["mappings","if"],required:!0,hints:{typehint:"tag",question:"What tags should be matched to show this option?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:"If in 'question'-mode and the contributor selects this option, these tags will be applied to the object"},{path:["mappings","then"],required:!0,hints:{typehint:"rendered",question:"What corresponding text should be shown?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"Shown if the `if` is fulfilled"},{path:["mappings","icon"],required:!1,hints:{typehint:"icon",question:"What icon should be shown next to this mapping?",ifunset:"Show no icon"},type:[{type:"object",properties:{path:{description:`The path to the  icon
Type: icon`,type:"string"},class:{description:"Size of the image",type:"string"}},required:["path"]},{type:"string"}],description:"This icon will only be shown if the value is known, it is not displayed in the options (but might be in the future)"},{path:["mappings","icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the  icon"},{path:["mappings","icon","class"],required:!1,hints:{},type:"string",description:"Size of the image"},{path:["mappings","hideInAnswer"],required:!1,hints:{typehint:"tag",question:"Under what circumstances should this mapping be <b>hidden</b> from the possibilities a contributor can pick?",iftrue:"Never show this mapping as option to pick",ifunset:"Always show this mapping as option to pick"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:["string","boolean"]}],description:`In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).
In the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.
In this case, one of the mappings can be hiden by setting this flag.
To demonstrate an example making a default assumption:
mappings: [
 {
     if: "access=", -- no access tag present, we assume accessible
     then: "Accessible to the general public",
     hideInAnswer: true
 },
 {
     if: "access=yes",
     then: "Accessible to the general public", -- the user selected this, we add that to OSM
 },
 {
     if: "access=no",
     then: "Not accessible to the public"
 }
]
For example, for an operator, we have \`operator=Agentschap Natuur en Bos\`, which is often abbreviated to \`operator=ANB\`.
Then, we would add two mappings:
{
    if: "operator=Agentschap Natuur en Bos" -- the non-abbreviated version which should be uploaded
    then: "Maintained by Agentschap Natuur en Bos"
},
{
    if: "operator=ANB", -- we don't want to upload abbreviations
    then: "Maintained by Agentschap Natuur en Bos"
    hideInAnswer: true
}
Hide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.
Keep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch
e.g., for toilets: if "wheelchair=no", we know there is no wheelchair dedicated room.
For the location of the changing table, the option "in the wheelchair accessible toilet is weird", so we write:
{
    "question": "Where is the changing table located?"
    "mappings": [
        {"if":"changing_table:location=female","then":"In the female restroom"},
       {"if":"changing_table:location=male","then":"In the male restroom"},
       {"if":"changing_table:location=wheelchair","then":"In the wheelchair accessible restroom", "hideInAnswer": "wheelchair=no"},
    ]
}
Also have a look for the meta-tags
{
    if: "operator=Agentschap Natuur en Bos",
    then: "Maintained by Agentschap Natuur en Bos",
    hideInAnswer: "_country!=be"
}`},{path:["mappings","hideInAnswer","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","hideInAnswer","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","alsoShowIf"],required:!1,hints:{question:"In what other cases should this item be rendered?",ifunset:"No other cases when this text is shown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Also show this 'then'-option if the feature matches these tags.
Ideal for outdated tags or default assumptions. The tags from this options will <b>not</b> be set if the option is chosen!`},{path:["mappings","alsoShowIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","alsoShowIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","ifnot"],required:!1,hints:{question:"What tags should be applied if this mapping is _not_ chosen?",ifunset:"Do not apply a tag if a different mapping is chosen."},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"},{path:["mappings","ifnot","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","ifnot","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","addExtraTags"],required:!1,hints:{typehint:"simple_tag",question:"What extra tags should be added to the object if this object is chosen?"},type:"array",description:`If chosen as answer, these tags will be applied onto the object, together with the tags from the \`if\`
Not compatible with multiAnswer.
This can be used e.g. to erase other keys which indicate the 'not' value:
\`\`\`json
{
    "if": "crossing:marking=rainbow",
    "then": "This is a rainbow crossing",
    "addExtraTags": ["not:crossing:marking="]
}
\`\`\``},{path:["mappings","searchTerms"],required:!1,hints:{group:"hidden",question:"If there are many options, what search terms match too?"},type:"object",description:`If there are many options, the mappings-radiobuttons will be replaced by an element with a searchfunction
Searchterms (per language) allow to easily find an option if there are many options`},{path:["mappings","priorityIf"],required:!1,hints:{group:"hidden"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden
Use this sparingly`},{path:["mappings","priorityIf","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","priorityIf","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["mappings","#"],required:!1,hints:{group:"hidden"},type:"string",description:"Used for comments or to disable a validation\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"},{path:["multiAnswer"],required:!1,hints:{question:"Should a contributor be allowed to select multiple mappings?",iftrue:"allow to select multiple mappings",iffalse:"only allow to select a single mapping",ifunset:"only allow to select a single mapping"},type:"boolean",description:"If true, use checkboxes instead of radio buttons when asking the question"},{path:["freeform"],required:!1,hints:{},type:"object",description:"Allow freeform text input from the user"},{path:["freeform","key"],required:!1,hints:{question:"What is the name of the attribute that should be written to?",ifunset:"do not offer a freeform textfield as answer option"},type:"string",description:"This is the OpenStreetMap-key that that value will be written to"},{path:["freeform","type"],required:!1,hints:{question:"What is the input type?",ifunset:"use an unconstrained <b>string</b> as input (default)",suggestions:[{if:"value=string",then:"<b>string</b> A simple piece of text"},{if:"value=text",then:"<b>text</b> A longer piece of text. Uses an textArea instead of a textField"},{if:"value=date",then:"<b>date</b> A date with date picker"},{if:"value=nat",then:"<b>nat</b> A  whole, positive number or zero"},{if:"value=int",then:"<b>int</b> A whole number, either positive, negative or zero"},{if:"value=distance",then:'<b>distance</b> A geographical distance in meters (rounded at two points). Will give an extra minimap with a measurement tool. Arguments: [ zoomlevel, preferredBackgroundMapType (comma separated) ], e.g. `["21", "map,photo"]'},{if:"value=direction",then:"<b>direction</b> A geographical direction, in degrees. 0° is north, 90° is east, ... Will return a value between 0 (incl) and 360 (excl)."},{if:"value=wikidata",then:"<b>wikidata</b> A wikidata identifier, e.g. Q42. "},{if:"value=pnat",then:"<b>pnat</b> A strict positive number"},{if:"value=float",then:"<b>float</b> A decimal number"},{if:"value=pfloat",then:"<b>pfloat</b> A positive decimal number or zero"},{if:"value=email",then:"<b>email</b> An email adress"},{if:"value=url",then:"<b>url</b> The validatedTextField will format URLs to always be valid and have a https://-header (even though the 'https'-part will be hidden from the user. Furthermore, some tracking parameters will be removed"},{if:"value=phone",then:"<b>phone</b> A phone number"},{if:"value=opening_hours",then:"<b>opening_hours</b> Has extra elements to easily input when a POI is opened. "},{if:"value=color",then:"<b>color</b> Shows a color picker"},{if:"value=icon",then:"<b>icon</b> Makes sure that a valid .svg-path is added"},{if:"value=fediverse",then:"<b>fediverse</b> Validates fediverse addresses and normalizes them into `@username@server`-format"},{if:"value=id",then:"<b>id</b> Checks for valid identifiers for layers, will automatically replace spaces and uppercase"},{if:"value=slope",then:"<b>slope</b> Validates that the slope is a valid number.The accompanying input element uses the gyroscope and the compass to determine the correct incline. The sign of the incline will be set automatically. The bearing of the way is compared to the bearing of the compass, as such, the device knows if it is measuring in the forward or backward direction."},{if:"value=velopark",then:"<b>velopark</b> A custom element to allow copy-pasting velopark-pages"}]},type:"string",description:`The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...
See Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values`},{path:["freeform","placeholder"],required:!1,hints:{typehint:"translation",group:"expert",question:"What placeholder text should be shown in the input-element if there is no input?"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A (translated) text that is shown (as gray text) within the textfield"},{path:["freeform","helperArgs"],required:!1,hints:{group:"expert"},type:"array",description:`Extra parameters to initialize the input helper arguments.
For semantics, see the 'SpecialInputElements.md'`},{path:["freeform","addExtraTags"],required:!1,hints:{group:"expert"},type:"array",description:`If a value is added with the textfield, these extra tag is addded.
Useful to add a 'fixme=freeform textfield used - to be checked'`},{path:["freeform","inline"],required:!1,hints:{group:"expert",question:"Show the freeform as box within the question?",iftrue:"show the freeform input field as a small field within the question",ifunset:"show the freeform input field full-width"},type:"boolean",description:`Instead of showing a full-width text field, the text field will be shown within the rendering of the question.
This combines badly with special input elements, as it'll distort the layout.`},{path:["freeform","default"],required:!1,hints:{group:"expert",question:"What value should be entered in the text field if no value is set?",ifunset:"do not prefill the textfield"},type:"string",description:"This can help people to quickly enter the most common option"},{path:["freeform","invalidValues"],required:!1,hints:{group:"expert",question:"What values of the freeform key should be interpreted as 'unknown'?",ifunset:"The question will be considered answered if any value is set for the key"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:"For example, if a feature has `shop=yes`, the question 'what type of shop is this?' should still asked"},{path:["freeform","invalidValues","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["freeform","invalidValues","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["question"],required:!1,hints:{question:"What question should be shown to the contributor?",ifunset:"This tagrendering will be shown if it is known, but cannot be edited by the contributor, effectively resutling in a read-only rendering"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:"A question is presented ot the user if no mapping matches and the 'freeform' key is not set as well."},{path:["questionHint"],required:!1,hints:{question:"Should some extra information be shown to the contributor, alongside the question?",ifunset:"No extra hint is given"},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`This hint is shown in subtle text under the question.
This can give some extra information on what the answer should ook like`},{path:["editButtonAriaLabel"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`When using a screenreader and selecting the 'edit' button, the current rendered value is read aloud in normal circumstances.
In some rare cases, this is not desirable. For example, if the rendered value is a link to a website, this link can be selected (and will be read aloud).
If the user presses _tab_ again, they'll select the button and have the link read aloud a second time.`},{path:["labels"],required:!1,hints:{},type:"array",description:"A list of labels. These are strings that are used for various purposes, e.g. to only include a subset of the tagRenderings when reusing a layer"},{path:["render"],required:!1,hints:{typehint:"rendered",question:"What text should be rendered?",ifunset:"No text is shown if no predefined options match."},type:[{$ref:"#/definitions/Record<string,string>"},{type:"object",properties:{special:{allOf:[{$ref:"#/definitions/Record<string,string|Record<string,string>>"},{type:"object",properties:{type:{type:"string"}},required:["type"]}]}},required:["special"]},{type:"string"}],description:"This piece of text will be shown in the infobox.\nIn this text, values within braces (such as {braced(key)}) are replaced by the corresponding `value` in the object.\nFor example, if the object contains tags `amenity=school; name=Windy Hill School`, the render string `This school is named {name}` will be shown to the user as `This school is named Windy Hill School`\nThis text will be shown if:\n- there is no mapping which matches (or there are no matches)\n- no question, no mappings and no 'freeform' is set\nNote that this is a HTML-interpreted value, so you can add links as e.g. '&lt;a href='{website}'>{website}&lt;/a>' or include images such as `This is of type A &lt;br>&lt;img src='typeA-icon.svg' />`"},{path:["icon"],required:!1,hints:{typehint:"icon",question:"what icon should be shown next to the 'render' value?",ifunset:"No additional icon is shown next to the always shown text"},type:[{type:"object",properties:{path:{description:`The path to the icon
Type: icon`,type:"string"},class:{description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`,type:"string"}},required:["path"]},{type:"string"}],description:`An icon shown next to the rendering; typically shown pretty small
This is only shown next to the "render" value`},{path:["icon","path"],required:!0,hints:{typehint:"icon"},type:"string",description:"The path to the icon"},{path:["icon","class"],required:!1,hints:{},type:"string",description:`A hint to mapcomplete on how to render this icon within the mapping.
This is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)`},{path:["condition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown?",ifunset:"No specific condition set; always show this tagRendering or ask the question if unkown"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as \`condition\`.
This is useful to ask a follow-up question.
For example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.
This can be done by adding \`"condition": "changing_table=yes"\`
A full example would be:
\`\`\`json
    {
      "question": "Where is the changing table located?",
      "render": "The changing table is located at {changing_table:location}",
      "condition": "changing_table=yes",
      "freeform": {
        "key": "changing_table:location",
        "inline": true
      },
      "mappings": [
        {
          "then": "The changing table is in the toilet for women.",
          "if": "changing_table:location=female_toilet"
        },
        {
          "then": "The changing table is in the toilet for men.",
          "if": "changing_table:location=male_toilet"
        },
        {
          "if": "changing_table:location=wheelchair_toilet",
          "then": "The changing table is in the toilet for wheelchair users.",
        },
        {
          "if": "changing_table:location=dedicated_room",
          "then": "The changing table is in a dedicated room. ",
        }
      ],
      "id": "toilet-changing_table:location"
    },
\`\`\``},{path:["condition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["condition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["metacondition"],required:!1,hints:{typehint:"tag",question:"When should this item be shown (including special conditions)?"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{$ref:"#/definitions/{or:TagConfigJson[];}"},{type:"string"}],description:`If set, this tag will be evaluated agains the _usersettings/application state_ table.
Enable 'show debug info' in user settings to see available options.
Note that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_`},{path:["metacondition","and"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["metacondition","or"],required:!1,hints:{typehint:"tag"},type:[{$ref:"#/definitions/{and:TagConfigJson[];}"},{type:"object",properties:{or:{type:"array",items:{$ref:"#/definitions/TagConfigJson"}}},required:["or"]},{type:"string"}],description:`The main representation of Tags.
See https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation`},{path:["description"],required:!1,hints:{},type:[{$ref:"#/definitions/Record<string,string>"},{type:"string"}],description:`A human-readable text explaining what this tagRendering does.
Mostly used for the shared tagrenderings`},{path:["classes"],required:!1,hints:{question:"What css-classes should be applied to showing this attribute?"},type:"string",description:`A list of css-classes to apply to the entire tagRendering.
These classes are applied in 'answer'-mode, not in question mode
This is only for advanced users.
Values are split on \` \`  (space)`}];var Wi={},Cc={},Wl={},Gh={exports:{}};/*! https://mths.be/he v1.2.0 by @mathias | MIT license */Gh.exports;(function(i,e){(function(t){var n=e,r=i&&i.exports==n&&i,s=typeof ue=="object"&&ue;(s.global===s||s.window===s)&&(t=s);var o=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,l=/[\x01-\x7F]/g,u=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,c=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,p={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","	":"Tab","\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",'"':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon","ˆ":"circ","ˇ":"caron","°":"deg","©":"copy","®":"reg","℗":"copysr","℘":"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78","𝒶":"ascr","𝕒":"aopf","𝔞":"afr","𝔸":"Aopf","𝔄":"Afr","𝒜":"Ascr",ª:"ordf",á:"aacute",Á:"Aacute",à:"agrave",À:"Agrave",ă:"abreve",Ă:"Abreve",â:"acirc",Â:"Acirc",å:"aring",Å:"angst",ä:"auml",Ä:"Auml",ã:"atilde",Ã:"Atilde",ą:"aogon",Ą:"Aogon",ā:"amacr",Ā:"Amacr",æ:"aelig",Æ:"AElig","𝒷":"bscr","𝕓":"bopf","𝔟":"bfr","𝔹":"Bopf",ℬ:"Bscr","𝔅":"Bfr","𝔠":"cfr","𝒸":"cscr","𝕔":"copf",ℭ:"Cfr","𝒞":"Cscr",ℂ:"Copf",ć:"cacute",Ć:"Cacute",ĉ:"ccirc",Ĉ:"Ccirc",č:"ccaron",Č:"Ccaron",ċ:"cdot",Ċ:"Cdot",ç:"ccedil",Ç:"Ccedil","℅":"incare","𝔡":"dfr","ⅆ":"dd","𝕕":"dopf","𝒹":"dscr","𝒟":"Dscr","𝔇":"Dfr","ⅅ":"DD","𝔻":"Dopf",ď:"dcaron",Ď:"Dcaron",đ:"dstrok",Đ:"Dstrok",ð:"eth",Ð:"ETH","ⅇ":"ee",ℯ:"escr","𝔢":"efr","𝕖":"eopf",ℰ:"Escr","𝔈":"Efr","𝔼":"Eopf",é:"eacute",É:"Eacute",è:"egrave",È:"Egrave",ê:"ecirc",Ê:"Ecirc",ě:"ecaron",Ě:"Ecaron",ë:"euml",Ë:"Euml",ė:"edot",Ė:"Edot",ę:"eogon",Ę:"Eogon",ē:"emacr",Ē:"Emacr","𝔣":"ffr","𝕗":"fopf","𝒻":"fscr","𝔉":"Ffr","𝔽":"Fopf",ℱ:"Fscr",ﬀ:"fflig",ﬃ:"ffilig",ﬄ:"ffllig",ﬁ:"filig",fj:"fjlig",ﬂ:"fllig",ƒ:"fnof",ℊ:"gscr","𝕘":"gopf","𝔤":"gfr","𝒢":"Gscr","𝔾":"Gopf","𝔊":"Gfr",ǵ:"gacute",ğ:"gbreve",Ğ:"Gbreve",ĝ:"gcirc",Ĝ:"Gcirc",ġ:"gdot",Ġ:"Gdot",Ģ:"Gcedil","𝔥":"hfr",ℎ:"planckh","𝒽":"hscr","𝕙":"hopf",ℋ:"Hscr",ℌ:"Hfr",ℍ:"Hopf",ĥ:"hcirc",Ĥ:"Hcirc",ℏ:"hbar",ħ:"hstrok",Ħ:"Hstrok","𝕚":"iopf","𝔦":"ifr","𝒾":"iscr","ⅈ":"ii","𝕀":"Iopf",ℐ:"Iscr",ℑ:"Im",í:"iacute",Í:"Iacute",ì:"igrave",Ì:"Igrave",î:"icirc",Î:"Icirc",ï:"iuml",Ï:"Iuml",ĩ:"itilde",Ĩ:"Itilde",İ:"Idot",į:"iogon",Į:"Iogon",ī:"imacr",Ī:"Imacr",ĳ:"ijlig",Ĳ:"IJlig",ı:"imath","𝒿":"jscr","𝕛":"jopf","𝔧":"jfr","𝒥":"Jscr","𝔍":"Jfr","𝕁":"Jopf",ĵ:"jcirc",Ĵ:"Jcirc","ȷ":"jmath","𝕜":"kopf","𝓀":"kscr","𝔨":"kfr","𝒦":"Kscr","𝕂":"Kopf","𝔎":"Kfr",ķ:"kcedil",Ķ:"Kcedil","𝔩":"lfr","𝓁":"lscr",ℓ:"ell","𝕝":"lopf",ℒ:"Lscr","𝔏":"Lfr","𝕃":"Lopf",ĺ:"lacute",Ĺ:"Lacute",ľ:"lcaron",Ľ:"Lcaron",ļ:"lcedil",Ļ:"Lcedil",ł:"lstrok",Ł:"Lstrok",ŀ:"lmidot",Ŀ:"Lmidot","𝔪":"mfr","𝕞":"mopf","𝓂":"mscr","𝔐":"Mfr","𝕄":"Mopf",ℳ:"Mscr","𝔫":"nfr","𝕟":"nopf","𝓃":"nscr",ℕ:"Nopf","𝒩":"Nscr","𝔑":"Nfr",ń:"nacute",Ń:"Nacute",ň:"ncaron",Ň:"Ncaron",ñ:"ntilde",Ñ:"Ntilde",ņ:"ncedil",Ņ:"Ncedil","№":"numero",ŋ:"eng",Ŋ:"ENG","𝕠":"oopf","𝔬":"ofr",ℴ:"oscr","𝒪":"Oscr","𝔒":"Ofr","𝕆":"Oopf",º:"ordm",ó:"oacute",Ó:"Oacute",ò:"ograve",Ò:"Ograve",ô:"ocirc",Ô:"Ocirc",ö:"ouml",Ö:"Ouml",ő:"odblac",Ő:"Odblac",õ:"otilde",Õ:"Otilde",ø:"oslash",Ø:"Oslash",ō:"omacr",Ō:"Omacr",œ:"oelig",Œ:"OElig","𝔭":"pfr","𝓅":"pscr","𝕡":"popf",ℙ:"Popf","𝔓":"Pfr","𝒫":"Pscr","𝕢":"qopf","𝔮":"qfr","𝓆":"qscr","𝒬":"Qscr","𝔔":"Qfr",ℚ:"Qopf",ĸ:"kgreen","𝔯":"rfr","𝕣":"ropf","𝓇":"rscr",ℛ:"Rscr",ℜ:"Re",ℝ:"Ropf",ŕ:"racute",Ŕ:"Racute",ř:"rcaron",Ř:"Rcaron",ŗ:"rcedil",Ŗ:"Rcedil","𝕤":"sopf","𝓈":"sscr","𝔰":"sfr","𝕊":"Sopf","𝔖":"Sfr","𝒮":"Sscr","Ⓢ":"oS",ś:"sacute",Ś:"Sacute",ŝ:"scirc",Ŝ:"Scirc",š:"scaron",Š:"Scaron",ş:"scedil",Ş:"Scedil",ß:"szlig","𝔱":"tfr","𝓉":"tscr","𝕥":"topf","𝒯":"Tscr","𝔗":"Tfr","𝕋":"Topf",ť:"tcaron",Ť:"Tcaron",ţ:"tcedil",Ţ:"Tcedil","™":"trade",ŧ:"tstrok",Ŧ:"Tstrok","𝓊":"uscr","𝕦":"uopf","𝔲":"ufr","𝕌":"Uopf","𝔘":"Ufr","𝒰":"Uscr",ú:"uacute",Ú:"Uacute",ù:"ugrave",Ù:"Ugrave",ŭ:"ubreve",Ŭ:"Ubreve",û:"ucirc",Û:"Ucirc",ů:"uring",Ů:"Uring",ü:"uuml",Ü:"Uuml",ű:"udblac",Ű:"Udblac",ũ:"utilde",Ũ:"Utilde",ų:"uogon",Ų:"Uogon",ū:"umacr",Ū:"Umacr","𝔳":"vfr","𝕧":"vopf","𝓋":"vscr","𝔙":"Vfr","𝕍":"Vopf","𝒱":"Vscr","𝕨":"wopf","𝓌":"wscr","𝔴":"wfr","𝒲":"Wscr","𝕎":"Wopf","𝔚":"Wfr",ŵ:"wcirc",Ŵ:"Wcirc","𝔵":"xfr","𝓍":"xscr","𝕩":"xopf","𝕏":"Xopf","𝔛":"Xfr","𝒳":"Xscr","𝔶":"yfr","𝓎":"yscr","𝕪":"yopf","𝒴":"Yscr","𝔜":"Yfr","𝕐":"Yopf",ý:"yacute",Ý:"Yacute",ŷ:"ycirc",Ŷ:"Ycirc",ÿ:"yuml",Ÿ:"Yuml","𝓏":"zscr","𝔷":"zfr","𝕫":"zopf",ℨ:"Zfr",ℤ:"Zopf","𝒵":"Zscr",ź:"zacute",Ź:"Zacute",ž:"zcaron",Ž:"Zcaron",ż:"zdot",Ż:"Zdot",Ƶ:"imped",þ:"thorn",Þ:"THORN",ŉ:"napos",α:"alpha",Α:"Alpha",β:"beta",Β:"Beta",γ:"gamma",Γ:"Gamma",δ:"delta",Δ:"Delta",ε:"epsi","ϵ":"epsiv",Ε:"Epsilon",ϝ:"gammad",Ϝ:"Gammad",ζ:"zeta",Ζ:"Zeta",η:"eta",Η:"Eta",θ:"theta",ϑ:"thetav",Θ:"Theta",ι:"iota",Ι:"Iota",κ:"kappa",ϰ:"kappav",Κ:"Kappa",λ:"lambda",Λ:"Lambda",μ:"mu",µ:"micro",Μ:"Mu",ν:"nu",Ν:"Nu",ξ:"xi",Ξ:"Xi",ο:"omicron",Ο:"Omicron",π:"pi",ϖ:"piv",Π:"Pi",ρ:"rho",ϱ:"rhov",Ρ:"Rho",σ:"sigma",Σ:"Sigma",ς:"sigmaf",τ:"tau",Τ:"Tau",υ:"upsi",Υ:"Upsilon",ϒ:"Upsi",φ:"phi",ϕ:"phiv",Φ:"Phi",χ:"chi",Χ:"Chi",ψ:"psi",Ψ:"Psi",ω:"omega",Ω:"ohm",а:"acy",А:"Acy",б:"bcy",Б:"Bcy",в:"vcy",В:"Vcy",г:"gcy",Г:"Gcy",ѓ:"gjcy",Ѓ:"GJcy",д:"dcy",Д:"Dcy",ђ:"djcy",Ђ:"DJcy",е:"iecy",Е:"IEcy",ё:"iocy",Ё:"IOcy",є:"jukcy",Є:"Jukcy",ж:"zhcy",Ж:"ZHcy",з:"zcy",З:"Zcy",ѕ:"dscy",Ѕ:"DScy",и:"icy",И:"Icy",і:"iukcy",І:"Iukcy",ї:"yicy",Ї:"YIcy",й:"jcy",Й:"Jcy",ј:"jsercy",Ј:"Jsercy",к:"kcy",К:"Kcy",ќ:"kjcy",Ќ:"KJcy",л:"lcy",Л:"Lcy",љ:"ljcy",Љ:"LJcy",м:"mcy",М:"Mcy",н:"ncy",Н:"Ncy",њ:"njcy",Њ:"NJcy",о:"ocy",О:"Ocy",п:"pcy",П:"Pcy",р:"rcy",Р:"Rcy",с:"scy",С:"Scy",т:"tcy",Т:"Tcy",ћ:"tshcy",Ћ:"TSHcy",у:"ucy",У:"Ucy",ў:"ubrcy",Ў:"Ubrcy",ф:"fcy",Ф:"Fcy",х:"khcy",Х:"KHcy",ц:"tscy",Ц:"TScy",ч:"chcy",Ч:"CHcy",џ:"dzcy",Џ:"DZcy",ш:"shcy",Ш:"SHcy",щ:"shchcy",Щ:"SHCHcy",ъ:"hardcy",Ъ:"HARDcy",ы:"ycy",Ы:"Ycy",ь:"softcy",Ь:"SOFTcy",э:"ecy",Э:"Ecy",ю:"yucy",Ю:"YUcy",я:"yacy",Я:"YAcy",ℵ:"aleph",ℶ:"beth",ℷ:"gimel",ℸ:"daleth"},d=/["&'<>`]/g,f={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},g=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,v=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,w=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,A={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:`
`,nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"	",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"},C={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"},m={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"},y=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],x=String.fromCharCode,k={},q=k.hasOwnProperty,I=function(z,J){return q.call(z,J)},S=function(z,J){for(var H=-1,Y=z.length;++H<Y;)if(z[H]==J)return!0;return!1},$=function(z,J){if(!z)return J;var H={},Y;for(Y in J)H[Y]=I(z,Y)?z[Y]:J[Y];return H},B=function(z,J){var H="";return z>=55296&&z<=57343||z>1114111?(J&&O("character reference outside the permissible Unicode range"),"�"):I(m,z)?(J&&O("disallowed character reference"),m[z]):(J&&S(y,z)&&O("disallowed character reference"),z>65535&&(z-=65536,H+=x(z>>>10&1023|55296),z=56320|z&1023),H+=x(z),H)},D=function(z){return"&#x"+z.toString(16).toUpperCase()+";"},N=function(z){return"&#"+z+";"},O=function(z){throw Error("Parse error: "+z)},L=function(z,J){J=$(J,L.options);var H=J.strict;H&&v.test(z)&&O("forbidden code point");var Y=J.encodeEverything,se=J.useNamedReferences,Q=J.allowUnsafeSymbols,ie=J.decimal?N:D,te=function(oe){return ie(oe.charCodeAt(0))};return Y?(z=z.replace(l,function(oe){return se&&I(p,oe)?"&"+p[oe]+";":te(oe)}),se&&(z=z.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),se&&(z=z.replace(c,function(oe){return"&"+p[oe]+";"}))):se?(Q||(z=z.replace(d,function(oe){return"&"+p[oe]+";"})),z=z.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;"),z=z.replace(c,function(oe){return"&"+p[oe]+";"})):Q||(z=z.replace(d,te)),z.replace(o,function(oe){var ve=oe.charCodeAt(0),be=oe.charCodeAt(1),ye=(ve-55296)*1024+be-56320+65536;return ie(ye)}).replace(u,te)};L.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var V=function(z,J){J=$(J,V.options);var H=J.strict;return H&&g.test(z)&&O("malformed character reference"),z.replace(w,function(Y,se,Q,ie,te,oe,ve,be,ye){var re,he,Se,Re,we,Ee;return se?(we=se,A[we]):Q?(we=Q,Ee=ie,Ee&&J.isAttributeValue?(H&&Ee=="="&&O("`&` did not start a character reference"),Y):(H&&O("named character reference was not terminated by a semicolon"),C[we]+(Ee||""))):te?(Se=te,he=oe,H&&!he&&O("character reference was not terminated by a semicolon"),re=parseInt(Se,10),B(re,H)):ve?(Re=ve,he=be,H&&!he&&O("character reference was not terminated by a semicolon"),re=parseInt(Re,16),B(re,H)):(H&&O("named character reference was not terminated by a semicolon"),Y)})};V.options={isAttributeValue:!1,strict:!1};var X=function(z){return z.replace(d,function(J){return f[J]})},K={version:"1.2.0",encode:L,decode:V,escape:X,unescape:V};if(n&&!n.nodeType)if(r)r.exports=K;else for(var ee in K)I(K,ee)&&(n[ee]=K[ee]);else t.he=K})(ue)})(Gh,Gh.exports);var mf=Gh.exports;Object.defineProperty(Wl,"__esModule",{value:!0});var Ym=mf,X7=function(){function i(e,t){e===void 0&&(e=null),this.parentNode=e,this.childNodes=[],Object.defineProperty(this,"range",{enumerable:!1,writable:!0,configurable:!0,value:t??[-1,-1]})}return i.prototype.remove=function(){var e=this;if(this.parentNode){var t=this.parentNode.childNodes;this.parentNode.childNodes=t.filter(function(n){return e!==n}),this.parentNode=null}return this},Object.defineProperty(i.prototype,"innerText",{get:function(){return this.rawText},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"textContent",{get:function(){return(0,Ym.decode)(this.rawText)},set:function(e){this.rawText=(0,Ym.encode)(e)},enumerable:!1,configurable:!0}),i}();Wl.default=X7;var ja={};Object.defineProperty(ja,"__esModule",{value:!0});var up;(function(i){i[i.ELEMENT_NODE=1]="ELEMENT_NODE",i[i.TEXT_NODE=3]="TEXT_NODE",i[i.COMMENT_NODE=8]="COMMENT_NODE"})(up||(up={}));ja.default=up;var Z7=ue&&ue.__extends||function(){var i=function(e,t){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(n[s]=r[s])},i(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");i(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),n1=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Cc,"__esModule",{value:!0});var K7=n1(Wl),Q7=n1(ja),eC=function(i){Z7(e,i);function e(t,n,r){var s=i.call(this,n,r)||this;return s.rawText=t,s.nodeType=Q7.default.COMMENT_NODE,s}return e.prototype.clone=function(){return new e(this.rawText,null)},Object.defineProperty(e.prototype,"text",{get:function(){return this.rawText},enumerable:!1,configurable:!0}),e.prototype.toString=function(){return"<!--".concat(this.rawText,"-->")},e}(K7.default);Cc.default=eC;var xo={},i1={},r1={},Ar={},Wa={},Tc={};(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.Doctype=i.CDATA=i.Tag=i.Style=i.Script=i.Comment=i.Directive=i.Text=i.Root=i.isTag=i.ElementType=void 0;var e;(function(n){n.Root="root",n.Text="text",n.Directive="directive",n.Comment="comment",n.Script="script",n.Style="style",n.Tag="tag",n.CDATA="cdata",n.Doctype="doctype"})(e=i.ElementType||(i.ElementType={}));function t(n){return n.type===e.Tag||n.type===e.Script||n.type===e.Style}i.isTag=t,i.Root=e.Root,i.Text=e.Text,i.Directive=e.Directive,i.Comment=e.Comment,i.Script=e.Script,i.Style=e.Style,i.Tag=e.Tag,i.CDATA=e.CDATA,i.Doctype=e.Doctype})(Tc);var fn={},oa=ue&&ue.__extends||function(){var i=function(e,t){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(n[s]=r[s])},i(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");i(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),iu=ue&&ue.__assign||function(){return iu=Object.assign||function(i){for(var e,t=1,n=arguments.length;t<n;t++){e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(i[r]=e[r])}return i},iu.apply(this,arguments)};Object.defineProperty(fn,"__esModule",{value:!0});fn.cloneNode=fn.hasChildren=fn.isDocument=fn.isDirective=fn.isComment=fn.isText=fn.isCDATA=fn.isTag=fn.Element=fn.Document=fn.CDATA=fn.NodeWithChildren=fn.ProcessingInstruction=fn.Comment=fn.Text=fn.DataNode=fn.Node=void 0;var yr=Tc,yf=function(){function i(){this.parent=null,this.prev=null,this.next=null,this.startIndex=null,this.endIndex=null}return Object.defineProperty(i.prototype,"parentNode",{get:function(){return this.parent},set:function(e){this.parent=e},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"previousSibling",{get:function(){return this.prev},set:function(e){this.prev=e},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"nextSibling",{get:function(){return this.next},set:function(e){this.next=e},enumerable:!1,configurable:!0}),i.prototype.cloneNode=function(e){return e===void 0&&(e=!1),bf(this,e)},i}();fn.Node=yf;var xc=function(i){oa(e,i);function e(t){var n=i.call(this)||this;return n.data=t,n}return Object.defineProperty(e.prototype,"nodeValue",{get:function(){return this.data},set:function(t){this.data=t},enumerable:!1,configurable:!0}),e}(yf);fn.DataNode=xc;var s1=function(i){oa(e,i);function e(){var t=i!==null&&i.apply(this,arguments)||this;return t.type=yr.ElementType.Text,t}return Object.defineProperty(e.prototype,"nodeType",{get:function(){return 3},enumerable:!1,configurable:!0}),e}(xc);fn.Text=s1;var o1=function(i){oa(e,i);function e(){var t=i!==null&&i.apply(this,arguments)||this;return t.type=yr.ElementType.Comment,t}return Object.defineProperty(e.prototype,"nodeType",{get:function(){return 8},enumerable:!1,configurable:!0}),e}(xc);fn.Comment=o1;var a1=function(i){oa(e,i);function e(t,n){var r=i.call(this,n)||this;return r.name=t,r.type=yr.ElementType.Directive,r}return Object.defineProperty(e.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),e}(xc);fn.ProcessingInstruction=a1;var kc=function(i){oa(e,i);function e(t){var n=i.call(this)||this;return n.children=t,n}return Object.defineProperty(e.prototype,"firstChild",{get:function(){var t;return(t=this.children[0])!==null&&t!==void 0?t:null},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"childNodes",{get:function(){return this.children},set:function(t){this.children=t},enumerable:!1,configurable:!0}),e}(yf);fn.NodeWithChildren=kc;var l1=function(i){oa(e,i);function e(){var t=i!==null&&i.apply(this,arguments)||this;return t.type=yr.ElementType.CDATA,t}return Object.defineProperty(e.prototype,"nodeType",{get:function(){return 4},enumerable:!1,configurable:!0}),e}(kc);fn.CDATA=l1;var u1=function(i){oa(e,i);function e(){var t=i!==null&&i.apply(this,arguments)||this;return t.type=yr.ElementType.Root,t}return Object.defineProperty(e.prototype,"nodeType",{get:function(){return 9},enumerable:!1,configurable:!0}),e}(kc);fn.Document=u1;var h1=function(i){oa(e,i);function e(t,n,r,s){r===void 0&&(r=[]),s===void 0&&(s=t==="script"?yr.ElementType.Script:t==="style"?yr.ElementType.Style:yr.ElementType.Tag);var o=i.call(this,r)||this;return o.name=t,o.attribs=n,o.type=s,o}return Object.defineProperty(e.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tagName",{get:function(){return this.name},set:function(t){this.name=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"attributes",{get:function(){var t=this;return Object.keys(this.attribs).map(function(n){var r,s;return{name:n,value:t.attribs[n],namespace:(r=t["x-attribsNamespace"])===null||r===void 0?void 0:r[n],prefix:(s=t["x-attribsPrefix"])===null||s===void 0?void 0:s[n]}})},enumerable:!1,configurable:!0}),e}(kc);fn.Element=h1;function c1(i){return(0,yr.isTag)(i)}fn.isTag=c1;function d1(i){return i.type===yr.ElementType.CDATA}fn.isCDATA=d1;function p1(i){return i.type===yr.ElementType.Text}fn.isText=p1;function f1(i){return i.type===yr.ElementType.Comment}fn.isComment=f1;function g1(i){return i.type===yr.ElementType.Directive}fn.isDirective=g1;function m1(i){return i.type===yr.ElementType.Root}fn.isDocument=m1;function tC(i){return Object.prototype.hasOwnProperty.call(i,"children")}fn.hasChildren=tC;function bf(i,e){e===void 0&&(e=!1);var t;if(p1(i))t=new s1(i.data);else if(f1(i))t=new o1(i.data);else if(c1(i)){var n=e?yd(i.children):[],r=new h1(i.name,iu({},i.attribs),n);n.forEach(function(u){return u.parent=r}),i.namespace!=null&&(r.namespace=i.namespace),i["x-attribsNamespace"]&&(r["x-attribsNamespace"]=iu({},i["x-attribsNamespace"])),i["x-attribsPrefix"]&&(r["x-attribsPrefix"]=iu({},i["x-attribsPrefix"])),t=r}else if(d1(i)){var n=e?yd(i.children):[],s=new l1(n);n.forEach(function(c){return c.parent=s}),t=s}else if(m1(i)){var n=e?yd(i.children):[],o=new u1(n);n.forEach(function(c){return c.parent=o}),i["x-mode"]&&(o["x-mode"]=i["x-mode"]),t=o}else if(g1(i)){var l=new a1(i.name,i.data);i["x-name"]!=null&&(l["x-name"]=i["x-name"],l["x-publicId"]=i["x-publicId"],l["x-systemId"]=i["x-systemId"]),t=l}else throw new Error("Not implemented yet: ".concat(i.type));return t.startIndex=i.startIndex,t.endIndex=i.endIndex,i.sourceCodeLocation!=null&&(t.sourceCodeLocation=i.sourceCodeLocation),t}fn.cloneNode=bf;function yd(i){for(var e=i.map(function(n){return bf(n,!0)}),t=1;t<e.length;t++)e[t].prev=e[t-1],e[t-1].next=e[t];return e}(function(i){var e=ue&&ue.__createBinding||(Object.create?function(l,u,c,p){p===void 0&&(p=c);var d=Object.getOwnPropertyDescriptor(u,c);(!d||("get"in d?!u.__esModule:d.writable||d.configurable))&&(d={enumerable:!0,get:function(){return u[c]}}),Object.defineProperty(l,p,d)}:function(l,u,c,p){p===void 0&&(p=c),l[p]=u[c]}),t=ue&&ue.__exportStar||function(l,u){for(var c in l)c!=="default"&&!Object.prototype.hasOwnProperty.call(u,c)&&e(u,l,c)};Object.defineProperty(i,"__esModule",{value:!0}),i.DomHandler=void 0;var n=Tc,r=fn;t(fn,i);var s={withStartIndices:!1,withEndIndices:!1,xmlMode:!1},o=function(){function l(u,c,p){this.dom=[],this.root=new r.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null,typeof c=="function"&&(p=c,c=s),typeof u=="object"&&(c=u,u=void 0),this.callback=u??null,this.options=c??s,this.elementCB=p??null}return l.prototype.onparserinit=function(u){this.parser=u},l.prototype.onreset=function(){this.dom=[],this.root=new r.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null},l.prototype.onend=function(){this.done||(this.done=!0,this.parser=null,this.handleCallback(null))},l.prototype.onerror=function(u){this.handleCallback(u)},l.prototype.onclosetag=function(){this.lastNode=null;var u=this.tagStack.pop();this.options.withEndIndices&&(u.endIndex=this.parser.endIndex),this.elementCB&&this.elementCB(u)},l.prototype.onopentag=function(u,c){var p=this.options.xmlMode?n.ElementType.Tag:void 0,d=new r.Element(u,c,void 0,p);this.addNode(d),this.tagStack.push(d)},l.prototype.ontext=function(u){var c=this.lastNode;if(c&&c.type===n.ElementType.Text)c.data+=u,this.options.withEndIndices&&(c.endIndex=this.parser.endIndex);else{var p=new r.Text(u);this.addNode(p),this.lastNode=p}},l.prototype.oncomment=function(u){if(this.lastNode&&this.lastNode.type===n.ElementType.Comment){this.lastNode.data+=u;return}var c=new r.Comment(u);this.addNode(c),this.lastNode=c},l.prototype.oncommentend=function(){this.lastNode=null},l.prototype.oncdatastart=function(){var u=new r.Text(""),c=new r.CDATA([u]);this.addNode(c),u.parent=c,this.lastNode=u},l.prototype.oncdataend=function(){this.lastNode=null},l.prototype.onprocessinginstruction=function(u,c){var p=new r.ProcessingInstruction(u,c);this.addNode(p)},l.prototype.handleCallback=function(u){if(typeof this.callback=="function")this.callback(u,this.dom);else if(u)throw u},l.prototype.addNode=function(u){var c=this.tagStack[this.tagStack.length-1],p=c.children[c.children.length-1];this.options.withStartIndices&&(u.startIndex=this.parser.startIndex),this.options.withEndIndices&&(u.endIndex=this.parser.endIndex),c.children.push(u),p&&(u.prev=p,p.next=u),u.parent=c,this.lastNode=null},l}();i.DomHandler=o,i.default=o})(Wa);var Fu={},y1={};(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.Doctype=i.CDATA=i.Tag=i.Style=i.Script=i.Comment=i.Directive=i.Text=i.Root=i.isTag=i.ElementType=void 0;var e;(function(n){n.Root="root",n.Text="text",n.Directive="directive",n.Comment="comment",n.Script="script",n.Style="style",n.Tag="tag",n.CDATA="cdata",n.Doctype="doctype"})(e=i.ElementType||(i.ElementType={}));function t(n){return n.type===e.Tag||n.type===e.Script||n.type===e.Style}i.isTag=t,i.Root=e.Root,i.Text=e.Text,i.Directive=e.Directive,i.Comment=e.Comment,i.Script=e.Script,i.Style=e.Style,i.Tag=e.Tag,i.CDATA=e.CDATA,i.Doctype=e.Doctype})(y1);var b1={},hp={},vf={};Object.defineProperty(vf,"__esModule",{value:!0});vf.default=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map(function(i){return i.charCodeAt(0)}));var wf={};Object.defineProperty(wf,"__esModule",{value:!0});wf.default=new Uint16Array("Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map(function(i){return i.charCodeAt(0)}));var cp={};(function(i){var e;Object.defineProperty(i,"__esModule",{value:!0}),i.replaceCodePoint=i.fromCodePoint=void 0;var t=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);i.fromCodePoint=(e=String.fromCodePoint)!==null&&e!==void 0?e:function(s){var o="";return s>65535&&(s-=65536,o+=String.fromCharCode(s>>>10&1023|55296),s=56320|s&1023),o+=String.fromCharCode(s),o};function n(s){var o;return s>=55296&&s<=57343||s>1114111?65533:(o=t.get(s))!==null&&o!==void 0?o:s}i.replaceCodePoint=n;function r(s){return(0,i.fromCodePoint)(n(s))}i.default=r})(cp);(function(i){var e=ue&&ue.__createBinding||(Object.create?function(D,N,O,L){L===void 0&&(L=O);var V=Object.getOwnPropertyDescriptor(N,O);(!V||("get"in V?!N.__esModule:V.writable||V.configurable))&&(V={enumerable:!0,get:function(){return N[O]}}),Object.defineProperty(D,L,V)}:function(D,N,O,L){L===void 0&&(L=O),D[L]=N[O]}),t=ue&&ue.__setModuleDefault||(Object.create?function(D,N){Object.defineProperty(D,"default",{enumerable:!0,value:N})}:function(D,N){D.default=N}),n=ue&&ue.__importStar||function(D){if(D&&D.__esModule)return D;var N={};if(D!=null)for(var O in D)O!=="default"&&Object.prototype.hasOwnProperty.call(D,O)&&e(N,D,O);return t(N,D),N},r=ue&&ue.__importDefault||function(D){return D&&D.__esModule?D:{default:D}};Object.defineProperty(i,"__esModule",{value:!0}),i.decodeXML=i.decodeHTMLStrict=i.decodeHTMLAttribute=i.decodeHTML=i.determineBranch=i.EntityDecoder=i.DecodingMode=i.BinTrieFlags=i.fromCodePoint=i.replaceCodePoint=i.decodeCodePoint=i.xmlDecodeTree=i.htmlDecodeTree=void 0;var s=r(vf);i.htmlDecodeTree=s.default;var o=r(wf);i.xmlDecodeTree=o.default;var l=n(cp);i.decodeCodePoint=l.default;var u=cp;Object.defineProperty(i,"replaceCodePoint",{enumerable:!0,get:function(){return u.replaceCodePoint}}),Object.defineProperty(i,"fromCodePoint",{enumerable:!0,get:function(){return u.fromCodePoint}});var c;(function(D){D[D.NUM=35]="NUM",D[D.SEMI=59]="SEMI",D[D.EQUALS=61]="EQUALS",D[D.ZERO=48]="ZERO",D[D.NINE=57]="NINE",D[D.LOWER_A=97]="LOWER_A",D[D.LOWER_F=102]="LOWER_F",D[D.LOWER_X=120]="LOWER_X",D[D.LOWER_Z=122]="LOWER_Z",D[D.UPPER_A=65]="UPPER_A",D[D.UPPER_F=70]="UPPER_F",D[D.UPPER_Z=90]="UPPER_Z"})(c||(c={}));var p=32,d;(function(D){D[D.VALUE_LENGTH=49152]="VALUE_LENGTH",D[D.BRANCH_LENGTH=16256]="BRANCH_LENGTH",D[D.JUMP_TABLE=127]="JUMP_TABLE"})(d=i.BinTrieFlags||(i.BinTrieFlags={}));function f(D){return D>=c.ZERO&&D<=c.NINE}function g(D){return D>=c.UPPER_A&&D<=c.UPPER_F||D>=c.LOWER_A&&D<=c.LOWER_F}function v(D){return D>=c.UPPER_A&&D<=c.UPPER_Z||D>=c.LOWER_A&&D<=c.LOWER_Z||f(D)}function w(D){return D===c.EQUALS||v(D)}var A;(function(D){D[D.EntityStart=0]="EntityStart",D[D.NumericStart=1]="NumericStart",D[D.NumericDecimal=2]="NumericDecimal",D[D.NumericHex=3]="NumericHex",D[D.NamedEntity=4]="NamedEntity"})(A||(A={}));var C;(function(D){D[D.Legacy=0]="Legacy",D[D.Strict=1]="Strict",D[D.Attribute=2]="Attribute"})(C=i.DecodingMode||(i.DecodingMode={}));var m=function(){function D(N,O,L){this.decodeTree=N,this.emitCodePoint=O,this.errors=L,this.state=A.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=C.Strict}return D.prototype.startEntity=function(N){this.decodeMode=N,this.state=A.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1},D.prototype.write=function(N,O){switch(this.state){case A.EntityStart:return N.charCodeAt(O)===c.NUM?(this.state=A.NumericStart,this.consumed+=1,this.stateNumericStart(N,O+1)):(this.state=A.NamedEntity,this.stateNamedEntity(N,O));case A.NumericStart:return this.stateNumericStart(N,O);case A.NumericDecimal:return this.stateNumericDecimal(N,O);case A.NumericHex:return this.stateNumericHex(N,O);case A.NamedEntity:return this.stateNamedEntity(N,O)}},D.prototype.stateNumericStart=function(N,O){return O>=N.length?-1:(N.charCodeAt(O)|p)===c.LOWER_X?(this.state=A.NumericHex,this.consumed+=1,this.stateNumericHex(N,O+1)):(this.state=A.NumericDecimal,this.stateNumericDecimal(N,O))},D.prototype.addToNumericResult=function(N,O,L,V){if(O!==L){var X=L-O;this.result=this.result*Math.pow(V,X)+parseInt(N.substr(O,X),V),this.consumed+=X}},D.prototype.stateNumericHex=function(N,O){for(var L=O;O<N.length;){var V=N.charCodeAt(O);if(f(V)||g(V))O+=1;else return this.addToNumericResult(N,L,O,16),this.emitNumericEntity(V,3)}return this.addToNumericResult(N,L,O,16),-1},D.prototype.stateNumericDecimal=function(N,O){for(var L=O;O<N.length;){var V=N.charCodeAt(O);if(f(V))O+=1;else return this.addToNumericResult(N,L,O,10),this.emitNumericEntity(V,2)}return this.addToNumericResult(N,L,O,10),-1},D.prototype.emitNumericEntity=function(N,O){var L;if(this.consumed<=O)return(L=this.errors)===null||L===void 0||L.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(N===c.SEMI)this.consumed+=1;else if(this.decodeMode===C.Strict)return 0;return this.emitCodePoint((0,l.replaceCodePoint)(this.result),this.consumed),this.errors&&(N!==c.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed},D.prototype.stateNamedEntity=function(N,O){for(var L=this.decodeTree,V=L[this.treeIndex],X=(V&d.VALUE_LENGTH)>>14;O<N.length;O++,this.excess++){var K=N.charCodeAt(O);if(this.treeIndex=x(L,V,this.treeIndex+Math.max(1,X),K),this.treeIndex<0)return this.result===0||this.decodeMode===C.Attribute&&(X===0||w(K))?0:this.emitNotTerminatedNamedEntity();if(V=L[this.treeIndex],X=(V&d.VALUE_LENGTH)>>14,X!==0){if(K===c.SEMI)return this.emitNamedEntityData(this.treeIndex,X,this.consumed+this.excess);this.decodeMode!==C.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1},D.prototype.emitNotTerminatedNamedEntity=function(){var N,O=this,L=O.result,V=O.decodeTree,X=(V[L]&d.VALUE_LENGTH)>>14;return this.emitNamedEntityData(L,X,this.consumed),(N=this.errors)===null||N===void 0||N.missingSemicolonAfterCharacterReference(),this.consumed},D.prototype.emitNamedEntityData=function(N,O,L){var V=this.decodeTree;return this.emitCodePoint(O===1?V[N]&~d.VALUE_LENGTH:V[N+1],L),O===3&&this.emitCodePoint(V[N+2],L),L},D.prototype.end=function(){var N;switch(this.state){case A.NamedEntity:return this.result!==0&&(this.decodeMode!==C.Attribute||this.result===this.treeIndex)?this.emitNotTerminatedNamedEntity():0;case A.NumericDecimal:return this.emitNumericEntity(0,2);case A.NumericHex:return this.emitNumericEntity(0,3);case A.NumericStart:return(N=this.errors)===null||N===void 0||N.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case A.EntityStart:return 0}},D}();i.EntityDecoder=m;function y(D){var N="",O=new m(D,function(L){return N+=(0,l.fromCodePoint)(L)});return function(V,X){for(var K=0,ee=0;(ee=V.indexOf("&",ee))>=0;){N+=V.slice(K,ee),O.startEntity(X);var z=O.write(V,ee+1);if(z<0){K=ee+O.end();break}K=ee+z,ee=z===0?K+1:K}var J=N+V.slice(K);return N="",J}}function x(D,N,O,L){var V=(N&d.BRANCH_LENGTH)>>7,X=N&d.JUMP_TABLE;if(V===0)return X!==0&&L===X?O:-1;if(X){var K=L-X;return K<0||K>=V?-1:D[O+K]-1}for(var ee=O,z=ee+V-1;ee<=z;){var J=ee+z>>>1,H=D[J];if(H<L)ee=J+1;else if(H>L)z=J-1;else return D[J+V]}return-1}i.determineBranch=x;var k=y(s.default),q=y(o.default);function I(D,N){return N===void 0&&(N=C.Legacy),k(D,N)}i.decodeHTML=I;function S(D){return k(D,C.Attribute)}i.decodeHTMLAttribute=S;function $(D){return k(D,C.Strict)}i.decodeHTMLStrict=$;function B(D){return q(D,C.Strict)}i.decodeXML=B})(hp);var $a={},_f={};Object.defineProperty(_f,"__esModule",{value:!0});function dh(i){for(var e=1;e<i.length;e++)i[e][0]+=i[e-1][0]+1;return i}_f.default=new Map(dh([[9,"&Tab;"],[0,"&NewLine;"],[22,"&excl;"],[0,"&quot;"],[0,"&num;"],[0,"&dollar;"],[0,"&percnt;"],[0,"&amp;"],[0,"&apos;"],[0,"&lpar;"],[0,"&rpar;"],[0,"&ast;"],[0,"&plus;"],[0,"&comma;"],[1,"&period;"],[0,"&sol;"],[10,"&colon;"],[0,"&semi;"],[0,{v:"&lt;",n:8402,o:"&nvlt;"}],[0,{v:"&equals;",n:8421,o:"&bne;"}],[0,{v:"&gt;",n:8402,o:"&nvgt;"}],[0,"&quest;"],[0,"&commat;"],[26,"&lbrack;"],[0,"&bsol;"],[0,"&rbrack;"],[0,"&Hat;"],[0,"&lowbar;"],[0,"&DiacriticalGrave;"],[5,{n:106,o:"&fjlig;"}],[20,"&lbrace;"],[0,"&verbar;"],[0,"&rbrace;"],[34,"&nbsp;"],[0,"&iexcl;"],[0,"&cent;"],[0,"&pound;"],[0,"&curren;"],[0,"&yen;"],[0,"&brvbar;"],[0,"&sect;"],[0,"&die;"],[0,"&copy;"],[0,"&ordf;"],[0,"&laquo;"],[0,"&not;"],[0,"&shy;"],[0,"&circledR;"],[0,"&macr;"],[0,"&deg;"],[0,"&PlusMinus;"],[0,"&sup2;"],[0,"&sup3;"],[0,"&acute;"],[0,"&micro;"],[0,"&para;"],[0,"&centerdot;"],[0,"&cedil;"],[0,"&sup1;"],[0,"&ordm;"],[0,"&raquo;"],[0,"&frac14;"],[0,"&frac12;"],[0,"&frac34;"],[0,"&iquest;"],[0,"&Agrave;"],[0,"&Aacute;"],[0,"&Acirc;"],[0,"&Atilde;"],[0,"&Auml;"],[0,"&angst;"],[0,"&AElig;"],[0,"&Ccedil;"],[0,"&Egrave;"],[0,"&Eacute;"],[0,"&Ecirc;"],[0,"&Euml;"],[0,"&Igrave;"],[0,"&Iacute;"],[0,"&Icirc;"],[0,"&Iuml;"],[0,"&ETH;"],[0,"&Ntilde;"],[0,"&Ograve;"],[0,"&Oacute;"],[0,"&Ocirc;"],[0,"&Otilde;"],[0,"&Ouml;"],[0,"&times;"],[0,"&Oslash;"],[0,"&Ugrave;"],[0,"&Uacute;"],[0,"&Ucirc;"],[0,"&Uuml;"],[0,"&Yacute;"],[0,"&THORN;"],[0,"&szlig;"],[0,"&agrave;"],[0,"&aacute;"],[0,"&acirc;"],[0,"&atilde;"],[0,"&auml;"],[0,"&aring;"],[0,"&aelig;"],[0,"&ccedil;"],[0,"&egrave;"],[0,"&eacute;"],[0,"&ecirc;"],[0,"&euml;"],[0,"&igrave;"],[0,"&iacute;"],[0,"&icirc;"],[0,"&iuml;"],[0,"&eth;"],[0,"&ntilde;"],[0,"&ograve;"],[0,"&oacute;"],[0,"&ocirc;"],[0,"&otilde;"],[0,"&ouml;"],[0,"&div;"],[0,"&oslash;"],[0,"&ugrave;"],[0,"&uacute;"],[0,"&ucirc;"],[0,"&uuml;"],[0,"&yacute;"],[0,"&thorn;"],[0,"&yuml;"],[0,"&Amacr;"],[0,"&amacr;"],[0,"&Abreve;"],[0,"&abreve;"],[0,"&Aogon;"],[0,"&aogon;"],[0,"&Cacute;"],[0,"&cacute;"],[0,"&Ccirc;"],[0,"&ccirc;"],[0,"&Cdot;"],[0,"&cdot;"],[0,"&Ccaron;"],[0,"&ccaron;"],[0,"&Dcaron;"],[0,"&dcaron;"],[0,"&Dstrok;"],[0,"&dstrok;"],[0,"&Emacr;"],[0,"&emacr;"],[2,"&Edot;"],[0,"&edot;"],[0,"&Eogon;"],[0,"&eogon;"],[0,"&Ecaron;"],[0,"&ecaron;"],[0,"&Gcirc;"],[0,"&gcirc;"],[0,"&Gbreve;"],[0,"&gbreve;"],[0,"&Gdot;"],[0,"&gdot;"],[0,"&Gcedil;"],[1,"&Hcirc;"],[0,"&hcirc;"],[0,"&Hstrok;"],[0,"&hstrok;"],[0,"&Itilde;"],[0,"&itilde;"],[0,"&Imacr;"],[0,"&imacr;"],[2,"&Iogon;"],[0,"&iogon;"],[0,"&Idot;"],[0,"&imath;"],[0,"&IJlig;"],[0,"&ijlig;"],[0,"&Jcirc;"],[0,"&jcirc;"],[0,"&Kcedil;"],[0,"&kcedil;"],[0,"&kgreen;"],[0,"&Lacute;"],[0,"&lacute;"],[0,"&Lcedil;"],[0,"&lcedil;"],[0,"&Lcaron;"],[0,"&lcaron;"],[0,"&Lmidot;"],[0,"&lmidot;"],[0,"&Lstrok;"],[0,"&lstrok;"],[0,"&Nacute;"],[0,"&nacute;"],[0,"&Ncedil;"],[0,"&ncedil;"],[0,"&Ncaron;"],[0,"&ncaron;"],[0,"&napos;"],[0,"&ENG;"],[0,"&eng;"],[0,"&Omacr;"],[0,"&omacr;"],[2,"&Odblac;"],[0,"&odblac;"],[0,"&OElig;"],[0,"&oelig;"],[0,"&Racute;"],[0,"&racute;"],[0,"&Rcedil;"],[0,"&rcedil;"],[0,"&Rcaron;"],[0,"&rcaron;"],[0,"&Sacute;"],[0,"&sacute;"],[0,"&Scirc;"],[0,"&scirc;"],[0,"&Scedil;"],[0,"&scedil;"],[0,"&Scaron;"],[0,"&scaron;"],[0,"&Tcedil;"],[0,"&tcedil;"],[0,"&Tcaron;"],[0,"&tcaron;"],[0,"&Tstrok;"],[0,"&tstrok;"],[0,"&Utilde;"],[0,"&utilde;"],[0,"&Umacr;"],[0,"&umacr;"],[0,"&Ubreve;"],[0,"&ubreve;"],[0,"&Uring;"],[0,"&uring;"],[0,"&Udblac;"],[0,"&udblac;"],[0,"&Uogon;"],[0,"&uogon;"],[0,"&Wcirc;"],[0,"&wcirc;"],[0,"&Ycirc;"],[0,"&ycirc;"],[0,"&Yuml;"],[0,"&Zacute;"],[0,"&zacute;"],[0,"&Zdot;"],[0,"&zdot;"],[0,"&Zcaron;"],[0,"&zcaron;"],[19,"&fnof;"],[34,"&imped;"],[63,"&gacute;"],[65,"&jmath;"],[142,"&circ;"],[0,"&caron;"],[16,"&breve;"],[0,"&DiacriticalDot;"],[0,"&ring;"],[0,"&ogon;"],[0,"&DiacriticalTilde;"],[0,"&dblac;"],[51,"&DownBreve;"],[127,"&Alpha;"],[0,"&Beta;"],[0,"&Gamma;"],[0,"&Delta;"],[0,"&Epsilon;"],[0,"&Zeta;"],[0,"&Eta;"],[0,"&Theta;"],[0,"&Iota;"],[0,"&Kappa;"],[0,"&Lambda;"],[0,"&Mu;"],[0,"&Nu;"],[0,"&Xi;"],[0,"&Omicron;"],[0,"&Pi;"],[0,"&Rho;"],[1,"&Sigma;"],[0,"&Tau;"],[0,"&Upsilon;"],[0,"&Phi;"],[0,"&Chi;"],[0,"&Psi;"],[0,"&ohm;"],[7,"&alpha;"],[0,"&beta;"],[0,"&gamma;"],[0,"&delta;"],[0,"&epsi;"],[0,"&zeta;"],[0,"&eta;"],[0,"&theta;"],[0,"&iota;"],[0,"&kappa;"],[0,"&lambda;"],[0,"&mu;"],[0,"&nu;"],[0,"&xi;"],[0,"&omicron;"],[0,"&pi;"],[0,"&rho;"],[0,"&sigmaf;"],[0,"&sigma;"],[0,"&tau;"],[0,"&upsi;"],[0,"&phi;"],[0,"&chi;"],[0,"&psi;"],[0,"&omega;"],[7,"&thetasym;"],[0,"&Upsi;"],[2,"&phiv;"],[0,"&piv;"],[5,"&Gammad;"],[0,"&digamma;"],[18,"&kappav;"],[0,"&rhov;"],[3,"&epsiv;"],[0,"&backepsilon;"],[10,"&IOcy;"],[0,"&DJcy;"],[0,"&GJcy;"],[0,"&Jukcy;"],[0,"&DScy;"],[0,"&Iukcy;"],[0,"&YIcy;"],[0,"&Jsercy;"],[0,"&LJcy;"],[0,"&NJcy;"],[0,"&TSHcy;"],[0,"&KJcy;"],[1,"&Ubrcy;"],[0,"&DZcy;"],[0,"&Acy;"],[0,"&Bcy;"],[0,"&Vcy;"],[0,"&Gcy;"],[0,"&Dcy;"],[0,"&IEcy;"],[0,"&ZHcy;"],[0,"&Zcy;"],[0,"&Icy;"],[0,"&Jcy;"],[0,"&Kcy;"],[0,"&Lcy;"],[0,"&Mcy;"],[0,"&Ncy;"],[0,"&Ocy;"],[0,"&Pcy;"],[0,"&Rcy;"],[0,"&Scy;"],[0,"&Tcy;"],[0,"&Ucy;"],[0,"&Fcy;"],[0,"&KHcy;"],[0,"&TScy;"],[0,"&CHcy;"],[0,"&SHcy;"],[0,"&SHCHcy;"],[0,"&HARDcy;"],[0,"&Ycy;"],[0,"&SOFTcy;"],[0,"&Ecy;"],[0,"&YUcy;"],[0,"&YAcy;"],[0,"&acy;"],[0,"&bcy;"],[0,"&vcy;"],[0,"&gcy;"],[0,"&dcy;"],[0,"&iecy;"],[0,"&zhcy;"],[0,"&zcy;"],[0,"&icy;"],[0,"&jcy;"],[0,"&kcy;"],[0,"&lcy;"],[0,"&mcy;"],[0,"&ncy;"],[0,"&ocy;"],[0,"&pcy;"],[0,"&rcy;"],[0,"&scy;"],[0,"&tcy;"],[0,"&ucy;"],[0,"&fcy;"],[0,"&khcy;"],[0,"&tscy;"],[0,"&chcy;"],[0,"&shcy;"],[0,"&shchcy;"],[0,"&hardcy;"],[0,"&ycy;"],[0,"&softcy;"],[0,"&ecy;"],[0,"&yucy;"],[0,"&yacy;"],[1,"&iocy;"],[0,"&djcy;"],[0,"&gjcy;"],[0,"&jukcy;"],[0,"&dscy;"],[0,"&iukcy;"],[0,"&yicy;"],[0,"&jsercy;"],[0,"&ljcy;"],[0,"&njcy;"],[0,"&tshcy;"],[0,"&kjcy;"],[1,"&ubrcy;"],[0,"&dzcy;"],[7074,"&ensp;"],[0,"&emsp;"],[0,"&emsp13;"],[0,"&emsp14;"],[1,"&numsp;"],[0,"&puncsp;"],[0,"&ThinSpace;"],[0,"&hairsp;"],[0,"&NegativeMediumSpace;"],[0,"&zwnj;"],[0,"&zwj;"],[0,"&lrm;"],[0,"&rlm;"],[0,"&dash;"],[2,"&ndash;"],[0,"&mdash;"],[0,"&horbar;"],[0,"&Verbar;"],[1,"&lsquo;"],[0,"&CloseCurlyQuote;"],[0,"&lsquor;"],[1,"&ldquo;"],[0,"&CloseCurlyDoubleQuote;"],[0,"&bdquo;"],[1,"&dagger;"],[0,"&Dagger;"],[0,"&bull;"],[2,"&nldr;"],[0,"&hellip;"],[9,"&permil;"],[0,"&pertenk;"],[0,"&prime;"],[0,"&Prime;"],[0,"&tprime;"],[0,"&backprime;"],[3,"&lsaquo;"],[0,"&rsaquo;"],[3,"&oline;"],[2,"&caret;"],[1,"&hybull;"],[0,"&frasl;"],[10,"&bsemi;"],[7,"&qprime;"],[7,{v:"&MediumSpace;",n:8202,o:"&ThickSpace;"}],[0,"&NoBreak;"],[0,"&af;"],[0,"&InvisibleTimes;"],[0,"&ic;"],[72,"&euro;"],[46,"&tdot;"],[0,"&DotDot;"],[37,"&complexes;"],[2,"&incare;"],[4,"&gscr;"],[0,"&hamilt;"],[0,"&Hfr;"],[0,"&Hopf;"],[0,"&planckh;"],[0,"&hbar;"],[0,"&imagline;"],[0,"&Ifr;"],[0,"&lagran;"],[0,"&ell;"],[1,"&naturals;"],[0,"&numero;"],[0,"&copysr;"],[0,"&weierp;"],[0,"&Popf;"],[0,"&Qopf;"],[0,"&realine;"],[0,"&real;"],[0,"&reals;"],[0,"&rx;"],[3,"&trade;"],[1,"&integers;"],[2,"&mho;"],[0,"&zeetrf;"],[0,"&iiota;"],[2,"&bernou;"],[0,"&Cayleys;"],[1,"&escr;"],[0,"&Escr;"],[0,"&Fouriertrf;"],[1,"&Mellintrf;"],[0,"&order;"],[0,"&alefsym;"],[0,"&beth;"],[0,"&gimel;"],[0,"&daleth;"],[12,"&CapitalDifferentialD;"],[0,"&dd;"],[0,"&ee;"],[0,"&ii;"],[10,"&frac13;"],[0,"&frac23;"],[0,"&frac15;"],[0,"&frac25;"],[0,"&frac35;"],[0,"&frac45;"],[0,"&frac16;"],[0,"&frac56;"],[0,"&frac18;"],[0,"&frac38;"],[0,"&frac58;"],[0,"&frac78;"],[49,"&larr;"],[0,"&ShortUpArrow;"],[0,"&rarr;"],[0,"&darr;"],[0,"&harr;"],[0,"&updownarrow;"],[0,"&nwarr;"],[0,"&nearr;"],[0,"&LowerRightArrow;"],[0,"&LowerLeftArrow;"],[0,"&nlarr;"],[0,"&nrarr;"],[1,{v:"&rarrw;",n:824,o:"&nrarrw;"}],[0,"&Larr;"],[0,"&Uarr;"],[0,"&Rarr;"],[0,"&Darr;"],[0,"&larrtl;"],[0,"&rarrtl;"],[0,"&LeftTeeArrow;"],[0,"&mapstoup;"],[0,"&map;"],[0,"&DownTeeArrow;"],[1,"&hookleftarrow;"],[0,"&hookrightarrow;"],[0,"&larrlp;"],[0,"&looparrowright;"],[0,"&harrw;"],[0,"&nharr;"],[1,"&lsh;"],[0,"&rsh;"],[0,"&ldsh;"],[0,"&rdsh;"],[1,"&crarr;"],[0,"&cularr;"],[0,"&curarr;"],[2,"&circlearrowleft;"],[0,"&circlearrowright;"],[0,"&leftharpoonup;"],[0,"&DownLeftVector;"],[0,"&RightUpVector;"],[0,"&LeftUpVector;"],[0,"&rharu;"],[0,"&DownRightVector;"],[0,"&dharr;"],[0,"&dharl;"],[0,"&RightArrowLeftArrow;"],[0,"&udarr;"],[0,"&LeftArrowRightArrow;"],[0,"&leftleftarrows;"],[0,"&upuparrows;"],[0,"&rightrightarrows;"],[0,"&ddarr;"],[0,"&leftrightharpoons;"],[0,"&Equilibrium;"],[0,"&nlArr;"],[0,"&nhArr;"],[0,"&nrArr;"],[0,"&DoubleLeftArrow;"],[0,"&DoubleUpArrow;"],[0,"&DoubleRightArrow;"],[0,"&dArr;"],[0,"&DoubleLeftRightArrow;"],[0,"&DoubleUpDownArrow;"],[0,"&nwArr;"],[0,"&neArr;"],[0,"&seArr;"],[0,"&swArr;"],[0,"&lAarr;"],[0,"&rAarr;"],[1,"&zigrarr;"],[6,"&larrb;"],[0,"&rarrb;"],[15,"&DownArrowUpArrow;"],[7,"&loarr;"],[0,"&roarr;"],[0,"&hoarr;"],[0,"&forall;"],[0,"&comp;"],[0,{v:"&part;",n:824,o:"&npart;"}],[0,"&exist;"],[0,"&nexist;"],[0,"&empty;"],[1,"&Del;"],[0,"&Element;"],[0,"&NotElement;"],[1,"&ni;"],[0,"&notni;"],[2,"&prod;"],[0,"&coprod;"],[0,"&sum;"],[0,"&minus;"],[0,"&MinusPlus;"],[0,"&dotplus;"],[1,"&Backslash;"],[0,"&lowast;"],[0,"&compfn;"],[1,"&radic;"],[2,"&prop;"],[0,"&infin;"],[0,"&angrt;"],[0,{v:"&ang;",n:8402,o:"&nang;"}],[0,"&angmsd;"],[0,"&angsph;"],[0,"&mid;"],[0,"&nmid;"],[0,"&DoubleVerticalBar;"],[0,"&NotDoubleVerticalBar;"],[0,"&and;"],[0,"&or;"],[0,{v:"&cap;",n:65024,o:"&caps;"}],[0,{v:"&cup;",n:65024,o:"&cups;"}],[0,"&int;"],[0,"&Int;"],[0,"&iiint;"],[0,"&conint;"],[0,"&Conint;"],[0,"&Cconint;"],[0,"&cwint;"],[0,"&ClockwiseContourIntegral;"],[0,"&awconint;"],[0,"&there4;"],[0,"&becaus;"],[0,"&ratio;"],[0,"&Colon;"],[0,"&dotminus;"],[1,"&mDDot;"],[0,"&homtht;"],[0,{v:"&sim;",n:8402,o:"&nvsim;"}],[0,{v:"&backsim;",n:817,o:"&race;"}],[0,{v:"&ac;",n:819,o:"&acE;"}],[0,"&acd;"],[0,"&VerticalTilde;"],[0,"&NotTilde;"],[0,{v:"&eqsim;",n:824,o:"&nesim;"}],[0,"&sime;"],[0,"&NotTildeEqual;"],[0,"&cong;"],[0,"&simne;"],[0,"&ncong;"],[0,"&ap;"],[0,"&nap;"],[0,"&ape;"],[0,{v:"&apid;",n:824,o:"&napid;"}],[0,"&backcong;"],[0,{v:"&asympeq;",n:8402,o:"&nvap;"}],[0,{v:"&bump;",n:824,o:"&nbump;"}],[0,{v:"&bumpe;",n:824,o:"&nbumpe;"}],[0,{v:"&doteq;",n:824,o:"&nedot;"}],[0,"&doteqdot;"],[0,"&efDot;"],[0,"&erDot;"],[0,"&Assign;"],[0,"&ecolon;"],[0,"&ecir;"],[0,"&circeq;"],[1,"&wedgeq;"],[0,"&veeeq;"],[1,"&triangleq;"],[2,"&equest;"],[0,"&ne;"],[0,{v:"&Congruent;",n:8421,o:"&bnequiv;"}],[0,"&nequiv;"],[1,{v:"&le;",n:8402,o:"&nvle;"}],[0,{v:"&ge;",n:8402,o:"&nvge;"}],[0,{v:"&lE;",n:824,o:"&nlE;"}],[0,{v:"&gE;",n:824,o:"&ngE;"}],[0,{v:"&lnE;",n:65024,o:"&lvertneqq;"}],[0,{v:"&gnE;",n:65024,o:"&gvertneqq;"}],[0,{v:"&ll;",n:new Map(dh([[824,"&nLtv;"],[7577,"&nLt;"]]))}],[0,{v:"&gg;",n:new Map(dh([[824,"&nGtv;"],[7577,"&nGt;"]]))}],[0,"&between;"],[0,"&NotCupCap;"],[0,"&nless;"],[0,"&ngt;"],[0,"&nle;"],[0,"&nge;"],[0,"&lesssim;"],[0,"&GreaterTilde;"],[0,"&nlsim;"],[0,"&ngsim;"],[0,"&LessGreater;"],[0,"&gl;"],[0,"&NotLessGreater;"],[0,"&NotGreaterLess;"],[0,"&pr;"],[0,"&sc;"],[0,"&prcue;"],[0,"&sccue;"],[0,"&PrecedesTilde;"],[0,{v:"&scsim;",n:824,o:"&NotSucceedsTilde;"}],[0,"&NotPrecedes;"],[0,"&NotSucceeds;"],[0,{v:"&sub;",n:8402,o:"&NotSubset;"}],[0,{v:"&sup;",n:8402,o:"&NotSuperset;"}],[0,"&nsub;"],[0,"&nsup;"],[0,"&sube;"],[0,"&supe;"],[0,"&NotSubsetEqual;"],[0,"&NotSupersetEqual;"],[0,{v:"&subne;",n:65024,o:"&varsubsetneq;"}],[0,{v:"&supne;",n:65024,o:"&varsupsetneq;"}],[1,"&cupdot;"],[0,"&UnionPlus;"],[0,{v:"&sqsub;",n:824,o:"&NotSquareSubset;"}],[0,{v:"&sqsup;",n:824,o:"&NotSquareSuperset;"}],[0,"&sqsube;"],[0,"&sqsupe;"],[0,{v:"&sqcap;",n:65024,o:"&sqcaps;"}],[0,{v:"&sqcup;",n:65024,o:"&sqcups;"}],[0,"&CirclePlus;"],[0,"&CircleMinus;"],[0,"&CircleTimes;"],[0,"&osol;"],[0,"&CircleDot;"],[0,"&circledcirc;"],[0,"&circledast;"],[1,"&circleddash;"],[0,"&boxplus;"],[0,"&boxminus;"],[0,"&boxtimes;"],[0,"&dotsquare;"],[0,"&RightTee;"],[0,"&dashv;"],[0,"&DownTee;"],[0,"&bot;"],[1,"&models;"],[0,"&DoubleRightTee;"],[0,"&Vdash;"],[0,"&Vvdash;"],[0,"&VDash;"],[0,"&nvdash;"],[0,"&nvDash;"],[0,"&nVdash;"],[0,"&nVDash;"],[0,"&prurel;"],[1,"&LeftTriangle;"],[0,"&RightTriangle;"],[0,{v:"&LeftTriangleEqual;",n:8402,o:"&nvltrie;"}],[0,{v:"&RightTriangleEqual;",n:8402,o:"&nvrtrie;"}],[0,"&origof;"],[0,"&imof;"],[0,"&multimap;"],[0,"&hercon;"],[0,"&intcal;"],[0,"&veebar;"],[1,"&barvee;"],[0,"&angrtvb;"],[0,"&lrtri;"],[0,"&bigwedge;"],[0,"&bigvee;"],[0,"&bigcap;"],[0,"&bigcup;"],[0,"&diam;"],[0,"&sdot;"],[0,"&sstarf;"],[0,"&divideontimes;"],[0,"&bowtie;"],[0,"&ltimes;"],[0,"&rtimes;"],[0,"&leftthreetimes;"],[0,"&rightthreetimes;"],[0,"&backsimeq;"],[0,"&curlyvee;"],[0,"&curlywedge;"],[0,"&Sub;"],[0,"&Sup;"],[0,"&Cap;"],[0,"&Cup;"],[0,"&fork;"],[0,"&epar;"],[0,"&lessdot;"],[0,"&gtdot;"],[0,{v:"&Ll;",n:824,o:"&nLl;"}],[0,{v:"&Gg;",n:824,o:"&nGg;"}],[0,{v:"&leg;",n:65024,o:"&lesg;"}],[0,{v:"&gel;",n:65024,o:"&gesl;"}],[2,"&cuepr;"],[0,"&cuesc;"],[0,"&NotPrecedesSlantEqual;"],[0,"&NotSucceedsSlantEqual;"],[0,"&NotSquareSubsetEqual;"],[0,"&NotSquareSupersetEqual;"],[2,"&lnsim;"],[0,"&gnsim;"],[0,"&precnsim;"],[0,"&scnsim;"],[0,"&nltri;"],[0,"&NotRightTriangle;"],[0,"&nltrie;"],[0,"&NotRightTriangleEqual;"],[0,"&vellip;"],[0,"&ctdot;"],[0,"&utdot;"],[0,"&dtdot;"],[0,"&disin;"],[0,"&isinsv;"],[0,"&isins;"],[0,{v:"&isindot;",n:824,o:"&notindot;"}],[0,"&notinvc;"],[0,"&notinvb;"],[1,{v:"&isinE;",n:824,o:"&notinE;"}],[0,"&nisd;"],[0,"&xnis;"],[0,"&nis;"],[0,"&notnivc;"],[0,"&notnivb;"],[6,"&barwed;"],[0,"&Barwed;"],[1,"&lceil;"],[0,"&rceil;"],[0,"&LeftFloor;"],[0,"&rfloor;"],[0,"&drcrop;"],[0,"&dlcrop;"],[0,"&urcrop;"],[0,"&ulcrop;"],[0,"&bnot;"],[1,"&profline;"],[0,"&profsurf;"],[1,"&telrec;"],[0,"&target;"],[5,"&ulcorn;"],[0,"&urcorn;"],[0,"&dlcorn;"],[0,"&drcorn;"],[2,"&frown;"],[0,"&smile;"],[9,"&cylcty;"],[0,"&profalar;"],[7,"&topbot;"],[6,"&ovbar;"],[1,"&solbar;"],[60,"&angzarr;"],[51,"&lmoustache;"],[0,"&rmoustache;"],[2,"&OverBracket;"],[0,"&bbrk;"],[0,"&bbrktbrk;"],[37,"&OverParenthesis;"],[0,"&UnderParenthesis;"],[0,"&OverBrace;"],[0,"&UnderBrace;"],[2,"&trpezium;"],[4,"&elinters;"],[59,"&blank;"],[164,"&circledS;"],[55,"&boxh;"],[1,"&boxv;"],[9,"&boxdr;"],[3,"&boxdl;"],[3,"&boxur;"],[3,"&boxul;"],[3,"&boxvr;"],[7,"&boxvl;"],[7,"&boxhd;"],[7,"&boxhu;"],[7,"&boxvh;"],[19,"&boxH;"],[0,"&boxV;"],[0,"&boxdR;"],[0,"&boxDr;"],[0,"&boxDR;"],[0,"&boxdL;"],[0,"&boxDl;"],[0,"&boxDL;"],[0,"&boxuR;"],[0,"&boxUr;"],[0,"&boxUR;"],[0,"&boxuL;"],[0,"&boxUl;"],[0,"&boxUL;"],[0,"&boxvR;"],[0,"&boxVr;"],[0,"&boxVR;"],[0,"&boxvL;"],[0,"&boxVl;"],[0,"&boxVL;"],[0,"&boxHd;"],[0,"&boxhD;"],[0,"&boxHD;"],[0,"&boxHu;"],[0,"&boxhU;"],[0,"&boxHU;"],[0,"&boxvH;"],[0,"&boxVh;"],[0,"&boxVH;"],[19,"&uhblk;"],[3,"&lhblk;"],[3,"&block;"],[8,"&blk14;"],[0,"&blk12;"],[0,"&blk34;"],[13,"&square;"],[8,"&blacksquare;"],[0,"&EmptyVerySmallSquare;"],[1,"&rect;"],[0,"&marker;"],[2,"&fltns;"],[1,"&bigtriangleup;"],[0,"&blacktriangle;"],[0,"&triangle;"],[2,"&blacktriangleright;"],[0,"&rtri;"],[3,"&bigtriangledown;"],[0,"&blacktriangledown;"],[0,"&dtri;"],[2,"&blacktriangleleft;"],[0,"&ltri;"],[6,"&loz;"],[0,"&cir;"],[32,"&tridot;"],[2,"&bigcirc;"],[8,"&ultri;"],[0,"&urtri;"],[0,"&lltri;"],[0,"&EmptySmallSquare;"],[0,"&FilledSmallSquare;"],[8,"&bigstar;"],[0,"&star;"],[7,"&phone;"],[49,"&female;"],[1,"&male;"],[29,"&spades;"],[2,"&clubs;"],[1,"&hearts;"],[0,"&diamondsuit;"],[3,"&sung;"],[2,"&flat;"],[0,"&natural;"],[0,"&sharp;"],[163,"&check;"],[3,"&cross;"],[8,"&malt;"],[21,"&sext;"],[33,"&VerticalSeparator;"],[25,"&lbbrk;"],[0,"&rbbrk;"],[84,"&bsolhsub;"],[0,"&suphsol;"],[28,"&LeftDoubleBracket;"],[0,"&RightDoubleBracket;"],[0,"&lang;"],[0,"&rang;"],[0,"&Lang;"],[0,"&Rang;"],[0,"&loang;"],[0,"&roang;"],[7,"&longleftarrow;"],[0,"&longrightarrow;"],[0,"&longleftrightarrow;"],[0,"&DoubleLongLeftArrow;"],[0,"&DoubleLongRightArrow;"],[0,"&DoubleLongLeftRightArrow;"],[1,"&longmapsto;"],[2,"&dzigrarr;"],[258,"&nvlArr;"],[0,"&nvrArr;"],[0,"&nvHarr;"],[0,"&Map;"],[6,"&lbarr;"],[0,"&bkarow;"],[0,"&lBarr;"],[0,"&dbkarow;"],[0,"&drbkarow;"],[0,"&DDotrahd;"],[0,"&UpArrowBar;"],[0,"&DownArrowBar;"],[2,"&Rarrtl;"],[2,"&latail;"],[0,"&ratail;"],[0,"&lAtail;"],[0,"&rAtail;"],[0,"&larrfs;"],[0,"&rarrfs;"],[0,"&larrbfs;"],[0,"&rarrbfs;"],[2,"&nwarhk;"],[0,"&nearhk;"],[0,"&hksearow;"],[0,"&hkswarow;"],[0,"&nwnear;"],[0,"&nesear;"],[0,"&seswar;"],[0,"&swnwar;"],[8,{v:"&rarrc;",n:824,o:"&nrarrc;"}],[1,"&cudarrr;"],[0,"&ldca;"],[0,"&rdca;"],[0,"&cudarrl;"],[0,"&larrpl;"],[2,"&curarrm;"],[0,"&cularrp;"],[7,"&rarrpl;"],[2,"&harrcir;"],[0,"&Uarrocir;"],[0,"&lurdshar;"],[0,"&ldrushar;"],[2,"&LeftRightVector;"],[0,"&RightUpDownVector;"],[0,"&DownLeftRightVector;"],[0,"&LeftUpDownVector;"],[0,"&LeftVectorBar;"],[0,"&RightVectorBar;"],[0,"&RightUpVectorBar;"],[0,"&RightDownVectorBar;"],[0,"&DownLeftVectorBar;"],[0,"&DownRightVectorBar;"],[0,"&LeftUpVectorBar;"],[0,"&LeftDownVectorBar;"],[0,"&LeftTeeVector;"],[0,"&RightTeeVector;"],[0,"&RightUpTeeVector;"],[0,"&RightDownTeeVector;"],[0,"&DownLeftTeeVector;"],[0,"&DownRightTeeVector;"],[0,"&LeftUpTeeVector;"],[0,"&LeftDownTeeVector;"],[0,"&lHar;"],[0,"&uHar;"],[0,"&rHar;"],[0,"&dHar;"],[0,"&luruhar;"],[0,"&ldrdhar;"],[0,"&ruluhar;"],[0,"&rdldhar;"],[0,"&lharul;"],[0,"&llhard;"],[0,"&rharul;"],[0,"&lrhard;"],[0,"&udhar;"],[0,"&duhar;"],[0,"&RoundImplies;"],[0,"&erarr;"],[0,"&simrarr;"],[0,"&larrsim;"],[0,"&rarrsim;"],[0,"&rarrap;"],[0,"&ltlarr;"],[1,"&gtrarr;"],[0,"&subrarr;"],[1,"&suplarr;"],[0,"&lfisht;"],[0,"&rfisht;"],[0,"&ufisht;"],[0,"&dfisht;"],[5,"&lopar;"],[0,"&ropar;"],[4,"&lbrke;"],[0,"&rbrke;"],[0,"&lbrkslu;"],[0,"&rbrksld;"],[0,"&lbrksld;"],[0,"&rbrkslu;"],[0,"&langd;"],[0,"&rangd;"],[0,"&lparlt;"],[0,"&rpargt;"],[0,"&gtlPar;"],[0,"&ltrPar;"],[3,"&vzigzag;"],[1,"&vangrt;"],[0,"&angrtvbd;"],[6,"&ange;"],[0,"&range;"],[0,"&dwangle;"],[0,"&uwangle;"],[0,"&angmsdaa;"],[0,"&angmsdab;"],[0,"&angmsdac;"],[0,"&angmsdad;"],[0,"&angmsdae;"],[0,"&angmsdaf;"],[0,"&angmsdag;"],[0,"&angmsdah;"],[0,"&bemptyv;"],[0,"&demptyv;"],[0,"&cemptyv;"],[0,"&raemptyv;"],[0,"&laemptyv;"],[0,"&ohbar;"],[0,"&omid;"],[0,"&opar;"],[1,"&operp;"],[1,"&olcross;"],[0,"&odsold;"],[1,"&olcir;"],[0,"&ofcir;"],[0,"&olt;"],[0,"&ogt;"],[0,"&cirscir;"],[0,"&cirE;"],[0,"&solb;"],[0,"&bsolb;"],[3,"&boxbox;"],[3,"&trisb;"],[0,"&rtriltri;"],[0,{v:"&LeftTriangleBar;",n:824,o:"&NotLeftTriangleBar;"}],[0,{v:"&RightTriangleBar;",n:824,o:"&NotRightTriangleBar;"}],[11,"&iinfin;"],[0,"&infintie;"],[0,"&nvinfin;"],[4,"&eparsl;"],[0,"&smeparsl;"],[0,"&eqvparsl;"],[5,"&blacklozenge;"],[8,"&RuleDelayed;"],[1,"&dsol;"],[9,"&bigodot;"],[0,"&bigoplus;"],[0,"&bigotimes;"],[1,"&biguplus;"],[1,"&bigsqcup;"],[5,"&iiiint;"],[0,"&fpartint;"],[2,"&cirfnint;"],[0,"&awint;"],[0,"&rppolint;"],[0,"&scpolint;"],[0,"&npolint;"],[0,"&pointint;"],[0,"&quatint;"],[0,"&intlarhk;"],[10,"&pluscir;"],[0,"&plusacir;"],[0,"&simplus;"],[0,"&plusdu;"],[0,"&plussim;"],[0,"&plustwo;"],[1,"&mcomma;"],[0,"&minusdu;"],[2,"&loplus;"],[0,"&roplus;"],[0,"&Cross;"],[0,"&timesd;"],[0,"&timesbar;"],[1,"&smashp;"],[0,"&lotimes;"],[0,"&rotimes;"],[0,"&otimesas;"],[0,"&Otimes;"],[0,"&odiv;"],[0,"&triplus;"],[0,"&triminus;"],[0,"&tritime;"],[0,"&intprod;"],[2,"&amalg;"],[0,"&capdot;"],[1,"&ncup;"],[0,"&ncap;"],[0,"&capand;"],[0,"&cupor;"],[0,"&cupcap;"],[0,"&capcup;"],[0,"&cupbrcap;"],[0,"&capbrcup;"],[0,"&cupcup;"],[0,"&capcap;"],[0,"&ccups;"],[0,"&ccaps;"],[2,"&ccupssm;"],[2,"&And;"],[0,"&Or;"],[0,"&andand;"],[0,"&oror;"],[0,"&orslope;"],[0,"&andslope;"],[1,"&andv;"],[0,"&orv;"],[0,"&andd;"],[0,"&ord;"],[1,"&wedbar;"],[6,"&sdote;"],[3,"&simdot;"],[2,{v:"&congdot;",n:824,o:"&ncongdot;"}],[0,"&easter;"],[0,"&apacir;"],[0,{v:"&apE;",n:824,o:"&napE;"}],[0,"&eplus;"],[0,"&pluse;"],[0,"&Esim;"],[0,"&Colone;"],[0,"&Equal;"],[1,"&ddotseq;"],[0,"&equivDD;"],[0,"&ltcir;"],[0,"&gtcir;"],[0,"&ltquest;"],[0,"&gtquest;"],[0,{v:"&leqslant;",n:824,o:"&nleqslant;"}],[0,{v:"&geqslant;",n:824,o:"&ngeqslant;"}],[0,"&lesdot;"],[0,"&gesdot;"],[0,"&lesdoto;"],[0,"&gesdoto;"],[0,"&lesdotor;"],[0,"&gesdotol;"],[0,"&lap;"],[0,"&gap;"],[0,"&lne;"],[0,"&gne;"],[0,"&lnap;"],[0,"&gnap;"],[0,"&lEg;"],[0,"&gEl;"],[0,"&lsime;"],[0,"&gsime;"],[0,"&lsimg;"],[0,"&gsiml;"],[0,"&lgE;"],[0,"&glE;"],[0,"&lesges;"],[0,"&gesles;"],[0,"&els;"],[0,"&egs;"],[0,"&elsdot;"],[0,"&egsdot;"],[0,"&el;"],[0,"&eg;"],[2,"&siml;"],[0,"&simg;"],[0,"&simlE;"],[0,"&simgE;"],[0,{v:"&LessLess;",n:824,o:"&NotNestedLessLess;"}],[0,{v:"&GreaterGreater;",n:824,o:"&NotNestedGreaterGreater;"}],[1,"&glj;"],[0,"&gla;"],[0,"&ltcc;"],[0,"&gtcc;"],[0,"&lescc;"],[0,"&gescc;"],[0,"&smt;"],[0,"&lat;"],[0,{v:"&smte;",n:65024,o:"&smtes;"}],[0,{v:"&late;",n:65024,o:"&lates;"}],[0,"&bumpE;"],[0,{v:"&PrecedesEqual;",n:824,o:"&NotPrecedesEqual;"}],[0,{v:"&sce;",n:824,o:"&NotSucceedsEqual;"}],[2,"&prE;"],[0,"&scE;"],[0,"&precneqq;"],[0,"&scnE;"],[0,"&prap;"],[0,"&scap;"],[0,"&precnapprox;"],[0,"&scnap;"],[0,"&Pr;"],[0,"&Sc;"],[0,"&subdot;"],[0,"&supdot;"],[0,"&subplus;"],[0,"&supplus;"],[0,"&submult;"],[0,"&supmult;"],[0,"&subedot;"],[0,"&supedot;"],[0,{v:"&subE;",n:824,o:"&nsubE;"}],[0,{v:"&supE;",n:824,o:"&nsupE;"}],[0,"&subsim;"],[0,"&supsim;"],[2,{v:"&subnE;",n:65024,o:"&varsubsetneqq;"}],[0,{v:"&supnE;",n:65024,o:"&varsupsetneqq;"}],[2,"&csub;"],[0,"&csup;"],[0,"&csube;"],[0,"&csupe;"],[0,"&subsup;"],[0,"&supsub;"],[0,"&subsub;"],[0,"&supsup;"],[0,"&suphsub;"],[0,"&supdsub;"],[0,"&forkv;"],[0,"&topfork;"],[0,"&mlcp;"],[8,"&Dashv;"],[1,"&Vdashl;"],[0,"&Barv;"],[0,"&vBar;"],[0,"&vBarv;"],[1,"&Vbar;"],[0,"&Not;"],[0,"&bNot;"],[0,"&rnmid;"],[0,"&cirmid;"],[0,"&midcir;"],[0,"&topcir;"],[0,"&nhpar;"],[0,"&parsim;"],[9,{v:"&parsl;",n:8421,o:"&nparsl;"}],[44343,{n:new Map(dh([[56476,"&Ascr;"],[1,"&Cscr;"],[0,"&Dscr;"],[2,"&Gscr;"],[2,"&Jscr;"],[0,"&Kscr;"],[2,"&Nscr;"],[0,"&Oscr;"],[0,"&Pscr;"],[0,"&Qscr;"],[1,"&Sscr;"],[0,"&Tscr;"],[0,"&Uscr;"],[0,"&Vscr;"],[0,"&Wscr;"],[0,"&Xscr;"],[0,"&Yscr;"],[0,"&Zscr;"],[0,"&ascr;"],[0,"&bscr;"],[0,"&cscr;"],[0,"&dscr;"],[1,"&fscr;"],[1,"&hscr;"],[0,"&iscr;"],[0,"&jscr;"],[0,"&kscr;"],[0,"&lscr;"],[0,"&mscr;"],[0,"&nscr;"],[1,"&pscr;"],[0,"&qscr;"],[0,"&rscr;"],[0,"&sscr;"],[0,"&tscr;"],[0,"&uscr;"],[0,"&vscr;"],[0,"&wscr;"],[0,"&xscr;"],[0,"&yscr;"],[0,"&zscr;"],[52,"&Afr;"],[0,"&Bfr;"],[1,"&Dfr;"],[0,"&Efr;"],[0,"&Ffr;"],[0,"&Gfr;"],[2,"&Jfr;"],[0,"&Kfr;"],[0,"&Lfr;"],[0,"&Mfr;"],[0,"&Nfr;"],[0,"&Ofr;"],[0,"&Pfr;"],[0,"&Qfr;"],[1,"&Sfr;"],[0,"&Tfr;"],[0,"&Ufr;"],[0,"&Vfr;"],[0,"&Wfr;"],[0,"&Xfr;"],[0,"&Yfr;"],[1,"&afr;"],[0,"&bfr;"],[0,"&cfr;"],[0,"&dfr;"],[0,"&efr;"],[0,"&ffr;"],[0,"&gfr;"],[0,"&hfr;"],[0,"&ifr;"],[0,"&jfr;"],[0,"&kfr;"],[0,"&lfr;"],[0,"&mfr;"],[0,"&nfr;"],[0,"&ofr;"],[0,"&pfr;"],[0,"&qfr;"],[0,"&rfr;"],[0,"&sfr;"],[0,"&tfr;"],[0,"&ufr;"],[0,"&vfr;"],[0,"&wfr;"],[0,"&xfr;"],[0,"&yfr;"],[0,"&zfr;"],[0,"&Aopf;"],[0,"&Bopf;"],[1,"&Dopf;"],[0,"&Eopf;"],[0,"&Fopf;"],[0,"&Gopf;"],[1,"&Iopf;"],[0,"&Jopf;"],[0,"&Kopf;"],[0,"&Lopf;"],[0,"&Mopf;"],[1,"&Oopf;"],[3,"&Sopf;"],[0,"&Topf;"],[0,"&Uopf;"],[0,"&Vopf;"],[0,"&Wopf;"],[0,"&Xopf;"],[0,"&Yopf;"],[1,"&aopf;"],[0,"&bopf;"],[0,"&copf;"],[0,"&dopf;"],[0,"&eopf;"],[0,"&fopf;"],[0,"&gopf;"],[0,"&hopf;"],[0,"&iopf;"],[0,"&jopf;"],[0,"&kopf;"],[0,"&lopf;"],[0,"&mopf;"],[0,"&nopf;"],[0,"&oopf;"],[0,"&popf;"],[0,"&qopf;"],[0,"&ropf;"],[0,"&sopf;"],[0,"&topf;"],[0,"&uopf;"],[0,"&vopf;"],[0,"&wopf;"],[0,"&xopf;"],[0,"&yopf;"],[0,"&zopf;"]]))}],[8906,"&fflig;"],[0,"&filig;"],[0,"&fllig;"],[0,"&ffilig;"],[0,"&ffllig;"]]));var Uh={};(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.escapeText=i.escapeAttribute=i.escapeUTF8=i.escape=i.encodeXML=i.getCodePoint=i.xmlReplacer=void 0,i.xmlReplacer=/["&'<>$\x80-\uFFFF]/g;var e=new Map([[34,"&quot;"],[38,"&amp;"],[39,"&apos;"],[60,"&lt;"],[62,"&gt;"]]);i.getCodePoint=String.prototype.codePointAt!=null?function(r,s){return r.codePointAt(s)}:function(r,s){return(r.charCodeAt(s)&64512)===55296?(r.charCodeAt(s)-55296)*1024+r.charCodeAt(s+1)-56320+65536:r.charCodeAt(s)};function t(r){for(var s="",o=0,l;(l=i.xmlReplacer.exec(r))!==null;){var u=l.index,c=r.charCodeAt(u),p=e.get(c);p!==void 0?(s+=r.substring(o,u)+p,o=u+1):(s+="".concat(r.substring(o,u),"&#x").concat((0,i.getCodePoint)(r,u).toString(16),";"),o=i.xmlReplacer.lastIndex+=+((c&64512)===55296))}return s+r.substr(o)}i.encodeXML=t,i.escape=t;function n(r,s){return function(l){for(var u,c=0,p="";u=r.exec(l);)c!==u.index&&(p+=l.substring(c,u.index)),p+=s.get(u[0].charCodeAt(0)),c=u.index+1;return p+l.substring(c)}}i.escapeUTF8=n(/[&<>'"]/g,e),i.escapeAttribute=n(/["&\u00A0]/g,new Map([[34,"&quot;"],[38,"&amp;"],[160,"&nbsp;"]])),i.escapeText=n(/[&<>\u00A0]/g,new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[160,"&nbsp;"]]))})(Uh);var nC=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty($a,"__esModule",{value:!0});$a.encodeNonAsciiHTML=$a.encodeHTML=void 0;var iC=nC(_f),v1=Uh,rC=/[\t\n!-,./:-@[-`\f{-}$\x80-\uFFFF]/g;function sC(i){return w1(rC,i)}$a.encodeHTML=sC;function oC(i){return w1(v1.xmlReplacer,i)}$a.encodeNonAsciiHTML=oC;function w1(i,e){for(var t="",n=0,r;(r=i.exec(e))!==null;){var s=r.index;t+=e.substring(n,s);var o=e.charCodeAt(s),l=iC.default.get(o);if(typeof l=="object"){if(s+1<e.length){var u=e.charCodeAt(s+1),c=typeof l.n=="number"?l.n===u?l.o:void 0:l.n.get(u);if(c!==void 0){t+=c,n=i.lastIndex+=1;continue}}l=l.v}if(l!==void 0)t+=l,n=s+1;else{var p=(0,v1.getCodePoint)(e,s);t+="&#x".concat(p.toString(16),";"),n=i.lastIndex+=+(p!==o)}}return t+e.substr(n)}(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.decodeXMLStrict=i.decodeHTML5Strict=i.decodeHTML4Strict=i.decodeHTML5=i.decodeHTML4=i.decodeHTMLAttribute=i.decodeHTMLStrict=i.decodeHTML=i.decodeXML=i.DecodingMode=i.EntityDecoder=i.encodeHTML5=i.encodeHTML4=i.encodeNonAsciiHTML=i.encodeHTML=i.escapeText=i.escapeAttribute=i.escapeUTF8=i.escape=i.encodeXML=i.encode=i.decodeStrict=i.decode=i.EncodingMode=i.EntityLevel=void 0;var e=hp,t=$a,n=Uh,r;(function(f){f[f.XML=0]="XML",f[f.HTML=1]="HTML"})(r=i.EntityLevel||(i.EntityLevel={}));var s;(function(f){f[f.UTF8=0]="UTF8",f[f.ASCII=1]="ASCII",f[f.Extensive=2]="Extensive",f[f.Attribute=3]="Attribute",f[f.Text=4]="Text"})(s=i.EncodingMode||(i.EncodingMode={}));function o(f,g){g===void 0&&(g=r.XML);var v=typeof g=="number"?g:g.level;if(v===r.HTML){var w=typeof g=="object"?g.mode:void 0;return(0,e.decodeHTML)(f,w)}return(0,e.decodeXML)(f)}i.decode=o;function l(f,g){var v;g===void 0&&(g=r.XML);var w=typeof g=="number"?{level:g}:g;return(v=w.mode)!==null&&v!==void 0||(w.mode=e.DecodingMode.Strict),o(f,w)}i.decodeStrict=l;function u(f,g){g===void 0&&(g=r.XML);var v=typeof g=="number"?{level:g}:g;return v.mode===s.UTF8?(0,n.escapeUTF8)(f):v.mode===s.Attribute?(0,n.escapeAttribute)(f):v.mode===s.Text?(0,n.escapeText)(f):v.level===r.HTML?v.mode===s.ASCII?(0,t.encodeNonAsciiHTML)(f):(0,t.encodeHTML)(f):(0,n.encodeXML)(f)}i.encode=u;var c=Uh;Object.defineProperty(i,"encodeXML",{enumerable:!0,get:function(){return c.encodeXML}}),Object.defineProperty(i,"escape",{enumerable:!0,get:function(){return c.escape}}),Object.defineProperty(i,"escapeUTF8",{enumerable:!0,get:function(){return c.escapeUTF8}}),Object.defineProperty(i,"escapeAttribute",{enumerable:!0,get:function(){return c.escapeAttribute}}),Object.defineProperty(i,"escapeText",{enumerable:!0,get:function(){return c.escapeText}});var p=$a;Object.defineProperty(i,"encodeHTML",{enumerable:!0,get:function(){return p.encodeHTML}}),Object.defineProperty(i,"encodeNonAsciiHTML",{enumerable:!0,get:function(){return p.encodeNonAsciiHTML}}),Object.defineProperty(i,"encodeHTML4",{enumerable:!0,get:function(){return p.encodeHTML}}),Object.defineProperty(i,"encodeHTML5",{enumerable:!0,get:function(){return p.encodeHTML}});var d=hp;Object.defineProperty(i,"EntityDecoder",{enumerable:!0,get:function(){return d.EntityDecoder}}),Object.defineProperty(i,"DecodingMode",{enumerable:!0,get:function(){return d.DecodingMode}}),Object.defineProperty(i,"decodeXML",{enumerable:!0,get:function(){return d.decodeXML}}),Object.defineProperty(i,"decodeHTML",{enumerable:!0,get:function(){return d.decodeHTML}}),Object.defineProperty(i,"decodeHTMLStrict",{enumerable:!0,get:function(){return d.decodeHTMLStrict}}),Object.defineProperty(i,"decodeHTMLAttribute",{enumerable:!0,get:function(){return d.decodeHTMLAttribute}}),Object.defineProperty(i,"decodeHTML4",{enumerable:!0,get:function(){return d.decodeHTML}}),Object.defineProperty(i,"decodeHTML5",{enumerable:!0,get:function(){return d.decodeHTML}}),Object.defineProperty(i,"decodeHTML4Strict",{enumerable:!0,get:function(){return d.decodeHTMLStrict}}),Object.defineProperty(i,"decodeHTML5Strict",{enumerable:!0,get:function(){return d.decodeHTMLStrict}}),Object.defineProperty(i,"decodeXMLStrict",{enumerable:!0,get:function(){return d.decodeXML}})})(b1);var Dl={};Object.defineProperty(Dl,"__esModule",{value:!0});Dl.attributeNames=Dl.elementNames=void 0;Dl.elementNames=new Map(["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","textPath"].map(function(i){return[i.toLowerCase(),i]}));Dl.attributeNames=new Map(["definitionURL","attributeName","attributeType","baseFrequency","baseProfile","calcMode","clipPathUnits","diffuseConstant","edgeMode","filterUnits","glyphRef","gradientTransform","gradientUnits","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","numOctaves","pathLength","patternContentUnits","patternTransform","patternUnits","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stitchTiles","surfaceScale","systemLanguage","tableValues","targetX","targetY","textLength","viewBox","viewTarget","xChannelSelector","yChannelSelector","zoomAndPan"].map(function(i){return[i.toLowerCase(),i]}));var tl=ue&&ue.__assign||function(){return tl=Object.assign||function(i){for(var e,t=1,n=arguments.length;t<n;t++){e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(i[r]=e[r])}return i},tl.apply(this,arguments)},aC=ue&&ue.__createBinding||(Object.create?function(i,e,t,n){n===void 0&&(n=t);var r=Object.getOwnPropertyDescriptor(e,t);(!r||("get"in r?!e.__esModule:r.writable||r.configurable))&&(r={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(i,n,r)}:function(i,e,t,n){n===void 0&&(n=t),i[n]=e[t]}),lC=ue&&ue.__setModuleDefault||(Object.create?function(i,e){Object.defineProperty(i,"default",{enumerable:!0,value:e})}:function(i,e){i.default=e}),uC=ue&&ue.__importStar||function(i){if(i&&i.__esModule)return i;var e={};if(i!=null)for(var t in i)t!=="default"&&Object.prototype.hasOwnProperty.call(i,t)&&aC(e,i,t);return lC(e,i),e};Object.defineProperty(Fu,"__esModule",{value:!0});Fu.render=void 0;var no=uC(y1),zh=b1,_1=Dl,hC=new Set(["style","script","xmp","iframe","noembed","noframes","plaintext","noscript"]);function cC(i){return i.replace(/"/g,"&quot;")}function dC(i,e){var t;if(i){var n=((t=e.encodeEntities)!==null&&t!==void 0?t:e.decodeEntities)===!1?cC:e.xmlMode||e.encodeEntities!=="utf8"?zh.encodeXML:zh.escapeAttribute;return Object.keys(i).map(function(r){var s,o,l=(s=i[r])!==null&&s!==void 0?s:"";return e.xmlMode==="foreign"&&(r=(o=_1.attributeNames.get(r))!==null&&o!==void 0?o:r),!e.emptyAttrs&&!e.xmlMode&&l===""?r:"".concat(r,'="').concat(n(l),'"')}).join(" ")}}var Xm=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]);function Ac(i,e){e===void 0&&(e={});for(var t=("length"in i)?i:[i],n="",r=0;r<t.length;r++)n+=pC(t[r],e);return n}Fu.render=Ac;Fu.default=Ac;function pC(i,e){switch(i.type){case no.Root:return Ac(i.children,e);case no.Doctype:case no.Directive:return yC(i);case no.Comment:return wC(i);case no.CDATA:return vC(i);case no.Script:case no.Style:case no.Tag:return mC(i,e);case no.Text:return bC(i,e)}}var fC=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignObject","desc","title"]),gC=new Set(["svg","math"]);function mC(i,e){var t;e.xmlMode==="foreign"&&(i.name=(t=_1.elementNames.get(i.name))!==null&&t!==void 0?t:i.name,i.parent&&fC.has(i.parent.name)&&(e=tl(tl({},e),{xmlMode:!1}))),!e.xmlMode&&gC.has(i.name)&&(e=tl(tl({},e),{xmlMode:"foreign"}));var n="<".concat(i.name),r=dC(i.attribs,e);return r&&(n+=" ".concat(r)),i.children.length===0&&(e.xmlMode?e.selfClosingTags!==!1:e.selfClosingTags&&Xm.has(i.name))?(e.xmlMode||(n+=" "),n+="/>"):(n+=">",i.children.length>0&&(n+=Ac(i.children,e)),(e.xmlMode||!Xm.has(i.name))&&(n+="</".concat(i.name,">"))),n}function yC(i){return"<".concat(i.data,">")}function bC(i,e){var t,n=i.data||"";return((t=e.encodeEntities)!==null&&t!==void 0?t:e.decodeEntities)!==!1&&!(!e.xmlMode&&i.parent&&hC.has(i.parent.name))&&(n=e.xmlMode||e.encodeEntities!=="utf8"?(0,zh.encodeXML)(n):(0,zh.escapeText)(n)),n}function vC(i){return"<![CDATA[".concat(i.children[0].data,"]]>")}function wC(i){return"<!--".concat(i.data,"-->")}var _C=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Ar,"__esModule",{value:!0});Ar.innerText=Ar.textContent=Ar.getText=Ar.getInnerHTML=Ar.getOuterHTML=void 0;var Vs=Wa,CC=_C(Fu),TC=Tc;function C1(i,e){return(0,CC.default)(i,e)}Ar.getOuterHTML=C1;function xC(i,e){return(0,Vs.hasChildren)(i)?i.children.map(function(t){return C1(t,e)}).join(""):""}Ar.getInnerHTML=xC;function wh(i){return Array.isArray(i)?i.map(wh).join(""):(0,Vs.isTag)(i)?i.name==="br"?`
`:wh(i.children):(0,Vs.isCDATA)(i)?wh(i.children):(0,Vs.isText)(i)?i.data:""}Ar.getText=wh;function dp(i){return Array.isArray(i)?i.map(dp).join(""):(0,Vs.hasChildren)(i)&&!(0,Vs.isComment)(i)?dp(i.children):(0,Vs.isText)(i)?i.data:""}Ar.textContent=dp;function pp(i){return Array.isArray(i)?i.map(pp).join(""):(0,Vs.hasChildren)(i)&&(i.type===TC.ElementType.Tag||(0,Vs.isCDATA)(i))?pp(i.children):(0,Vs.isText)(i)?i.data:""}Ar.innerText=pp;var _i={};Object.defineProperty(_i,"__esModule",{value:!0});_i.prevElementSibling=_i.nextElementSibling=_i.getName=_i.hasAttrib=_i.getAttributeValue=_i.getSiblings=_i.getParent=_i.getChildren=void 0;var Cf=Wa;function T1(i){return(0,Cf.hasChildren)(i)?i.children:[]}_i.getChildren=T1;function x1(i){return i.parent||null}_i.getParent=x1;function kC(i){var e,t,n=x1(i);if(n!=null)return T1(n);for(var r=[i],s=i.prev,o=i.next;s!=null;)r.unshift(s),e=s,s=e.prev;for(;o!=null;)r.push(o),t=o,o=t.next;return r}_i.getSiblings=kC;function AC(i,e){var t;return(t=i.attribs)===null||t===void 0?void 0:t[e]}_i.getAttributeValue=AC;function qC(i,e){return i.attribs!=null&&Object.prototype.hasOwnProperty.call(i.attribs,e)&&i.attribs[e]!=null}_i.hasAttrib=qC;function SC(i){return i.name}_i.getName=SC;function EC(i){for(var e,t=i.next;t!==null&&!(0,Cf.isTag)(t);)e=t,t=e.next;return t}_i.nextElementSibling=EC;function IC(i){for(var e,t=i.prev;t!==null&&!(0,Cf.isTag)(t);)e=t,t=e.prev;return t}_i.prevElementSibling=IC;var pr={};Object.defineProperty(pr,"__esModule",{value:!0});pr.prepend=pr.prependChild=pr.append=pr.appendChild=pr.replaceElement=pr.removeElement=void 0;function Bu(i){if(i.prev&&(i.prev.next=i.next),i.next&&(i.next.prev=i.prev),i.parent){var e=i.parent.children;e.splice(e.lastIndexOf(i),1)}}pr.removeElement=Bu;function DC(i,e){var t=e.prev=i.prev;t&&(t.next=e);var n=e.next=i.next;n&&(n.prev=e);var r=e.parent=i.parent;if(r){var s=r.children;s[s.lastIndexOf(i)]=e,i.parent=null}}pr.replaceElement=DC;function RC(i,e){if(Bu(e),e.next=null,e.parent=i,i.children.push(e)>1){var t=i.children[i.children.length-2];t.next=e,e.prev=t}else e.prev=null}pr.appendChild=RC;function $C(i,e){Bu(e);var t=i.parent,n=i.next;if(e.next=n,e.prev=i,i.next=e,e.parent=t,n){if(n.prev=e,t){var r=t.children;r.splice(r.lastIndexOf(n),0,e)}}else t&&t.children.push(e)}pr.append=$C;function NC(i,e){if(Bu(e),e.parent=i,e.prev=null,i.children.unshift(e)!==1){var t=i.children[1];t.prev=e,e.next=t}else e.next=null}pr.prependChild=NC;function LC(i,e){Bu(e);var t=i.parent;if(t){var n=t.children;n.splice(n.indexOf(i),0,e)}i.prev&&(i.prev.next=e),e.parent=t,e.prev=i.prev,e.next=i,i.prev=e}pr.prepend=LC;var er={};Object.defineProperty(er,"__esModule",{value:!0});er.findAll=er.existsOne=er.findOne=er.findOneChild=er.find=er.filter=void 0;var Au=Wa;function MC(i,e,t,n){return t===void 0&&(t=!0),n===void 0&&(n=1/0),Array.isArray(e)||(e=[e]),Tf(i,e,t,n)}er.filter=MC;function Tf(i,e,t,n){for(var r=[],s=0,o=e;s<o.length;s++){var l=o[s];if(i(l)&&(r.push(l),--n<=0))break;if(t&&(0,Au.hasChildren)(l)&&l.children.length>0){var u=Tf(i,l.children,t,n);if(r.push.apply(r,u),n-=u.length,n<=0)break}}return r}er.find=Tf;function OC(i,e){return e.find(i)}er.findOneChild=OC;function k1(i,e,t){t===void 0&&(t=!0);for(var n=null,r=0;r<e.length&&!n;r++){var s=e[r];if((0,Au.isTag)(s))i(s)?n=s:t&&s.children.length>0&&(n=k1(i,s.children,!0));else continue}return n}er.findOne=k1;function A1(i,e){return e.some(function(t){return(0,Au.isTag)(t)&&(i(t)||t.children.length>0&&A1(i,t.children))})}er.existsOne=A1;function PC(i,e){for(var t,n=[],r=e.filter(Au.isTag),s;s=r.shift();){var o=(t=s.children)===null||t===void 0?void 0:t.filter(Au.isTag);o&&o.length>0&&r.unshift.apply(r,o),i(s)&&n.push(s)}return n}er.findAll=PC;var qr={};Object.defineProperty(qr,"__esModule",{value:!0});qr.getElementsByTagType=qr.getElementsByTagName=qr.getElementById=qr.getElements=qr.testElement=void 0;var ga=Wa,qc=er,Hh={tag_name:function(i){return typeof i=="function"?function(e){return(0,ga.isTag)(e)&&i(e.name)}:i==="*"?ga.isTag:function(e){return(0,ga.isTag)(e)&&e.name===i}},tag_type:function(i){return typeof i=="function"?function(e){return i(e.type)}:function(e){return e.type===i}},tag_contains:function(i){return typeof i=="function"?function(e){return(0,ga.isText)(e)&&i(e.data)}:function(e){return(0,ga.isText)(e)&&e.data===i}}};function q1(i,e){return typeof e=="function"?function(t){return(0,ga.isTag)(t)&&e(t.attribs[i])}:function(t){return(0,ga.isTag)(t)&&t.attribs[i]===e}}function FC(i,e){return function(t){return i(t)||e(t)}}function S1(i){var e=Object.keys(i).map(function(t){var n=i[t];return Object.prototype.hasOwnProperty.call(Hh,t)?Hh[t](n):q1(t,n)});return e.length===0?null:e.reduce(FC)}function BC(i,e){var t=S1(i);return t?t(e):!0}qr.testElement=BC;function jC(i,e,t,n){n===void 0&&(n=1/0);var r=S1(i);return r?(0,qc.filter)(r,e,t,n):[]}qr.getElements=jC;function WC(i,e,t){return t===void 0&&(t=!0),Array.isArray(e)||(e=[e]),(0,qc.findOne)(q1("id",i),e,t)}qr.getElementById=WC;function JC(i,e,t,n){return t===void 0&&(t=!0),n===void 0&&(n=1/0),(0,qc.filter)(Hh.tag_name(i),e,t,n)}qr.getElementsByTagName=JC;function VC(i,e,t,n){return t===void 0&&(t=!0),n===void 0&&(n=1/0),(0,qc.filter)(Hh.tag_type(i),e,t,n)}qr.getElementsByTagType=VC;var E1={};(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.uniqueSort=i.compareDocumentPosition=i.DocumentPosition=i.removeSubsets=void 0;var e=Wa;function t(o){for(var l=o.length;--l>=0;){var u=o[l];if(l>0&&o.lastIndexOf(u,l-1)>=0){o.splice(l,1);continue}for(var c=u.parent;c;c=c.parent)if(o.includes(c)){o.splice(l,1);break}}return o}i.removeSubsets=t;var n;(function(o){o[o.DISCONNECTED=1]="DISCONNECTED",o[o.PRECEDING=2]="PRECEDING",o[o.FOLLOWING=4]="FOLLOWING",o[o.CONTAINS=8]="CONTAINS",o[o.CONTAINED_BY=16]="CONTAINED_BY"})(n=i.DocumentPosition||(i.DocumentPosition={}));function r(o,l){var u=[],c=[];if(o===l)return 0;for(var p=(0,e.hasChildren)(o)?o:o.parent;p;)u.unshift(p),p=p.parent;for(p=(0,e.hasChildren)(l)?l:l.parent;p;)c.unshift(p),p=p.parent;for(var d=Math.min(u.length,c.length),f=0;f<d&&u[f]===c[f];)f++;if(f===0)return n.DISCONNECTED;var g=u[f-1],v=g.children,w=u[f],A=c[f];return v.indexOf(w)>v.indexOf(A)?g===l?n.FOLLOWING|n.CONTAINED_BY:n.FOLLOWING:g===o?n.PRECEDING|n.CONTAINS:n.PRECEDING}i.compareDocumentPosition=r;function s(o){return o=o.filter(function(l,u,c){return!c.includes(l,u+1)}),o.sort(function(l,u){var c=r(l,u);return c&n.PRECEDING?-1:c&n.FOLLOWING?1:0}),o}i.uniqueSort=s})(E1);var Sc={};Object.defineProperty(Sc,"__esModule",{value:!0});Sc.getFeed=void 0;var GC=Ar,ju=qr;function UC(i){var e=Yh(ZC,i);return e?e.name==="feed"?zC(e):HC(e):null}Sc.getFeed=UC;function zC(i){var e,t=i.children,n={type:"atom",items:(0,ju.getElementsByTagName)("entry",t).map(function(o){var l,u=o.children,c={media:I1(u)};dr(c,"id","id",u),dr(c,"title","title",u);var p=(l=Yh("link",u))===null||l===void 0?void 0:l.attribs.href;p&&(c.link=p);var d=ba("summary",u)||ba("content",u);d&&(c.description=d);var f=ba("updated",u);return f&&(c.pubDate=new Date(f)),c})};dr(n,"id","id",t),dr(n,"title","title",t);var r=(e=Yh("link",t))===null||e===void 0?void 0:e.attribs.href;r&&(n.link=r),dr(n,"description","subtitle",t);var s=ba("updated",t);return s&&(n.updated=new Date(s)),dr(n,"author","email",t,!0),n}function HC(i){var e,t,n=(t=(e=Yh("channel",i.children))===null||e===void 0?void 0:e.children)!==null&&t!==void 0?t:[],r={type:i.name.substr(0,3),id:"",items:(0,ju.getElementsByTagName)("item",i.children).map(function(o){var l=o.children,u={media:I1(l)};dr(u,"id","guid",l),dr(u,"title","title",l),dr(u,"link","link",l),dr(u,"description","description",l);var c=ba("pubDate",l);return c&&(u.pubDate=new Date(c)),u})};dr(r,"title","title",n),dr(r,"link","link",n),dr(r,"description","description",n);var s=ba("lastBuildDate",n);return s&&(r.updated=new Date(s)),dr(r,"author","managingEditor",n,!0),r}var YC=["url","type","lang"],XC=["fileSize","bitrate","framerate","samplingrate","channels","duration","height","width"];function I1(i){return(0,ju.getElementsByTagName)("media:content",i).map(function(e){for(var t=e.attribs,n={medium:t.medium,isDefault:!!t.isDefault},r=0,s=YC;r<s.length;r++){var o=s[r];t[o]&&(n[o]=t[o])}for(var l=0,u=XC;l<u.length;l++){var o=u[l];t[o]&&(n[o]=parseInt(t[o],10))}return t.expression&&(n.expression=t.expression),n})}function Yh(i,e){return(0,ju.getElementsByTagName)(i,e,!0,1)[0]}function ba(i,e,t){return t===void 0&&(t=!1),(0,GC.textContent)((0,ju.getElementsByTagName)(i,e,t,1)).trim()}function dr(i,e,t,n,r){r===void 0&&(r=!1);var s=ba(t,n,r);s&&(i[e]=s)}function ZC(i){return i==="rss"||i==="feed"||i==="rdf:RDF"}(function(i){var e=ue&&ue.__createBinding||(Object.create?function(r,s,o,l){l===void 0&&(l=o);var u=Object.getOwnPropertyDescriptor(s,o);(!u||("get"in u?!s.__esModule:u.writable||u.configurable))&&(u={enumerable:!0,get:function(){return s[o]}}),Object.defineProperty(r,l,u)}:function(r,s,o,l){l===void 0&&(l=o),r[l]=s[o]}),t=ue&&ue.__exportStar||function(r,s){for(var o in r)o!=="default"&&!Object.prototype.hasOwnProperty.call(s,o)&&e(s,r,o)};Object.defineProperty(i,"__esModule",{value:!0}),i.hasChildren=i.isDocument=i.isComment=i.isText=i.isCDATA=i.isTag=void 0,t(Ar,i),t(_i,i),t(pr,i),t(er,i),t(qr,i),t(E1,i),t(Sc,i);var n=Wa;Object.defineProperty(i,"isTag",{enumerable:!0,get:function(){return n.isTag}}),Object.defineProperty(i,"isCDATA",{enumerable:!0,get:function(){return n.isCDATA}}),Object.defineProperty(i,"isText",{enumerable:!0,get:function(){return n.isText}}),Object.defineProperty(i,"isComment",{enumerable:!0,get:function(){return n.isComment}}),Object.defineProperty(i,"isDocument",{enumerable:!0,get:function(){return n.isDocument}}),Object.defineProperty(i,"hasChildren",{enumerable:!0,get:function(){return n.hasChildren}})})(r1);var Jl={trueFunc:function(){return!0},falseFunc:function(){return!1}},Wo={},wn;(function(i){i.Attribute="attribute",i.Pseudo="pseudo",i.PseudoElement="pseudo-element",i.Tag="tag",i.Universal="universal",i.Adjacent="adjacent",i.Child="child",i.Descendant="descendant",i.Parent="parent",i.Sibling="sibling",i.ColumnCombinator="column-combinator"})(wn||(wn={}));const KC={Unknown:null,QuirksMode:"quirks",IgnoreCase:!0,CaseSensitive:!1};var Gn;(function(i){i.Any="any",i.Element="element",i.End="end",i.Equals="equals",i.Exists="exists",i.Hyphen="hyphen",i.Not="not",i.Start="start"})(Gn||(Gn={}));const Zm=/^[^\\#]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/,QC=/\\([\da-f]{1,6}\s?|(\s)|.)/gi,eT=new Map([[126,Gn.Element],[94,Gn.Start],[36,Gn.End],[42,Gn.Any],[33,Gn.Not],[124,Gn.Hyphen]]),tT=new Set(["has","not","matches","is","where","host","host-context"]);function D1(i){switch(i.type){case wn.Adjacent:case wn.Child:case wn.Descendant:case wn.Parent:case wn.Sibling:case wn.ColumnCombinator:return!0;default:return!1}}const nT=new Set(["contains","icontains"]);function iT(i,e,t){const n=parseInt(e,16)-65536;return n!==n||t?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,n&1023|56320)}function Hl(i){return i.replace(QC,iT)}function bd(i){return i===39||i===34}function Km(i){return i===32||i===9||i===10||i===12||i===13}function rT(i){const e=[],t=R1(e,`${i}`,0);if(t<i.length)throw new Error(`Unmatched selector: ${i.slice(t)}`);return e}function R1(i,e,t){let n=[];function r(f){const g=e.slice(t+f).match(Zm);if(!g)throw new Error(`Expected name, found ${e.slice(t)}`);const[v]=g;return t+=f+v.length,Hl(v)}function s(f){for(t+=f;t<e.length&&Km(e.charCodeAt(t));)t++}function o(){t+=1;const f=t;let g=1;for(;g>0&&t<e.length;t++)e.charCodeAt(t)===40&&!l(t)?g++:e.charCodeAt(t)===41&&!l(t)&&g--;if(g)throw new Error("Parenthesis not matched");return Hl(e.slice(f,t-1))}function l(f){let g=0;for(;e.charCodeAt(--f)===92;)g++;return(g&1)===1}function u(){if(n.length>0&&D1(n[n.length-1]))throw new Error("Did not expect successive traversals.")}function c(f){if(n.length>0&&n[n.length-1].type===wn.Descendant){n[n.length-1].type=f;return}u(),n.push({type:f})}function p(f,g){n.push({type:wn.Attribute,name:f,action:g,value:r(1),namespace:null,ignoreCase:"quirks"})}function d(){if(n.length&&n[n.length-1].type===wn.Descendant&&n.pop(),n.length===0)throw new Error("Empty sub-selector");i.push(n)}if(s(0),e.length===t)return t;e:for(;t<e.length;){const f=e.charCodeAt(t);switch(f){case 32:case 9:case 10:case 12:case 13:{(n.length===0||n[0].type!==wn.Descendant)&&(u(),n.push({type:wn.Descendant})),s(1);break}case 62:{c(wn.Child),s(1);break}case 60:{c(wn.Parent),s(1);break}case 126:{c(wn.Sibling),s(1);break}case 43:{c(wn.Adjacent),s(1);break}case 46:{p("class",Gn.Element);break}case 35:{p("id",Gn.Equals);break}case 91:{s(1);let g,v=null;e.charCodeAt(t)===124?g=r(1):e.startsWith("*|",t)?(v="*",g=r(2)):(g=r(0),e.charCodeAt(t)===124&&e.charCodeAt(t+1)!==61&&(v=g,g=r(1))),s(0);let w=Gn.Exists;const A=eT.get(e.charCodeAt(t));if(A){if(w=A,e.charCodeAt(t+1)!==61)throw new Error("Expected `=`");s(2)}else e.charCodeAt(t)===61&&(w=Gn.Equals,s(1));let C="",m=null;if(w!=="exists"){if(bd(e.charCodeAt(t))){const k=e.charCodeAt(t);let q=t+1;for(;q<e.length&&(e.charCodeAt(q)!==k||l(q));)q+=1;if(e.charCodeAt(q)!==k)throw new Error("Attribute value didn't end");C=Hl(e.slice(t+1,q)),t=q+1}else{const k=t;for(;t<e.length&&(!Km(e.charCodeAt(t))&&e.charCodeAt(t)!==93||l(t));)t+=1;C=Hl(e.slice(k,t))}s(0);const x=e.charCodeAt(t)|32;x===115?(m=!1,s(1)):x===105&&(m=!0,s(1))}if(e.charCodeAt(t)!==93)throw new Error("Attribute selector didn't terminate");t+=1;const y={type:wn.Attribute,name:g,action:w,value:C,namespace:v,ignoreCase:m};n.push(y);break}case 58:{if(e.charCodeAt(t+1)===58){n.push({type:wn.PseudoElement,name:r(2).toLowerCase(),data:e.charCodeAt(t)===40?o():null});continue}const g=r(1).toLowerCase();let v=null;if(e.charCodeAt(t)===40)if(tT.has(g)){if(bd(e.charCodeAt(t+1)))throw new Error(`Pseudo-selector ${g} cannot be quoted`);if(v=[],t=R1(v,e,t+1),e.charCodeAt(t)!==41)throw new Error(`Missing closing parenthesis in :${g} (${e})`);t+=1}else{if(v=o(),nT.has(g)){const w=v.charCodeAt(0);w===v.charCodeAt(v.length-1)&&bd(w)&&(v=v.slice(1,-1))}v=Hl(v)}n.push({type:wn.Pseudo,name:g,data:v});break}case 44:{d(),n=[],s(1);break}default:{if(e.startsWith("/*",t)){const w=e.indexOf("*/",t+2);if(w<0)throw new Error("Comment was not terminated");t=w+2,n.length===0&&s(0);break}let g=null,v;if(f===42)t+=1,v="*";else if(f===124){if(v="",e.charCodeAt(t+1)===124){c(wn.ColumnCombinator),s(2);break}}else if(Zm.test(e.slice(t)))v=r(0);else break e;e.charCodeAt(t)===124&&e.charCodeAt(t+1)!==124&&(g=v,e.charCodeAt(t+1)===42?(v="*",t+=2):v=r(1)),n.push(v==="*"?{type:wn.Universal,namespace:g}:{type:wn.Tag,name:v,namespace:g})}}}return d(),t}const $1=["\\",'"'],N1=[...$1,"(",")"],sT=new Set($1.map(i=>i.charCodeAt(0))),Qm=new Set(N1.map(i=>i.charCodeAt(0))),nl=new Set([...N1,"~","^","$","*","+","!","|",":","[","]"," ","."].map(i=>i.charCodeAt(0)));function L1(i){return i.map(e=>e.map(oT).join("")).join(", ")}function oT(i,e,t){switch(i.type){case wn.Child:return e===0?"> ":" > ";case wn.Parent:return e===0?"< ":" < ";case wn.Sibling:return e===0?"~ ":" ~ ";case wn.Adjacent:return e===0?"+ ":" + ";case wn.Descendant:return" ";case wn.ColumnCombinator:return e===0?"|| ":" || ";case wn.Universal:return i.namespace==="*"&&e+1<t.length&&"name"in t[e+1]?"":`${M1(i.namespace)}*`;case wn.Tag:return e0(i);case wn.PseudoElement:return`::${oo(i.name,nl)}${i.data===null?"":`(${oo(i.data,Qm)})`}`;case wn.Pseudo:return`:${oo(i.name,nl)}${i.data===null?"":`(${typeof i.data=="string"?oo(i.data,Qm):L1(i.data)})`}`;case wn.Attribute:{if(i.name==="id"&&i.action===Gn.Equals&&i.ignoreCase==="quirks"&&!i.namespace)return`#${oo(i.value,nl)}`;if(i.name==="class"&&i.action===Gn.Element&&i.ignoreCase==="quirks"&&!i.namespace)return`.${oo(i.value,nl)}`;const n=e0(i);return i.action===Gn.Exists?`[${n}]`:`[${n}${aT(i.action)}="${oo(i.value,sT)}"${i.ignoreCase===null?"":i.ignoreCase?" i":" s"}]`}}}function aT(i){switch(i){case Gn.Equals:return"";case Gn.Element:return"~";case Gn.Start:return"^";case Gn.End:return"$";case Gn.Any:return"*";case Gn.Not:return"!";case Gn.Hyphen:return"|";case Gn.Exists:throw new Error("Shouldn't be here")}}function e0(i){return`${M1(i.namespace)}${oo(i.name,nl)}`}function M1(i){return i!==null?`${i==="*"?"*":oo(i,nl)}|`:""}function oo(i,e){let t=0,n="";for(let r=0;r<i.length;r++)e.has(i.charCodeAt(r))&&(n+=`${i.slice(t,r)}\\${i.charAt(r)}`,t=r+1);return n.length>0?n+i.slice(t):i}const lT=Object.freeze(Object.defineProperty({__proto__:null,get AttributeAction(){return Gn},IgnoreCaseMode:KC,get SelectorType(){return wn},isTraversal:D1,parse:rT,stringify:L1},Symbol.toStringTag,{value:"Module"})),Ec=Nl(lT);var Vl={};Object.defineProperty(Vl,"__esModule",{value:!0});Vl.isTraversal=void 0;var kr=Ec,O1=new Map([[kr.SelectorType.Universal,50],[kr.SelectorType.Tag,30],[kr.SelectorType.Attribute,1],[kr.SelectorType.Pseudo,0]]);function uT(i){return!O1.has(i.type)}Vl.isTraversal=uT;var hT=new Map([[kr.AttributeAction.Exists,10],[kr.AttributeAction.Equals,8],[kr.AttributeAction.Not,7],[kr.AttributeAction.Start,6],[kr.AttributeAction.End,6],[kr.AttributeAction.Any,5]]);function cT(i){for(var e=i.map(P1),t=1;t<i.length;t++){var n=e[t];if(!(n<0))for(var r=t-1;r>=0&&n<e[r];r--){var s=i[r+1];i[r+1]=i[r],i[r]=s,e[r+1]=e[r],e[r]=n}}}Vl.default=cT;function P1(i){var e,t,n=(e=O1.get(i.type))!==null&&e!==void 0?e:-1;return i.type===kr.SelectorType.Attribute?(n=(t=hT.get(i.action))!==null&&t!==void 0?t:4,i.action===kr.AttributeAction.Equals&&i.name==="id"&&(n=9),i.ignoreCase&&(n>>=1)):i.type===kr.SelectorType.Pseudo&&(i.data?i.name==="has"||i.name==="contains"?n=0:Array.isArray(i.data)?(n=Math.min.apply(Math,i.data.map(function(r){return Math.min.apply(Math,r.map(P1))})),n<0&&(n=0)):n=2:n=3),n}var Ic={},Dc={},dT=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Dc,"__esModule",{value:!0});Dc.attributeRules=void 0;var ph=dT(Jl),pT=/[-[\]{}()*+?.,\\^$|#\s]/g;function t0(i){return i.replace(pT,"\\$&")}var fT=new Set(["accept","accept-charset","align","alink","axis","bgcolor","charset","checked","clear","codetype","color","compact","declare","defer","dir","direction","disabled","enctype","face","frame","hreflang","http-equiv","lang","language","link","media","method","multiple","nohref","noresize","noshade","nowrap","readonly","rel","rev","rules","scope","scrolling","selected","shape","target","text","type","valign","valuetype","vlink"]);function pa(i,e){return typeof i.ignoreCase=="boolean"?i.ignoreCase:i.ignoreCase==="quirks"?!!e.quirksMode:!e.xmlMode&&fT.has(i.name)}Dc.attributeRules={equals:function(i,e,t){var n=t.adapter,r=e.name,s=e.value;return pa(e,t)?(s=s.toLowerCase(),function(o){var l=n.getAttributeValue(o,r);return l!=null&&l.length===s.length&&l.toLowerCase()===s&&i(o)}):function(o){return n.getAttributeValue(o,r)===s&&i(o)}},hyphen:function(i,e,t){var n=t.adapter,r=e.name,s=e.value,o=s.length;return pa(e,t)?(s=s.toLowerCase(),function(u){var c=n.getAttributeValue(u,r);return c!=null&&(c.length===o||c.charAt(o)==="-")&&c.substr(0,o).toLowerCase()===s&&i(u)}):function(u){var c=n.getAttributeValue(u,r);return c!=null&&(c.length===o||c.charAt(o)==="-")&&c.substr(0,o)===s&&i(u)}},element:function(i,e,t){var n=t.adapter,r=e.name,s=e.value;if(/\s/.test(s))return ph.default.falseFunc;var o=new RegExp("(?:^|\\s)".concat(t0(s),"(?:$|\\s)"),pa(e,t)?"i":"");return function(u){var c=n.getAttributeValue(u,r);return c!=null&&c.length>=s.length&&o.test(c)&&i(u)}},exists:function(i,e,t){var n=e.name,r=t.adapter;return function(s){return r.hasAttrib(s,n)&&i(s)}},start:function(i,e,t){var n=t.adapter,r=e.name,s=e.value,o=s.length;return o===0?ph.default.falseFunc:pa(e,t)?(s=s.toLowerCase(),function(l){var u=n.getAttributeValue(l,r);return u!=null&&u.length>=o&&u.substr(0,o).toLowerCase()===s&&i(l)}):function(l){var u;return!!(!((u=n.getAttributeValue(l,r))===null||u===void 0)&&u.startsWith(s))&&i(l)}},end:function(i,e,t){var n=t.adapter,r=e.name,s=e.value,o=-s.length;return o===0?ph.default.falseFunc:pa(e,t)?(s=s.toLowerCase(),function(l){var u;return((u=n.getAttributeValue(l,r))===null||u===void 0?void 0:u.substr(o).toLowerCase())===s&&i(l)}):function(l){var u;return!!(!((u=n.getAttributeValue(l,r))===null||u===void 0)&&u.endsWith(s))&&i(l)}},any:function(i,e,t){var n=t.adapter,r=e.name,s=e.value;if(s==="")return ph.default.falseFunc;if(pa(e,t)){var o=new RegExp(t0(s),"i");return function(u){var c=n.getAttributeValue(u,r);return c!=null&&c.length>=s.length&&o.test(c)&&i(u)}}return function(l){var u;return!!(!((u=n.getAttributeValue(l,r))===null||u===void 0)&&u.includes(s))&&i(l)}},not:function(i,e,t){var n=t.adapter,r=e.name,s=e.value;return s===""?function(o){return!!n.getAttributeValue(o,r)&&i(o)}:pa(e,t)?(s=s.toLowerCase(),function(o){var l=n.getAttributeValue(o,r);return(l==null||l.length!==s.length||l.toLowerCase()!==s)&&i(o)}):function(o){return n.getAttributeValue(o,r)!==s&&i(o)}}};var xf={},F1={},B1={},Rc={};Object.defineProperty(Rc,"__esModule",{value:!0});Rc.parse=void 0;var gT=new Set([9,10,12,13,32]),n0="0".charCodeAt(0),mT="9".charCodeAt(0);function yT(i){if(i=i.trim().toLowerCase(),i==="even")return[2,0];if(i==="odd")return[2,1];var e=0,t=0,n=s(),r=o();if(e<i.length&&i.charAt(e)==="n"&&(e++,t=n*(r??1),l(),e<i.length?(n=s(),l(),r=o()):n=r=0),r===null||e<i.length)throw new Error("n-th rule couldn't be parsed ('".concat(i,"')"));return[t,n*r];function s(){return i.charAt(e)==="-"?(e++,-1):(i.charAt(e)==="+"&&e++,1)}function o(){for(var u=e,c=0;e<i.length&&i.charCodeAt(e)>=n0&&i.charCodeAt(e)<=mT;)c=c*10+(i.charCodeAt(e)-n0),e++;return e===u?null:c}function l(){for(;e<i.length&&gT.has(i.charCodeAt(e));)e++}}Rc.parse=yT;var Rl={},bT=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Rl,"__esModule",{value:!0});Rl.generate=Rl.compile=void 0;var i0=bT(Jl);function vT(i){var e=i[0],t=i[1]-1;if(t<0&&e<=0)return i0.default.falseFunc;if(e===-1)return function(s){return s<=t};if(e===0)return function(s){return s===t};if(e===1)return t<0?i0.default.trueFunc:function(s){return s>=t};var n=Math.abs(e),r=(t%n+n)%n;return e>1?function(s){return s>=t&&s%n===r}:function(s){return s<=t&&s%n===r}}Rl.compile=vT;function wT(i){var e=i[0],t=i[1]-1,n=0;if(e<0){var r=-e,s=(t%r+r)%r;return function(){var o=s+r*n++;return o>t?null:o}}return e===0?t<0?function(){return null}:function(){return n++===0?t:null}:(t<0&&(t+=e*Math.ceil(-t/e)),function(){return e*n+++t})}Rl.generate=wT;(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.sequence=i.generate=i.compile=i.parse=void 0;var e=Rc;Object.defineProperty(i,"parse",{enumerable:!0,get:function(){return e.parse}});var t=Rl;Object.defineProperty(i,"compile",{enumerable:!0,get:function(){return t.compile}}),Object.defineProperty(i,"generate",{enumerable:!0,get:function(){return t.generate}});function n(s){return(0,t.compile)((0,e.parse)(s))}i.default=n;function r(s){return(0,t.generate)((0,e.parse)(s))}i.sequence=r})(B1);(function(i){var e=ue&&ue.__importDefault||function(o){return o&&o.__esModule?o:{default:o}};Object.defineProperty(i,"__esModule",{value:!0}),i.filters=void 0;var t=e(B1),n=e(Jl);function r(o,l){return function(u){var c=l.getParent(u);return c!=null&&l.isTag(c)&&o(u)}}i.filters={contains:function(o,l,u){var c=u.adapter;return function(d){return o(d)&&c.getText(d).includes(l)}},icontains:function(o,l,u){var c=u.adapter,p=l.toLowerCase();return function(f){return o(f)&&c.getText(f).toLowerCase().includes(p)}},"nth-child":function(o,l,u){var c=u.adapter,p=u.equals,d=(0,t.default)(l);return d===n.default.falseFunc?n.default.falseFunc:d===n.default.trueFunc?r(o,c):function(g){for(var v=c.getSiblings(g),w=0,A=0;A<v.length&&!p(g,v[A]);A++)c.isTag(v[A])&&w++;return d(w)&&o(g)}},"nth-last-child":function(o,l,u){var c=u.adapter,p=u.equals,d=(0,t.default)(l);return d===n.default.falseFunc?n.default.falseFunc:d===n.default.trueFunc?r(o,c):function(g){for(var v=c.getSiblings(g),w=0,A=v.length-1;A>=0&&!p(g,v[A]);A--)c.isTag(v[A])&&w++;return d(w)&&o(g)}},"nth-of-type":function(o,l,u){var c=u.adapter,p=u.equals,d=(0,t.default)(l);return d===n.default.falseFunc?n.default.falseFunc:d===n.default.trueFunc?r(o,c):function(g){for(var v=c.getSiblings(g),w=0,A=0;A<v.length;A++){var C=v[A];if(p(g,C))break;c.isTag(C)&&c.getName(C)===c.getName(g)&&w++}return d(w)&&o(g)}},"nth-last-of-type":function(o,l,u){var c=u.adapter,p=u.equals,d=(0,t.default)(l);return d===n.default.falseFunc?n.default.falseFunc:d===n.default.trueFunc?r(o,c):function(g){for(var v=c.getSiblings(g),w=0,A=v.length-1;A>=0;A--){var C=v[A];if(p(g,C))break;c.isTag(C)&&c.getName(C)===c.getName(g)&&w++}return d(w)&&o(g)}},root:function(o,l,u){var c=u.adapter;return function(p){var d=c.getParent(p);return(d==null||!c.isTag(d))&&o(p)}},scope:function(o,l,u,c){var p=u.equals;return!c||c.length===0?i.filters.root(o,l,u):c.length===1?function(d){return p(c[0],d)&&o(d)}:function(d){return c.includes(d)&&o(d)}},hover:s("isHovered"),visited:s("isVisited"),active:s("isActive")};function s(o){return function(u,c,p){var d=p.adapter,f=d[o];return typeof f!="function"?n.default.falseFunc:function(v){return f(v)&&u(v)}}}})(F1);var $l={};Object.defineProperty($l,"__esModule",{value:!0});$l.verifyPseudoArgs=$l.pseudos=void 0;$l.pseudos={empty:function(i,e){var t=e.adapter;return!t.getChildren(i).some(function(n){return t.isTag(n)||t.getText(n)!==""})},"first-child":function(i,e){var t=e.adapter,n=e.equals;if(t.prevElementSibling)return t.prevElementSibling(i)==null;var r=t.getSiblings(i).find(function(s){return t.isTag(s)});return r!=null&&n(i,r)},"last-child":function(i,e){for(var t=e.adapter,n=e.equals,r=t.getSiblings(i),s=r.length-1;s>=0;s--){if(n(i,r[s]))return!0;if(t.isTag(r[s]))break}return!1},"first-of-type":function(i,e){for(var t=e.adapter,n=e.equals,r=t.getSiblings(i),s=t.getName(i),o=0;o<r.length;o++){var l=r[o];if(n(i,l))return!0;if(t.isTag(l)&&t.getName(l)===s)break}return!1},"last-of-type":function(i,e){for(var t=e.adapter,n=e.equals,r=t.getSiblings(i),s=t.getName(i),o=r.length-1;o>=0;o--){var l=r[o];if(n(i,l))return!0;if(t.isTag(l)&&t.getName(l)===s)break}return!1},"only-of-type":function(i,e){var t=e.adapter,n=e.equals,r=t.getName(i);return t.getSiblings(i).every(function(s){return n(i,s)||!t.isTag(s)||t.getName(s)!==r})},"only-child":function(i,e){var t=e.adapter,n=e.equals;return t.getSiblings(i).every(function(r){return n(i,r)||!t.isTag(r)})}};function _T(i,e,t,n){if(t===null){if(i.length>n)throw new Error("Pseudo-class :".concat(e," requires an argument"))}else if(i.length===n)throw new Error("Pseudo-class :".concat(e," doesn't have any arguments"))}$l.verifyPseudoArgs=_T;var $c={};Object.defineProperty($c,"__esModule",{value:!0});$c.aliases=void 0;$c.aliases={"any-link":":is(a, area, link)[href]",link:":any-link:not(:visited)",disabled:`:is(
        :is(button, input, select, textarea, optgroup, option)[disabled],
        optgroup[disabled] > option,
        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)
    )`,enabled:":not(:disabled)",checked:":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)",required:":is(input, select, textarea)[required]",optional:":is(input, select, textarea):not([required])",selected:"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)",checkbox:"[type=checkbox]",file:"[type=file]",password:"[type=password]",radio:"[type=radio]",reset:"[type=reset]",image:"[type=image]",submit:"[type=submit]",parent:":not(:empty)",header:":is(h1, h2, h3, h4, h5, h6)",button:":is(button, input[type=button])",input:":is(input, textarea, select, button)",text:"input:is(:not([type!='']), [type=text])"};var Nc={};(function(i){var e=ue&&ue.__spreadArray||function(c,p,d){if(d||arguments.length===2)for(var f=0,g=p.length,v;f<g;f++)(v||!(f in p))&&(v||(v=Array.prototype.slice.call(p,0,f)),v[f]=p[f]);return c.concat(v||Array.prototype.slice.call(p))},t=ue&&ue.__importDefault||function(c){return c&&c.__esModule?c:{default:c}};Object.defineProperty(i,"__esModule",{value:!0}),i.subselects=i.getNextSiblings=i.ensureIsTag=i.PLACEHOLDER_ELEMENT=void 0;var n=t(Jl),r=Vl;i.PLACEHOLDER_ELEMENT={};function s(c,p){return c===n.default.falseFunc?n.default.falseFunc:function(d){return p.isTag(d)&&c(d)}}i.ensureIsTag=s;function o(c,p){var d=p.getSiblings(c);if(d.length<=1)return[];var f=d.indexOf(c);return f<0||f===d.length-1?[]:d.slice(f+1).filter(p.isTag)}i.getNextSiblings=o;function l(c){return{xmlMode:!!c.xmlMode,lowerCaseAttributeNames:!!c.lowerCaseAttributeNames,lowerCaseTags:!!c.lowerCaseTags,quirksMode:!!c.quirksMode,cacheResults:!!c.cacheResults,pseudos:c.pseudos,adapter:c.adapter,equals:c.equals}}var u=function(c,p,d,f,g){var v=g(p,l(d),f);return v===n.default.trueFunc?c:v===n.default.falseFunc?n.default.falseFunc:function(w){return v(w)&&c(w)}};i.subselects={is:u,matches:u,where:u,not:function(c,p,d,f,g){var v=g(p,l(d),f);return v===n.default.falseFunc?c:v===n.default.trueFunc?n.default.falseFunc:function(w){return!v(w)&&c(w)}},has:function(c,p,d,f,g){var v=d.adapter,w=l(d);w.relativeSelector=!0;var A=p.some(function(k){return k.some(r.isTraversal)})?[i.PLACEHOLDER_ELEMENT]:void 0,C=g(p,w,A);if(C===n.default.falseFunc)return n.default.falseFunc;var m=s(C,v);if(A&&C!==n.default.trueFunc){var y=C.shouldTestNextSiblings,x=y===void 0?!1:y;return function(k){if(!c(k))return!1;A[0]=k;var q=v.getChildren(k),I=x?e(e([],q,!0),o(k,v),!0):q;return v.existsOne(m,I)}}return function(k){return c(k)&&v.existsOne(m,v.getChildren(k))}}}})(Nc);(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.compilePseudoSelector=i.aliases=i.pseudos=i.filters=void 0;var e=Ec,t=F1;Object.defineProperty(i,"filters",{enumerable:!0,get:function(){return t.filters}});var n=$l;Object.defineProperty(i,"pseudos",{enumerable:!0,get:function(){return n.pseudos}});var r=$c;Object.defineProperty(i,"aliases",{enumerable:!0,get:function(){return r.aliases}});var s=Nc;function o(l,u,c,p,d){var f,g=u.name,v=u.data;if(Array.isArray(v)){if(!(g in s.subselects))throw new Error("Unknown pseudo-class :".concat(g,"(").concat(v,")"));return s.subselects[g](l,v,c,p,d)}var w=(f=c.pseudos)===null||f===void 0?void 0:f[g],A=typeof w=="string"?w:r.aliases[g];if(typeof A=="string"){if(v!=null)throw new Error("Pseudo ".concat(g," doesn't have any arguments"));var C=(0,e.parse)(A);return s.subselects.is(l,C,c,p,d)}if(typeof w=="function")return(0,n.verifyPseudoArgs)(w,g,v,1),function(y){return w(y,v)&&l(y)};if(g in t.filters)return t.filters[g](l,v,c,p);if(g in n.pseudos){var m=n.pseudos[g];return(0,n.verifyPseudoArgs)(m,g,v,2),function(y){return m(y,c,v)&&l(y)}}throw new Error("Unknown pseudo-class :".concat(g))}i.compilePseudoSelector=o})(xf);Object.defineProperty(Ic,"__esModule",{value:!0});Ic.compileGeneralSelector=void 0;var CT=Dc,TT=xf,cs=Ec;function vd(i,e){var t=e.getParent(i);return t&&e.isTag(t)?t:null}function xT(i,e,t,n,r){var s=t.adapter,o=t.equals;switch(e.type){case cs.SelectorType.PseudoElement:throw new Error("Pseudo-elements are not supported by css-select");case cs.SelectorType.ColumnCombinator:throw new Error("Column combinators are not yet supported by css-select");case cs.SelectorType.Attribute:{if(e.namespace!=null)throw new Error("Namespaced attributes are not yet supported by css-select");return(!t.xmlMode||t.lowerCaseAttributeNames)&&(e.name=e.name.toLowerCase()),CT.attributeRules[e.action](i,e,t)}case cs.SelectorType.Pseudo:return(0,TT.compilePseudoSelector)(i,e,t,n,r);case cs.SelectorType.Tag:{if(e.namespace!=null)throw new Error("Namespaced tag names are not yet supported by css-select");var l=e.name;return(!t.xmlMode||t.lowerCaseTags)&&(l=l.toLowerCase()),function(p){return s.getName(p)===l&&i(p)}}case cs.SelectorType.Descendant:{if(t.cacheResults===!1||typeof WeakSet>"u")return function(p){for(var d=p;d=vd(d,s);)if(i(d))return!0;return!1};var u=new WeakSet;return function(p){for(var d=p;d=vd(d,s);)if(!u.has(d)){if(s.isTag(d)&&i(d))return!0;u.add(d)}return!1}}case"_flexibleDescendant":return function(p){var d=p;do if(i(d))return!0;while(d=vd(d,s));return!1};case cs.SelectorType.Parent:return function(p){return s.getChildren(p).some(function(d){return s.isTag(d)&&i(d)})};case cs.SelectorType.Child:return function(p){var d=s.getParent(p);return d!=null&&s.isTag(d)&&i(d)};case cs.SelectorType.Sibling:return function(p){for(var d=s.getSiblings(p),f=0;f<d.length;f++){var g=d[f];if(o(p,g))break;if(s.isTag(g)&&i(g))return!0}return!1};case cs.SelectorType.Adjacent:return s.prevElementSibling?function(p){var d=s.prevElementSibling(p);return d!=null&&i(d)}:function(p){for(var d=s.getSiblings(p),f,g=0;g<d.length;g++){var v=d[g];if(o(p,v))break;s.isTag(v)&&(f=v)}return!!f&&i(f)};case cs.SelectorType.Universal:{if(e.namespace!=null&&e.namespace!=="*")throw new Error("Namespaced universal selectors are not yet supported by css-select");return i}}}Ic.compileGeneralSelector=xT;var kT=ue&&ue.__createBinding||(Object.create?function(i,e,t,n){n===void 0&&(n=t);var r=Object.getOwnPropertyDescriptor(e,t);(!r||("get"in r?!e.__esModule:r.writable||r.configurable))&&(r={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(i,n,r)}:function(i,e,t,n){n===void 0&&(n=t),i[n]=e[t]}),AT=ue&&ue.__setModuleDefault||(Object.create?function(i,e){Object.defineProperty(i,"default",{enumerable:!0,value:e})}:function(i,e){i.default=e}),qT=ue&&ue.__importStar||function(i){if(i&&i.__esModule)return i;var e={};if(i!=null)for(var t in i)t!=="default"&&Object.prototype.hasOwnProperty.call(i,t)&&kT(e,i,t);return AT(e,i),e},ST=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Wo,"__esModule",{value:!0});Wo.compileToken=Wo.compileUnsafe=Wo.compile=void 0;var ho=Ec,Po=ST(Jl),fp=qT(Vl),ET=Ic,j1=Nc;function IT(i,e,t){var n=W1(i,e,t);return(0,j1.ensureIsTag)(n,e.adapter)}Wo.compile=IT;function W1(i,e,t){var n=typeof i=="string"?(0,ho.parse)(i):i;return kf(n,e,t)}Wo.compileUnsafe=W1;function J1(i){return i.type===ho.SelectorType.Pseudo&&(i.name==="scope"||Array.isArray(i.data)&&i.data.some(function(e){return e.some(J1)}))}var DT={type:ho.SelectorType.Descendant},RT={type:"_flexibleDescendant"},$T={type:ho.SelectorType.Pseudo,name:"scope",data:null};function NT(i,e,t){for(var n=e.adapter,r=!!(t!=null&&t.every(function(u){var c=n.isTag(u)&&n.getParent(u);return u===j1.PLACEHOLDER_ELEMENT||c&&n.isTag(c)})),s=0,o=i;s<o.length;s++){var l=o[s];if(!(l.length>0&&(0,fp.isTraversal)(l[0])&&l[0].type!==ho.SelectorType.Descendant))if(r&&!l.some(J1))l.unshift(DT);else continue;l.unshift($T)}}function kf(i,e,t){var n;i.forEach(fp.default),t=(n=e.context)!==null&&n!==void 0?n:t;var r=Array.isArray(t),s=t&&(Array.isArray(t)?t:[t]);if(e.relativeSelector!==!1)NT(i,e,s);else if(i.some(function(u){return u.length>0&&(0,fp.isTraversal)(u[0])}))throw new Error("Relative selectors are not allowed when the `relativeSelector` option is disabled");var o=!1,l=i.map(function(u){if(u.length>=2){var c=u[0],p=u[1];c.type!==ho.SelectorType.Pseudo||c.name!=="scope"||(r&&p.type===ho.SelectorType.Descendant?u[1]=RT:(p.type===ho.SelectorType.Adjacent||p.type===ho.SelectorType.Sibling)&&(o=!0))}return LT(u,e,s)}).reduce(MT,Po.default.falseFunc);return l.shouldTestNextSiblings=o,l}Wo.compileToken=kf;function LT(i,e,t){var n;return i.reduce(function(r,s){return r===Po.default.falseFunc?Po.default.falseFunc:(0,ET.compileGeneralSelector)(r,s,e,t,kf)},(n=e.rootFunc)!==null&&n!==void 0?n:Po.default.trueFunc)}function MT(i,e){return e===Po.default.falseFunc||i===Po.default.trueFunc?i:i===Po.default.falseFunc||e===Po.default.trueFunc?e:function(n){return i(n)||e(n)}}(function(i){var e=ue&&ue.__createBinding||(Object.create?function(m,y,x,k){k===void 0&&(k=x);var q=Object.getOwnPropertyDescriptor(y,x);(!q||("get"in q?!y.__esModule:q.writable||q.configurable))&&(q={enumerable:!0,get:function(){return y[x]}}),Object.defineProperty(m,k,q)}:function(m,y,x,k){k===void 0&&(k=x),m[k]=y[x]}),t=ue&&ue.__setModuleDefault||(Object.create?function(m,y){Object.defineProperty(m,"default",{enumerable:!0,value:y})}:function(m,y){m.default=y}),n=ue&&ue.__importStar||function(m){if(m&&m.__esModule)return m;var y={};if(m!=null)for(var x in m)x!=="default"&&Object.prototype.hasOwnProperty.call(m,x)&&e(y,m,x);return t(y,m),y},r=ue&&ue.__importDefault||function(m){return m&&m.__esModule?m:{default:m}};Object.defineProperty(i,"__esModule",{value:!0}),i.aliases=i.pseudos=i.filters=i.is=i.selectOne=i.selectAll=i.prepareContext=i._compileToken=i._compileUnsafe=i.compile=void 0;var s=n(r1),o=r(Jl),l=Wo,u=Nc,c=function(m,y){return m===y},p={adapter:s,equals:c};function d(m){var y,x,k,q,I=m??p;return(y=I.adapter)!==null&&y!==void 0||(I.adapter=s),(x=I.equals)!==null&&x!==void 0||(I.equals=(q=(k=I.adapter)===null||k===void 0?void 0:k.equals)!==null&&q!==void 0?q:c),I}function f(m){return function(x,k,q){var I=d(k);return m(x,I,q)}}i.compile=f(l.compile),i._compileUnsafe=f(l.compileUnsafe),i._compileToken=f(l.compileToken);function g(m){return function(x,k,q){var I=d(q);typeof x!="function"&&(x=(0,l.compileUnsafe)(x,I,k));var S=v(k,I.adapter,x.shouldTestNextSiblings);return m(x,S,I)}}function v(m,y,x){return x===void 0&&(x=!1),x&&(m=w(m,y)),Array.isArray(m)?y.removeSubsets(m):y.getChildren(m)}i.prepareContext=v;function w(m,y){for(var x=Array.isArray(m)?m.slice(0):[m],k=x.length,q=0;q<k;q++){var I=(0,u.getNextSiblings)(x[q],y);x.push.apply(x,I)}return x}i.selectAll=g(function(m,y,x){return m===o.default.falseFunc||!y||y.length===0?[]:x.adapter.findAll(m,y)}),i.selectOne=g(function(m,y,x){return m===o.default.falseFunc||!y||y.length===0?null:x.adapter.findOne(m,y)});function A(m,y,x){var k=d(x);return(typeof y=="function"?y:(0,l.compile)(y,k))(m)}i.is=A,i.default=i.selectAll;var C=xf;Object.defineProperty(i,"filters",{enumerable:!0,get:function(){return C.filters}}),Object.defineProperty(i,"pseudos",{enumerable:!0,get:function(){return C.pseudos}}),Object.defineProperty(i,"aliases",{enumerable:!0,get:function(){return C.aliases}})})(i1);var Af={};Object.defineProperty(Af,"__esModule",{value:!0});function OT(i){return i[i.length-1]}Af.default=OT;var qf={},PT=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(qf,"__esModule",{value:!0});var FT=PT(ja);function Lc(i){return i&&i.nodeType===FT.default.ELEMENT_NODE}function V1(i,e){return Lc(i)?i.getAttribute(e):void 0}function BT(i){return(i&&i.rawTagName||"").toLowerCase()}function Wu(i){return i&&i.childNodes}function Sf(i){return i?i.parentNode:null}function jT(i){return i.text}function WT(i){for(var e=i.length,t,n,r;--e>-1;){for(t=n=i[e],i[e]=null,r=!0;n;){if(i.indexOf(n)>-1){r=!1,i.splice(e,1);break}n=Sf(n)}r&&(i[e]=t)}return i}function G1(i,e){return e.some(function(t){return Lc(t)?i(t)||G1(i,Wu(t)):!1})}function JT(i){var e=Sf(i);return e?Wu(e):[]}function VT(i,e){return V1(i,e)!==void 0}function U1(i,e){for(var t=null,n=0,r=e==null?void 0:e.length;n<r&&!t;n++){var s=e[n];if(i(s))t=s;else{var o=Wu(s);o&&o.length>0&&(t=U1(i,o))}}return t}function z1(i,e){for(var t=[],n=0,r=e.length;n<r;n++)if(Lc(e[n])){i(e[n])&&t.push(e[n]);var s=Wu(e[n]);s&&(t=t.concat(z1(i,s)))}return t}qf.default={isTag:Lc,getAttributeValue:V1,getName:BT,getChildren:Wu,getParent:Sf,getText:jT,removeSubsets:WT,existsOne:G1,getSiblings:JT,hasAttrib:VT,findOne:U1,findAll:z1};var Ef={};Object.defineProperty(Ef,"__esModule",{value:!0});var GT=function(){function i(e,t){e===void 0&&(e=!1),this.addClosingSlash=e,Array.isArray(t)?this.voidTags=t.reduce(function(n,r){return n.add(r.toLowerCase())},new Set):this.voidTags=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"].reduce(function(n,r){return n.add(r)},new Set)}return i.prototype.formatNode=function(e,t,n){var r=this.addClosingSlash,s=r&&t&&!t.endsWith(" ")?" ":"",o=r?"".concat(s,"/"):"";return this.isVoidElement(e.toLowerCase())?"<".concat(e).concat(t).concat(o,">"):"<".concat(e).concat(t,">").concat(n,"</").concat(e,">")},i.prototype.isVoidElement=function(e){return this.voidTags.has(e)},i}();Ef.default=GT;var Mc={},UT=ue&&ue.__extends||function(){var i=function(e,t){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(n[s]=r[s])},i(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");i(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),H1=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Mc,"__esModule",{value:!0});var zT=mf,HT=H1(Wl),YT=H1(ja),XT=function(i){UT(e,i);function e(t,n,r){var s=i.call(this,n,r)||this;return s.nodeType=YT.default.TEXT_NODE,s._rawText=t,s}return e.prototype.clone=function(){return new e(this._rawText,null)},Object.defineProperty(e.prototype,"rawText",{get:function(){return this._rawText},set:function(t){this._rawText=t,this._trimmedRawText=void 0,this._trimmedText=void 0},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"trimmedRawText",{get:function(){return this._trimmedRawText!==void 0?this._trimmedRawText:(this._trimmedRawText=r0(this.rawText),this._trimmedRawText)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"trimmedText",{get:function(){return this._trimmedText!==void 0?this._trimmedText:(this._trimmedText=r0(this.text),this._trimmedText)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"text",{get:function(){return(0,zT.decode)(this.rawText)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isWhitespace",{get:function(){return/^(\s|&nbsp;)*$/.test(this.rawText)},enumerable:!1,configurable:!0}),e.prototype.toString=function(){return this.rawText},e}(HT.default);Mc.default=XT;function r0(i){for(var e=0,t,n;e>=0&&e<i.length;)/\S/.test(i[e])&&(t===void 0?(t=e,e=i.length):(n=e,e=void 0)),t===void 0?e++:e--;t===void 0&&(t=0),n===void 0&&(n=i.length-1);var r=t>0&&/[^\S\r\n]/.test(i[t-1]),s=n<i.length-1&&/[^\S\r\n]/.test(i[n+1]);return(r?" ":"")+i.slice(t,n+1)+(s?" ":"")}var ZT=ue&&ue.__extends||function(){var i=function(e,t){return i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(n[s]=r[s])},i(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");i(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),il=ue&&ue.__assign||function(){return il=Object.assign||function(i){for(var e,t=1,n=arguments.length;t<n;t++){e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(i[r]=e[r])}return i},il.apply(this,arguments)},Yl=ue&&ue.__spreadArray||function(i,e,t){if(t||arguments.length===2)for(var n=0,r=e.length,s;n<r;n++)(s||!(n in e))&&(s||(s=Array.prototype.slice.call(e,0,n)),s[n]=e[n]);return i.concat(s||Array.prototype.slice.call(e))},aa=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(xo,"__esModule",{value:!0});xo.parse=xo.base_parse=void 0;var wd=i1,KT=aa(mf),rl=aa(Af),_d=aa(qf),Y1=aa(Ef),QT=aa(Cc),Cd=aa(Wl),sl=aa(Mc),Rs=aa(ja);function Xl(i){return JSON.parse(JSON.stringify(KT.default.decode(i)))}var ex=["h1","h2","h3","h4","h5","h6","header","hgroup"],tx=["details","dialog","dd","div","dt"],nx=["fieldset","figcaption","figure","footer","form"],ix=["table","td","tr"],rx=["address","article","aside","blockquote","br","hr","li","main","nav","ol","p","pre","section","ul"],gp=new Set;function sx(){for(var i=[],e=0;e<arguments.length;e++)i[e]=arguments[e];for(var t=function(o){for(var l=0;l<o.length;l++){var u=o[l];gp.add(u),gp.add(u.toUpperCase())}},n=0,r=i;n<r.length;n++){var s=r[n];t(s)}}sx(ex,tx,nx,ix,rx);var ox=function(){function i(e,t){e===void 0&&(e=[]),t===void 0&&(t=function(){return null}),this._set=new Set(e),this._afterUpdate=t}return i.prototype._validate=function(e){if(/\s/.test(e))throw new Error("DOMException in DOMTokenList.add: The token '".concat(e,"' contains HTML space characters, which are not valid in tokens."))},i.prototype.add=function(e){this._validate(e),this._set.add(e),this._afterUpdate(this)},i.prototype.replace=function(e,t){this._validate(t),this._set.delete(e),this._set.add(t),this._afterUpdate(this)},i.prototype.remove=function(e){this._set.delete(e)&&this._afterUpdate(this)},i.prototype.toggle=function(e){this._validate(e),this._set.has(e)?this._set.delete(e):this._set.add(e),this._afterUpdate(this)},i.prototype.contains=function(e){return this._set.has(e)},Object.defineProperty(i.prototype,"length",{get:function(){return this._set.size},enumerable:!1,configurable:!0}),i.prototype.values=function(){return this._set.values()},Object.defineProperty(i.prototype,"value",{get:function(){return Array.from(this._set.values())},enumerable:!1,configurable:!0}),i.prototype.toString=function(){return Array.from(this._set.values()).join(" ")},i}(),mp=function(i){ZT(e,i);function e(t,n,r,s,o,l,u){r===void 0&&(r=""),l===void 0&&(l=new Y1.default),u===void 0&&(u={});var c=i.call(this,s,o)||this;if(c.rawAttrs=r,c.voidTag=l,c.nodeType=Rs.default.ELEMENT_NODE,c.rawTagName=t,c.rawAttrs=r||"",c.id=n.id||"",c.childNodes=[],c._parseOptions=u,c.classList=new ox(n.class?n.class.split(/\s+/):[],function(d){return c.setAttribute("class",d.toString())}),n.id&&(r||(c.rawAttrs='id="'.concat(n.id,'"'))),n.class&&!r){var p='class="'.concat(c.classList.toString(),'"');c.rawAttrs?c.rawAttrs+=" ".concat(p):c.rawAttrs=p}return c}return e.prototype.quoteAttribute=function(t){return t==null?"null":JSON.stringify(t.replace(/"/g,"&quot;"))},e.prototype.removeChild=function(t){return this.childNodes=this.childNodes.filter(function(n){return n!==t}),this},e.prototype.exchangeChild=function(t,n){var r=this.childNodes;return this.childNodes=r.map(function(s){return s===t?n:s}),this},Object.defineProperty(e.prototype,"tagName",{get:function(){return this.rawTagName?this.rawTagName.toUpperCase():this.rawTagName},set:function(t){this.rawTagName=t.toLowerCase()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"localName",{get:function(){return this.rawTagName.toLowerCase()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isVoidElement",{get:function(){return this.voidTag.isVoidElement(this.localName)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rawText",{get:function(){return this.childNodes.reduce(function(t,n){return t+=n.rawText},"")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"textContent",{get:function(){return Xl(this.rawText)},set:function(t){var n=[new sl.default(t,this)];this.childNodes=n},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"text",{get:function(){return Xl(this.rawText)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"structuredText",{get:function(){var t=[],n=[t];function r(s){if(s.nodeType===Rs.default.ELEMENT_NODE)gp.has(s.rawTagName)?(t.length>0&&n.push(t=[]),s.childNodes.forEach(r),t.length>0&&n.push(t=[])):s.childNodes.forEach(r);else if(s.nodeType===Rs.default.TEXT_NODE)if(s.isWhitespace)t.prependWhitespace=!0;else{var o=s.trimmedText;t.prependWhitespace&&(o=" ".concat(o),t.prependWhitespace=!1),t.push(o)}}return r(this),n.map(function(s){return s.join("").replace(/\s{2,}/g," ")}).join(`
`).replace(/\s+$/,"")},enumerable:!1,configurable:!0}),e.prototype.toString=function(){var t=this.rawTagName;if(t){var n=this.rawAttrs?" ".concat(this.rawAttrs):"";return this.voidTag.formatNode(t,n,this.innerHTML)}return this.innerHTML},Object.defineProperty(e.prototype,"innerHTML",{get:function(){return this.childNodes.map(function(t){return t.toString()}).join("")},set:function(t){var n=Ka(t,this._parseOptions),r=n.childNodes.length?n.childNodes:[new sl.default(t,this)];ro(r,this),ro(this.childNodes,null),this.childNodes=r},enumerable:!1,configurable:!0}),e.prototype.set_content=function(t,n){if(n===void 0&&(n={}),t instanceof Cd.default)t=[t];else if(typeof t=="string"){n=il(il({},this._parseOptions),n);var r=Ka(t,n);t=r.childNodes.length?r.childNodes:[new sl.default(r.innerHTML,this)]}return ro(this.childNodes,null),ro(t,this),this.childNodes=t,this},e.prototype.replaceWith=function(){for(var t=this,n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var s=this.parentNode,o=n.map(function(u){if(u instanceof Cd.default)return[u];if(typeof u=="string"){var c=Ka(u,t._parseOptions);return c.childNodes.length?c.childNodes:[new sl.default(u,t)]}return[]}).flat(),l=s.childNodes.findIndex(function(u){return u===t});return ro([this],null),s.childNodes=Yl(Yl(Yl([],s.childNodes.slice(0,l),!0),ro(o,s),!0),s.childNodes.slice(l+1),!0),this},Object.defineProperty(e.prototype,"outerHTML",{get:function(){return this.toString()},enumerable:!1,configurable:!0}),e.prototype.trimRight=function(t){for(var n=0;n<this.childNodes.length;n++){var r=this.childNodes[n];if(r.nodeType===Rs.default.ELEMENT_NODE)r.trimRight(t);else{var s=r.rawText.search(t);s>-1&&(r.rawText=r.rawText.substr(0,s),this.childNodes.length=n+1)}}return this},Object.defineProperty(e.prototype,"structure",{get:function(){var t=[],n=0;function r(o){t.push("  ".repeat(n)+o)}function s(o){var l=o.id?"#".concat(o.id):"",u=o.classList.length?".".concat(o.classList.value.join(".")):"";r("".concat(o.rawTagName).concat(l).concat(u)),n++,o.childNodes.forEach(function(c){c.nodeType===Rs.default.ELEMENT_NODE?s(c):c.nodeType===Rs.default.TEXT_NODE&&(c.isWhitespace||r("#text"))}),n--}return s(this),t.join(`
`)},enumerable:!1,configurable:!0}),e.prototype.removeWhitespace=function(){var t=this,n=0;return this.childNodes.forEach(function(r){if(r.nodeType===Rs.default.TEXT_NODE){if(r.isWhitespace)return;r.rawText=r.trimmedRawText}else r.nodeType===Rs.default.ELEMENT_NODE&&r.removeWhitespace();t.childNodes[n++]=r}),this.childNodes.length=n,this},e.prototype.querySelectorAll=function(t){return(0,wd.selectAll)(t,this,{xmlMode:!0,adapter:_d.default})},e.prototype.querySelector=function(t){return(0,wd.selectOne)(t,this,{xmlMode:!0,adapter:_d.default})},e.prototype.getElementsByTagName=function(t){for(var n=t.toUpperCase(),r=[],s=[],o=this,l=0;l!==void 0;){var u=void 0;do u=o.childNodes[l++];while(l<o.childNodes.length&&u===void 0);if(u===void 0){o=o.parentNode,l=s.pop();continue}u.nodeType===Rs.default.ELEMENT_NODE&&((t==="*"||u.tagName===n)&&r.push(u),u.childNodes.length>0&&(s.push(l),o=u,l=0))}return r},e.prototype.getElementById=function(t){for(var n=[],r=this,s=0;s!==void 0;){var o=void 0;do o=r.childNodes[s++];while(s<r.childNodes.length&&o===void 0);if(o===void 0){r=r.parentNode,s=n.pop();continue}if(o.nodeType===Rs.default.ELEMENT_NODE){if(o.id===t)return o;o.childNodes.length>0&&(n.push(s),r=o,s=0)}}return null},e.prototype.closest=function(t){var n=new Map,r=this,s=null;function o(u,c){for(var p=null,d=0,f=c.length;d<f&&!p;d++){var g=c[d];if(u(g))p=g;else{var v=n.get(g);v&&(p=o(u,[v]))}}return p}for(;r;)n.set(r,s),s=r,r=r.parentNode;for(r=this;r;){var l=(0,wd.selectOne)(t,r,{xmlMode:!0,adapter:il(il({},_d.default),{getChildren:function(u){var c=n.get(u);return c&&[c]},getSiblings:function(u){return[u]},findOne:o,findAll:function(){return[]}})});if(l)return l;r=r.parentNode}return null},e.prototype.appendChild=function(t){return t.remove(),this.childNodes.push(t),t.parentNode=this,t},Object.defineProperty(e.prototype,"firstChild",{get:function(){return this.childNodes[0]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastChild",{get:function(){return(0,rl.default)(this.childNodes)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"attrs",{get:function(){if(this._attrs)return this._attrs;this._attrs={};var t=this.rawAttributes;for(var n in t){var r=t[n]||"";this._attrs[n.toLowerCase()]=Xl(r)}return this._attrs},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"attributes",{get:function(){var t={},n=this.rawAttributes;for(var r in n){var s=n[r]||"";t[r]=Xl(s)}return t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rawAttributes",{get:function(){if(this._rawAttrs)return this._rawAttrs;var t={};if(this.rawAttrs)for(var n=/([a-zA-Z()[\]#@$.?:][a-zA-Z0-9-_:()[\]#]*)(?:\s*=\s*((?:'[^']*')|(?:"[^"]*")|\S+))?/g,r=void 0;r=n.exec(this.rawAttrs);){var s=r[1],o=r[2]||null;o&&(o[0]==="'"||o[0]==='"')&&(o=o.slice(1,o.length-1)),t[s]=t[s]||o}return this._rawAttrs=t,t},enumerable:!1,configurable:!0}),e.prototype.removeAttribute=function(t){var n=this.rawAttributes;return delete n[t],this._attrs&&delete this._attrs[t],this.rawAttrs=Object.keys(n).map(function(r){var s=JSON.stringify(n[r]);return s===void 0||s==="null"?r:"".concat(r,"=").concat(s)}).join(" "),t==="id"&&(this.id=""),this},e.prototype.hasAttribute=function(t){return t.toLowerCase()in this.attrs},e.prototype.getAttribute=function(t){return this.attrs[t.toLowerCase()]},e.prototype.setAttribute=function(t,n){var r=this;if(arguments.length<2)throw new Error("Failed to execute 'setAttribute' on 'Element'");var s=t.toLowerCase(),o=this.rawAttributes;for(var l in o)if(l.toLowerCase()===s){t=l;break}return o[t]=String(n),this._attrs&&(this._attrs[s]=Xl(o[t])),this.rawAttrs=Object.keys(o).map(function(u){var c=r.quoteAttribute(o[u]);return c==="null"||c==='""'?u:"".concat(u,"=").concat(c)}).join(" "),t==="id"&&(this.id=n),this},e.prototype.setAttributes=function(t){var n=this;return this._attrs&&delete this._attrs,this._rawAttrs&&delete this._rawAttrs,this.rawAttrs=Object.keys(t).map(function(r){var s=t[r];return s==="null"||s==='""'?r:"".concat(r,"=").concat(n.quoteAttribute(String(s)))}).join(" "),this},e.prototype.insertAdjacentHTML=function(t,n){var r,s,o,l=this;if(arguments.length<2)throw new Error("2 arguments required");var u=Ka(n,this._parseOptions);if(t==="afterend"){var c=this.parentNode.childNodes.findIndex(function(p){return p===l});ro(u.childNodes,this.parentNode),(r=this.parentNode.childNodes).splice.apply(r,Yl([c+1,0],u.childNodes,!1))}else if(t==="afterbegin")ro(u.childNodes,this),(s=this.childNodes).unshift.apply(s,u.childNodes);else if(t==="beforeend")u.childNodes.forEach(function(p){l.appendChild(p)});else if(t==="beforebegin"){var c=this.parentNode.childNodes.findIndex(function(d){return d===l});ro(u.childNodes,this.parentNode),(o=this.parentNode.childNodes).splice.apply(o,Yl([c,0],u.childNodes,!1))}else throw new Error("The value provided ('".concat(t,"') is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'"));return this},Object.defineProperty(e.prototype,"nextSibling",{get:function(){if(this.parentNode){for(var t=this.parentNode.childNodes,n=0;n<t.length;){var r=t[n++];if(this===r)return t[n]||null}return null}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"nextElementSibling",{get:function(){if(this.parentNode){for(var t=this.parentNode.childNodes,n=0,r=!1;n<t.length;){var s=t[n++];if(r){if(s instanceof e)return s||null}else this===s&&(r=!0)}return null}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"previousSibling",{get:function(){if(this.parentNode){for(var t=this.parentNode.childNodes,n=t.length;n>0;){var r=t[--n];if(this===r)return t[n-1]||null}return null}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"previousElementSibling",{get:function(){if(this.parentNode){for(var t=this.parentNode.childNodes,n=t.length,r=!1;n>0;){var s=t[--n];if(r){if(s instanceof e)return s||null}else this===s&&(r=!0)}return null}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classNames",{get:function(){return this.classList.toString()},enumerable:!1,configurable:!0}),e.prototype.clone=function(){return Ka(this.toString(),this._parseOptions).firstChild},e}(Cd.default);xo.default=mp;var io=/<!--[\s\S]*?-->|<(\/?)([a-zA-Z][-.:0-9_a-zA-Z]*)((?:\s+[^>]*?(?:(?:'[^']*')|(?:"[^"]*"))?)*)\s*(\/?)>/g,ax=/(?:^|\s)(id|class)\s*=\s*((?:'[^']*')|(?:"[^"]*")|\S+)/gi,lx={area:!0,AREA:!0,base:!0,BASE:!0,br:!0,BR:!0,col:!0,COL:!0,hr:!0,HR:!0,img:!0,IMG:!0,input:!0,INPUT:!0,link:!0,LINK:!0,meta:!0,META:!0,source:!0,SOURCE:!0,embed:!0,EMBED:!0,param:!0,PARAM:!0,track:!0,TRACK:!0,wbr:!0,WBR:!0},s0={li:{li:!0,LI:!0},LI:{li:!0,LI:!0},p:{p:!0,div:!0,P:!0,DIV:!0},P:{p:!0,div:!0,P:!0,DIV:!0},b:{div:!0,DIV:!0},B:{div:!0,DIV:!0},td:{td:!0,th:!0,TD:!0,TH:!0},TD:{td:!0,th:!0,TD:!0,TH:!0},th:{td:!0,th:!0,TD:!0,TH:!0},TH:{td:!0,th:!0,TD:!0,TH:!0},h1:{h1:!0,H1:!0},H1:{h1:!0,H1:!0},h2:{h2:!0,H2:!0},H2:{h2:!0,H2:!0},h3:{h3:!0,H3:!0},H3:{h3:!0,H3:!0},h4:{h4:!0,H4:!0},H4:{h4:!0,H4:!0},h5:{h5:!0,H5:!0},H5:{h5:!0,H5:!0},h6:{h6:!0,H6:!0},H6:{h6:!0,H6:!0}},o0={li:{ul:!0,ol:!0,UL:!0,OL:!0},LI:{ul:!0,ol:!0,UL:!0,OL:!0},a:{div:!0,DIV:!0},A:{div:!0,DIV:!0},b:{div:!0,DIV:!0},B:{div:!0,DIV:!0},i:{div:!0,DIV:!0},I:{div:!0,DIV:!0},p:{div:!0,DIV:!0},P:{div:!0,DIV:!0},td:{tr:!0,table:!0,TR:!0,TABLE:!0},TD:{tr:!0,table:!0,TR:!0,TABLE:!0},th:{tr:!0,table:!0,TR:!0,TABLE:!0},TH:{tr:!0,table:!0,TR:!0,TABLE:!0}},Zl="documentfragmentcontainer";function X1(i,e){var t,n;e===void 0&&(e={});var r=new Y1.default((t=e==null?void 0:e.voidTag)===null||t===void 0?void 0:t.closingSlash,(n=e==null?void 0:e.voidTag)===null||n===void 0?void 0:n.tags),s=e.blockTextElements||{script:!0,noscript:!0,style:!0,pre:!0},o=Object.keys(s),l=o.map(function(te){return new RegExp("^".concat(te,"$"),"i")}),u=o.filter(function(te){return s[te]}).map(function(te){return new RegExp("^".concat(te,"$"),"i")});function c(te){return u.some(function(oe){return oe.test(te)})}function p(te){return l.some(function(oe){return oe.test(te)})}var d=function(te,oe){return[te-k,oe-k]},f=new mp(null,{},"",null,[0,i.length],r,e),g=f,v=[f],w=-1,A=void 0,C;i="<".concat(Zl,">").concat(i,"</").concat(Zl,">");for(var m=e.lowerCaseTagName,y=e.fixNestedATags,x=i.length-(Zl.length+2),k=Zl.length+2;C=io.exec(i);){var q=C[0],I=C[1],S=C[2],$=C[3],B=C[4],D=q.length,N=io.lastIndex-D,O=io.lastIndex;if(w>-1&&w+D<O){var L=i.substring(w,N);g.appendChild(new sl.default(L,g,d(w,N)))}if(w=io.lastIndex,S!==Zl){if(q[1]==="!"){if(e.comment){var L=i.substring(N+4,O-3);g.appendChild(new QT.default(L,g,d(N,O)))}continue}if(m&&(S=S.toLowerCase()),!I){for(var V={},X=void 0;X=ax.exec($);){var K=X[1],ee=X[2],z=ee[0]==="'"||ee[0]==='"';V[K.toLowerCase()]=z?ee.slice(1,ee.length-1):ee}var J=g.rawTagName;!B&&s0[J]&&s0[J][S]&&(v.pop(),g=(0,rl.default)(v)),y&&(S==="a"||S==="A")&&(A!==void 0&&(v.splice(A),g=(0,rl.default)(v)),A=v.length);var H=io.lastIndex,Y=H-D;if(g=g.appendChild(new mp(S,V,$.slice(1),null,d(Y,H),r,e)),v.push(g),p(S)){var se="</".concat(S,">"),Q=m?i.toLocaleLowerCase().indexOf(se,io.lastIndex):i.indexOf(se,io.lastIndex),ie=Q===-1?x:Q;if(c(S)){var L=i.substring(H,ie);L.length>0&&/\S/.test(L)&&g.appendChild(new sl.default(L,g,d(H,ie)))}Q===-1?w=io.lastIndex=i.length+1:(w=io.lastIndex=Q+se.length,I="/")}}if(I||B||lx[S])for(;;)if(A!=null&&(S==="a"||S==="A")&&(A=void 0),g.rawTagName===S){g.range[1]=d(-1,Math.max(w,O))[1],v.pop(),g=(0,rl.default)(v);break}else{var J=g.tagName;if(o0[J]&&o0[J][S]){v.pop(),g=(0,rl.default)(v);continue}break}}}return v}xo.base_parse=X1;function Ka(i,e){e===void 0&&(e={});for(var t=X1(i,e),n=t[0],r=function(){var s=t.pop(),o=(0,rl.default)(t);s.parentNode&&s.parentNode.parentNode&&(s.parentNode===o&&s.tagName===o.tagName?e.parseNoneClosedTags!==!0&&(o.removeChild(s),s.childNodes.forEach(function(l){o.parentNode.appendChild(l)}),t.pop()):e.parseNoneClosedTags!==!0&&(o.removeChild(s),s.childNodes.forEach(function(l){o.appendChild(l)})))};t.length>1;)r();return n}xo.parse=Ka;function ro(i,e){return i.map(function(t){return t.parentNode=e,t})}var Z1={};(function(i){Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;var e=xo;Object.defineProperty(i,"default",{enumerable:!0,get:function(){return e.parse}})})(Z1);var If={};Object.defineProperty(If,"__esModule",{value:!0});var ux=xo;function hx(i,e){e===void 0&&(e={});var t=(0,ux.base_parse)(i,e);return t.length===1}If.default=hx;var Ja=ue&&ue.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(Wi,"__esModule",{value:!0});Wi.NodeType=Wi.TextNode=Wi.Node=Wi.valid=Wi.CommentNode=Wi.HTMLElement=sb=Wi.parse=void 0;var K1=Ja(Cc);Wi.CommentNode=K1.default;var Q1=Ja(xo);Wi.HTMLElement=Q1.default;var eb=Ja(Wl);Wi.Node=eb.default;var tb=Ja(Mc);Wi.TextNode=tb.default;var nb=Ja(ja);Wi.NodeType=nb.default;var ib=Ja(Z1),rb=Ja(If);Wi.valid=rb.default;function Ao(i,e){return e===void 0&&(e={}),(0,ib.default)(i,e)}Wi.default=Ao;var sb=Wi.parse=Ao;Ao.parse=ib.default;Ao.HTMLElement=Q1.default;Ao.CommentNode=K1.default;Ao.valid=rb.default;Ao.Node=eb.default;Ao.TextNode=tb.default;Ao.NodeType=nb.default;const No=class No extends sa{constructor(t,n){super("Extract all images from a layoutConfig using the meta paths.",[],"ExctractImages");R(this,"_isOfficial");R(this,"_sharedTagRenderings");this._isOfficial=t,this._sharedTagRenderings=n}static mightBeTagRendering(t){if(!t.type)return!1;let n;return Array.isArray(t.type)?n=t.type:n=[t.type],n.some(r=>{var s,o;return r!==null&&(r.$ref=="#/definitions/TagRenderingConfigJson"||r.$ref=="#/definitions/MinimalTagRenderingConfigJson"||r.$ref=="#/definitions/QuestionableTagRenderingConfigJson"||((s=r.properties)==null?void 0:s.render)!==void 0&&((o=r.properties)==null?void 0:o.mappings)!==void 0)})}convert(t,n){var o,l,u;const r=[];for(const c of No.layoutMetaPaths){const p=No.mightBeTagRendering(c),d=c.hints.typehint==="icon"||c.hints.typehint==="image",f=ke.CollectPath(c.path,t);if(p)for(const g of f){const v=g.path,w=g.leaf;if(typeof w=="string"){if(!d||(w==""&&n.warn(n+"."+v.join(".")+" Found an empty image"),(o=this._sharedTagRenderings)!=null&&o.has(w)))continue;r.push({path:w,context:n+"."+v})}else for(const A of No.tagRenderingMetaPaths){const C=ke.CollectPath(A.path,w),m=A.hints.typehint==="rendered",y=A.hints.typehint==="icon"||A.hints.typehint==="image";for(const x of C){if(d&&m)if(x.leaf===""||x.leaf.path=="")n.enter(v).enter(x.path).warn("Found an emtpy image");else if(typeof x.leaf!="string"){const k=n.enter(x.path),q="found an image path that is not a string: "+JSON.stringify(x.leaf);this._isOfficial?k.err(q):k.warn(q)}else r.push({path:x.leaf,context:n+"."+v});!d&&y&&r.push(...De.T(x.leaf,"extract_images from "+x.path.join(".")).ExtractImages(!1).map(k=>({path:k,context:n+"."+k})))}}}else for(const g of f){if(g.leaf===""){n.enter(g.path).warn("Found an empty image");continue}typeof g.leaf=="string"&&r.push({context:n+"."+g.path.join("."),path:g.leaf})}}const s=[];for(const c of r){if(c.path.startsWith("<")&&c.path.endsWith(">")){const d=sb(c.path),g=Array.from(d.getElementsByTagName("img")).map(v=>v.getAttribute("src"));s.push(...g.map(v=>({path:v,context:c.context+" (in html)"})));continue}const p=ke.NoNull(ke.NoEmpty((u=(l=c.path)==null?void 0:l.split(";"))==null?void 0:u.map(d=>d.split(":")[0])));for(const d of p)s.push({path:d,context:c.context})}return s}};R(No,"layoutMetaPaths",e1.filter(t=>{const n=t.hints.typehint;return No.mightBeTagRendering(t)||n!==void 0&&(n==="image"||n==="icon"||n==="image[]"||n==="icon[]")})),R(No,"tagRenderingMetaPaths",t1);let yp=No;class kx extends Pu{constructor(t){super("Walks over the entire theme and replaces images to the relative URL. Only works if the ID of the theme is an URL",[],"fixImages");R(this,"_knownImages");this._knownImages=t}convert(t,n){let r;try{r=new URL(t.id)}catch{return t}const s=r.protocol+"//"+r.host;let o=r.protocol+"//"+r.host+r.pathname;o=o.substring(0,o.lastIndexOf("/"));const l=this;o.endsWith("assets/generated/themes")&&(n.warn("Detected 'assets/generated/themes' as relative URL. I'm assuming that you are loading your file for the MC-repository, so I'm rewriting all image links as if they were absolute instead of relative"),o=s);function u(c){return l._knownImages.has(c)?c:typeof c!="string"?(n.warn("Found a non-string object while replacing images: "+JSON.stringify(c)),c):c.startsWith("./")?o+c.substring(1):c.startsWith("/")?s+c:c}t=ke.Clone(t);for(const c of e1){if(c.hints.typehint!=="image"&&c.hints.typehint!=="icon")continue;const p=yp.mightBeTagRendering(c);ke.WalkPath(c.path,t,d=>{if(typeof d=="string")return u(d);if(p)for(const f of t1)f.hints.typehint==="rendered"&&ke.WalkPath(f.path,d,g=>u(g));return d})}return t}}export{En as $,qn as A,fa as B,m6 as C,op as D,M6 as E,F9 as F,so as G,x9 as H,Qy as I,d3 as J,hp as K,U7 as L,Fu as M,G6 as N,x2 as O,lp as P,U8 as Q,H6 as R,zd as S,In as T,H5 as U,uf as V,Tu as W,e9 as X,ip as Y,Dn as Z,Qi as _,tr as a,gf as a0,X8 as a1,W6 as a2,Z9 as a3,M9 as a4,yp as a5,Vh as a6,tu as a7,z7 as a8,sa as a9,jo as aa,t1 as ab,e1 as ac,Pu as ad,Tx as ae,vx as af,Y7 as ag,_x as ah,xx as ai,Cx as aj,bx as ak,sb as al,wx as am,kx as an,El as b,q9 as c,Ad as d,Zy as e,Li as f,ds as g,y5 as h,b5 as i,k5 as j,Hd as k,Yd as l,F7 as m,Fy as n,Xy as o,Ll as p,Jd as q,W9 as r,Xd as s,Py as t,af as u,ap as v,W5 as w,_9 as x,_6 as y,Z6 as z};
//# sourceMappingURL=FixImages-e57447a6.js.map
