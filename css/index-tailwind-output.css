/*
    TailwindCSS JIT-Mode Input file.
    Use TailwindCSS functions and directives here â€“ https://tailwindcss.com/docs/functions-and-directives
    About JIT-Mode: https://tailwindcss.com/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop

    TailwindCSS CLI generates the css/index-tailwind-output.css file based on this file.
    It is not used directly in the app.
*/

/*
    ! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  /* 3 */
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  -webkit-font-feature-settings: normal;
          font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::-webkit-backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

.\!container {
  width: 100% !important;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }

  .\!container {
    max-width: 640px !important;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }

  .\!container {
    max-width: 768px !important;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }

  .\!container {
    max-width: 1024px !important;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }

  .\!container {
    max-width: 1280px !important;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }

  .\!container {
    max-width: 1536px !important;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.visible {
  visibility: visible;
}

.\!visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.\!fixed {
  position: fixed !important;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.\!relative {
  position: relative !important;
}

.sticky {
  position: -webkit-sticky;
  position: sticky;
}

.-inset-1 {
  top: -0.25rem;
  right: -0.25rem;
  bottom: -0.25rem;
  left: -0.25rem;
}

.left-24 {
  left: 6rem;
}

.right-24 {
  right: 6rem;
}

.top-56 {
  top: 14rem;
}

.bottom-0 {
  bottom: 0px;
}

.top-0 {
  top: 0px;
}

.left-0 {
  left: 0px;
}

.right-4 {
  right: 1rem;
}

.top-4 {
  top: 1rem;
}

.right-1\/3 {
  right: 33.333333%;
}

.right-0 {
  right: 0px;
}

.right-10 {
  right: 2.5rem;
}

.top-10 {
  top: 2.5rem;
}

.left-1\/4 {
  left: 25%;
}

.isolate {
  isolation: isolate;
}

.isolation-auto {
  isolation: auto;
}

.-z-10 {
  z-index: -10;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.m-4 {
  margin: 1rem;
}

.m-2 {
  margin: 0.5rem;
}

.m-3 {
  margin: 0.75rem;
}

.m-0 {
  margin: 0px;
}

.m-8 {
  margin: 2rem;
}

.m-1 {
  margin: 0.25rem;
}

.m-0\.5 {
  margin: 0.125rem;
}

.m-11 {
  margin: 2.75rem;
}

.m-20 {
  margin: 5rem;
}

.m-9 {
  margin: 2.25rem;
}

.m-5 {
  margin: 1.25rem;
}

.m-14 {
  margin: 3.5rem;
}

.m-52 {
  margin: 13rem;
}

.m-36 {
  margin: 9rem;
}

.m-72 {
  margin: 18rem;
}

.m-6 {
  margin: 1.5rem;
}

.m-32 {
  margin: 8rem;
}

.m-44 {
  margin: 11rem;
}

.m-28 {
  margin: 7rem;
}

.m-7 {
  margin: 1.75rem;
}

.m-px {
  margin: 1px;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.mx-12 {
  margin-left: 3rem;
  margin-right: 3rem;
}

.mx-16 {
  margin-left: 4rem;
  margin-right: 4rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mr-4 {
  margin-right: 1rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mb-16 {
  margin-bottom: 4rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mr-0\.5 {
  margin-right: 0.125rem;
}

.mr-0 {
  margin-right: 0px;
}

.mr-1 {
  margin-right: 0.25rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-1\.5 {
  margin-bottom: 0.375rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.-ml-6 {
  margin-left: -1.5rem;
}

.mt-12 {
  margin-top: 3rem;
}

.mr-12 {
  margin-right: 3rem;
}

.box-border {
  box-sizing: border-box;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.inline-table {
  display: inline-table;
}

.table-caption {
  display: table-caption;
}

.table-cell {
  display: table-cell;
}

.table-column {
  display: table-column;
}

.table-column-group {
  display: table-column-group;
}

.table-footer-group {
  display: table-footer-group;
}

.table-header-group {
  display: table-header-group;
}

.table-row-group {
  display: table-row-group;
}

.table-row {
  display: table-row;
}

.flow-root {
  display: flow-root;
}

.grid {
  display: grid;
}

.inline-grid {
  display: inline-grid;
}

.contents {
  display: contents;
}

.\!contents {
  display: contents !important;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.h-24 {
  height: 6rem;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.h-fit {
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}

.h-32 {
  height: 8rem;
}

.h-min {
  height: -webkit-min-content;
  height: min-content;
}

.h-8 {
  height: 2rem;
}

.h-12 {
  height: 3rem;
}

.h-6 {
  height: 1.5rem;
}

.h-0 {
  height: 0px;
}

.h-4 {
  height: 1rem;
}

.h-1\/2 {
  height: 50%;
}

.h-3 {
  height: 0.75rem;
}

.h-7 {
  height: 1.75rem;
}

.h-11 {
  height: 2.75rem;
}

.h-5 {
  height: 1.25rem;
}

.h-16 {
  height: 4rem;
}

.h-48 {
  height: 12rem;
}

.h-40 {
  height: 10rem;
}

.h-64 {
  height: 16rem;
}

.h-80 {
  height: 20rem;
}

.h-56 {
  height: 14rem;
}

.h-20 {
  height: 5rem;
}

.h-10 {
  height: 2.5rem;
}

.max-h-12 {
  max-height: 3rem;
}

.max-h-24 {
  max-height: 6rem;
}

.max-h-64 {
  max-height: 16rem;
}

.max-h-60 {
  max-height: 15rem;
}

.w-full {
  width: 100%;
}

.w-32 {
  width: 8rem;
}

.w-64 {
  width: 16rem;
}

.w-8 {
  width: 2rem;
}

.w-12 {
  width: 3rem;
}

.w-6 {
  width: 1.5rem;
}

.w-screen {
  width: 100vw;
}

.w-fit {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.w-24 {
  width: 6rem;
}

.w-0 {
  width: 0px;
}

.w-4 {
  width: 1rem;
}

.w-3 {
  width: 0.75rem;
}

.w-7 {
  width: 1.75rem;
}

.w-11 {
  width: 2.75rem;
}

.w-1\/2 {
  width: 50%;
}

.w-max {
  width: -webkit-max-content;
  width: max-content;
}

.w-auto {
  width: auto;
}

.w-5 {
  width: 1.25rem;
}

.w-16 {
  width: 4rem;
}

.w-min {
  width: -webkit-min-content;
  width: min-content;
}

.w-48 {
  width: 12rem;
}

.max-w-full {
  max-width: 100%;
}

.max-w-fit {
  max-width: -webkit-fit-content;
  max-width: -moz-fit-content;
  max-width: fit-content;
}

.flex-none {
  flex: none;
}

.flex-shrink {
  flex-shrink: 1;
}

.shrink-0 {
  flex-shrink: 0;
}

.shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.border-collapse {
  border-collapse: collapse;
}

.transform {
  -webkit-transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
          transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\!transform {
  -webkit-transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
          transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

@-webkit-keyframes spin {
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes spin {
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

.animate-spin {
  -webkit-animation: spin 1s linear infinite;
          animation: spin 1s linear infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-zoom-in {
  cursor: zoom-in;
}

.resize {
  resize: both;
}

.appearance-none {
  -webkit-appearance: none;
          appearance: none;
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-stretch {
  align-items: stretch;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-y-1 {
  row-gap: 0.25rem;
}

.gap-x-4 {
  -webkit-column-gap: 1rem;
          column-gap: 1rem;
}

.gap-x-0\.5 {
  -webkit-column-gap: 0.125rem;
          column-gap: 0.125rem;
}

.gap-x-0 {
  -webkit-column-gap: 0px;
          column-gap: 0px;
}

.gap-y-2 {
  row-gap: 0.5rem;
}

.gap-x-1 {
  -webkit-column-gap: 0.25rem;
          column-gap: 0.25rem;
}

.gap-x-2 {
  -webkit-column-gap: 0.5rem;
          column-gap: 0.5rem;
}

.gap-y-8 {
  row-gap: 2rem;
}

.space-x-0\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.125rem * var(--tw-space-x-reverse));
  margin-left: calc(0.125rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0px * var(--tw-space-x-reverse));
  margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-0\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.space-y-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0px * var(--tw-space-y-reverse));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 1;
}

.space-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 1;
}

.divide-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 1;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.justify-self-start {
  justify-self: start;
}

.justify-self-end {
  justify-self: end;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.overflow-ellipsis {
  text-overflow: ellipsis;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.text-clip {
  text-overflow: clip;
}

.break-words {
  overflow-wrap: break-word;
}

.break-all {
  word-break: break-all;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-tl {
  border-top-left-radius: 0.25rem;
}

.rounded-tr {
  border-top-right-radius: 0.25rem;
}

.rounded-br {
  border-bottom-right-radius: 0.25rem;
}

.rounded-bl {
  border-bottom-left-radius: 0.25rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-x {
  border-left-width: 1px;
  border-right-width: 1px;
}

.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-l-4 {
  border-left-width: 4px;
}

.border-l {
  border-left-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-dashed {
  border-style: dashed;
}

.border-dotted {
  border-style: dotted;
}

.border-none {
  border-style: none;
}

.border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}

.border-gray-500 {
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / var(--tw-border-opacity));
}

.border-subtle {
  --tw-border-opacity: 1;
  border-color: rgb(219 234 254 / var(--tw-border-opacity));
}

.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

.border-gray-600 {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

.border-gray-800 {
  --tw-border-opacity: 1;
  border-color: rgb(31 41 55 / var(--tw-border-opacity));
}

.border-opacity-50 {
  --tw-border-opacity: 0.5;
}

.bg-gray-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-red-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(248 113 113 / var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.bg-indigo-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(224 231 255 / var(--tw-bg-opacity));
}

.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

.bg-repeat {
  background-repeat: repeat;
}

.p-4 {
  padding: 1rem;
}

.p-8 {
  padding: 2rem;
}

.p-0 {
  padding: 0px;
}

.p-2 {
  padding: 0.5rem;
}

.p-1 {
  padding: 0.25rem;
}

.p-0\.5 {
  padding: 0.125rem;
}

.p-12 {
  padding: 3rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.pr-12 {
  padding-right: 3rem;
}

.pl-1 {
  padding-left: 0.25rem;
}

.pr-1 {
  padding-right: 0.25rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pt-0\.5 {
  padding-top: 0.125rem;
}

.pt-0 {
  padding-top: 0px;
}

.pl-5 {
  padding-left: 1.25rem;
}

.pr-3 {
  padding-right: 0.75rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pr-4 {
  padding-right: 1rem;
}

.pl-3 {
  padding-left: 0.75rem;
}

.pt-1 {
  padding-top: 0.25rem;
}

.pb-10 {
  padding-bottom: 2.5rem;
}

.pb-2 {
  padding-bottom: 0.5rem;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.font-extrabold {
  font-weight: 800;
}

.font-semibold {
  font-weight: 600;
}

.font-bold {
  font-weight: 700;
}

.font-normal {
  font-weight: 400;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.normal-case {
  text-transform: none;
}

.italic {
  font-style: italic;
}

.not-italic {
  font-style: normal;
}

.normal-nums {
  font-variant-numeric: normal;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.slashed-zero {
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.tracking-tight {
  letter-spacing: -0.025em;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.no-underline {
  text-decoration-line: none;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

.opacity-50 {
  opacity: 0.5;
}

.opacity-100 {
  opacity: 1;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-inset {
  --tw-ring-inset: inset;
}

.blur {
  --tw-blur: blur(8px);
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-md {
  --tw-drop-shadow: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06));
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-2xl {
  --tw-drop-shadow: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia {
  --tw-sepia: sepia(100%);
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.\!filter {
  -webkit-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
          filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-grayscale {
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-invert {
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-sepia {
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, -webkit-transform, -webkit-filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-transform, -webkit-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.\[key\:string\] {
  key: string;
}

.\[_\:string\] {
  _: string;
}

.\[a-zA-Z0-9\:_\] {
  a-z-a--z0-9: ;
}

:root {
  /* 
    * The main colour scheme of mapcomplete is configured here.
    * For a custom styling, set 'customCss' in your layoutConfig and overwrite some of these.
    */
  /* Main color of the application: the background and text colours */
  --background-color: white;
  /* Main text colour. Also styles some elements, such as the 'close popup'-button or 'back-arrow' (in mobile) */
  --foreground-color: black;
  /* A colour scheme to indicate an error or warning */
  --alert-color: #fee4d1;
  --alert-foreground-color: var(--foreground-color);
  --low-interaction-background: #eeeeee;
  --low-interaction-background-50: #eeeeee90;
  --low-interaction-foreground: black;
  --low-interaction-contrast: #ff00ff;
  --interactive-background: #dddddd;
  --interactive-foreground: black;
  --interactive-contrast: #ff00ff;
  --button-background: black;
  --button-foreground: white;
  /**
     * Base colour of interactive elements, mainly the 'subtle button'
     * @deprecated
     */
  --subtle-detail-color: #dbeafe;
  --subtle-detail-color-contrast: black;
  --subtle-detail-color-light-contrast: lightgrey;
  --catch-detail-color: black;
  /*#3a3aeb;*/
  --catch-detail-foregroundcolor: white;
  --catch-detail-color-contrast: #fb3afb;
  --image-carousel-height: 350px;
  /** Technical value, used by icon.svelte
     */
  --svg-color: #000000;
}

/***********************************************************************\
* Various tweaks and settings to make some behaviours more predictable *
\***********************************************************************/

html,
body {
  height: 100%;
  min-height: 100vh;
  min-height: -webkit-fill-available;
  margin: 0;
  padding: 0;
  background-color: var(--background-color);
  color: var(--foreground-color);
  font-family: "Helvetica Neue", Arial, sans-serif;
}

svg,
img {
  box-sizing: content-box;
  width: 100%;
  height: 100%;
}

li {
  margin-left: 0.5em;
  padding-left: 0.2em;
  margin-top: 0.1em;
}

li::marker {
  content: "â€¢";
}

h1 {
  font-size: xx-large;
  margin-top: 0.6em;
  margin-bottom: 0.4em;
  font-weight: bold;
}

h2 {
  font-size: x-large;
  margin-top: 0.5em;
  margin-bottom: 0.3em;
  font-weight: bold;
}

h3 {
  font-size: larger;
  margin-top: 0.6em;
  margin-bottom: 0;
  font-weight: bold;
}

p {
  padding-top: 0.1em;
}

input {
  color: var(--foreground-color);
}

input[type=text] {
  width: 100%;
}

/************************* BIG CATEGORIES ********************************/

/**
 * The main classes that dictate the structure of the entire app,
 * and some interactive elements
 */

.subtle-background {
  background: var(--subtle-detail-color);
  color: var(--subtle-detail-color-contrast);
}

.normal-background {
  background: var(--background-color);
  color: var(--foreground-color);
}

.low-interaction {
  background: var(--low-interaction-background);
  color: var(--low-interaction-foreground)
}

.interactive {
  background: var(--interactive-background);
  color: var(--interactive-foreground)
}

.border-interactive {
  border: 2px dashed var(--catch-detail-color-contrast);
  border-radius: 0.5rem;
}

.border-region {
  border: 2px dashed var(--interactive-background);
  border-radius: 0.5rem;
}

/******************* Styling of input elements **********************/

/**
 * This very important section defines what the various input elements look like within the 'low-interaction' and 'interactive'-blocks
 */

button.small, .button.small {
  line-height: 1rem;
  margin: 0;
  margin-left: 0.5rem;
  padding: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  font-size: unset;
  border: 2px solid var(--button-background);
  border-radius: 0.5rem;
  font-weight: normal;
  transition: all 250ms;
  --tw-text-opacity: 1;
  --tw-bg-opacity: 1;
  background: var(--low-interaction-background);
  color: var(--low-interaction-foreground);
}

button, .button {
  align-items: center;
  display: inline-flex;
  line-height: 1.25rem;
  margin: 0.2rem;
  padding: 0.4rem;
  padding-left: 0.6rem;
  padding-right: 0.6rem;
  font-size: large;
  font-weight: bold;
  border: 2px solid var(--button-background);
  border-radius: 0.5rem;
  transition: all 250ms;
  --tw-text-opacity: 1;
  --tw-bg-opacity: 1;
  background: var(--low-interaction-background);
  color: var(--low-interaction-foreground);
}

.button-shadow {
  box-shadow: 0 5px 10px #88888888;
}

button.selected, .button.selected {
  background-color: var(--catch-detail-color);
  border-color: var(--catch-detail-color);
  color: var(--catch-detail-foregroundcolor);
}

button.selected svg path, .button.selected svg path {
  fill: var(--catch-detail-foregroundcolor) !important;
}

button:not(.no-image-background):not(.soft) svg path, .button:not(.no-image-background):not(.soft) svg path {
  fill: var(--interactive-foreground) !important;
  transition: all 250ms;
}

.interactive button, .interactive .button {
  background: var(--interactive-background);
  color: var(--interactive-foreground);
}

button:hover, .button:hover {
  background-color: var(--catch-detail-color);
  color: var(--catch-detail-foregroundcolor);
  border: 2px solid var(--catch-detail-color-contrast);
}

button:hover:not(.no-image-background) img, .button:hover:not(.no-image-background) img {
  background: var(--low-interaction-background);
  border-radius: 100rem;
}

button:hover:not(.no-image-background) svg path, .button:hover:not(.no-image-background) svg path {
  fill: var(--catch-detail-foregroundcolor) !important;
}

button.disabled:hover:not(.no-image-background) svg path, .button.disabled:hover:not(.no-image-background) svg path {
  fill: var(--low-interaction-foreground) !important;
}

button.primary, .button.primary {
  color: var(--button-foreground);
  background: var(--button-background);
}

button.primary:not(.no-image-background) svg path, .button.primary:not(.no-image-background) svg path {
  fill: var(--button-foreground) !important;
  transition: all 250ms;
}

button.disabled.low-interaction, .button.disabled.low-interaction {
  background-color: var(--low-interaction-background-50);
}

button.disabled, .button.disabled {
  cursor: default;
  border: 2px dashed var(--button-background);
  background: unset;
  color: unset;
  box-shadow: none;
}

button.disabled:hover, .button.disabled:hover {
  cursor: default;
  border: 2px dashed var(--button-background);
  background: unset;
  color: unset;
}

button.link {
  border: none;
  text-decoration: underline;
  background-color: unset;
}

button.link:hover {
  color:unset;
}

.interactive button.disabled svg path, .interactive .button.disabled svg path {
  fill: var(--interactive-foreground) !important;
}

.low-interaction button.disabled svg path, .low-interaction .button.disabled svg path {
  fill: var(--low-interaction-foreground) !important;
}

.normal-background button.disabled svg path, .normal-background .button.disabled svg path {
  fill: var(--foreground-color) !important;
}

.links-w-full a:not(.weblate-link) {
  display: flex;
  -webkit-column-gap: 0.25rem;
          column-gap: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  width: 100%;
}

button.soft, .button.soft {
  border: 2px solid var(--interactive-background);
  margin: 0;
}

button.soft:hover, .button.soft:hover {
  background-color: var(--interactive-background);
  color: var(--interactive-foreground);
  border: 2px solid var(--catch-detail-color-contrast);
}

.links-as-button a {
  /*
    * Let a 'link' mimick a button, but not entirely
    */
  padding: 3px;
  margin: 0;
  background: var(--low-interaction-background);
  color: var(--low-interaction-foreground);
  border: 2px solid var(--interactive-background);
  border-radius: 0.5rem;
}

.links-as-button a:hover {
  background-color: var(--interactive-background);
  color: var(--interactive-foregroundcolor);
  border-color: var(--catch-detail-color-contrast);
}

.links-as-button a:hover svg path {
  fill: var(--catch-detail-foregroundcolor) !important;
}

select {
  border: 2px solid #00000000;
  color: var(--foreground-color) !important;
  background-color: var(--low-interaction-background) !important;
}

select:hover {
  border-color: var(--catch-detail-color-contrast);
}

.neutral-label{
  /** This label styles as normal text. It's power comes from the many :not(.neutral-label) entries.
     * Placed here for autocompletion
     */
}

label:not(.neutral-label):not(.button) {
  /**
     * Label should _contain_ the input element
     */
  border: 2px solid var(--interactive-background);
  padding: 0.25rem;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
  border-radius: 0.5rem;
  background-color: var(--low-interaction-background);
  width: 100%;
  box-sizing: border-box;
  transition: all 250ms;
}

label.button {
  width: 100%;
}

label:hover:not(.neutral-label) {
  background-color: var(--catch-detail-color);
  color: var(--catch-detail-foregroundcolor);
  border: 2px solid var(--interactive-contrast)
}

label:not(.no-image-background):not(.neutral-label) img {
  padding: 0.25rem;
  border-radius: 0.25rem;
  background: var(--low-interaction-background);
}

label:not(.neutral-label) svg path {
  transition: all 250ms;
}

label:hover:not(.no-image-background):not(.neutral-label) svg path {
  fill: var(--catch-detail-foregroundcolor) !important;
}

label.checked:not(.neutral-label) {
  border: 2px solid var(--foreground-color);
}

textarea {
  color: black;
}

/************************* OTHER CATEGORIES ********************************/

/**
 * Smaller categories which convey some semantic information but don't define bigger blocks.
 * As they are _semantic_ categories, they can be styled
 */

.thanks {
  /* The class to indicate 'operation successful' or 'thank you for contributing' */
  font-weight: bold;
  border-radius: 1em;
  margin: 0.25em;
  text-align: center;
  padding: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border: 3px dotted #58cd27;
  background-color: #58cd2722;
}

.alert {
  /* The class to convey important information, e.g. 'invalid', 'something went wrong', 'warning: testmode', ... */
  background-color: var(--alert-color);
  color: var(--alert-foreground-color);
  font-weight: bold;
  border-radius: 1em;
  margin: 0.25em;
  text-align: center;
  padding: 0.15em 0.3em;
  border: 2px dotted #ff9143;
}

.warning {
  /* The class to convey important information, but not as grave as 'alert' */
  background-color: var(--low-interaction-background);
  color: var(--alert-foreground-color);
  font-weight: bold;
  border-radius: 1em;
  margin: 0.25em;
  text-align: center;
  padding: 0.15em 0.3em;
  border: 3px dotted #ff9143;
}

.low-interaction .warning {
  background-color: var(--interactive-background);
}

.information {
  /* The class to convey important information which does _not_ denote an error... */
  background-color: var(--low-interaction-background);
  color: var(--alert-foreground-color);
  border-radius: 1em;
  margin: 0.25em;
  text-align: center;
  padding: 0.15em 0.3em;
  border: 3px dotted var(--catch-detail-color-contrast);
}

.low-interaction .interactive {
  background-color: var(--interactive-background);
}

.subtle {
  /* For all information that is not important for 99% of the users */
  color: #666;
  font-weight: normal;
}

.low-interaction .subtle {
  color: #444;
}

.interactive .subtle {
  color: #333;
}

.link-underline .subtle a {
  -webkit-text-decoration: underline 1px #7193bb88;
          text-decoration: underline 1px #7193bb88;
  color: #7193bb;
}

.literal-code, code {
  /* A codeblock */
  display: inline-block;
  background-color: lightgray;
  padding: 0.1rem;
  padding-left: 0.35rem;
  padding-right: 0.35rem;
  word-break: break-word;
  color: black;
  box-sizing: border-box;
  font-family: monospace;
}

.interactive .literal-code {
  background-color: #b3b3b3;
}

/************************** UTILITY ************************/

/** 
 * Utility classes are there for a specific function to pin down browser behaviour (and cannot be changed)
 */

.text-white a {
  /* Used solely in 'imageAttribution'  and in many themes*/
  color: var(--background-color);
}

.bg-black-transparent {
  background-color: #00000088;
}

.block-ruby {
  display: block ruby;
}

.rounded-left-full {
  border-bottom-left-radius: 999rem;
  border-top-left-radius: 999rem;
}

.rounded-right-full {
  border-bottom-right-radius: 999rem;
  border-top-right-radius: 999rem;
}

.no-images img {
  /* Used solely in 'imageAttribution' and in many themes for the label*/
  display: none;
}

.weblate-link {
  display: inline-block;
  flex-shrink: 0;
  margin: 0;
  padding: 0.25rem;
  width: 1.2rem;
  height: 1.2rem;
  border: unset;
  border-radius: 5rem;
  -webkit-backdrop-filter: var(--low-interaction-background);
          backdrop-filter: var(--low-interaction-background);
}

.no-weblate .weblate-link {
  display: none !important;
}

.link-underline a {
  -webkit-text-decoration: underline 1px var(--foreground-color);
          text-decoration: underline 1px var(--foreground-color);
}

a.link-underline {
  -webkit-text-decoration: underline 1px var(--foreground-color);
          text-decoration: underline 1px var(--foreground-color);
}

.link-no-underline a {
  text-decoration: none;
}

.disable-links a {
  pointer-events: none;
  text-decoration: none !important;
  color: var(--subtle-detail-color-contrast) !important;
}

.enable-links a {
  pointer-events: unset;
  text-decoration: underline !important;
  color: unset !important;
}

.disable-links a.must-link,
.disable-links .must-link a {
  /* Hide links if they are disabled */
  display: none;
}

.zebra-table tr:nth-child(even) {
  background-color: #f2f2f2;
}

/************************* MISC ELEMENTS *************************/

.selected svg:not(.noselect *) path.selectable {
  /* A marker on the map gets the 'selected' class when it's properties are displayed
    */
  stroke: white !important;
  stroke-width: 20px !important;
  overflow: visible !important;
  -webkit-animation: glowing-drop-shadow 1s ease-in-out infinite alternate;
  animation: glowing-drop-shadow 1s ease-in-out infinite alternate;
}

.selected svg {
  /* A marker on the map gets the 'selected' class when it's properties are displayed
    */
  overflow: visible !important;
}

svg.apply-fill path {
  fill: var(--svg-color)
}

.compass_arrow {
  width: calc( 2.5rem - 1px ) ;
  height: calc( 2.5rem - 1px )
}

@media (min-width: 640px) {
  .compass_arrow {
    width: calc( 2.75rem - 1px ) ;
    height: calc( 2.75rem - 1px )
  }
}

@-webkit-keyframes glowing-drop-shadow {
  from {
    -webkit-filter: drop-shadow(5px 5px 60px rgb(128 128 128 / 0.6));
            filter: drop-shadow(5px 5px 60px rgb(128 128 128 / 0.6));
  }

  to {
    -webkit-filter: drop-shadow(5px 5px 80px rgb(0.5 0.5 0.5 / 0.8));
            filter: drop-shadow(5px 5px 80px rgb(0.5 0.5 0.5 / 0.8));
  }
}

@-webkit-keyframes slide {
  /* This is the animation on the marker to add a new point - it slides through all the possible presets */

  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }

  to {
    -webkit-transform: translateX(calc(-100% + 42px));
            transform: translateX(calc(-100% + 42px));
  }
}

@keyframes slide {
  /* This is the animation on the marker to add a new point - it slides through all the possible presets */

  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%);
  }

  to {
    -webkit-transform: translateX(calc(-100% + 42px));
            transform: translateX(calc(-100% + 42px));
  }
}

.glowing-shadow {
  -webkit-animation: glowing 1s ease-in-out infinite alternate;
  animation: glowing 1s ease-in-out infinite alternate;
}

@-webkit-keyframes glowing {
  from {
    box-shadow: 0 0 20px 10px #eaaf2588, inset 0 0 0px 1px #eaaf25;
  }

  to {
    box-shadow: 0 0 20px 20px #eaaf2588, inset 0 0 5px 1px #eaaf25;
  }
}

/************************* LEGACY MARKER - CLEANUP BELOW ********************************/

.slideshow-item img {
  /* Legacy: should be replace when the image element is ported to Svelte*/
  height: var(--image-carousel-height);
  width: unset;
}

.animate-height {
  /* Legacy: should be replaced by headlessui disclosure in time */
  transition: max-height 0.5s ease-in-out;
  overflow-y: hidden;
}

.min-h-32 {
  min-height: 8rem;
}

.max-w-full {
  max-width: 100%;
}

.hover\:bg-indigo-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(199 210 254 / var(--tw-bg-opacity));
}

.hover\:text-blue-800:hover {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity));
}

.hover\:opacity-100:hover {
  opacity: 1;
}

@media (max-width: 480px) {
  .max-\[480px\]\:w-full {
    width: 100%;
  }
}

@media (min-width: 640px) {
  .sm\:m-2 {
    margin: 0.5rem;
  }

  .sm\:m-1 {
    margin: 0.25rem;
  }

  .sm\:mx-1 {
    margin-left: 0.25rem;
    margin-right: 0.25rem;
  }

  .sm\:mt-2 {
    margin-top: 0.5rem;
  }

  .sm\:mr-1 {
    margin-right: 0.25rem;
  }

  .sm\:mr-4 {
    margin-right: 1rem;
  }

  .sm\:h-24 {
    height: 6rem;
  }

  .sm\:w-24 {
    width: 6rem;
  }

  .sm\:w-1\/2 {
    width: 50%;
  }

  .sm\:flex-nowrap {
    flex-wrap: nowrap;
  }

  .sm\:border-4 {
    border-width: 4px;
  }

  .sm\:p-1 {
    padding: 0.25rem;
  }

  .sm\:p-2 {
    padding: 0.5rem;
  }

  .sm\:pt-1 {
    padding-top: 0.25rem;
  }

  .sm\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
}

@media (min-width: 768px) {
  .md\:m-1 {
    margin: 0.25rem;
  }

  .md\:mx-2 {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
  }

  .md\:mt-5 {
    margin-top: 1.25rem;
  }

  .md\:mr-2 {
    margin-right: 0.5rem;
  }

  .md\:grid {
    display: grid;
  }

  .md\:h-8 {
    height: 2rem;
  }

  .md\:w-8 {
    width: 2rem;
  }

  .md\:w-6\/12 {
    width: 50%;
  }

  .md\:grid-flow-row {
    grid-auto-flow: row;
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:flex-nowrap {
    flex-wrap: nowrap;
  }

  .md\:p-6 {
    padding: 1.5rem;
  }

  .md\:p-3 {
    padding: 0.75rem;
  }

  .md\:text-6xl {
    font-size: 3.75rem;
    line-height: 1;
  }

  .md\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
}

@media (min-width: 1024px) {
  .lg\:mx-0 {
    margin-left: 0px;
    margin-right: 0px;
  }

  .lg\:w-5\/12 {
    width: 41.666667%;
  }

  .lg\:w-1\/3 {
    width: 33.333333%;
  }

  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (min-width: 1280px) {
  .xl\:w-4\/12 {
    width: 33.333333%;
  }
}
